[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Apr 29, 2018 1:24:24 AM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:986:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] four warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/ArrayOfYearMonthsBenchmark.scala:4:19: Unused import
[warn] import java.time.{LocalDate, YearMonth}
[warn]                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d5(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d11(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d11(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d13(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d11(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d6(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e8(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e11(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e13(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e6(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 15 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmee1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39811.219 ops/s
[info] # Warmup Iteration   2: 539543.987 ops/s
[info] # Warmup Iteration   3: 945014.470 ops/s
[info] Iteration   1: 911022.029 ops/s
[info]                  ·gc.alloc.rate:                   2065.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              3567.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.647 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 959032.541 ops/s
[info]                  ·gc.alloc.rate:                   2173.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              3565.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2253.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3696.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 961965.664 ops/s
[info]                  ·gc.alloc.rate:               2177.776 MB/sec
[info]                  ·gc.alloc.rate.norm:          3561.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1953.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3194.429 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 953351.915 ops/s
[info]                  ·gc.alloc.rate:                   2185.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              3607.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3809.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 951880.187 ops/s
[info]                  ·gc.alloc.rate:                   2177.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              3598.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3310.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   947450.467 ±(99.9%) 79995.123 ops/s [Average]
[info]   (min, avg, max) = (911022.029, 947450.467, 961965.664), stdev = 20774.479
[info]   CI (99.9%): [867455.344, 1027445.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2155.907 ±(99.9%) 194.365 MB/sec [Average]
[info]   (min, avg, max) = (2065.977, 2155.907, 2185.588), stdev = 50.476
[info]   CI (99.9%): [1961.542, 2350.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3580.264 ±(99.9%) 81.751 B/op [Average]
[info]   (min, avg, max) = (3561.633, 3580.264, 3607.555), stdev = 21.230
[info]   CI (99.9%): [3498.513, 3662.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2090.166 ±(99.9%) 680.586 MB/sec [Average]
[info]   (min, avg, max) = (1933.372, 2090.166, 2308.153), stdev = 176.746
[info]   CI (99.9%): [1409.580, 2770.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3470.170 ±(99.9%) 1028.556 B/op [Average]
[info]   (min, avg, max) = (3194.429, 3470.170, 3809.863), stdev = 267.113
[info]   CI (99.9%): [2441.614, 4498.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.990 ±(99.9%) 7.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.990, 4.428), stdev = 1.933
[info]   CI (99.9%): [≈ 0, 8.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.700 ±(99.9%) 12.864 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.700, 7.647), stdev = 3.341
[info]   CI (99.9%): [≈ 0, 14.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 13.000), stdev = 2.121
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54360.739 ops/s
[info] # Warmup Iteration   2: 1524592.430 ops/s
[info] # Warmup Iteration   3: 1720609.116 ops/s
[info] Iteration   1: 1917891.158 ops/s
[info]                  ·gc.alloc.rate:               1258.717 MB/sec
[info]                  ·gc.alloc.rate.norm:          1032.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1294.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1062.181 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1935217.256 ops/s
[info]                  ·gc.alloc.rate:                   1260.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1025.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1060.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.474 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1962429.288 ops/s
[info]                  ·gc.alloc.rate:                   1266.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              1015.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1052.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1946255.971 ops/s
[info]                  ·gc.alloc.rate:                   1260.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              1018.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     799.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1968993.577 ops/s
[info]                  ·gc.alloc.rate:                   1274.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              1018.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1059.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1946157.450 ±(99.9%) 79498.366 ops/s [Average]
[info]   (min, avg, max) = (1917891.158, 1946157.450, 1968993.577), stdev = 20645.473
[info]   CI (99.9%): [1866659.084, 2025655.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1264.051 ±(99.9%) 24.817 MB/sec [Average]
[info]   (min, avg, max) = (1258.717, 1264.051, 1274.283), stdev = 6.445
[info]   CI (99.9%): [1239.234, 1288.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1022.162 ±(99.9%) 26.753 B/op [Average]
[info]   (min, avg, max) = (1015.718, 1022.162, 1032.945), stdev = 6.948
[info]   CI (99.9%): [995.409, 1048.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.297 ±(99.9%) 552.490 MB/sec [Average]
[info]   (min, avg, max) = (989.438, 1245.297, 1325.408), stdev = 143.480
[info]   CI (99.9%): [692.807, 1797.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1006.970 ±(99.9%) 445.810 B/op [Average]
[info]   (min, avg, max) = (799.966, 1006.970, 1062.181), stdev = 115.775
[info]   CI (99.9%): [561.160, 1452.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.192 ±(99.9%) 0.997 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.583), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.155 ±(99.9%) 0.809 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.155, 0.474), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:29:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1101784.582 ops/s
[info] # Warmup Iteration   2: 4397760.428 ops/s
[info] # Warmup Iteration   3: 5289959.747 ops/s
[info] Iteration   1: 5221557.748 ops/s
[info]                  ·gc.alloc.rate:               356.861 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77.102 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5253710.937 ops/s
[info]                  ·gc.alloc.rate:               356.991 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.385 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 5149929.001 ops/s
[info]                  ·gc.alloc.rate:                   349.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              106.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5241662.098 ops/s
[info]                  ·gc.alloc.rate:                   369.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              110.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5161344.960 ops/s
[info]                  ·gc.alloc.rate:               351.846 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100.350 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5205640.949 ±(99.9%) 181915.390 ops/s [Average]
[info]   (min, avg, max) = (5149929.001, 5205640.949, 5253710.937), stdev = 47242.849
[info]   CI (99.9%): [5023725.559, 5387556.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   356.878 ±(99.9%) 29.945 MB/sec [Average]
[info]   (min, avg, max) = (349.237, 356.878, 369.455), stdev = 7.777
[info]   CI (99.9%): [326.933, 386.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.888 ±(99.9%) 6.667 B/op [Average]
[info]   (min, avg, max) = (106.722, 107.888, 110.931), stdev = 1.731
[info]   CI (99.9%): [101.221, 114.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   379.854 ±(99.9%) 609.861 MB/sec [Average]
[info]   (min, avg, max) = (255.803, 379.854, 657.493), stdev = 158.379
[info]   CI (99.9%): [≈ 0, 989.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   114.724 ±(99.9%) 181.972 B/op [Average]
[info]   (min, avg, max) = (77.102, 114.724, 197.416), stdev = 47.258
[info]   CI (99.9%): [≈ 0, 296.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 554.627 ops/s
[info] # Warmup Iteration   2: 136857.635 ops/s
[info] # Warmup Iteration   3: 430859.572 ops/s
[info] Iteration   1: 442437.379 ops/s
[info]                  ·gc.alloc.rate:                   2346.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              8342.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8156.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.517 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 444286.227 ops/s
[info]                  ·gc.alloc.rate:                   2348.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              8313.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8127.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.959 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 448879.034 ops/s
[info]                  ·gc.alloc.rate:               2396.226 MB/sec
[info]                  ·gc.alloc.rate.norm:          8401.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2311.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8106.270 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 444788.426 ops/s
[info]                  ·gc.alloc.rate:                   2382.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              8430.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2334.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8260.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 438304.292 ops/s
[info]                  ·gc.alloc.rate:                   2357.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              8463.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8451.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   443739.072 ±(99.9%) 14795.065 ops/s [Average]
[info]   (min, avg, max) = (438304.292, 443739.072, 448879.034), stdev = 3842.231
[info]   CI (99.9%): [428944.006, 458534.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2366.050 ±(99.9%) 85.816 MB/sec [Average]
[info]   (min, avg, max) = (2346.208, 2366.050, 2396.226), stdev = 22.286
[info]   CI (99.9%): [2280.234, 2451.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   8390.460 ±(99.9%) 237.136 B/op [Average]
[info]   (min, avg, max) = (8313.958, 8390.460, 8463.115), stdev = 61.583
[info]   CI (99.9%): [8153.324, 8627.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2317.935 ±(99.9%) 99.957 MB/sec [Average]
[info]   (min, avg, max) = (2293.916, 2317.935, 2353.845), stdev = 25.958
[info]   CI (99.9%): [2217.978, 2417.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   8220.509 ±(99.9%) 547.086 B/op [Average]
[info]   (min, avg, max) = (8106.270, 8220.509, 8451.397), stdev = 142.077
[info]   CI (99.9%): [7673.422, 8767.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.602 ±(99.9%) 4.485 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.602, 2.677), stdev = 1.165
[info]   CI (99.9%): [≈ 0, 5.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.140 ±(99.9%) 15.951 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.140, 9.517), stdev = 4.142
[info]   CI (99.9%): [≈ 0, 18.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 16.000), stdev = 2.608
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24730.626 ops/s
[info] # Warmup Iteration   2: 535367.988 ops/s
[info] # Warmup Iteration   3: 972492.570 ops/s
[info] Iteration   1: 1076870.664 ops/s
[info]                  ·gc.alloc.rate:                   2805.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              4099.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2930.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4281.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 1048765.968 ops/s
[info]                  ·gc.alloc.rate:                   2719.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              4081.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2623.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3936.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.900 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1094471.775 ops/s
[info]                  ·gc.alloc.rate:                   2907.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              4180.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2635.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3789.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1101898.428 ops/s
[info]                  ·gc.alloc.rate:                   2884.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              4118.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3000.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4284.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1075225.301 ops/s
[info]                  ·gc.alloc.rate:                   2783.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              4073.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3942.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   1079446.427 ±(99.9%) 79280.177 ops/s [Average]
[info]   (min, avg, max) = (1048765.968, 1079446.427, 1101898.428), stdev = 20588.810
[info]   CI (99.9%): [1000166.250, 1158726.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2820.203 ±(99.9%) 294.198 MB/sec [Average]
[info]   (min, avg, max) = (2719.903, 2820.203, 2907.587), stdev = 76.402
[info]   CI (99.9%): [2526.005, 3114.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4110.903 ±(99.9%) 164.743 B/op [Average]
[info]   (min, avg, max) = (4073.512, 4110.903, 4180.714), stdev = 42.783
[info]   CI (99.9%): [3946.160, 4275.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2776.549 ±(99.9%) 678.260 MB/sec [Average]
[info]   (min, avg, max) = (2623.097, 2776.549, 3000.439), stdev = 176.142
[info]   CI (99.9%): [2098.289, 3454.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4046.812 ±(99.9%) 863.844 B/op [Average]
[info]   (min, avg, max) = (3789.123, 4046.812, 4284.918), stdev = 224.338
[info]   CI (99.9%): [3182.967, 4910.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.657 ±(99.9%) 4.200 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.657, 2.599), stdev = 1.091
[info]   CI (99.9%): [≈ 0, 4.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.980 ±(99.9%) 6.315 B/op [Average]
[info]   (min, avg, max) = (0.120, 0.980, 3.900), stdev = 1.640
[info]   CI (99.9%): [≈ 0, 7.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.400, 20.000), stdev = 3.782
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180836.818 ops/s
[info] # Warmup Iteration   2: 2180200.982 ops/s
[info] # Warmup Iteration   3: 3098192.445 ops/s
[info] Iteration   1: 2956930.608 ops/s
[info]                  ·gc.alloc.rate:                   1184.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              630.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     517.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2955100.598 ops/s
[info]                  ·gc.alloc.rate:                   1189.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              633.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3085699.030 ops/s
[info]                  ·gc.alloc.rate:                   1219.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              622.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     501.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3119447.738 ops/s
[info]                  ·gc.alloc.rate:                   1231.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              621.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     661.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3102296.846 ops/s
[info]                  ·gc.alloc.rate:               1231.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 667.146 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   3043894.964 ±(99.9%) 312316.776 ops/s [Average]
[info]   (min, avg, max) = (2955100.598, 3043894.964, 3119447.738), stdev = 81107.675
[info]   CI (99.9%): [2731578.187, 3356211.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1211.369 ±(99.9%) 87.967 MB/sec [Average]
[info]   (min, avg, max) = (1184.199, 1211.369, 1231.930), stdev = 22.845
[info]   CI (99.9%): [1123.402, 1299.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   626.441 ±(99.9%) 20.490 B/op [Average]
[info]   (min, avg, max) = (621.555, 626.441, 633.654), stdev = 5.321
[info]   CI (99.9%): [605.952, 646.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1177.054 ±(99.9%) 701.521 MB/sec [Average]
[info]   (min, avg, max) = (972.565, 1177.054, 1315.069), stdev = 182.183
[info]   CI (99.9%): [475.533, 1878.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   608.378 ±(99.9%) 351.848 B/op [Average]
[info]   (min, avg, max) = (501.159, 608.378, 694.307), stdev = 91.374
[info]   CI (99.9%): [256.530, 960.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.481 ±(99.9%) 3.829 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.260), stdev = 0.994
[info]   CI (99.9%): [≈ 0, 4.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 1.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 1.152), stdev = 0.507
[info]   CI (99.9%): [≈ 0, 2.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.673
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1392003.595 ops/s
[info] # Warmup Iteration   2: 16979764.607 ops/s
[info] # Warmup Iteration   3: 20690741.683 ops/s
[info] Iteration   1: 20874308.609 ops/s
[info]                  ·gc.alloc.rate:                   1088.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 20746245.372 ops/s
[info]                  ·gc.alloc.rate:                   1089.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 20660963.562 ops/s
[info]                  ·gc.alloc.rate:                   1076.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.324 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 20705982.526 ops/s
[info]                  ·gc.alloc.rate:                   1085.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 20791293.616 ops/s
[info]                  ·gc.alloc.rate:                   1082.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   20755758.737 ±(99.9%) 315606.611 ops/s [Average]
[info]   (min, avg, max) = (20660963.562, 20755758.737, 20874308.609), stdev = 81962.035
[info]   CI (99.9%): [20440152.127, 21071365.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1084.654 ±(99.9%) 20.049 MB/sec [Average]
[info]   (min, avg, max) = (1076.793, 1084.654, 1089.640), stdev = 5.207
[info]   CI (99.9%): [1064.605, 1104.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.241 ±(99.9%) 1.161 B/op [Average]
[info]   (min, avg, max) = (81.965, 82.241, 82.656), stdev = 0.302
[info]   CI (99.9%): [81.080, 83.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1049.140 ±(99.9%) 572.555 MB/sec [Average]
[info]   (min, avg, max) = (979.275, 1049.140, 1315.082), stdev = 148.691
[info]   CI (99.9%): [476.584, 1621.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   79.552 ±(99.9%) 43.517 B/op [Average]
[info]   (min, avg, max) = (74.129, 79.552, 99.757), stdev = 11.301
[info]   CI (99.9%): [36.034, 123.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.873 ±(99.9%) 7.267 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.873, 4.249), stdev = 1.887
[info]   CI (99.9%): [≈ 0, 8.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.554 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.067, 0.324), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 4.494
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2208539.826 ops/s
[info] # Warmup Iteration   2: 17272299.741 ops/s
[info] # Warmup Iteration   3: 19447787.681 ops/s
[info] Iteration   1: 19267869.574 ops/s
[info]                  ·gc.alloc.rate:      0.452 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.037 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 19505738.245 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 19369481.682 ops/s
[info]                  ·gc.alloc.rate:      8.129 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.661 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19358060.849 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19602950.389 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   19420820.148 ±(99.9%) 510666.940 ops/s [Average]
[info]   (min, avg, max) = (19267869.574, 19420820.148, 19602950.389), stdev = 132618.583
[info]   CI (99.9%): [18910153.208, 19931487.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.716 ±(99.9%) 13.824 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.716, 8.129), stdev = 3.590
[info]   CI (99.9%): [≈ 0, 15.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.140 ±(99.9%) 1.123 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.140, 0.661), stdev = 0.292
[info]   CI (99.9%): [≈ 0, 1.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8213.100 ops/s
[info] # Warmup Iteration   2: 336742.675 ops/s
[info] # Warmup Iteration   3: 1010917.770 ops/s
[info] Iteration   1: 1038671.398 ops/s
[info]                  ·gc.alloc.rate:                   2302.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              3487.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3470.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.407 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1019587.485 ops/s
[info]                  ·gc.alloc.rate:                   2246.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              3467.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3037.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1038421.678 ops/s
[info]                  ·gc.alloc.rate:                   2311.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              3503.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3508.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1040722.169 ops/s
[info]                  ·gc.alloc.rate:                   2330.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              3524.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3534.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1021801.517 ops/s
[info]                  ·gc.alloc.rate:                   2291.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              3529.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3109.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   1031840.849 ±(99.9%) 39446.773 ops/s [Average]
[info]   (min, avg, max) = (1019587.485, 1031840.849, 1040722.169), stdev = 10244.202
[info]   CI (99.9%): [992394.076, 1071287.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2296.659 ±(99.9%) 121.133 MB/sec [Average]
[info]   (min, avg, max) = (2246.713, 2296.659, 2330.974), stdev = 31.458
[info]   CI (99.9%): [2175.526, 2417.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3502.420 ±(99.9%) 100.309 B/op [Average]
[info]   (min, avg, max) = (3467.075, 3502.420, 3529.790), stdev = 26.050
[info]   CI (99.9%): [3402.111, 3602.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2186.265 ±(99.9%) 684.138 MB/sec [Average]
[info]   (min, avg, max) = (1968.359, 2186.265, 2337.851), stdev = 177.669
[info]   CI (99.9%): [1502.127, 2870.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3332.217 ±(99.9%) 919.316 B/op [Average]
[info]   (min, avg, max) = (3037.527, 3332.217, 3534.931), stdev = 238.744
[info]   CI (99.9%): [2412.901, 4251.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.487 ±(99.9%) 3.796 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.487, 2.249), stdev = 0.986
[info]   CI (99.9%): [≈ 0, 4.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.739 ±(99.9%) 5.749 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.739, 3.407), stdev = 1.493
[info]   CI (99.9%): [≈ 0, 6.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.000, 15.000), stdev = 2.550
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102509.723 ops/s
[info] # Warmup Iteration   2: 1392809.989 ops/s
[info] # Warmup Iteration   3: 3031689.720 ops/s
[info] Iteration   1: 3891129.883 ops/s
[info]                  ·gc.alloc.rate:                   3522.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3231.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1306.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3899847.676 ops/s
[info]                  ·gc.alloc.rate:                   3573.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              1442.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3613.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1458.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 3857185.567 ops/s
[info]                  ·gc.alloc.rate:                   3525.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              1438.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3342.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1363.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 3899676.964 ops/s
[info]                  ·gc.alloc.rate:                   3563.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              1438.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3376.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1362.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 3879080.927 ops/s
[info]                  ·gc.alloc.rate:               3566.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          1446.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3392.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1376.289 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   3885384.203 ±(99.9%) 68919.597 ops/s [Average]
[info]   (min, avg, max) = (3857185.567, 3885384.203, 3899847.676), stdev = 17898.200
[info]   CI (99.9%): [3816464.607, 3954303.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   3550.342 ±(99.9%) 94.053 MB/sec [Average]
[info]   (min, avg, max) = (3522.185, 3550.342, 3573.765), stdev = 24.425
[info]   CI (99.9%): [3456.289, 3644.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1438.038 ±(99.9%) 32.033 B/op [Average]
[info]   (min, avg, max) = (1424.542, 1438.038, 1446.889), stdev = 8.319
[info]   CI (99.9%): [1406.005, 1470.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3391.150 ±(99.9%) 536.119 MB/sec [Average]
[info]   (min, avg, max) = (3231.526, 3391.150, 3613.530), stdev = 139.228
[info]   CI (99.9%): [2855.031, 3927.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1373.505 ±(99.9%) 209.190 B/op [Average]
[info]   (min, avg, max) = (1306.985, 1373.505, 1458.088), stdev = 54.326
[info]   CI (99.9%): [1164.314, 1582.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.146 ±(99.9%) 0.816 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.520), stdev = 0.212
[info]   CI (99.9%): [≈ 0, 0.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.330 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.210), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 14.000), stdev = 0.707
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.706 ops/s
[info] # Warmup Iteration   2: 8776228.178 ops/s
[info] # Warmup Iteration   3: 10816727.288 ops/s
[info] Iteration   1: 11830000.626 ops/s
[info]                  ·gc.alloc.rate:                   1479.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 11550469.328 ops/s
[info]                  ·gc.alloc.rate:                   1445.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.857 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 11965524.230 ops/s
[info]                  ·gc.alloc.rate:                   1512.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 10253398.739 ops/s
[info]                  ·gc.alloc.rate:                   1277.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11779861.350 ops/s
[info]                  ·gc.alloc.rate:                   1476.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   11475850.855 ±(99.9%) 2693787.274 ops/s [Average]
[info]   (min, avg, max) = (10253398.739, 11475850.855, 11965524.230), stdev = 699568.001
[info]   CI (99.9%): [8782063.581, 14169638.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1438.176 ±(99.9%) 357.279 MB/sec [Average]
[info]   (min, avg, max) = (1277.724, 1438.176, 1512.178), stdev = 92.784
[info]   CI (99.9%): [1080.897, 1795.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   197.173 ±(99.9%) 3.897 B/op [Average]
[info]   (min, avg, max) = (196.091, 197.173, 198.830), stdev = 1.012
[info]   CI (99.9%): [193.276, 201.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1363.830 ±(99.9%) 543.083 MB/sec [Average]
[info]   (min, avg, max) = (1295.580, 1363.830, 1616.055), stdev = 141.037
[info]   CI (99.9%): [820.747, 1906.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   187.212 ±(99.9%) 67.726 B/op [Average]
[info]   (min, avg, max) = (173.088, 187.212, 212.488), stdev = 17.588
[info]   CI (99.9%): [119.487, 254.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.994 ±(99.9%) 8.316 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.994, 4.857), stdev = 2.160
[info]   CI (99.9%): [≈ 0, 9.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 1.133 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.135, 0.662), stdev = 0.294
[info]   CI (99.9%): [≈ 0, 1.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.435
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88574.368 ops/s
[info] # Warmup Iteration   2: 2612524.695 ops/s
[info] # Warmup Iteration   3: 3494329.749 ops/s
[info] Iteration   1: 3646584.790 ops/s
[info]                  ·gc.alloc.rate:                   2213.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3712681.756 ops/s
[info]                  ·gc.alloc.rate:                   2256.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3706037.382 ops/s
[info]                  ·gc.alloc.rate:                   2251.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2338.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3707283.874 ops/s
[info]                  ·gc.alloc.rate:                   2273.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              964.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2352.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 3613537.360 ops/s
[info]                  ·gc.alloc.rate:                   2236.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              973.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     883.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3677225.032 ±(99.9%) 172053.225 ops/s [Average]
[info]   (min, avg, max) = (3613537.360, 3677225.032, 3712681.756), stdev = 44681.676
[info]   CI (99.9%): [3505171.808, 3849278.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2246.404 ±(99.9%) 87.369 MB/sec [Average]
[info]   (min, avg, max) = (2213.587, 2246.404, 2273.926), stdev = 22.690
[info]   CI (99.9%): [2159.035, 2333.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   961.273 ±(99.9%) 30.895 B/op [Average]
[info]   (min, avg, max) = (955.357, 961.273, 973.838), stdev = 8.023
[info]   CI (99.9%): [930.378, 992.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2200.404 ±(99.9%) 683.432 MB/sec [Average]
[info]   (min, avg, max) = (1987.253, 2200.404, 2352.889), stdev = 177.485
[info]   CI (99.9%): [1516.972, 2883.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   941.444 ±(99.9%) 282.231 B/op [Average]
[info]   (min, avg, max) = (842.168, 941.444, 998.330), stdev = 73.295
[info]   CI (99.9%): [659.213, 1223.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.150 ±(99.9%) 0.893 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.150, 0.562), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.386 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.064, 0.243), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:26:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2475622.085 ops/s
[info] # Warmup Iteration   2: 13870234.869 ops/s
[info] # Warmup Iteration   3: 14583473.460 ops/s
[info] Iteration   1: 15173775.814 ops/s
[info]                  ·gc.alloc.rate:                   1988.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 14941906.178 ops/s
[info]                  ·gc.alloc.rate:                   1945.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              204.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 15290597.403 ops/s
[info]                  ·gc.alloc.rate:                   1994.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     169.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 14908736.398 ops/s
[info]                  ·gc.alloc.rate:                   1974.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 15040548.197 ops/s
[info]                  ·gc.alloc.rate:                   1991.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   15071112.798 ±(99.9%) 617028.376 ops/s [Average]
[info]   (min, avg, max) = (14908736.398, 15071112.798, 15290597.403), stdev = 160240.310
[info]   CI (99.9%): [14454084.422, 15688141.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1978.941 ±(99.9%) 78.143 MB/sec [Average]
[info]   (min, avg, max) = (1945.458, 1978.941, 1994.993), stdev = 20.293
[info]   CI (99.9%): [1900.798, 2057.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.642 ±(99.9%) 6.320 B/op [Average]
[info]   (min, avg, max) = (204.916, 206.642, 208.368), stdev = 1.641
[info]   CI (99.9%): [200.322, 212.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1919.309 ±(99.9%) 587.616 MB/sec [Average]
[info]   (min, avg, max) = (1647.716, 1919.309, 2008.897), stdev = 152.602
[info]   CI (99.9%): [1331.693, 2506.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   200.530 ±(99.9%) 67.127 B/op [Average]
[info]   (min, avg, max) = (169.590, 200.530, 210.407), stdev = 17.433
[info]   CI (99.9%): [133.403, 267.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.765 ±(99.9%) 6.270 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.765, 3.677), stdev = 1.628
[info]   CI (99.9%): [≈ 0, 7.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.079, 0.381), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 0.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.000, 20.000), stdev = 5.612
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10557.005 ops/s
[info] # Warmup Iteration   2: 717617.657 ops/s
[info] # Warmup Iteration   3: 1716866.442 ops/s
[info] Iteration   1: 1827448.860 ops/s
[info]                  ·gc.alloc.rate:                   2987.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              2571.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2625.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2259.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1869489.852 ops/s
[info]                  ·gc.alloc.rate:                   3047.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              2564.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2970.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2500.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1836469.459 ops/s
[info]                  ·gc.alloc.rate:                   3047.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              2611.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3005.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2575.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1787884.136 ops/s
[info]                  ·gc.alloc.rate:                   2977.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              2620.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3034.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2670.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1821341.341 ops/s
[info]                  ·gc.alloc.rate:                   2982.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              2575.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2710.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2341.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1828526.730 ±(99.9%) 113016.175 ops/s [Average]
[info]   (min, avg, max) = (1787884.136, 1828526.730, 1869489.852), stdev = 29349.942
[info]   CI (99.9%): [1715510.555, 1941542.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3008.376 ±(99.9%) 138.832 MB/sec [Average]
[info]   (min, avg, max) = (2977.040, 3008.376, 3047.939), stdev = 36.054
[info]   CI (99.9%): [2869.544, 3147.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   2588.925 ±(99.9%) 97.021 B/op [Average]
[info]   (min, avg, max) = (2564.960, 2588.925, 2620.078), stdev = 25.196
[info]   CI (99.9%): [2491.904, 2685.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2869.286 ±(99.9%) 722.236 MB/sec [Average]
[info]   (min, avg, max) = (2625.083, 2869.286, 3034.106), stdev = 187.562
[info]   CI (99.9%): [2147.050, 3591.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2469.575 ±(99.9%) 646.705 B/op [Average]
[info]   (min, avg, max) = (2259.918, 2469.575, 2670.301), stdev = 167.947
[info]   CI (99.9%): [1822.870, 3116.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.617 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.229, 0.979), stdev = 0.420
[info]   CI (99.9%): [≈ 0, 1.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 1.392 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.197, 0.843), stdev = 0.361
[info]   CI (99.9%): [≈ 0, 1.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.000, 13.000), stdev = 0.001
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145687.907 ops/s
[info] # Warmup Iteration   2: 2169954.776 ops/s
[info] # Warmup Iteration   3: 4823513.809 ops/s
[info] Iteration   1: 5016032.702 ops/s
[info]                  ·gc.alloc.rate:                   2514.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              788.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2558.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     802.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.394 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 5078614.832 ops/s
[info]                  ·gc.alloc.rate:                   2548.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              789.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2555.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5071641.317 ops/s
[info]                  ·gc.alloc.rate:                   2565.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              796.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4966705.776 ops/s
[info]                  ·gc.alloc.rate:                   2537.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              803.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 5018794.087 ops/s
[info]                  ·gc.alloc.rate:                   2541.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              796.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2342.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     734.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   5030357.743 ±(99.9%) 176706.149 ops/s [Average]
[info]   (min, avg, max) = (4966705.776, 5030357.743, 5078614.832), stdev = 45890.026
[info]   CI (99.9%): [4853651.594, 5207063.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2541.478 ±(99.9%) 71.191 MB/sec [Average]
[info]   (min, avg, max) = (2514.675, 2541.478, 2565.701), stdev = 18.488
[info]   CI (99.9%): [2470.287, 2612.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   795.033 ±(99.9%) 23.461 B/op [Average]
[info]   (min, avg, max) = (788.842, 795.033, 803.722), stdev = 6.093
[info]   CI (99.9%): [771.572, 818.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2475.146 ±(99.9%) 610.721 MB/sec [Average]
[info]   (min, avg, max) = (2273.306, 2475.146, 2645.475), stdev = 158.602
[info]   CI (99.9%): [1864.425, 3085.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   774.492 ±(99.9%) 206.444 B/op [Average]
[info]   (min, avg, max) = (705.361, 774.492, 838.036), stdev = 53.613
[info]   CI (99.9%): [568.048, 980.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.922 ±(99.9%) 7.584 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.922, 4.445), stdev = 1.969
[info]   CI (99.9%): [≈ 0, 8.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.289 ±(99.9%) 2.379 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.289, 1.394), stdev = 0.618
[info]   CI (99.9%): [≈ 0, 2.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.600, 22.000), stdev = 5.367
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.697 ops/s
[info] # Warmup Iteration   2: 19631869.406 ops/s
[info] # Warmup Iteration   3: 24118918.623 ops/s
[info] Iteration   1: 22597631.433 ops/s
[info]                  ·gc.alloc.rate:                   785.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              54.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 23318171.366 ops/s
[info]                  ·gc.alloc.rate:                   729.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 23703083.708 ops/s
[info]                  ·gc.alloc.rate:                   741.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 23740628.206 ops/s
[info]                  ·gc.alloc.rate:                   742.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 23821198.749 ops/s
[info]                  ·gc.alloc.rate:                   742.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   23436142.692 ±(99.9%) 1953282.038 ops/s [Average]
[info]   (min, avg, max) = (22597631.433, 23436142.692, 23821198.749), stdev = 507261.142
[info]   CI (99.9%): [21482860.654, 25389424.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   748.468 ±(99.9%) 83.255 MB/sec [Average]
[info]   (min, avg, max) = (729.597, 748.468, 785.865), stdev = 21.621
[info]   CI (99.9%): [665.213, 831.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   50.282 ±(99.9%) 9.436 B/op [Average]
[info]   (min, avg, max) = (49.015, 50.282, 54.662), stdev = 2.450
[info]   CI (99.9%): [40.846, 59.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   716.396 ±(99.9%) 554.131 MB/sec [Average]
[info]   (min, avg, max) = (651.340, 716.396, 973.822), stdev = 143.906
[info]   CI (99.9%): [162.265, 1270.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   48.262 ±(99.9%) 41.936 B/op [Average]
[info]   (min, avg, max) = (43.089, 48.262, 67.735), stdev = 10.891
[info]   CI (99.9%): [6.327, 90.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.044 ±(99.9%) 7.882 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.044, 4.697), stdev = 2.047
[info]   CI (99.9%): [≈ 0, 8.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.520 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.069, 0.310), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.191
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 359106.236 ops/s
[info] # Warmup Iteration   2: 9392342.579 ops/s
[info] # Warmup Iteration   3: 10808435.387 ops/s
[info] Iteration   1: 11146347.886 ops/s
[info]                  ·gc.alloc.rate:               360.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.196 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 11195660.376 ops/s
[info]                  ·gc.alloc.rate:               363.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          51.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.186 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 11091040.570 ops/s
[info]                  ·gc.alloc.rate:                   346.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 10993986.855 ops/s
[info]                  ·gc.alloc.rate:               346.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.158 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 11288764.921 ops/s
[info]                  ·gc.alloc.rate:               353.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44.954 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   11143160.122 ±(99.9%) 425911.103 ops/s [Average]
[info]   (min, avg, max) = (10993986.855, 11143160.122, 11288764.921), stdev = 110607.761
[info]   CI (99.9%): [10717249.018, 11569071.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   354.083 ±(99.9%) 29.651 MB/sec [Average]
[info]   (min, avg, max) = (346.144, 354.083, 363.374), stdev = 7.700
[info]   CI (99.9%): [324.432, 383.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   49.994 ±(99.9%) 3.416 B/op [Average]
[info]   (min, avg, max) = (49.221, 49.994, 51.077), stdev = 0.887
[info]   CI (99.9%): [46.579, 53.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   321.656 ±(99.9%) 3.680 MB/sec [Average]
[info]   (min, avg, max) = (320.237, 321.656, 322.568), stdev = 0.956
[info]   CI (99.9%): [317.975, 325.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   45.421 ±(99.9%) 1.829 B/op [Average]
[info]   (min, avg, max) = (44.954, 45.421, 46.158), stdev = 0.475
[info]   CI (99.9%): [43.592, 47.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:26:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5251560.187 ops/s
[info] # Warmup Iteration   2: 24872789.903 ops/s
[info] # Warmup Iteration   3: 33795626.549 ops/s
[info] Iteration   1: 34773703.875 ops/s
[info]                  ·gc.alloc.rate:               1082.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44.534 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 34419779.448 ops/s
[info]                  ·gc.alloc.rate:                   1086.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 33901463.229 ops/s
[info]                  ·gc.alloc.rate:                   1063.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 33399712.689 ops/s
[info]                  ·gc.alloc.rate:                   1068.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 34078733.542 ops/s
[info]                  ·gc.alloc.rate:                   1060.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   34114678.557 ±(99.9%) 2005784.432 ops/s [Average]
[info]   (min, avg, max) = (33399712.689, 34114678.557, 34773703.875), stdev = 520895.847
[info]   CI (99.9%): [32108894.124, 36120462.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1072.324 ±(99.9%) 44.197 MB/sec [Average]
[info]   (min, avg, max) = (1060.977, 1072.324, 1086.506), stdev = 11.478
[info]   CI (99.9%): [1028.128, 1116.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.472 ±(99.9%) 2.167 B/op [Average]
[info]   (min, avg, max) = (48.985, 49.472, 50.337), stdev = 0.563
[info]   CI (99.9%): [47.305, 51.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1048.929 ±(99.9%) 572.086 MB/sec [Average]
[info]   (min, avg, max) = (979.342, 1048.929, 1314.661), stdev = 148.569
[info]   CI (99.9%): [476.843, 1621.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48.415 ±(99.9%) 27.262 B/op [Average]
[info]   (min, avg, max) = (44.534, 48.415, 61.033), stdev = 7.080
[info]   CI (99.9%): [21.152, 75.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 6.906 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.854, 4.059), stdev = 1.793
[info]   CI (99.9%): [≈ 0, 7.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.188), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 19.000), stdev = 6.189
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4020559.432 ops/s
[info] # Warmup Iteration   2: 33483110.754 ops/s
[info] # Warmup Iteration   3: 37634978.748 ops/s
[info] Iteration   1: 37645854.644 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 37795923.319 ops/s
[info]                  ·gc.alloc.rate:      7.387 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.308 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 37667643.121 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 37749652.881 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 37855549.041 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   37742924.601 ±(99.9%) 336949.365 ops/s [Average]
[info]   (min, avg, max) = (37645854.644, 37742924.601, 37855549.041), stdev = 87504.680
[info]   CI (99.9%): [37405975.236, 38079873.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.478 ±(99.9%) 12.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.478, 7.387), stdev = 3.304
[info]   CI (99.9%): [≈ 0, 14.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.062 ±(99.9%) 0.530 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.062, 0.308), stdev = 0.138
[info]   CI (99.9%): [≈ 0, 0.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42827.899 ops/s
[info] # Warmup Iteration   2: 1349887.277 ops/s
[info] # Warmup Iteration   3: 2087338.154 ops/s
[info] Iteration   1: 2449552.115 ops/s
[info]                  ·gc.alloc.rate:                   3384.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              2174.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3277.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2105.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2426647.830 ops/s
[info]                  ·gc.alloc.rate:                   3367.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              2183.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3311.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2147.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 2454047.548 ops/s
[info]                  ·gc.alloc.rate:                   3445.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              2209.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3353.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2150.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 2419744.132 ops/s
[info]                  ·gc.alloc.rate:                   3381.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              2198.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3041.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1977.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 2461129.268 ops/s
[info]                  ·gc.alloc.rate:                   3450.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              2206.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3393.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2170.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   2442224.179 ±(99.9%) 69388.247 ops/s [Average]
[info]   (min, avg, max) = (2419744.132, 2442224.179, 2461129.268), stdev = 18019.907
[info]   CI (99.9%): [2372835.931, 2511612.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3405.922 ±(99.9%) 150.361 MB/sec [Average]
[info]   (min, avg, max) = (3367.354, 3405.922, 3450.543), stdev = 39.048
[info]   CI (99.9%): [3255.561, 3556.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2194.619 ±(99.9%) 57.930 B/op [Average]
[info]   (min, avg, max) = (2174.664, 2194.619, 2209.757), stdev = 15.044
[info]   CI (99.9%): [2136.689, 2252.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3275.731 ±(99.9%) 530.691 MB/sec [Average]
[info]   (min, avg, max) = (3041.913, 3275.731, 3393.832), stdev = 137.819
[info]   CI (99.9%): [2745.039, 3806.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2110.437 ±(99.9%) 299.124 B/op [Average]
[info]   (min, avg, max) = (1977.925, 2110.437, 2170.163), stdev = 77.682
[info]   CI (99.9%): [1811.312, 2409.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.912 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.167, 0.583), stdev = 0.237
[info]   CI (99.9%): [≈ 0, 1.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.586 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.107, 0.374), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.800, 16.000), stdev = 1.095
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72947.381 ops/s
[info] # Warmup Iteration   2: 316996.106 ops/s
[info] # Warmup Iteration   3: 428649.965 ops/s
[info] Iteration   1: 431116.072 ops/s
[info]                  ·gc.alloc.rate:                   2532.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              9244.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2279.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8320.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.856 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 436945.390 ops/s
[info]                  ·gc.alloc.rate:                   2611.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              9404.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2603.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9377.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.584 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 432457.704 ops/s
[info]                  ·gc.alloc.rate:                   2569.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              9345.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2633.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9581.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 432035.406 ops/s
[info]                  ·gc.alloc.rate:                   2586.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              9420.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2333.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8497.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 418454.823 ops/s
[info]                  ·gc.alloc.rate:                   2625.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              9873.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2683.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10091.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.496 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.627 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   430201.879 ±(99.9%) 26730.416 ops/s [Average]
[info]   (min, avg, max) = (418454.823, 430201.879, 436945.390), stdev = 6941.804
[info]   CI (99.9%): [403471.464, 456932.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2584.936 ±(99.9%) 140.977 MB/sec [Average]
[info]   (min, avg, max) = (2532.431, 2584.936, 2625.670), stdev = 36.611
[info]   CI (99.9%): [2443.959, 2725.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9457.761 ±(99.9%) 934.127 B/op [Average]
[info]   (min, avg, max) = (9244.885, 9457.761, 9873.915), stdev = 242.590
[info]   CI (99.9%): [8523.634, 10391.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2506.632 ±(99.9%) 717.309 MB/sec [Average]
[info]   (min, avg, max) = (2279.081, 2506.632, 2683.471), stdev = 186.283
[info]   CI (99.9%): [1789.323, 3223.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9173.504 ±(99.9%) 2878.759 B/op [Average]
[info]   (min, avg, max) = (8320.005, 9173.504, 10091.279), stdev = 747.605
[info]   CI (99.9%): [6294.744, 12052.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.015 ±(99.9%) 4.769 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.015, 2.974), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.735 ±(99.9%) 17.485 B/op [Average]
[info]   (min, avg, max) = (0.227, 3.735, 10.856), stdev = 4.541
[info]   CI (99.9%): [≈ 0, 21.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.800, 16.000), stdev = 2.683
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59112.061 ops/s
[info] # Warmup Iteration   2: 670346.203 ops/s
[info] # Warmup Iteration   3: 750739.755 ops/s
[info] Iteration   1: 870440.993 ops/s
[info]                  ·gc.alloc.rate:                   749.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              1354.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1167.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.834 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 894842.662 ops/s
[info]                  ·gc.alloc.rate:                   786.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              1383.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1704.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 905449.648 ops/s
[info]                  ·gc.alloc.rate:               778.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          1352.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1124.345 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 907313.637 ops/s
[info]                  ·gc.alloc.rate:                   784.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              1361.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 899698.841 ops/s
[info]                  ·gc.alloc.rate:                   780.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              1365.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1706.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.411 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   895549.156 ±(99.9%) 57262.118 ops/s [Average]
[info]   (min, avg, max) = (870440.993, 895549.156, 907313.637), stdev = 14870.790
[info]   CI (99.9%): [838287.038, 952811.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   776.079 ±(99.9%) 58.714 MB/sec [Average]
[info]   (min, avg, max) = (749.435, 776.079, 786.649), stdev = 15.248
[info]   CI (99.9%): [717.365, 834.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1363.684 ±(99.9%) 46.753 B/op [Average]
[info]   (min, avg, max) = (1352.940, 1363.684, 1383.287), stdev = 12.142
[info]   CI (99.9%): [1316.931, 1410.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   777.284 ±(99.9%) 686.876 MB/sec [Average]
[info]   (min, avg, max) = (645.725, 777.284, 975.870), stdev = 178.380
[info]   CI (99.9%): [90.407, 1464.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1365.593 ±(99.9%) 1197.536 B/op [Average]
[info]   (min, avg, max) = (1124.345, 1365.593, 1706.706), stdev = 310.996
[info]   CI (99.9%): [168.058, 2563.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.843 ±(99.9%) 4.422 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.843, 2.522), stdev = 1.148
[info]   CI (99.9%): [≈ 0, 5.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.493 ±(99.9%) 7.791 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.493, 4.411), stdev = 2.023
[info]   CI (99.9%): [≈ 0, 9.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 759341.393 ops/s
[info] # Warmup Iteration   2: 1569124.511 ops/s
[info] # Warmup Iteration   3: 1661278.880 ops/s
[info] Iteration   1: 1678142.415 ops/s
[info]                  ·gc.alloc.rate:                   1146.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              1074.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     925.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1566079.033 ops/s
[info]                  ·gc.alloc.rate:                   1115.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1326.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1698932.376 ops/s
[info]                  ·gc.alloc.rate:                   1159.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              1074.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     912.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1655399.600 ops/s
[info]                  ·gc.alloc.rate:                   1124.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              1068.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     933.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1678461.871 ops/s
[info]                  ·gc.alloc.rate:                   1145.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1073.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1229.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1655403.059 ±(99.9%) 201215.676 ops/s [Average]
[info]   (min, avg, max) = (1566079.033, 1655403.059, 1698932.376), stdev = 52255.072
[info]   CI (99.9%): [1454187.383, 1856618.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1138.163 ±(99.9%) 69.203 MB/sec [Average]
[info]   (min, avg, max) = (1115.398, 1138.163, 1159.829), stdev = 17.972
[info]   CI (99.9%): [1068.960, 1207.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1082.440 ±(99.9%) 83.392 B/op [Average]
[info]   (min, avg, max) = (1068.785, 1082.440, 1120.940), stdev = 21.657
[info]   CI (99.9%): [999.049, 1165.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1117.074 ±(99.9%) 698.096 MB/sec [Average]
[info]   (min, avg, max) = (982.083, 1117.074, 1319.645), stdev = 181.293
[info]   CI (99.9%): [418.979, 1815.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1065.427 ±(99.9%) 758.532 B/op [Average]
[info]   (min, avg, max) = (912.127, 1065.427, 1326.201), stdev = 196.988
[info]   CI (99.9%): [306.895, 1823.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 5.177 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.808, 3.125), stdev = 1.344
[info]   CI (99.9%): [≈ 0, 5.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.798 ±(99.9%) 5.204 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.798, 3.141), stdev = 1.351
[info]   CI (99.9%): [≈ 0, 6.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 12.000), stdev = 3.647
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10710.799 ops/s
[info] # Warmup Iteration   2: 143773.012 ops/s
[info] # Warmup Iteration   3: 186773.133 ops/s
[info] Iteration   1: 223091.948 ops/s
[info]                  ·gc.alloc.rate:                   4090.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              28843.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3931.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27721.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.615 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 224461.344 ops/s
[info]                  ·gc.alloc.rate:                   4137.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              29001.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4001.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28048.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 222158.073 ops/s
[info]                  ·gc.alloc.rate:                   4117.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              29173.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4048.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28683.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.737 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 222936.237 ops/s
[info]                  ·gc.alloc.rate:               4121.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          29082.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3733.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26346.674 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   5: 220931.945 ops/s
[info]                  ·gc.alloc.rate:                   4098.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              29191.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4080.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29060.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   222715.909 ±(99.9%) 4994.791 ops/s [Average]
[info]   (min, avg, max) = (220931.945, 222715.909, 224461.344), stdev = 1297.131
[info]   CI (99.9%): [217721.118, 227710.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4113.018 ±(99.9%) 72.243 MB/sec [Average]
[info]   (min, avg, max) = (4090.349, 4113.018, 4137.344), stdev = 18.761
[info]   CI (99.9%): [4040.776, 4185.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   29058.526 ±(99.9%) 547.143 B/op [Average]
[info]   (min, avg, max) = (28843.553, 29058.526, 29191.384), stdev = 142.091
[info]   CI (99.9%): [28511.383, 29605.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3958.965 ±(99.9%) 531.544 MB/sec [Average]
[info]   (min, avg, max) = (3733.348, 3958.965, 4080.089), stdev = 138.040
[info]   CI (99.9%): [3427.422, 4490.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27972.203 ±(99.9%) 4039.798 B/op [Average]
[info]   (min, avg, max) = (26346.674, 27972.203, 29060.939), stdev = 1049.123
[info]   CI (99.9%): [23932.404, 32012.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.337 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.229), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.618 ±(99.9%) 2.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.618, 1.615), stdev = 0.618
[info]   CI (99.9%): [≈ 0, 2.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   59.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 12.000), stdev = 0.447
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.200, 18.000), stdev = 1.304
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117499.927 ops/s
[info] # Warmup Iteration   2: 402277.678 ops/s
[info] # Warmup Iteration   3: 427298.459 ops/s
[info] Iteration   1: 470038.728 ops/s
[info]                  ·gc.alloc.rate:                   1545.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              5174.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4394.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.336 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 468983.119 ops/s
[info]                  ·gc.alloc.rate:                   1539.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5165.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5463.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.703 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 459378.775 ops/s
[info]                  ·gc.alloc.rate:                   1491.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              5108.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4456.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 472229.686 ops/s
[info]                  ·gc.alloc.rate:               1550.638 MB/sec
[info]                  ·gc.alloc.rate.norm:          5168.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1634.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5445.943 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 475477.783 ops/s
[info]                  ·gc.alloc.rate:                   1584.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              5241.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5451.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   469221.618 ±(99.9%) 23247.351 ops/s [Average]
[info]   (min, avg, max) = (459378.775, 469221.618, 475477.783), stdev = 6037.263
[info]   CI (99.9%): [445974.267, 492468.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1542.283 ±(99.9%) 129.364 MB/sec [Average]
[info]   (min, avg, max) = (1491.077, 1542.283, 1584.747), stdev = 33.596
[info]   CI (99.9%): [1412.918, 1671.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5171.834 ±(99.9%) 182.554 B/op [Average]
[info]   (min, avg, max) = (5108.394, 5171.834, 5241.889), stdev = 47.409
[info]   CI (99.9%): [4989.280, 5354.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1504.728 ±(99.9%) 696.862 MB/sec [Average]
[info]   (min, avg, max) = (1300.905, 1504.728, 1648.181), stdev = 180.973
[info]   CI (99.9%): [807.867, 2201.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5042.508 ±(99.9%) 2170.264 B/op [Average]
[info]   (min, avg, max) = (4394.366, 5042.508, 5463.650), stdev = 563.611
[info]   CI (99.9%): [2872.244, 7212.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.914 ±(99.9%) 5.615 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.914, 3.386), stdev = 1.458
[info]   CI (99.9%): [≈ 0, 6.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.063 ±(99.9%) 18.800 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.063, 11.336), stdev = 4.882
[info]   CI (99.9%): [≈ 0, 21.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.715
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 213715.014 ops/s
[info] # Warmup Iteration   2: 986774.637 ops/s
[info] # Warmup Iteration   3: 1036585.483 ops/s
[info] Iteration   1: 1036589.370 ops/s
[info]                  ·gc.alloc.rate:                   487.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              740.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1040000.401 ops/s
[info]                  ·gc.alloc.rate:                   494.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     968.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1038596.866 ops/s
[info]                  ·gc.alloc.rate:               489.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          741.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 487.083 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1003473.181 ops/s
[info]                  ·gc.alloc.rate:               481.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          755.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1010.319 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1018066.615 ops/s
[info]                  ·gc.alloc.rate:               484.243 MB/sec
[info]                  ·gc.alloc.rate.norm:          748.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 498.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   1027345.287 ±(99.9%) 61735.748 ops/s [Average]
[info]   (min, avg, max) = (1003473.181, 1027345.287, 1040000.401), stdev = 16032.578
[info]   CI (99.9%): [965609.538, 1089081.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   487.463 ±(99.9%) 18.711 MB/sec [Average]
[info]   (min, avg, max) = (481.636, 487.463, 494.189), stdev = 4.859
[info]   CI (99.9%): [468.752, 506.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   746.682 ±(99.9%) 23.553 B/op [Average]
[info]   (min, avg, max) = (740.052, 746.682, 755.407), stdev = 6.117
[info]   CI (99.9%): [723.129, 770.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.742 ±(99.9%) 676.593 MB/sec [Average]
[info]   (min, avg, max) = (319.871, 449.742, 644.163), stdev = 175.709
[info]   CI (99.9%): [≈ 0, 1126.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   690.146 ±(99.9%) 1054.251 B/op [Average]
[info]   (min, avg, max) = (485.504, 690.146, 1010.319), stdev = 273.786
[info]   CI (99.9%): [≈ 0, 1744.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 807248.154 ops/s
[info] # Warmup Iteration   2: 2417981.520 ops/s
[info] # Warmup Iteration   3: 2702530.190 ops/s
[info] Iteration   1: 2673598.596 ops/s
[info]                  ·gc.alloc.rate:                   1300.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              765.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2727004.808 ops/s
[info]                  ·gc.alloc.rate:                   1297.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.308 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2615460.017 ops/s
[info]                  ·gc.alloc.rate:                   1243.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     787.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2740055.882 ops/s
[info]                  ·gc.alloc.rate:                   1324.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     750.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2731038.533 ops/s
[info]                  ·gc.alloc.rate:                   1291.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2697431.567 ±(99.9%) 202920.007 ops/s [Average]
[info]   (min, avg, max) = (2615460.017, 2697431.567, 2740055.882), stdev = 52697.681
[info]   CI (99.9%): [2494511.560, 2900351.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1291.454 ±(99.9%) 114.410 MB/sec [Average]
[info]   (min, avg, max) = (1243.445, 1291.454, 1324.851), stdev = 29.712
[info]   CI (99.9%): [1177.044, 1405.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   753.418 ±(99.9%) 35.301 B/op [Average]
[info]   (min, avg, max) = (743.983, 753.418, 765.264), stdev = 9.168
[info]   CI (99.9%): [718.117, 788.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1246.020 ±(99.9%) 564.323 MB/sec [Average]
[info]   (min, avg, max) = (983.944, 1246.020, 1315.929), stdev = 146.553
[info]   CI (99.9%): [681.697, 1810.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   727.623 ±(99.9%) 350.214 B/op [Average]
[info]   (min, avg, max) = (566.836, 727.623, 787.291), stdev = 90.949
[info]   CI (99.9%): [377.410, 1077.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.836 ±(99.9%) 6.812 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.836, 4.000), stdev = 1.769
[info]   CI (99.9%): [≈ 0, 7.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 3.930 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.483, 2.308), stdev = 1.021
[info]   CI (99.9%): [≈ 0, 4.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 15.000), stdev = 4.658
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 904674.396 ops/s
[info] # Warmup Iteration   2: 2614006.093 ops/s
[info] # Warmup Iteration   3: 2761412.000 ops/s
[info] Iteration   1: 2813140.537 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2798054.892 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2814561.810 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2788618.461 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2806973.049 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2804269.750 ±(99.9%) 41984.051 ops/s [Average]
[info]   (min, avg, max) = (2788618.461, 2804269.750, 2814561.810), stdev = 10903.125
[info]   CI (99.9%): [2762285.699, 2846253.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:24:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54323.641 ops/s
[info] # Warmup Iteration   2: 482826.788 ops/s
[info] # Warmup Iteration   3: 565657.002 ops/s
[info] Iteration   1: 647077.029 ops/s
[info]                  ·gc.alloc.rate:                   1368.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              3326.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3938.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.485 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.904 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 640895.397 ops/s
[info]                  ·gc.alloc.rate:                   1223.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              3003.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2380.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.419 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 653297.686 ops/s
[info]                  ·gc.alloc.rate:                   1169.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              2816.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3113.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 696055.342 ops/s
[info]                  ·gc.alloc.rate:                   978.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              2211.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2182.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.617 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 684282.459 ops/s
[info]                  ·gc.alloc.rate:                   956.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2220.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.532 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   664321.583 ±(99.9%) 93792.137 ops/s [Average]
[info]   (min, avg, max) = (640895.397, 664321.583, 696055.342), stdev = 24357.520
[info]   CI (99.9%): [570529.445, 758113.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1139.100 ±(99.9%) 665.631 MB/sec [Average]
[info]   (min, avg, max) = (956.909, 1139.100, 1368.114), stdev = 172.862
[info]   CI (99.9%): [473.469, 1804.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2711.578 ±(99.9%) 1911.377 B/op [Average]
[info]   (min, avg, max) = (2200.641, 2711.578, 3326.048), stdev = 496.379
[info]   CI (99.9%): [800.201, 4622.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1162.583 ±(99.9%) 1124.867 MB/sec [Average]
[info]   (min, avg, max) = (965.413, 1162.583, 1620.204), stdev = 292.124
[info]   CI (99.9%): [37.716, 2287.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2767.078 ±(99.9%) 2909.384 B/op [Average]
[info]   (min, avg, max) = (2182.600, 2767.078, 3938.908), stdev = 755.558
[info]   CI (99.9%): [≈ 0, 5676.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.437 ±(99.9%) 9.275 MB/sec [Average]
[info]   (min, avg, max) = (0.467, 2.437, 5.582), stdev = 2.409
[info]   CI (99.9%): [≈ 0, 11.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.719 ±(99.9%) 21.438 B/op [Average]
[info]   (min, avg, max) = (1.125, 5.719, 12.617), stdev = 5.567
[info]   CI (99.9%): [≈ 0, 27.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.200, 28.000), stdev = 8.585
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2740.815 ops/s
[info] # Warmup Iteration   2: 14666.948 ops/s
[info] # Warmup Iteration   3: 17026.149 ops/s
[info] Iteration   1: 21533.746 ops/s
[info]                  ·gc.alloc.rate:                   1711.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              125088.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1758.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128485.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 981.958 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 21066.733 ops/s
[info]                  ·gc.alloc.rate:                   1799.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              134435.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1776.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132733.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 554.569 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 22024.580 ops/s
[info]                  ·gc.alloc.rate:                   1720.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              122908.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1519.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108580.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.463 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 20141.636 ops/s
[info]                  ·gc.alloc.rate:                   1944.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              151849.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2201.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171977.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 284.847 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 21310.766 ops/s
[info]                  ·gc.alloc.rate:                   1665.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              122963.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118815.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176.702 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   21215.492 ±(99.9%) 2681.859 ops/s [Average]
[info]   (min, avg, max) = (20141.636, 21215.492, 22024.580), stdev = 696.470
[info]   CI (99.9%): [18533.633, 23897.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1768.069 ±(99.9%) 421.956 MB/sec [Average]
[info]   (min, avg, max) = (1665.070, 1768.069, 1944.022), stdev = 109.581
[info]   CI (99.9%): [1346.113, 2190.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   131448.978 ±(99.9%) 47571.101 B/op [Average]
[info]   (min, avg, max) = (122908.215, 131448.978, 151849.296), stdev = 12354.064
[info]   CI (99.9%): [83877.877, 179020.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1773.007 ±(99.9%) 1009.932 MB/sec [Average]
[info]   (min, avg, max) = (1519.633, 1773.007, 2201.715), stdev = 262.276
[info]   CI (99.9%): [763.075, 2782.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   132118.367 ±(99.9%) 93002.843 B/op [Average]
[info]   (min, avg, max) = (108580.073, 132118.367, 171977.915), stdev = 24152.543
[info]   CI (99.9%): [39115.524, 225121.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.392 ±(99.9%) 20.127 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 5.392, 13.437), stdev = 5.227
[info]   CI (99.9%): [≈ 0, 25.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   400.508 ±(99.9%) 1468.981 B/op [Average]
[info]   (min, avg, max) = (4.463, 400.508, 981.958), stdev = 381.490
[info]   CI (99.9%): [≈ 0, 1869.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.600, 17.000), stdev = 3.782
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12833.014 ops/s
[info] # Warmup Iteration   2: 37217.851 ops/s
[info] # Warmup Iteration   3: 45847.025 ops/s
[info] Iteration   1: 42668.810 ops/s
[info]                  ·gc.alloc.rate:               1474.764 MB/sec
[info]                  ·gc.alloc.rate.norm:          54387.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1288.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47532.988 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 39236.127 ops/s
[info]                  ·gc.alloc.rate:                   1338.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              53678.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52105.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.933 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.611 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 41153.186 ops/s
[info]                  ·gc.alloc.rate:                   1140.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              43606.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49946.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.195 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.189 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 41946.232 ops/s
[info]                  ·gc.alloc.rate:                   1148.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              43098.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36816.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.343 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 41640.991 ops/s
[info]                  ·gc.alloc.rate:                   1138.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              43005.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37225.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.574 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   41329.069 ±(99.9%) 4977.778 ops/s [Average]
[info]   (min, avg, max) = (39236.127, 41329.069, 42668.810), stdev = 1292.713
[info]   CI (99.9%): [36351.291, 46306.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1248.159 ±(99.9%) 587.426 MB/sec [Average]
[info]   (min, avg, max) = (1138.334, 1248.159, 1474.764), stdev = 152.553
[info]   CI (99.9%): [660.733, 1835.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   47555.428 ±(99.9%) 22807.317 B/op [Average]
[info]   (min, avg, max) = (43005.657, 47555.428, 54387.781), stdev = 5922.988
[info]   CI (99.9%): [24748.111, 70362.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1172.197 ±(99.9%) 664.136 MB/sec [Average]
[info]   (min, avg, max) = (981.439, 1172.197, 1305.971), stdev = 172.474
[info]   CI (99.9%): [508.060, 1836.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44725.221 ±(99.9%) 27794.820 B/op [Average]
[info]   (min, avg, max) = (36816.257, 44725.221, 52105.479), stdev = 7218.227
[info]   CI (99.9%): [16930.401, 72520.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.246 ±(99.9%) 6.399 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.246, 3.195), stdev = 1.662
[info]   CI (99.9%): [≈ 0, 7.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   48.743 ±(99.9%) 250.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.743, 122.189), stdev = 64.983
[info]   CI (99.9%): [≈ 0, 298.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.828
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20462.011 ops/s
[info] # Warmup Iteration   2: 40242.220 ops/s
[info] # Warmup Iteration   3: 47627.344 ops/s
[info] Iteration   1: 47569.225 ops/s
[info]                  ·gc.alloc.rate:                   823.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              27255.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          931.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30833.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.459 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 50917.914 ops/s
[info]                  ·gc.alloc.rate:               875.960 MB/sec
[info]                  ·gc.alloc.rate.norm:          27063.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:      625.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19313.977 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 51326.883 ops/s
[info]                  ·gc.alloc.rate:                   872.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              26739.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:          939.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28810.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.861 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 52939.235 ops/s
[info]                  ·gc.alloc.rate:                   729.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              21688.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          629.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18715.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.788 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 52616.859 ops/s
[info]                  ·gc.alloc.rate:                   730.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              21850.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          946.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28324.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.322 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   51074.023 ±(99.9%) 8220.758 ops/s [Average]
[info]   (min, avg, max) = (47569.225, 51074.023, 52939.235), stdev = 2134.905
[info]   CI (99.9%): [42853.265, 59294.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   806.474 ±(99.9%) 279.576 MB/sec [Average]
[info]   (min, avg, max) = (729.876, 806.474, 875.960), stdev = 72.605
[info]   CI (99.9%): [526.898, 1086.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24919.501 ±(99.9%) 11097.965 B/op [Average]
[info]   (min, avg, max) = (21688.460, 24919.501, 27255.609), stdev = 2882.106
[info]   CI (99.9%): [13821.536, 36017.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   814.723 ±(99.9%) 658.562 MB/sec [Average]
[info]   (min, avg, max) = (625.132, 814.723, 946.966), stdev = 171.027
[info]   CI (99.9%): [156.161, 1473.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25199.479 ±(99.9%) 22055.929 B/op [Average]
[info]   (min, avg, max) = (18715.023, 25199.479, 30833.340), stdev = 5727.855
[info]   CI (99.9%): [3143.550, 47255.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.942 ±(99.9%) 7.731 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.942, 5.122), stdev = 2.008
[info]   CI (99.9%): [≈ 0, 9.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   61.524 ±(99.9%) 256.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 61.524, 169.459), stdev = 66.541
[info]   CI (99.9%): [≈ 0, 317.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1310.446 ops/s
[info] # Warmup Iteration   2: 20019.602 ops/s
[info] # Warmup Iteration   3: 38956.778 ops/s
[info] Iteration   1: 39107.312 ops/s
[info]                  ·gc.alloc.rate:                   1705.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              68594.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65319.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.946 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 36939.053 ops/s
[info]                  ·gc.alloc.rate:                   1793.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              76423.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69722.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.385 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 38764.184 ops/s
[info]                  ·gc.alloc.rate:                   1688.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              68529.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66683.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.536 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 39021.737 ops/s
[info]                  ·gc.alloc.rate:                   1701.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              68608.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66592.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.519 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 39442.886 ops/s
[info]                  ·gc.alloc.rate:                   1705.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              68044.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66360.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.831 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   38655.034 ±(99.9%) 3810.116 ops/s [Average]
[info]   (min, avg, max) = (36939.053, 38655.034, 39442.886), stdev = 989.475
[info]   CI (99.9%): [34844.919, 42465.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1718.809 ±(99.9%) 163.443 MB/sec [Average]
[info]   (min, avg, max) = (1688.082, 1718.809, 1793.676), stdev = 42.446
[info]   CI (99.9%): [1555.366, 1882.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   70040.084 ±(99.9%) 13770.215 B/op [Average]
[info]   (min, avg, max) = (68044.647, 70040.084, 76423.624), stdev = 3576.081
[info]   CI (99.9%): [56269.868, 83810.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1643.536 ±(99.9%) 57.790 MB/sec [Average]
[info]   (min, avg, max) = (1623.669, 1643.536, 1663.189), stdev = 15.008
[info]   CI (99.9%): [1585.745, 1701.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66935.677 ±(99.9%) 6353.526 B/op [Average]
[info]   (min, avg, max) = (65319.853, 66935.677, 69722.470), stdev = 1649.990
[info]   CI (99.9%): [60582.151, 73289.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.590 ±(99.9%) 4.610 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.590, 2.732), stdev = 1.197
[info]   CI (99.9%): [≈ 0, 5.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   25.043 ±(99.9%) 196.645 B/op [Average]
[info]   (min, avg, max) = (0.831, 25.043, 116.385), stdev = 51.068
[info]   CI (99.9%): [≈ 0, 221.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:23:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5084.908 ops/s
[info] # Warmup Iteration   2: 18312.357 ops/s
[info] # Warmup Iteration   3: 33336.191 ops/s
[info] Iteration   1: 34853.017 ops/s
[info]                  ·gc.alloc.rate:                   2299.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              103773.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2259.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102008.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 206.463 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 32646.455 ops/s
[info]                  ·gc.alloc.rate:                   2377.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              114603.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2261.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109039.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.015 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 33374.499 ops/s
[info]                  ·gc.alloc.rate:                   2379.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              112182.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2598.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122511.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.884 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 513.173 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 35321.739 ops/s
[info]                  ·gc.alloc.rate:                   2319.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              103347.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102233.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.348 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 34884.758 ops/s
[info]                  ·gc.alloc.rate:                   2284.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              103058.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89622.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.939 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   34216.094 ±(99.9%) 4410.325 ops/s [Average]
[info]   (min, avg, max) = (32646.455, 34216.094, 35321.739), stdev = 1145.347
[info]   CI (99.9%): [29805.768, 38626.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2331.929 ±(99.9%) 169.848 MB/sec [Average]
[info]   (min, avg, max) = (2284.417, 2331.929, 2379.269), stdev = 44.109
[info]   CI (99.9%): [2162.081, 2501.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   107393.049 ±(99.9%) 21368.671 B/op [Average]
[info]   (min, avg, max) = (103058.822, 107393.049, 114603.531), stdev = 5549.376
[info]   CI (99.9%): [86024.377, 128761.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2280.280 ±(99.9%) 835.647 MB/sec [Average]
[info]   (min, avg, max) = (1986.595, 2280.280, 2598.351), stdev = 217.015
[info]   CI (99.9%): [1444.633, 3115.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   105083.354 ±(99.9%) 46207.759 B/op [Average]
[info]   (min, avg, max) = (89622.908, 105083.354, 122511.875), stdev = 12000.008
[info]   CI (99.9%): [58875.595, 151291.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.150 ±(99.9%) 18.246 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.150, 10.884), stdev = 4.739
[info]   CI (99.9%): [≈ 0, 21.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   146.587 ±(99.9%) 858.056 B/op [Average]
[info]   (min, avg, max) = (0.939, 146.587, 513.173), stdev = 222.834
[info]   CI (99.9%): [≈ 0, 1004.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.400, 16.000), stdev = 3.782
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3145.636 ops/s
[info] # Warmup Iteration   2: 21722.937 ops/s
[info] # Warmup Iteration   3: 33481.706 ops/s
[info] Iteration   1: 31203.108 ops/s
[info]                  ·gc.alloc.rate:                   1969.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              99323.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1902.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95960.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 203.919 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 30099.074 ops/s
[info]                  ·gc.alloc.rate:                   1891.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              98881.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101116.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 30981.981 ops/s
[info]                  ·gc.alloc.rate:                   1962.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              99662.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1922.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97629.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 361.277 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   4: 34332.167 ops/s
[info]                  ·gc.alloc.rate:                   1876.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              86009.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1882.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86297.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.048 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   5: 33392.611 ops/s
[info]                  ·gc.alloc.rate:                   1829.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              86173.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1584.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74665.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.680 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   32001.788 ±(99.9%) 6851.352 ops/s [Average]
[info]   (min, avg, max) = (30099.074, 32001.788, 34332.167), stdev = 1779.274
[info]   CI (99.9%): [25150.436, 38853.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1905.768 ±(99.9%) 229.482 MB/sec [Average]
[info]   (min, avg, max) = (1829.233, 1905.768, 1969.574), stdev = 59.596
[info]   CI (99.9%): [1676.286, 2135.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   94010.074 ±(99.9%) 27856.008 B/op [Average]
[info]   (min, avg, max) = (86009.604, 94010.074, 99662.255), stdev = 7234.117
[info]   CI (99.9%): [66154.066, 121866.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1845.370 ±(99.9%) 565.570 MB/sec [Average]
[info]   (min, avg, max) = (1584.939, 1845.370, 1933.844), stdev = 146.877
[info]   CI (99.9%): [1279.800, 2410.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   91133.744 ±(99.9%) 41282.674 B/op [Average]
[info]   (min, avg, max) = (74665.042, 91133.744, 101116.666), stdev = 10720.979
[info]   CI (99.9%): [49851.070, 132416.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.027 ±(99.9%) 11.052 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.027, 7.114), stdev = 2.870
[info]   CI (99.9%): [≈ 0, 14.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   150.402 ±(99.9%) 561.907 B/op [Average]
[info]   (min, avg, max) = (1.088, 150.402, 361.277), stdev = 145.925
[info]   CI (99.9%): [≈ 0, 712.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   106.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 21.200, 31.000), stdev = 8.167
[info]   CI (99.9%): [106.000, 106.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8958.913 ops/s
[info] # Warmup Iteration   2: 21204.385 ops/s
[info] # Warmup Iteration   3: 38262.090 ops/s
[info] Iteration   1: 37289.226 ops/s
[info]                  ·gc.alloc.rate:                   2159.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              91137.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2192.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92505.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.970 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   2: 36974.905 ops/s
[info]                  ·gc.alloc.rate:                   2086.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              88809.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1880.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80051.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.158 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 772.812 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 40407.837 ops/s
[info]                  ·gc.alloc.rate:                   2095.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              81576.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2173.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84635.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.243 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 40214.511 ops/s
[info]                  ·gc.alloc.rate:                   2068.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              80966.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1895.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74172.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.332 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 40950.231 ops/s
[info]                  ·gc.alloc.rate:                   2128.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              81756.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86933.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.400 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   39167.342 ±(99.9%) 7241.920 ops/s [Average]
[info]   (min, avg, max) = (36974.905, 39167.342, 40950.231), stdev = 1880.704
[info]   CI (99.9%): [31925.422, 46409.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   2107.709 ±(99.9%) 139.122 MB/sec [Average]
[info]   (min, avg, max) = (2068.999, 2107.709, 2159.699), stdev = 36.130
[info]   CI (99.9%): [1968.587, 2246.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   84849.301 ±(99.9%) 18322.519 B/op [Average]
[info]   (min, avg, max) = (80966.826, 84849.301, 91137.239), stdev = 4758.300
[info]   CI (99.9%): [66526.782, 103171.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2080.972 ±(99.9%) 690.163 MB/sec [Average]
[info]   (min, avg, max) = (1880.908, 2080.972, 2262.886), stdev = 179.233
[info]   CI (99.9%): [1390.809, 2771.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   83659.504 ±(99.9%) 26744.518 B/op [Average]
[info]   (min, avg, max) = (74172.022, 83659.504, 92505.699), stdev = 6945.466
[info]   CI (99.9%): [56914.986, 110404.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   4.030 ±(99.9%) 30.522 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 4.030, 18.158), stdev = 7.926
[info]   CI (99.9%): [≈ 0, 34.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   171.151 ±(99.9%) 1299.756 B/op [Average]
[info]   (min, avg, max) = (2.400, 171.151, 772.812), stdev = 337.542
[info]   CI (99.9%): [≈ 0, 1470.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   95.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 19.000, 44.000), stdev = 14.318
[info]   CI (99.9%): [95.000, 95.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6838.068 ops/s
[info] # Warmup Iteration   2: 27558.342 ops/s
[info] # Warmup Iteration   3: 36870.294 ops/s
[info] Iteration   1: 37022.052 ops/s
[info]                  ·gc.alloc.rate:                   2080.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              88424.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2233.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94942.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.665 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         45.000 ms
[info] Iteration   2: 36263.350 ops/s
[info]                  ·gc.alloc.rate:                   2032.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              88169.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1898.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82382.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      14.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 637.333 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 39521.231 ops/s
[info]                  ·gc.alloc.rate:                   1961.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              78116.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1884.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75061.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.974 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 40118.983 ops/s
[info]                  ·gc.alloc.rate:                   2029.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              79593.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1903.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74650.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130.787 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 40956.185 ops/s
[info]                  ·gc.alloc.rate:                   2040.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              78406.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1921.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73828.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.200 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   38776.360 ±(99.9%) 7821.150 ops/s [Average]
[info]   (min, avg, max) = (36263.350, 38776.360, 40956.185), stdev = 2031.128
[info]   CI (99.9%): [30955.210, 46597.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2028.902 ±(99.9%) 164.767 MB/sec [Average]
[info]   (min, avg, max) = (1961.705, 2028.902, 2080.489), stdev = 42.789
[info]   CI (99.9%): [1864.135, 2193.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   82542.210 ±(99.9%) 20342.781 B/op [Average]
[info]   (min, avg, max) = (78116.887, 82542.210, 88424.358), stdev = 5282.956
[info]   CI (99.9%): [62199.429, 102884.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1968.509 ±(99.9%) 573.374 MB/sec [Average]
[info]   (min, avg, max) = (1884.970, 1968.509, 2233.858), stdev = 148.904
[info]   CI (99.9%): [1395.135, 2541.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   80172.951 ±(99.9%) 34436.427 B/op [Average]
[info]   (min, avg, max) = (73828.598, 80172.951, 94942.771), stdev = 8943.031
[info]   CI (99.9%): [45736.525, 114609.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   3.768 ±(99.9%) 24.075 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 3.768, 14.691), stdev = 6.252
[info]   CI (99.9%): [≈ 0, 27.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   160.392 ±(99.9%) 1046.364 B/op [Average]
[info]   (min, avg, max) = (3.200, 160.392, 637.333), stdev = 271.737
[info]   CI (99.9%): [≈ 0, 1206.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   115.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 23.000, 45.000), stdev = 14.160
[info]   CI (99.9%): [115.000, 115.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1400.290 ops/s
[info] # Warmup Iteration   2: 5254.867 ops/s
[info] # Warmup Iteration   3: 8446.834 ops/s
[info] Iteration   1: 9440.665 ops/s
[info]                  ·gc.alloc.rate:                   1282.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              213734.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217421.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.904 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 9203.763 ops/s
[info]                  ·gc.alloc.rate:                   1242.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              212391.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167207.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 701.205 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 9465.581 ops/s
[info]                  ·gc.alloc.rate:                   1288.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              214201.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215541.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.222 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9494.546 ops/s
[info]                  ·gc.alloc.rate:                   1299.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              215345.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214717.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.409 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 9486.552 ops/s
[info]                  ·gc.alloc.rate:                   1284.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              213099.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215616.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.454 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   9418.222 ±(99.9%) 468.583 ops/s [Average]
[info]   (min, avg, max) = (9203.763, 9418.222, 9494.546), stdev = 121.690
[info]   CI (99.9%): [8949.638, 9886.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1279.597 ±(99.9%) 83.259 MB/sec [Average]
[info]   (min, avg, max) = (1242.641, 1279.597, 1299.169), stdev = 21.622
[info]   CI (99.9%): [1196.337, 1362.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   213754.481 ±(99.9%) 4313.133 B/op [Average]
[info]   (min, avg, max) = (212391.263, 213754.481, 215345.412), stdev = 1120.107
[info]   CI (99.9%): [209441.348, 218067.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1235.039 ±(99.9%) 552.857 MB/sec [Average]
[info]   (min, avg, max) = (978.282, 1235.039, 1304.569), stdev = 143.575
[info]   CI (99.9%): [682.183, 1787.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   206100.824 ±(99.9%) 83807.728 B/op [Average]
[info]   (min, avg, max) = (167207.209, 206100.824, 217421.562), stdev = 21764.601
[info]   CI (99.9%): [122293.096, 289908.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.017 ±(99.9%) 6.724 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.017, 4.103), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   172.839 ±(99.9%) 1150.549 B/op [Average]
[info]   (min, avg, max) = (3.454, 172.839, 701.205), stdev = 298.794
[info]   CI (99.9%): [≈ 0, 1323.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 21.000), stdev = 6.542
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:22:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2465.686 ops/s
[info] # Warmup Iteration   2: 13333.714 ops/s
[info] # Warmup Iteration   3: 14036.747 ops/s
[info] Iteration   1: 22137.411 ops/s
[info]                  ·gc.alloc.rate:                   1755.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              124754.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137558.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      19.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1370.914 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 22020.370 ops/s
[info]                  ·gc.alloc.rate:                   1835.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              131182.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1706.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122002.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.878 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 22363.808 ops/s
[info]                  ·gc.alloc.rate:                   1773.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              124792.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1792.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126131.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.860 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 21748.132 ops/s
[info]                  ·gc.alloc.rate:                   2031.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              146980.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1872.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135506.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.770 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 21066.651 ops/s
[info]                  ·gc.alloc.rate:                   1944.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              145235.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144577.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.226 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.570 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   21867.274 ±(99.9%) 1923.541 ops/s [Average]
[info]   (min, avg, max) = (21066.651, 21867.274, 22363.808), stdev = 499.537
[info]   CI (99.9%): [19943.734, 23790.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1868.093 ±(99.9%) 452.174 MB/sec [Average]
[info]   (min, avg, max) = (1755.584, 1868.093, 2031.358), stdev = 117.428
[info]   CI (99.9%): [1415.918, 2320.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   134589.047 ±(99.9%) 41793.412 B/op [Average]
[info]   (min, avg, max) = (124754.674, 134589.047, 146980.490), stdev = 10853.616
[info]   CI (99.9%): [92795.635, 176382.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1848.773 ±(99.9%) 380.017 MB/sec [Average]
[info]   (min, avg, max) = (1706.996, 1848.773, 1935.763), stdev = 98.689
[info]   CI (99.9%): [1468.755, 2228.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   133155.511 ±(99.9%) 34928.282 B/op [Average]
[info]   (min, avg, max) = (122002.179, 133155.511, 144577.971), stdev = 9070.764
[info]   CI (99.9%): [98227.229, 168083.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.482 ±(99.9%) 31.977 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 4.482, 19.292), stdev = 8.304
[info]   CI (99.9%): [≈ 0, 36.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   319.798 ±(99.9%) 2269.997 B/op [Average]
[info]   (min, avg, max) = (5.860, 319.798, 1370.914), stdev = 589.511
[info]   CI (99.9%): [≈ 0, 2589.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 20.000), stdev = 4.583
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15716.384 ops/s
[info] # Warmup Iteration   2: 41873.100 ops/s
[info] # Warmup Iteration   3: 52410.519 ops/s
[info] Iteration   1: 47107.696 ops/s
[info]                  ·gc.alloc.rate:                   1780.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              59446.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53745.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 185.748 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 52862.150 ops/s
[info]                  ·gc.alloc.rate:                   1728.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              51426.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1908.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56804.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.118 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 46127.358 ops/s
[info]                  ·gc.alloc.rate:                   1391.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              47486.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42865.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.650 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 48453.115 ops/s
[info]                  ·gc.alloc.rate:                   1366.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              44367.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1243.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40398.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.795 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   5: 48228.437 ops/s
[info]                  ·gc.alloc.rate:                   1358.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              44319.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40869.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 145.774 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   48555.751 ±(99.9%) 9940.461 ops/s [Average]
[info]   (min, avg, max) = (46127.358, 48555.751, 52862.150), stdev = 2581.506
[info]   CI (99.9%): [38615.290, 58496.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1524.907 ±(99.9%) 810.551 MB/sec [Average]
[info]   (min, avg, max) = (1358.170, 1524.907, 1780.274), stdev = 210.497
[info]   CI (99.9%): [714.356, 2335.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   49409.621 ±(99.9%) 24341.379 B/op [Average]
[info]   (min, avg, max) = (44319.956, 49409.621, 59446.920), stdev = 6321.379
[info]   CI (99.9%): [25068.241, 73751.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1454.223 ±(99.9%) 1146.936 MB/sec [Average]
[info]   (min, avg, max) = (1243.958, 1454.223, 1908.839), stdev = 297.856
[info]   CI (99.9%): [307.288, 2601.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46936.807 ±(99.9%) 29817.103 B/op [Average]
[info]   (min, avg, max) = (40398.923, 46936.807, 56804.147), stdev = 7743.407
[info]   CI (99.9%): [17119.704, 76753.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.528 ±(99.9%) 7.656 MB/sec [Average]
[info]   (min, avg, max) = (0.486, 3.528, 5.563), stdev = 1.988
[info]   CI (99.9%): [≈ 0, 11.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   114.217 ±(99.9%) 248.278 B/op [Average]
[info]   (min, avg, max) = (15.795, 114.217, 185.748), stdev = 64.477
[info]   CI (99.9%): [≈ 0, 362.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   111.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 22.200, 28.000), stdev = 5.630
[info]   CI (99.9%): [111.000, 111.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33404.791 ops/s
[info] # Warmup Iteration   2: 55275.286 ops/s
[info] # Warmup Iteration   3: 61737.963 ops/s
[info] Iteration   1: 63975.510 ops/s
[info]                  ·gc.alloc.rate:                   727.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              17893.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15847.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.982 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 66885.711 ops/s
[info]                  ·gc.alloc.rate:                   768.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              18083.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15119.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 65437.449 ops/s
[info]                  ·gc.alloc.rate:                   760.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              18278.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23239.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 66847.165 ops/s
[info]                  ·gc.alloc.rate:                   761.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              17922.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15230.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 66859.370 ops/s
[info]                  ·gc.alloc.rate:                   769.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              18097.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15241.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.359 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   66001.041 ±(99.9%) 4967.071 ops/s [Average]
[info]   (min, avg, max) = (63975.510, 66001.041, 66885.711), stdev = 1289.933
[info]   CI (99.9%): [61033.970, 70968.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   757.344 ±(99.9%) 66.541 MB/sec [Average]
[info]   (min, avg, max) = (727.318, 757.344, 769.156), stdev = 17.280
[info]   CI (99.9%): [690.803, 823.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   18055.141 ±(99.9%) 597.191 B/op [Average]
[info]   (min, avg, max) = (17893.887, 18055.141, 18278.548), stdev = 155.089
[info]   CI (99.9%): [17457.949, 18652.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   709.634 ±(99.9%) 553.249 MB/sec [Average]
[info]   (min, avg, max) = (642.712, 709.634, 966.625), stdev = 143.677
[info]   CI (99.9%): [156.386, 1262.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16935.687 ±(99.9%) 13614.121 B/op [Average]
[info]   (min, avg, max) = (15119.170, 16935.687, 23239.560), stdev = 3535.544
[info]   CI (99.9%): [3321.566, 30549.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.154 ±(99.9%) 7.367 MB/sec [Average]
[info]   (min, avg, max) = (0.011, 1.154, 4.552), stdev = 1.913
[info]   CI (99.9%): [≈ 0, 8.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   28.156 ±(99.9%) 181.632 B/op [Average]
[info]   (min, avg, max) = (0.257, 28.156, 111.982), stdev = 47.169
[info]   CI (99.9%): [≈ 0, 209.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 2.168
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1013.400 ops/s
[info] # Warmup Iteration   2: 22133.363 ops/s
[info] # Warmup Iteration   3: 41460.066 ops/s
[info] Iteration   1: 41557.241 ops/s
[info]                  ·gc.alloc.rate:                   2628.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              99498.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99362.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.822 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.840 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 41052.577 ops/s
[info]                  ·gc.alloc.rate:                   2484.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              95200.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88417.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.903 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 41903.391 ops/s
[info]                  ·gc.alloc.rate:                   2409.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              90487.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2323.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87283.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.909 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 42013.148 ops/s
[info]                  ·gc.alloc.rate:                   2404.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              90068.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2342.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87732.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.899 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 41107.437 ops/s
[info]                  ·gc.alloc.rate:               2381.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          91138.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2357.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90222.985 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   41526.759 ±(99.9%) 1700.436 ops/s [Average]
[info]   (min, avg, max) = (41052.577, 41526.759, 42013.148), stdev = 441.598
[info]   CI (99.9%): [39826.323, 43227.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2461.568 ±(99.9%) 388.660 MB/sec [Average]
[info]   (min, avg, max) = (2381.255, 2461.568, 2628.319), stdev = 100.934
[info]   CI (99.9%): [2072.908, 2850.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   93278.569 ±(99.9%) 15528.640 B/op [Average]
[info]   (min, avg, max) = (90068.281, 93278.569, 99498.142), stdev = 4032.739
[info]   CI (99.9%): [77749.929, 108807.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2391.136 ±(99.9%) 508.065 MB/sec [Average]
[info]   (min, avg, max) = (2307.355, 2391.136, 2624.744), stdev = 131.943
[info]   CI (99.9%): [1883.071, 2899.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   90603.949 ±(99.9%) 19340.815 B/op [Average]
[info]   (min, avg, max) = (87283.337, 90603.949, 99362.813), stdev = 5022.748
[info]   CI (99.9%): [71263.134, 109944.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.143 ±(99.9%) 5.667 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.143, 2.822), stdev = 1.472
[info]   CI (99.9%): [≈ 0, 6.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   43.510 ±(99.9%) 215.847 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43.510, 106.840), stdev = 56.055
[info]   CI (99.9%): [≈ 0, 259.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 15.000), stdev = 2.074
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5617.524 ops/s
[info] # Warmup Iteration   2: 29832.617 ops/s
[info] # Warmup Iteration   3: 36987.753 ops/s
[info] Iteration   1: 37721.102 ops/s
[info]                  ·gc.alloc.rate:                   2102.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              87719.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2275.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94923.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.422 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 39647.357 ops/s
[info]                  ·gc.alloc.rate:                   1915.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              76037.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65048.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.298 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.598 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 42841.888 ops/s
[info]                  ·gc.alloc.rate:                   1876.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              68914.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72755.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.353 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 42755.646 ops/s
[info]                  ·gc.alloc.rate:                   1852.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              68161.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61196.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.832 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 42560.226 ops/s
[info]                  ·gc.alloc.rate:                   1864.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              68933.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74196.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.540 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   41105.244 ±(99.9%) 8913.759 ops/s [Average]
[info]   (min, avg, max) = (37721.102, 41105.244, 42841.888), stdev = 2314.875
[info]   CI (99.9%): [32191.485, 50019.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1922.394 ±(99.9%) 398.763 MB/sec [Average]
[info]   (min, avg, max) = (1852.417, 1922.394, 2102.718), stdev = 103.557
[info]   CI (99.9%): [1523.631, 2321.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73953.329 ±(99.9%) 32099.531 B/op [Average]
[info]   (min, avg, max) = (68161.855, 73953.329, 87719.194), stdev = 8336.146
[info]   CI (99.9%): [41853.798, 106052.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1913.093 ±(99.9%) 1023.228 MB/sec [Average]
[info]   (min, avg, max) = (1638.768, 1913.093, 2275.408), stdev = 265.729
[info]   CI (99.9%): [889.865, 2936.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   73624.044 ±(99.9%) 50306.333 B/op [Average]
[info]   (min, avg, max) = (61196.974, 73624.044, 94923.312), stdev = 13064.395
[info]   CI (99.9%): [23317.712, 123930.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.912 ±(99.9%) 9.616 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.912, 4.972), stdev = 2.497
[info]   CI (99.9%): [≈ 0, 11.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   77.749 ±(99.9%) 394.334 B/op [Average]
[info]   (min, avg, max) = (1.540, 77.749, 207.422), stdev = 102.407
[info]   CI (99.9%): [≈ 0, 472.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 14.000), stdev = 2.775
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:21:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15084.933 ops/s
[info] # Warmup Iteration   2: 44804.354 ops/s
[info] # Warmup Iteration   3: 49076.474 ops/s
[info] Iteration   1: 53876.755 ops/s
[info]                  ·gc.alloc.rate:                   1767.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              51606.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47793.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.803 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140.230 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 55857.002 ops/s
[info]                  ·gc.alloc.rate:                   1761.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              49613.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45912.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.346 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 55751.567 ops/s
[info]                  ·gc.alloc.rate:                   1744.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              49224.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55417.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.175 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 56442.566 ops/s
[info]                  ·gc.alloc.rate:                   1761.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              49113.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46039.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.161 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 56407.704 ops/s
[info]                  ·gc.alloc.rate:                   1787.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              49866.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46420.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.581 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   55667.119 ±(99.9%) 4037.842 ops/s [Average]
[info]   (min, avg, max) = (53876.755, 55667.119, 56442.566), stdev = 1048.615
[info]   CI (99.9%): [51629.276, 59704.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1764.235 ±(99.9%) 59.883 MB/sec [Average]
[info]   (min, avg, max) = (1744.063, 1764.235, 1787.283), stdev = 15.551
[info]   CI (99.9%): [1704.352, 1824.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49884.746 ±(99.9%) 3883.570 B/op [Average]
[info]   (min, avg, max) = (49113.207, 49884.746, 51606.126), stdev = 1008.551
[info]   CI (99.9%): [46001.176, 53768.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1708.989 ±(99.9%) 550.214 MB/sec [Average]
[info]   (min, avg, max) = (1629.678, 1708.989, 1963.515), stdev = 142.889
[info]   CI (99.9%): [1158.774, 2259.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48316.845 ±(99.9%) 15553.363 B/op [Average]
[info]   (min, avg, max) = (45912.624, 48316.845, 55417.827), stdev = 4039.159
[info]   CI (99.9%): [32763.482, 63870.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.998 ±(99.9%) 8.190 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.998, 4.803), stdev = 2.127
[info]   CI (99.9%): [≈ 0, 9.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   29.099 ±(99.9%) 239.231 B/op [Average]
[info]   (min, avg, max) = (0.581, 29.099, 140.230), stdev = 62.128
[info]   CI (99.9%): [≈ 0, 268.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17113.152 ops/s
[info] # Warmup Iteration   2: 43506.150 ops/s
[info] # Warmup Iteration   3: 53639.176 ops/s
[info] Iteration   1: 51702.994 ops/s
[info]                  ·gc.alloc.rate:                   1632.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              49654.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49599.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.861 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 54673.937 ops/s
[info]                  ·gc.alloc.rate:                   1629.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              46900.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46791.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.845 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 56336.071 ops/s
[info]                  ·gc.alloc.rate:                   1657.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              46290.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45222.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.908 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 56682.758 ops/s
[info]                  ·gc.alloc.rate:                   1669.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              46361.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45179.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.156 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 56113.903 ops/s
[info]                  ·gc.alloc.rate:                   1673.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              46925.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46047.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.752 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   55101.932 ±(99.9%) 7887.279 ops/s [Average]
[info]   (min, avg, max) = (51702.994, 55101.932, 56682.758), stdev = 2048.301
[info]   CI (99.9%): [47214.653, 62989.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1652.450 ±(99.9%) 79.190 MB/sec [Average]
[info]   (min, avg, max) = (1629.679, 1652.450, 1673.088), stdev = 20.565
[info]   CI (99.9%): [1573.260, 1731.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   47226.353 ±(99.9%) 5349.274 B/op [Average]
[info]   (min, avg, max) = (46290.025, 47226.353, 49654.811), stdev = 1389.189
[info]   CI (99.9%): [41877.079, 52575.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1628.907 ±(99.9%) 31.726 MB/sec [Average]
[info]   (min, avg, max) = (1619.294, 1628.907, 1641.789), stdev = 8.239
[info]   CI (99.9%): [1597.181, 1660.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   46567.963 ±(99.9%) 7007.588 B/op [Average]
[info]   (min, avg, max) = (45179.701, 46567.963, 49599.058), stdev = 1819.848
[info]   CI (99.9%): [39560.375, 53575.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.329 ±(99.9%) 6.710 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.329, 3.574), stdev = 1.743
[info]   CI (99.9%): [≈ 0, 8.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   39.141 ±(99.9%) 197.349 B/op [Average]
[info]   (min, avg, max) = (1.156, 39.141, 102.845), stdev = 51.251
[info]   CI (99.9%): [≈ 0, 236.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.000, 21.000), stdev = 6.205
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84750.897 ops/s
[info] # Warmup Iteration   2: 319170.929 ops/s
[info] # Warmup Iteration   3: 392115.774 ops/s
[info] Iteration   1: 394105.488 ops/s
[info]                  ·gc.alloc.rate:                   2152.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              8598.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2248.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8978.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.004 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 398441.412 ops/s
[info]                  ·gc.alloc.rate:                   2150.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              8493.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1924.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7602.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.740 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 407821.578 ops/s
[info]                  ·gc.alloc.rate:                   2204.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              8507.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2269.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8756.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 407580.775 ops/s
[info]                  ·gc.alloc.rate:                   2231.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              8617.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7619.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 405478.435 ops/s
[info]                  ·gc.alloc.rate:                   2242.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              8701.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2332.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9048.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   402685.538 ±(99.9%) 23562.385 ops/s [Average]
[info]   (min, avg, max) = (394105.488, 402685.538, 407821.578), stdev = 6119.077
[info]   CI (99.9%): [379123.153, 426247.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2196.434 ±(99.9%) 166.608 MB/sec [Average]
[info]   (min, avg, max) = (2150.099, 2196.434, 2242.718), stdev = 43.267
[info]   CI (99.9%): [2029.826, 2363.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8583.623 ±(99.9%) 329.634 B/op [Average]
[info]   (min, avg, max) = (8493.084, 8583.623, 8701.662), stdev = 85.605
[info]   CI (99.9%): [8253.989, 8913.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2149.463 ±(99.9%) 718.209 MB/sec [Average]
[info]   (min, avg, max) = (1924.561, 2149.463, 2332.191), stdev = 186.517
[info]   CI (99.9%): [1431.254, 2867.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8401.064 ±(99.9%) 2809.262 B/op [Average]
[info]   (min, avg, max) = (7602.190, 8401.064, 9048.810), stdev = 729.556
[info]   CI (99.9%): [5591.802, 11210.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.956 ±(99.9%) 7.652 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.956, 4.508), stdev = 1.987
[info]   CI (99.9%): [≈ 0, 8.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.813 ±(99.9%) 30.565 B/op [Average]
[info]   (min, avg, max) = (0.080, 3.813, 18.004), stdev = 7.938
[info]   CI (99.9%): [≈ 0, 34.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 16.000), stdev = 3.347
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.793 ops/s
[info] # Warmup Iteration   2: 1528947.603 ops/s
[info] # Warmup Iteration   3: 1814940.358 ops/s
[info] Iteration   1: 1781612.024 ops/s
[info]                  ·gc.alloc.rate:               574.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          507.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 573.196 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1786430.843 ops/s
[info]                  ·gc.alloc.rate:               592.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          522.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 572.226 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1777762.867 ops/s
[info]                  ·gc.alloc.rate:                   580.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              513.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     575.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1852600.632 ops/s
[info]                  ·gc.alloc.rate:                   597.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              507.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1745515.697 ops/s
[info]                  ·gc.alloc.rate:                   569.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              513.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1788784.412 ±(99.9%) 150657.502 ops/s [Average]
[info]   (min, avg, max) = (1745515.697, 1788784.412, 1852600.632), stdev = 39125.275
[info]   CI (99.9%): [1638126.911, 1939441.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   583.012 ±(99.9%) 45.407 MB/sec [Average]
[info]   (min, avg, max) = (569.782, 583.012, 597.364), stdev = 11.792
[info]   CI (99.9%): [537.605, 628.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   512.905 ±(99.9%) 23.564 B/op [Average]
[info]   (min, avg, max) = (507.321, 512.905, 522.234), stdev = 6.120
[info]   CI (99.9%): [489.341, 536.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.138 ±(99.9%) 559.560 MB/sec [Average]
[info]   (min, avg, max) = (325.196, 585.138, 651.618), stdev = 145.316
[info]   CI (99.9%): [25.579, 1144.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   516.932 ±(99.9%) 518.772 B/op [Average]
[info]   (min, avg, max) = (276.178, 516.932, 587.449), stdev = 134.723
[info]   CI (99.9%): [≈ 0, 1035.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.037), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.033), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131307.811 ops/s
[info] # Warmup Iteration   2: 806167.905 ops/s
[info] # Warmup Iteration   3: 798287.525 ops/s
[info] Iteration   1: 798153.235 ops/s
[info]                  ·gc.alloc.rate:                   324.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              639.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 788746.718 ops/s
[info]                  ·gc.alloc.rate:               327.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          653.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 645.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 798519.800 ops/s
[info]                  ·gc.alloc.rate:               328.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          646.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 638.115 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 797506.520 ops/s
[info]                  ·gc.alloc.rate:                   328.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 791953.298 ops/s
[info]                  ·gc.alloc.rate:                   327.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              651.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     643.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   794975.914 ±(99.9%) 16894.364 ops/s [Average]
[info]   (min, avg, max) = (788746.718, 794975.914, 798519.800), stdev = 4387.413
[info]   CI (99.9%): [778081.551, 811870.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   327.368 ±(99.9%) 6.635 MB/sec [Average]
[info]   (min, avg, max) = (324.387, 327.368, 328.754), stdev = 1.723
[info]   CI (99.9%): [320.733, 334.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   647.970 ±(99.9%) 20.625 B/op [Average]
[info]   (min, avg, max) = (639.499, 647.970, 653.433), stdev = 5.356
[info]   CI (99.9%): [627.345, 668.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   323.834 ±(99.9%) 0.149 MB/sec [Average]
[info]   (min, avg, max) = (323.792, 323.834, 323.895), stdev = 0.039
[info]   CI (99.9%): [323.685, 323.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   640.971 ±(99.9%) 13.622 B/op [Average]
[info]   (min, avg, max) = (638.115, 640.971, 645.997), stdev = 3.538
[info]   CI (99.9%): [627.349, 654.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.031), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.116 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.062), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638314.439 ops/s
[info] # Warmup Iteration   2: 2076298.823 ops/s
[info] # Warmup Iteration   3: 2085679.773 ops/s
[info] Iteration   1: 2200825.340 ops/s
[info]                  ·gc.alloc.rate:               435.634 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 234.155 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2192564.571 ops/s
[info]                  ·gc.alloc.rate:                   440.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              316.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2161577.576 ops/s
[info]                  ·gc.alloc.rate:               424.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          308.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 238.888 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2203018.678 ops/s
[info]                  ·gc.alloc.rate:                   436.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2202348.943 ops/s
[info]                  ·gc.alloc.rate:               432.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          308.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 234.701 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   2192067.022 ±(99.9%) 67584.523 ops/s [Average]
[info]   (min, avg, max) = (2161577.576, 2192067.022, 2203018.678), stdev = 17551.486
[info]   CI (99.9%): [2124482.498, 2259651.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   433.790 ±(99.9%) 23.680 MB/sec [Average]
[info]   (min, avg, max) = (424.086, 433.790, 440.515), stdev = 6.150
[info]   CI (99.9%): [410.110, 457.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.357 ±(99.9%) 11.590 B/op [Average]
[info]   (min, avg, max) = (308.636, 311.357, 316.144), stdev = 3.010
[info]   CI (99.9%): [299.767, 322.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   393.686 ±(99.9%) 563.887 MB/sec [Average]
[info]   (min, avg, max) = (327.499, 393.686, 655.645), stdev = 146.440
[info]   CI (99.9%): [≈ 0, 957.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   282.582 ±(99.9%) 404.650 B/op [Average]
[info]   (min, avg, max) = (234.155, 282.582, 470.535), stdev = 105.086
[info]   CI (99.9%): [≈ 0, 687.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.030), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6338.021 ops/s
[info] # Warmup Iteration   2: 85234.594 ops/s
[info] # Warmup Iteration   3: 144718.833 ops/s
[info] Iteration   1: 151074.706 ops/s
[info]                  ·gc.alloc.rate:                   3984.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              41510.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3923.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40878.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.952 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 153513.080 ops/s
[info]                  ·gc.alloc.rate:                   4076.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              41783.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3996.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40970.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.640 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 153826.882 ops/s
[info]                  ·gc.alloc.rate:                   4094.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              41894.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4047.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41411.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.278 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 156366.335 ops/s
[info]                  ·gc.alloc.rate:                   4149.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              41744.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3732.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37548.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 154442.304 ops/s
[info]                  ·gc.alloc.rate:                   4112.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              41901.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4079.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41564.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.849 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   153844.662 ±(99.9%) 7331.138 ops/s [Average]
[info]   (min, avg, max) = (151074.706, 153844.662, 156366.335), stdev = 1903.873
[info]   CI (99.9%): [146513.524, 161175.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4083.402 ±(99.9%) 236.990 MB/sec [Average]
[info]   (min, avg, max) = (3984.379, 4083.402, 4149.197), stdev = 61.546
[info]   CI (99.9%): [3846.412, 4320.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41767.080 ±(99.9%) 610.625 B/op [Average]
[info]   (min, avg, max) = (41510.948, 41767.080, 41901.419), stdev = 158.577
[info]   CI (99.9%): [41156.455, 42377.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3955.899 ±(99.9%) 532.346 MB/sec [Average]
[info]   (min, avg, max) = (3732.054, 3955.899, 4079.308), stdev = 138.249
[info]   CI (99.9%): [3423.553, 4488.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40474.473 ±(99.9%) 6396.722 B/op [Average]
[info]   (min, avg, max) = (37548.042, 40474.473, 41564.257), stdev = 1661.208
[info]   CI (99.9%): [34077.751, 46871.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.100, 0.187), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.028 ±(99.9%) 2.334 B/op [Average]
[info]   (min, avg, max) = (0.419, 1.028, 1.952), stdev = 0.606
[info]   CI (99.9%): [≈ 0, 3.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   59.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 12.000), stdev = 0.447
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.000, 17.000), stdev = 0.707
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108789.565 ops/s
[info] # Warmup Iteration   2: 416417.779 ops/s
[info] # Warmup Iteration   3: 431765.174 ops/s
[info] Iteration   1: 430220.380 ops/s
[info]                  ·gc.alloc.rate:                   1417.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              5186.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6004.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.023 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 437901.830 ops/s
[info]                  ·gc.alloc.rate:                   1424.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              5118.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4692.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 441079.550 ops/s
[info]                  ·gc.alloc.rate:                   1445.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              5158.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4642.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 443503.208 ops/s
[info]                  ·gc.alloc.rate:                   1472.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              5219.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5791.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 448320.739 ops/s
[info]                  ·gc.alloc.rate:                   1458.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              5117.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4624.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   440205.142 ±(99.9%) 26010.057 ops/s [Average]
[info]   (min, avg, max) = (430220.380, 440205.142, 448320.739), stdev = 6754.729
[info]   CI (99.9%): [414195.085, 466215.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1443.603 ±(99.9%) 87.777 MB/sec [Average]
[info]   (min, avg, max) = (1417.823, 1443.603, 1472.057), stdev = 22.795
[info]   CI (99.9%): [1355.826, 1531.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5159.885 ±(99.9%) 169.419 B/op [Average]
[info]   (min, avg, max) = (5117.614, 5159.885, 5219.238), stdev = 43.998
[info]   CI (99.9%): [4990.466, 5329.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1439.964 ±(99.9%) 695.076 MB/sec [Average]
[info]   (min, avg, max) = (1300.980, 1439.964, 1641.656), stdev = 180.509
[info]   CI (99.9%): [744.888, 2135.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5151.236 ±(99.9%) 2643.563 B/op [Average]
[info]   (min, avg, max) = (4624.661, 5151.236, 6004.939), stdev = 686.525
[info]   CI (99.9%): [2507.673, 7794.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 5.890 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.912, 3.560), stdev = 1.530
[info]   CI (99.9%): [≈ 0, 6.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.322 ±(99.9%) 21.551 B/op [Average]
[info]   (min, avg, max) = (0.073, 3.322, 13.023), stdev = 5.597
[info]   CI (99.9%): [≈ 0, 24.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 19.000), stdev = 5.814
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.812 ops/s
[info] # Warmup Iteration   2: 2202666.002 ops/s
[info] # Warmup Iteration   3: 2635495.245 ops/s
[info] Iteration   1: 2491129.347 ops/s
[info]                  ·gc.alloc.rate:                   1247.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              788.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2656558.057 ops/s
[info]                  ·gc.alloc.rate:                   1268.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     772.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.520 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2632077.259 ops/s
[info]                  ·gc.alloc.rate:                   1248.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     776.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.349 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2662671.836 ops/s
[info]                  ·gc.alloc.rate:               1258.101 MB/sec
[info]                  ·gc.alloc.rate.norm:          743.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1293.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 764.703 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 2660758.018 ops/s
[info]                  ·gc.alloc.rate:                   1269.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     768.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   2620638.903 ±(99.9%) 282767.191 ops/s [Average]
[info]   (min, avg, max) = (2491129.347, 2620638.903, 2662671.836), stdev = 73433.741
[info]   CI (99.9%): [2337871.713, 2903406.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1258.470 ±(99.9%) 39.966 MB/sec [Average]
[info]   (min, avg, max) = (1247.894, 1258.470, 1269.457), stdev = 10.379
[info]   CI (99.9%): [1218.504, 1298.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   756.094 ±(99.9%) 70.592 B/op [Average]
[info]   (min, avg, max) = (743.650, 756.094, 788.396), stdev = 18.333
[info]   CI (99.9%): [685.502, 826.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1234.510 ±(99.9%) 557.546 MB/sec [Average]
[info]   (min, avg, max) = (975.592, 1234.510, 1304.832), stdev = 144.793
[info]   CI (99.9%): [676.964, 1792.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   739.794 ±(99.9%) 266.276 B/op [Average]
[info]   (min, avg, max) = (616.361, 739.794, 776.788), stdev = 69.151
[info]   CI (99.9%): [473.518, 1006.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.074 ±(99.9%) 6.922 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.074, 4.256), stdev = 1.798
[info]   CI (99.9%): [≈ 0, 7.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.640 ±(99.9%) 4.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.640, 2.520), stdev = 1.063
[info]   CI (99.9%): [≈ 0, 4.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 15.000), stdev = 3.937
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 438443.774 ops/s
[info] # Warmup Iteration   2: 1004814.755 ops/s
[info] # Warmup Iteration   3: 1170645.946 ops/s
[info] Iteration   1: 1189546.188 ops/s
[info]                  ·gc.alloc.rate:               559.852 MB/sec
[info]                  ·gc.alloc.rate.norm:          740.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 427.488 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1177208.175 ops/s
[info]                  ·gc.alloc.rate:                   560.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     863.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1177604.851 ops/s
[info]                  ·gc.alloc.rate:                   566.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     864.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1169058.482 ops/s
[info]                  ·gc.alloc.rate:                   559.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1192451.297 ops/s
[info]                  ·gc.alloc.rate:               560.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          739.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 427.742 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1181173.799 ±(99.9%) 37160.377 ops/s [Average]
[info]   (min, avg, max) = (1169058.482, 1181173.799, 1192451.297), stdev = 9650.432
[info]   CI (99.9%): [1144013.422, 1218334.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   561.151 ±(99.9%) 10.712 MB/sec [Average]
[info]   (min, avg, max) = (559.010, 561.151, 566.006), stdev = 2.782
[info]   CI (99.9%): [550.440, 571.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   747.643 ±(99.9%) 28.913 B/op [Average]
[info]   (min, avg, max) = (739.146, 747.643, 756.346), stdev = 7.509
[info]   CI (99.9%): [718.730, 776.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   517.539 ±(99.9%) 681.462 MB/sec [Average]
[info]   (min, avg, max) = (323.163, 517.539, 647.528), stdev = 176.974
[info]   CI (99.9%): [≈ 0, 1199.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   690.984 ±(99.9%) 925.859 B/op [Average]
[info]   (min, avg, max) = (427.488, 690.984, 871.700), stdev = 240.443
[info]   CI (99.9%): [≈ 0, 1616.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.031), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 995651.693 ops/s
[info] # Warmup Iteration   2: 2719652.641 ops/s
[info] # Warmup Iteration   3: 2915920.630 ops/s
[info] Iteration   1: 2941000.886 ops/s
[info]                  ·gc.alloc.rate:                   1396.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2973478.741 ops/s
[info]                  ·gc.alloc.rate:                   1414.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     869.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.200 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2959730.578 ops/s
[info]                  ·gc.alloc.rate:                   1431.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2974859.443 ops/s
[info]                  ·gc.alloc.rate:               1426.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          754.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 693.215 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2981046.945 ops/s
[info]                  ·gc.alloc.rate:                   1411.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2966023.319 ±(99.9%) 61643.100 ops/s [Average]
[info]   (min, avg, max) = (2941000.886, 2966023.319, 2981046.945), stdev = 16008.517
[info]   CI (99.9%): [2904380.219, 3027666.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1416.465 ±(99.9%) 52.522 MB/sec [Average]
[info]   (min, avg, max) = (1396.927, 1416.465, 1431.772), stdev = 13.640
[info]   CI (99.9%): [1363.943, 1468.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   751.452 ±(99.9%) 24.763 B/op [Average]
[info]   (min, avg, max) = (745.100, 751.452, 761.030), stdev = 6.431
[info]   CI (99.9%): [726.689, 776.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1379.781 ±(99.9%) 568.389 MB/sec [Average]
[info]   (min, avg, max) = (1308.844, 1379.781, 1643.723), stdev = 147.609
[info]   CI (99.9%): [811.392, 1948.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   731.919 ±(99.9%) 297.449 B/op [Average]
[info]   (min, avg, max) = (693.215, 731.919, 869.860), stdev = 77.247
[info]   CI (99.9%): [434.470, 1029.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.851 ±(99.9%) 7.117 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.851, 4.156), stdev = 1.848
[info]   CI (99.9%): [≈ 0, 7.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.450 ±(99.9%) 3.766 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 2.200), stdev = 0.978
[info]   CI (99.9%): [≈ 0, 4.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 14.000), stdev = 4.301
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1735283.789 ops/s
[info] # Warmup Iteration   2: 2994956.978 ops/s
[info] # Warmup Iteration   3: 3220079.419 ops/s
[info] Iteration   1: 3216253.918 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3207885.811 ops/s
[info]                  ·gc.alloc.rate:      4.799 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.355 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3209503.548 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3214038.568 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3214924.026 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3212521.174 ±(99.9%) 13963.857 ops/s [Average]
[info]   (min, avg, max) = (3207885.811, 3212521.174, 3216253.918), stdev = 3626.369
[info]   CI (99.9%): [3198557.317, 3226485.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.960 ±(99.9%) 8.264 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.960, 4.799), stdev = 2.146
[info]   CI (99.9%): [≈ 0, 9.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.471 ±(99.9%) 4.054 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.471, 2.355), stdev = 1.053
[info]   CI (99.9%): [≈ 0, 4.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55665.424 ops/s
[info] # Warmup Iteration   2: 634996.163 ops/s
[info] # Warmup Iteration   3: 595345.323 ops/s
[info] Iteration   1: 918612.250 ops/s
[info]                  ·gc.alloc.rate:                   977.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              1674.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1656.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 914665.467 ops/s
[info]                  ·gc.alloc.rate:                   984.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              1693.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1668.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 921816.654 ops/s
[info]                  ·gc.alloc.rate:                   991.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              1692.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1660.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 915724.707 ops/s
[info]                  ·gc.alloc.rate:                   981.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              1687.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1669.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.324 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 927187.876 ops/s
[info]                  ·gc.alloc.rate:                   987.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              1676.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1646.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.783 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.419 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   919601.391 ±(99.9%) 19523.996 ops/s [Average]
[info]   (min, avg, max) = (914665.467, 919601.391, 927187.876), stdev = 5070.320
[info]   CI (99.9%): [900077.395, 939125.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   984.482 ±(99.9%) 20.963 MB/sec [Average]
[info]   (min, avg, max) = (977.233, 984.482, 991.308), stdev = 5.444
[info]   CI (99.9%): [963.519, 1005.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1684.779 ±(99.9%) 34.405 B/op [Average]
[info]   (min, avg, max) = (1674.302, 1684.779, 1693.377), stdev = 8.935
[info]   CI (99.9%): [1650.374, 1719.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   970.132 ±(99.9%) 8.628 MB/sec [Average]
[info]   (min, avg, max) = (966.565, 970.132, 972.610), stdev = 2.241
[info]   CI (99.9%): [961.504, 978.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1660.241 ±(99.9%) 36.878 B/op [Average]
[info]   (min, avg, max) = (1646.391, 1660.241, 1669.277), stdev = 9.577
[info]   CI (99.9%): [1623.362, 1697.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.194 ±(99.9%) 5.986 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.194, 3.783), stdev = 1.555
[info]   CI (99.9%): [≈ 0, 7.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.032 ±(99.9%) 10.155 B/op [Average]
[info]   (min, avg, max) = (0.036, 2.032, 6.419), stdev = 2.637
[info]   CI (99.9%): [≈ 0, 12.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.800, 14.000), stdev = 2.387
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28145.672 ops/s
[info] # Warmup Iteration   2: 181102.343 ops/s
[info] # Warmup Iteration   3: 203635.121 ops/s
[info] Iteration   1: 222052.340 ops/s
[info]                  ·gc.alloc.rate:                   2768.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              19615.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2911.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20630.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.984 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 217524.809 ops/s
[info]                  ·gc.alloc.rate:                   2691.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              19471.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18927.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 220170.528 ops/s
[info]                  ·gc.alloc.rate:                   2763.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              19753.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2655.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18981.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 221339.218 ops/s
[info]                  ·gc.alloc.rate:                   2786.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              19806.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19091.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 221843.727 ops/s
[info]                  ·gc.alloc.rate:                   2788.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              19776.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19174.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   220586.124 ±(99.9%) 7163.355 ops/s [Average]
[info]   (min, avg, max) = (217524.809, 220586.124, 222052.340), stdev = 1860.301
[info]   CI (99.9%): [213422.769, 227749.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2759.849 ±(99.9%) 152.310 MB/sec [Average]
[info]   (min, avg, max) = (2691.792, 2759.849, 2788.345), stdev = 39.554
[info]   CI (99.9%): [2607.539, 2912.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19684.799 ±(99.9%) 538.641 B/op [Average]
[info]   (min, avg, max) = (19471.862, 19684.799, 19806.891), stdev = 139.883
[info]   CI (99.9%): [19146.158, 20223.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2714.734 ±(99.9%) 443.172 MB/sec [Average]
[info]   (min, avg, max) = (2616.482, 2714.734, 2911.955), stdev = 115.090
[info]   CI (99.9%): [2271.563, 3157.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19360.977 ±(99.9%) 2756.919 B/op [Average]
[info]   (min, avg, max) = (18927.086, 19360.977, 20630.163), stdev = 715.963
[info]   CI (99.9%): [16604.058, 22117.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.908 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.142, 0.562), stdev = 0.236
[info]   CI (99.9%): [≈ 0, 1.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.005 ±(99.9%) 6.430 B/op [Average]
[info]   (min, avg, max) = (0.148, 1.005, 3.984), stdev = 1.670
[info]   CI (99.9%): [≈ 0, 7.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 14.000), stdev = 1.871
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87733.498 ops/s
[info] # Warmup Iteration   2: 445816.027 ops/s
[info] # Warmup Iteration   3: 409748.419 ops/s
[info] Iteration   1: 425712.776 ops/s
[info]                  ·gc.alloc.rate:                   279.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1194.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.181 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.760 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 422205.163 ops/s
[info]                  ·gc.alloc.rate:                   278.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              1037.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1204.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 427778.214 ops/s
[info]                  ·gc.alloc.rate:      276.162 MB/sec
[info]                  ·gc.alloc.rate.norm: 1016.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 425498.953 ops/s
[info]                  ·gc.alloc.rate:               281.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          1040.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1192.611 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 424676.190 ops/s
[info]                  ·gc.alloc.rate:               283.473 MB/sec
[info]                  ·gc.alloc.rate.norm:          1050.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1194.902 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   425174.259 ±(99.9%) 7758.740 ops/s [Average]
[info]   (min, avg, max) = (422205.163, 425174.259, 427778.214), stdev = 2014.920
[info]   CI (99.9%): [417415.519, 432932.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   279.770 ±(99.9%) 10.778 MB/sec [Average]
[info]   (min, avg, max) = (276.162, 279.770, 283.473), stdev = 2.799
[info]   CI (99.9%): [268.992, 290.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1035.506 ±(99.9%) 48.743 B/op [Average]
[info]   (min, avg, max) = (1016.001, 1035.506, 1050.377), stdev = 12.658
[info]   CI (99.9%): [986.763, 1084.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   258.247 ±(99.9%) 555.898 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 258.247, 323.232), stdev = 144.365
[info]   CI (99.9%): [≈ 0, 814.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   957.269 ±(99.9%) 2060.670 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 957.269, 1204.398), stdev = 535.149
[info]   CI (99.9%): [≈ 0, 3017.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.638 ±(99.9%) 5.474 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.638, 3.181), stdev = 1.422
[info]   CI (99.9%): [≈ 0, 6.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.360 ±(99.9%) 20.235 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.360, 11.760), stdev = 5.255
[info]   CI (99.9%): [≈ 0, 22.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 5.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:18:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 670041.908 ops/s
[info] # Warmup Iteration   2: 1249737.752 ops/s
[info] # Warmup Iteration   3: 1321811.583 ops/s
[info] Iteration   1: 1321071.639 ops/s
[info]                  ·gc.alloc.rate:                   261.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1327043.003 ops/s
[info]                  ·gc.alloc.rate:      256.355 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1322334.052 ops/s
[info]                  ·gc.alloc.rate:               263.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 390.092 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1321708.180 ops/s
[info]                  ·gc.alloc.rate:               265.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          316.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 390.268 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1283251.421 ops/s
[info]                  ·gc.alloc.rate:                   258.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              316.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1315081.659 ±(99.9%) 69114.116 ops/s [Average]
[info]   (min, avg, max) = (1283251.421, 1315081.659, 1327043.003), stdev = 17948.716
[info]   CI (99.9%): [1245967.543, 1384195.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   261.092 ±(99.9%) 14.843 MB/sec [Average]
[info]   (min, avg, max) = (256.355, 261.092, 265.860), stdev = 3.855
[info]   CI (99.9%): [246.249, 275.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   312.431 ±(99.9%) 19.808 B/op [Average]
[info]   (min, avg, max) = (304.000, 312.431, 316.537), stdev = 5.144
[info]   CI (99.9%): [292.623, 332.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   247.939 ±(99.9%) 547.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.939, 328.182), stdev = 142.081
[info]   CI (99.9%): [≈ 0, 795.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   297.497 ±(99.9%) 657.822 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 297.497, 402.377), stdev = 170.834
[info]   CI (99.9%): [≈ 0, 955.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.074), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2776.863 ops/s
[info] # Warmup Iteration   2: 85026.996 ops/s
[info] # Warmup Iteration   3: 106225.338 ops/s
[info] Iteration   1: 126674.790 ops/s
[info]                  ·gc.alloc.rate:                   4145.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              51494.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3947.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49036.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.104 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 124835.978 ops/s
[info]                  ·gc.alloc.rate:                   4118.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              51911.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4010.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50539.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.787 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 123817.931 ops/s
[info]                  ·gc.alloc.rate:                   4097.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              52061.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3714.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47200.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.059 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 124615.950 ops/s
[info]                  ·gc.alloc.rate:                   4136.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              52232.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4072.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51424.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.052 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 124311.218 ops/s
[info]                  ·gc.alloc.rate:                   4128.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              52244.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4082.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51657.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   124851.174 ±(99.9%) 4191.847 ops/s [Average]
[info]   (min, avg, max) = (123817.931, 124851.174, 126674.790), stdev = 1088.609
[info]   CI (99.9%): [120659.327, 129043.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4125.269 ±(99.9%) 71.154 MB/sec [Average]
[info]   (min, avg, max) = (4097.186, 4125.269, 4145.307), stdev = 18.479
[info]   CI (99.9%): [4054.114, 4196.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51988.847 ±(99.9%) 1188.280 B/op [Average]
[info]   (min, avg, max) = (51494.099, 51988.847, 52244.263), stdev = 308.593
[info]   CI (99.9%): [50800.566, 53177.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3965.333 ±(99.9%) 578.458 MB/sec [Average]
[info]   (min, avg, max) = (3714.631, 3965.333, 4082.020), stdev = 150.224
[info]   CI (99.9%): [3386.875, 4543.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49971.602 ±(99.9%) 7159.551 B/op [Average]
[info]   (min, avg, max) = (47200.654, 49971.602, 51657.522), stdev = 1859.313
[info]   CI (99.9%): [42812.051, 57131.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.337 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.100, 0.250), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.253 ±(99.9%) 4.174 B/op [Average]
[info]   (min, avg, max) = (0.264, 1.253, 3.104), stdev = 1.084
[info]   CI (99.9%): [≈ 0, 5.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   59.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 12.000), stdev = 0.447
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 16.200, 18.000), stdev = 1.789
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54446.093 ops/s
[info] # Warmup Iteration   2: 333203.577 ops/s
[info] # Warmup Iteration   3: 339890.690 ops/s
[info] Iteration   1: 340604.173 ops/s
[info]                  ·gc.alloc.rate:                   1875.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              8662.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9036.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 342869.683 ops/s
[info]                  ·gc.alloc.rate:                   1853.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              8505.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7538.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.415 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 340069.249 ops/s
[info]                  ·gc.alloc.rate:                   1853.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              8579.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9202.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 341587.157 ops/s
[info]                  ·gc.alloc.rate:                   1875.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              8641.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7694.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 339968.739 ops/s
[info]                  ·gc.alloc.rate:                   1867.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              8647.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1679.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7774.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   341019.800 ±(99.9%) 4686.482 ops/s [Average]
[info]   (min, avg, max) = (339968.739, 341019.800, 342869.683), stdev = 1217.064
[info]   CI (99.9%): [336333.318, 345706.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1865.312 ±(99.9%) 42.314 MB/sec [Average]
[info]   (min, avg, max) = (1853.719, 1865.312, 1875.866), stdev = 10.989
[info]   CI (99.9%): [1822.998, 1907.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8607.302 ±(99.9%) 251.646 B/op [Average]
[info]   (min, avg, max) = (8505.142, 8607.302, 8662.796), stdev = 65.352
[info]   CI (99.9%): [8355.656, 8858.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1787.450 ±(99.9%) 653.179 MB/sec [Average]
[info]   (min, avg, max) = (1643.116, 1787.450, 1988.499), stdev = 169.629
[info]   CI (99.9%): [1134.271, 2440.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8249.319 ±(99.9%) 3084.326 B/op [Average]
[info]   (min, avg, max) = (7538.862, 8249.319, 9202.768), stdev = 800.990
[info]   CI (99.9%): [5164.993, 11333.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.483 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.309), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.399 ±(99.9%) 2.212 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.399, 1.415), stdev = 0.575
[info]   CI (99.9%): [≈ 0, 2.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.483
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 693625.063 ops/s
[info] # Warmup Iteration   2: 1894237.784 ops/s
[info] # Warmup Iteration   3: 2258045.049 ops/s
[info] Iteration   1: 2310733.645 ops/s
[info]                  ·gc.alloc.rate:                   640.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2298606.139 ops/s
[info]                  ·gc.alloc.rate:               634.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          434.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 440.617 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2293951.860 ops/s
[info]                  ·gc.alloc.rate:               638.967 MB/sec
[info]                  ·gc.alloc.rate.norm:          438.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 441.966 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2273807.096 ops/s
[info]                  ·gc.alloc.rate:                   660.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              456.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2306272.491 ops/s
[info]                  ·gc.alloc.rate:                   640.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   2296674.246 ±(99.9%) 55261.878 ops/s [Average]
[info]   (min, avg, max) = (2273807.096, 2296674.246, 2310733.645), stdev = 14351.334
[info]   CI (99.9%): [2241412.369, 2351936.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   642.915 ±(99.9%) 38.378 MB/sec [Average]
[info]   (min, avg, max) = (634.730, 642.915, 660.265), stdev = 9.967
[info]   CI (99.9%): [604.537, 681.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   440.546 ±(99.9%) 35.560 B/op [Average]
[info]   (min, avg, max) = (434.520, 440.546, 456.888), stdev = 9.235
[info]   CI (99.9%): [404.986, 476.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   645.610 ±(99.9%) 10.010 MB/sec [Average]
[info]   (min, avg, max) = (643.572, 645.610, 649.517), stdev = 2.600
[info]   CI (99.9%): [635.600, 655.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   442.366 ±(99.9%) 13.517 B/op [Average]
[info]   (min, avg, max) = (438.292, 442.366, 447.725), stdev = 3.510
[info]   CI (99.9%): [428.849, 455.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.031), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 984624.614 ops/s
[info] # Warmup Iteration   2: 3058970.026 ops/s
[info] # Warmup Iteration   3: 3492277.193 ops/s
[info] Iteration   1: 3486078.760 ops/s
[info]                  ·gc.alloc.rate:                   974.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     444.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3460782.958 ops/s
[info]                  ·gc.alloc.rate:                   957.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3404900.980 ops/s
[info]                  ·gc.alloc.rate:                   937.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3272532.967 ops/s
[info]                  ·gc.alloc.rate:                   960.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              462.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3511476.518 ops/s
[info]                  ·gc.alloc.rate:                   975.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   3427154.436 ±(99.9%) 365893.153 ops/s [Average]
[info]   (min, avg, max) = (3272532.967, 3427154.436, 3511476.518), stdev = 95021.290
[info]   CI (99.9%): [3061261.284, 3793047.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   960.963 ±(99.9%) 58.785 MB/sec [Average]
[info]   (min, avg, max) = (937.527, 960.963, 975.024), stdev = 15.266
[info]   CI (99.9%): [902.178, 1019.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   441.435 ±(99.9%) 45.262 B/op [Average]
[info]   (min, avg, max) = (433.289, 441.435, 462.054), stdev = 11.754
[info]   CI (99.9%): [396.172, 486.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.684 ±(99.9%) 561.395 MB/sec [Average]
[info]   (min, avg, max) = (658.913, 919.684, 987.442), stdev = 145.792
[info]   CI (99.9%): [358.289, 1481.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   422.361 ±(99.9%) 258.630 B/op [Average]
[info]   (min, avg, max) = (304.524, 422.361, 473.830), stdev = 67.165
[info]   CI (99.9%): [163.731, 680.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 5.192 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.825, 3.136), stdev = 1.348
[info]   CI (99.9%): [≈ 0, 6.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.385 ±(99.9%) 2.401 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.385, 1.449), stdev = 0.624
[info]   CI (99.9%): [≈ 0, 2.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:17:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1724601.511 ops/s
[info] # Warmup Iteration   2: 2738922.130 ops/s
[info] # Warmup Iteration   3: 3353976.622 ops/s
[info] Iteration   1: 3273434.921 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3393550.645 ops/s
[info]                  ·gc.alloc.rate:      1.729 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.802 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3398221.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3353981.343 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3365549.404 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3356947.515 ±(99.9%) 193496.824 ops/s [Average]
[info]   (min, avg, max) = (3273434.921, 3356947.515, 3398221.261), stdev = 50250.511
[info]   CI (99.9%): [3163450.691, 3550444.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.346 ±(99.9%) 2.977 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.346, 1.729), stdev = 0.773
[info]   CI (99.9%): [≈ 0, 3.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.161 ±(99.9%) 1.381 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.161, 0.802), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4613.866 ops/s
[info] # Warmup Iteration   2: 32046.841 ops/s
[info] # Warmup Iteration   3: 52725.188 ops/s
[info] Iteration   1: 53917.350 ops/s
[info]                  ·gc.alloc.rate:                   2286.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              66726.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56641.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.276 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 56210.014 ops/s
[info]                  ·gc.alloc.rate:                   2127.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              59573.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2255.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63167.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.657 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 53732.803 ops/s
[info]                  ·gc.alloc.rate:                   2232.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              65378.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2256.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66099.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 233.041 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 56524.942 ops/s
[info]                  ·gc.alloc.rate:                   1987.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              55325.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54048.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.580 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 56738.952 ops/s
[info]                  ·gc.alloc.rate:                   1991.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              55218.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54492.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.155 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   55424.812 ±(99.9%) 5675.334 ops/s [Average]
[info]   (min, avg, max) = (53732.803, 55424.812, 56738.952), stdev = 1473.866
[info]   CI (99.9%): [49749.478, 61100.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2124.986 ±(99.9%) 524.752 MB/sec [Average]
[info]   (min, avg, max) = (1987.349, 2124.986, 2286.143), stdev = 136.276
[info]   CI (99.9%): [1600.234, 2649.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   60444.443 ±(99.9%) 20921.884 B/op [Average]
[info]   (min, avg, max) = (55218.159, 60444.443, 66726.396), stdev = 5433.347
[info]   CI (99.9%): [39522.559, 81366.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2072.069 ±(99.9%) 649.316 MB/sec [Average]
[info]   (min, avg, max) = (1940.617, 2072.069, 2256.989), stdev = 168.625
[info]   CI (99.9%): [1422.753, 2721.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58889.955 ±(99.9%) 20922.884 B/op [Average]
[info]   (min, avg, max) = (54048.971, 58889.955, 66099.431), stdev = 5433.606
[info]   CI (99.9%): [37967.072, 79812.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.577 ±(99.9%) 12.604 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.577, 7.957), stdev = 3.273
[info]   CI (99.9%): [≈ 0, 16.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   103.542 ±(99.9%) 370.786 B/op [Average]
[info]   (min, avg, max) = (1.155, 103.542, 233.041), stdev = 96.292
[info]   CI (99.9%): [≈ 0, 474.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.000, 23.000), stdev = 5.788
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52718.654 ops/s
[info] # Warmup Iteration   2: 239728.290 ops/s
[info] # Warmup Iteration   3: 270699.384 ops/s
[info] Iteration   1: 314304.590 ops/s
[info]                  ·gc.alloc.rate:                   3655.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              18303.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3573.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17893.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.889 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.474 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 295799.808 ops/s
[info]                  ·gc.alloc.rate:                   3162.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              16824.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2962.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15761.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.224 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.511 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 297551.914 ops/s
[info]                  ·gc.alloc.rate:                   3195.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              16895.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3334.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17629.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 299109.136 ops/s
[info]                  ·gc.alloc.rate:                   3231.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              16994.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3031.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15943.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 301864.960 ops/s
[info]                  ·gc.alloc.rate:                   3259.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              16993.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3048.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15890.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   301726.082 ±(99.9%) 28402.966 ops/s [Average]
[info]   (min, avg, max) = (295799.808, 301726.082, 314304.590), stdev = 7376.160
[info]   CI (99.9%): [273323.115, 330129.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3300.930 ±(99.9%) 775.420 MB/sec [Average]
[info]   (min, avg, max) = (3162.838, 3300.930, 3655.176), stdev = 201.374
[info]   CI (99.9%): [2525.511, 4076.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17202.179 ±(99.9%) 2386.254 B/op [Average]
[info]   (min, avg, max) = (16824.646, 17202.179, 18303.386), stdev = 619.703
[info]   CI (99.9%): [14815.924, 19588.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3190.047 ±(99.9%) 990.400 MB/sec [Average]
[info]   (min, avg, max) = (2962.915, 3190.047, 3573.339), stdev = 257.204
[info]   CI (99.9%): [2199.647, 4180.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16623.460 ±(99.9%) 4024.297 B/op [Average]
[info]   (min, avg, max) = (15761.158, 16623.460, 17893.583), stdev = 1045.097
[info]   CI (99.9%): [12599.164, 20647.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.052 ±(99.9%) 6.414 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.052, 3.889), stdev = 1.666
[info]   CI (99.9%): [≈ 0, 7.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.350 ±(99.9%) 32.142 B/op [Average]
[info]   (min, avg, max) = (0.109, 5.350, 19.474), stdev = 8.347
[info]   CI (99.9%): [≈ 0, 37.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 11.000), stdev = 0.894
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.200, 19.000), stdev = 3.347
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72786.435 ops/s
[info] # Warmup Iteration   2: 516241.636 ops/s
[info] # Warmup Iteration   3: 588557.937 ops/s
[info] Iteration   1: 705953.866 ops/s
[info]                  ·gc.alloc.rate:                   1910.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              4258.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3641.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.491 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 708431.112 ops/s
[info]                  ·gc.alloc.rate:                   1924.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              4275.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4377.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 688669.083 ops/s
[info]                  ·gc.alloc.rate:                   1856.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              4242.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3776.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 685872.292 ops/s
[info]                  ·gc.alloc.rate:                   1889.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              4335.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4585.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 681928.382 ops/s
[info]                  ·gc.alloc.rate:                   1865.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              4304.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3868.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   694170.947 ±(99.9%) 46813.762 ops/s [Average]
[info]   (min, avg, max) = (681928.382, 694170.947, 708431.112), stdev = 12157.385
[info]   CI (99.9%): [647357.185, 740984.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1889.204 ±(99.9%) 111.281 MB/sec [Average]
[info]   (min, avg, max) = (1856.506, 1889.204, 1924.717), stdev = 28.899
[info]   CI (99.9%): [1777.922, 2000.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4283.286 ±(99.9%) 143.547 B/op [Average]
[info]   (min, avg, max) = (4242.258, 4283.286, 4335.457), stdev = 37.279
[info]   CI (99.9%): [4139.738, 4426.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1786.292 ±(99.9%) 699.769 MB/sec [Average]
[info]   (min, avg, max) = (1633.708, 1786.292, 1998.154), stdev = 181.728
[info]   CI (99.9%): [1086.522, 2486.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4049.987 ±(99.9%) 1574.124 B/op [Average]
[info]   (min, avg, max) = (3641.740, 4049.987, 4585.286), stdev = 408.795
[info]   CI (99.9%): [2475.863, 5624.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.273 ±(99.9%) 1.839 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.273, 1.118), stdev = 0.477
[info]   CI (99.9%): [≈ 0, 2.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.609 ±(99.9%) 4.097 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.609, 2.491), stdev = 1.064
[info]   CI (99.9%): [≈ 0, 4.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 15.000), stdev = 3.050
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1206566.209 ops/s
[info] # Warmup Iteration   2: 2710343.180 ops/s
[info] # Warmup Iteration   3: 2896733.204 ops/s
[info] Iteration   1: 2811358.151 ops/s
[info]                  ·gc.alloc.rate:               1000.912 MB/sec
[info]                  ·gc.alloc.rate.norm:          560.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 552.662 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 2837228.667 ops/s
[info]                  ·gc.alloc.rate:                   1014.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     548.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 2939329.025 ops/s
[info]                  ·gc.alloc.rate:                   1037.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     529.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.974 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2886173.743 ops/s
[info]                  ·gc.alloc.rate:                   1033.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              563.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     713.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2945067.212 ops/s
[info]                  ·gc.alloc.rate:                   1042.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     524.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2883831.360 ±(99.9%) 229908.630 ops/s [Average]
[info]   (min, avg, max) = (2811358.151, 2883831.360, 2945067.212), stdev = 59706.541
[info]   CI (99.9%): [2653922.730, 3113739.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1025.910 ±(99.9%) 67.476 MB/sec [Average]
[info]   (min, avg, max) = (1000.912, 1025.910, 1042.704), stdev = 17.523
[info]   CI (99.9%): [958.434, 1093.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   559.812 ±(99.9%) 13.108 B/op [Average]
[info]   (min, avg, max) = (555.561, 559.812, 563.159), stdev = 3.404
[info]   CI (99.9%): [546.704, 572.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1051.262 ±(99.9%) 556.388 MB/sec [Average]
[info]   (min, avg, max) = (982.023, 1051.262, 1309.691), stdev = 144.492
[info]   CI (99.9%): [494.874, 1607.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   573.761 ±(99.9%) 304.846 B/op [Average]
[info]   (min, avg, max) = (524.691, 573.761, 713.753), stdev = 79.168
[info]   CI (99.9%): [268.914, 878.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.796 ±(99.9%) 6.236 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.796, 3.688), stdev = 1.619
[info]   CI (99.9%): [≈ 0, 7.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.427 ±(99.9%) 3.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.427, 1.974), stdev = 0.867
[info]   CI (99.9%): [≈ 0, 3.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:16:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3915.561 ops/s
[info] # Warmup Iteration   2: 89406.713 ops/s
[info] # Warmup Iteration   3: 113327.506 ops/s
[info] Iteration   1: 134544.507 ops/s
[info]                  ·gc.alloc.rate:                   4334.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              50707.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4000.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46793.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.643 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 135611.912 ops/s
[info]                  ·gc.alloc.rate:                   4392.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              50975.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4371.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50738.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.208 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 132070.504 ops/s
[info]                  ·gc.alloc.rate:                   4294.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              51175.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4064.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48432.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.744 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 136183.790 ops/s
[info]                  ·gc.alloc.rate:                   4441.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              51325.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4416.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51035.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 134638.080 ops/s
[info]                  ·gc.alloc.rate:                   4381.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              51194.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47746.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.487 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   134609.759 ±(99.9%) 6068.510 ops/s [Average]
[info]   (min, avg, max) = (132070.504, 134609.759, 136183.790), stdev = 1575.973
[info]   CI (99.9%): [128541.249, 140678.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4368.904 ±(99.9%) 216.140 MB/sec [Average]
[info]   (min, avg, max) = (4294.697, 4368.904, 4441.213), stdev = 56.131
[info]   CI (99.9%): [4152.764, 4585.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51075.496 ±(99.9%) 927.668 B/op [Average]
[info]   (min, avg, max) = (50707.200, 51075.496, 51325.126), stdev = 240.912
[info]   CI (99.9%): [50147.828, 52003.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4187.871 ±(99.9%) 737.449 MB/sec [Average]
[info]   (min, avg, max) = (4000.297, 4187.871, 4416.177), stdev = 191.513
[info]   CI (99.9%): [3450.422, 4925.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48949.657 ±(99.9%) 7181.706 B/op [Average]
[info]   (min, avg, max) = (46793.964, 48949.657, 51035.795), stdev = 1865.066
[info]   CI (99.9%): [41767.951, 56131.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.365 ±(99.9%) 2.649 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.365, 1.594), stdev = 0.688
[info]   CI (99.9%): [≈ 0, 3.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.265 ±(99.9%) 30.982 B/op [Average]
[info]   (min, avg, max) = (0.241, 4.265, 18.643), stdev = 8.046
[info]   CI (99.9%): [≈ 0, 35.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   62.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.400, 13.000), stdev = 0.548
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   92.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 18.400, 19.000), stdev = 0.548
[info]   CI (99.9%): [92.000, 92.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52802.253 ops/s
[info] # Warmup Iteration   2: 287481.331 ops/s
[info] # Warmup Iteration   3: 296230.158 ops/s
[info] Iteration   1: 322416.483 ops/s
[info]                  ·gc.alloc.rate:                   2546.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              12425.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11053.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.896 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 320300.908 ops/s
[info]                  ·gc.alloc.rate:                   2530.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              12432.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2599.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12767.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.637 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 316645.313 ops/s
[info]                  ·gc.alloc.rate:                   2498.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              12412.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11447.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 316634.759 ops/s
[info]                  ·gc.alloc.rate:                   2538.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              12617.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2668.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13261.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 323380.442 ops/s
[info]                  ·gc.alloc.rate:               2572.277 MB/sec
[info]                  ·gc.alloc.rate.norm:          12513.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2357.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11466.181 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   319875.581 ±(99.9%) 12155.278 ops/s [Average]
[info]   (min, avg, max) = (316634.759, 319875.581, 323380.442), stdev = 3156.687
[info]   CI (99.9%): [307720.303, 332030.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2537.248 ±(99.9%) 103.101 MB/sec [Average]
[info]   (min, avg, max) = (2498.269, 2537.248, 2572.277), stdev = 26.775
[info]   CI (99.9%): [2434.148, 2640.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12480.220 ±(99.9%) 332.401 B/op [Average]
[info]   (min, avg, max) = (12412.300, 12480.220, 12617.509), stdev = 86.323
[info]   CI (99.9%): [12147.819, 12812.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2438.673 ±(99.9%) 703.150 MB/sec [Average]
[info]   (min, avg, max) = (2264.902, 2438.673, 2668.260), stdev = 182.606
[info]   CI (99.9%): [1735.523, 3141.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11999.159 ±(99.9%) 3686.146 B/op [Average]
[info]   (min, avg, max) = (11053.320, 11999.159, 13261.211), stdev = 957.280
[info]   CI (99.9%): [8313.013, 15685.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 1.823), stdev = 0.780
[info]   CI (99.9%): [≈ 0, 3.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.189 ±(99.9%) 14.656 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.189, 8.896), stdev = 3.806
[info]   CI (99.9%): [≈ 0, 16.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 12.000), stdev = 1.140
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 526690.545 ops/s
[info] # Warmup Iteration   2: 1842081.189 ops/s
[info] # Warmup Iteration   3: 2052994.369 ops/s
[info] Iteration   1: 2015525.236 ops/s
[info]                  ·gc.alloc.rate:                   738.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1976110.789 ops/s
[info]                  ·gc.alloc.rate:                   695.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     520.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1966754.626 ops/s
[info]                  ·gc.alloc.rate:                   691.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2004686.276 ops/s
[info]                  ·gc.alloc.rate:                   700.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.690 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2004607.993 ops/s
[info]                  ·gc.alloc.rate:                   699.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     513.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1993536.984 ±(99.9%) 80572.462 ops/s [Average]
[info]   (min, avg, max) = (1966754.626, 1993536.984, 2015525.236), stdev = 20924.413
[info]   CI (99.9%): [1912964.522, 2074109.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   705.186 ±(99.9%) 72.711 MB/sec [Average]
[info]   (min, avg, max) = (691.451, 705.186, 738.324), stdev = 18.883
[info]   CI (99.9%): [632.475, 777.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   556.602 ±(99.9%) 43.123 B/op [Average]
[info]   (min, avg, max) = (549.365, 556.602, 576.302), stdev = 11.199
[info]   CI (99.9%): [513.479, 599.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   719.038 ±(99.9%) 558.108 MB/sec [Average]
[info]   (min, avg, max) = (653.225, 719.038, 978.310), stdev = 144.939
[info]   CI (99.9%): [160.931, 1277.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   567.053 ±(99.9%) 423.429 B/op [Average]
[info]   (min, avg, max) = (513.608, 567.053, 763.624), stdev = 109.963
[info]   CI (99.9%): [143.624, 990.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 5.665 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.883, 3.428), stdev = 1.471
[info]   CI (99.9%): [≈ 0, 6.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.693 ±(99.9%) 4.446 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.693, 2.690), stdev = 1.155
[info]   CI (99.9%): [≈ 0, 5.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 2.864
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1157489.935 ops/s
[info] # Warmup Iteration   2: 2613930.840 ops/s
[info] # Warmup Iteration   3: 2806904.008 ops/s
[info] Iteration   1: 2695850.068 ops/s
[info]                  ·gc.alloc.rate:                   992.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              579.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     576.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2795530.889 ops/s
[info]                  ·gc.alloc.rate:               990.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          557.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 556.928 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 2810812.412 ops/s
[info]                  ·gc.alloc.rate:                   991.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2808050.617 ops/s
[info]                  ·gc.alloc.rate:                   979.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     551.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2818100.634 ops/s
[info]                  ·gc.alloc.rate:                   977.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              545.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2785668.924 ±(99.9%) 195869.090 ops/s [Average]
[info]   (min, avg, max) = (2695850.068, 2785668.924, 2818100.634), stdev = 50866.581
[info]   CI (99.9%): [2589799.834, 2981538.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   986.393 ±(99.9%) 28.095 MB/sec [Average]
[info]   (min, avg, max) = (977.429, 986.393, 992.892), stdev = 7.296
[info]   CI (99.9%): [958.299, 1014.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   557.389 ±(99.9%) 51.112 B/op [Average]
[info]   (min, avg, max) = (545.795, 557.389, 579.608), stdev = 13.274
[info]   CI (99.9%): [506.277, 608.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   921.304 ±(99.9%) 574.904 MB/sec [Average]
[info]   (min, avg, max) = (654.249, 921.304, 989.875), stdev = 149.301
[info]   CI (99.9%): [346.399, 1496.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   521.019 ±(99.9%) 337.283 B/op [Average]
[info]   (min, avg, max) = (365.332, 521.019, 576.770), stdev = 87.591
[info]   CI (99.9%): [183.736, 858.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.547 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.851), stdev = 1.700
[info]   CI (99.9%): [≈ 0, 7.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.455 ±(99.9%) 3.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.455, 2.156), stdev = 0.952
[info]   CI (99.9%): [≈ 0, 4.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.847
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1639625.613 ops/s
[info] # Warmup Iteration   2: 2733734.980 ops/s
[info] # Warmup Iteration   3: 2941450.254 ops/s
[info] Iteration   1: 2940256.175 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2903142.327 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2906493.345 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2939654.018 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2941899.476 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2926289.068 ±(99.9%) 75678.357 ops/s [Average]
[info]   (min, avg, max) = (2903142.327, 2926289.068, 2941899.476), stdev = 19653.429
[info]   CI (99.9%): [2850610.711, 3001967.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:15:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49026.629 ops/s
[info] # Warmup Iteration   2: 488221.780 ops/s
[info] # Warmup Iteration   3: 698918.843 ops/s
[info] Iteration   1: 749690.013 ops/s
[info]                  ·gc.alloc.rate:                   4543.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              9536.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4658.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9777.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 742402.809 ops/s
[info]                  ·gc.alloc.rate:                   4539.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              9622.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4383.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9292.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.221 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 752621.105 ops/s
[info]                  ·gc.alloc.rate:                   4582.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              9582.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4411.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9224.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 756200.293 ops/s
[info]                  ·gc.alloc.rate:                   4624.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              9622.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4420.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9199.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 755226.248 ops/s
[info]                  ·gc.alloc.rate:                   4618.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              9624.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4426.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9222.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   751228.094 ±(99.9%) 21344.158 ops/s [Average]
[info]   (min, avg, max) = (742402.809, 751228.094, 756200.293), stdev = 5543.010
[info]   CI (99.9%): [729883.936, 772572.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   4581.662 ±(99.9%) 154.568 MB/sec [Average]
[info]   (min, avg, max) = (4539.377, 4581.662, 4624.109), stdev = 40.141
[info]   CI (99.9%): [4427.093, 4736.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9597.762 ±(99.9%) 148.832 B/op [Average]
[info]   (min, avg, max) = (9536.220, 9597.762, 9624.083), stdev = 38.651
[info]   CI (99.9%): [9448.930, 9746.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   4459.940 ±(99.9%) 431.338 MB/sec [Average]
[info]   (min, avg, max) = (4383.636, 4459.940, 4658.173), stdev = 112.017
[info]   CI (99.9%): [4028.602, 4891.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9343.209 ±(99.9%) 943.511 B/op [Average]
[info]   (min, avg, max) = (9199.178, 9343.209, 9777.042), stdev = 245.027
[info]   CI (99.9%): [8399.698, 10286.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 0.316 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.175, 0.261), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   66.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.200, 14.000), stdev = 0.447
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   94.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 18.800, 20.000), stdev = 0.837
[info]   CI (99.9%): [94.000, 94.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3057.839 ops/s
[info] # Warmup Iteration   2: 17446.445 ops/s
[info] # Warmup Iteration   3: 28766.947 ops/s
[info] Iteration   1: 29426.251 ops/s
[info]                  ·gc.alloc.rate:                   1810.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              96796.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86971.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.110 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 28768.758 ops/s
[info]                  ·gc.alloc.rate:                   1898.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              103861.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106741.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 198.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 28212.072 ops/s
[info]                  ·gc.alloc.rate:                   1795.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              100138.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108369.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 253.759 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 29218.765 ops/s
[info]                  ·gc.alloc.rate:                   1756.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              94576.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87480.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.607 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 28977.977 ops/s
[info]                  ·gc.alloc.rate:                   1735.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              94239.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88840.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   28920.764 ±(99.9%) 1798.858 ops/s [Average]
[info]   (min, avg, max) = (28212.072, 28920.764, 29426.251), stdev = 467.158
[info]   CI (99.9%): [27121.906, 30719.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1799.107 ±(99.9%) 242.996 MB/sec [Average]
[info]   (min, avg, max) = (1735.230, 1799.107, 1898.587), stdev = 63.105
[info]   CI (99.9%): [1556.111, 2042.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   97922.362 ±(99.9%) 15665.406 B/op [Average]
[info]   (min, avg, max) = (94239.677, 97922.362, 103861.158), stdev = 4068.256
[info]   CI (99.9%): [82256.956, 113587.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1756.163 ±(99.9%) 670.922 MB/sec [Average]
[info]   (min, avg, max) = (1624.704, 1756.163, 1951.243), stdev = 174.236
[info]   CI (99.9%): [1085.241, 2427.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   95680.698 ±(99.9%) 41883.619 B/op [Average]
[info]   (min, avg, max) = (86971.594, 95680.698, 108369.577), stdev = 10877.043
[info]   CI (99.9%): [53797.079, 137564.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.021 ±(99.9%) 7.746 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 2.021, 4.549), stdev = 2.012
[info]   CI (99.9%): [≈ 0, 9.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   111.104 ±(99.9%) 430.219 B/op [Average]
[info]   (min, avg, max) = (5.607, 111.104, 253.759), stdev = 111.726
[info]   CI (99.9%): [≈ 0, 541.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.400, 21.000), stdev = 6.189
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.761 ops/s
[info] # Warmup Iteration   2: 63710.841 ops/s
[info] # Warmup Iteration   3: 97146.782 ops/s
[info] Iteration   1: 98309.183 ops/s
[info]                  ·gc.alloc.rate:                   966.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              15466.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          943.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15102.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.572 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 94907.472 ops/s
[info]                  ·gc.alloc.rate:                   909.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              15072.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          944.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15653.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 98450.209 ops/s
[info]                  ·gc.alloc.rate:                   797.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              12752.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          943.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15080.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.721 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 91721.910 ops/s
[info]                  ·gc.alloc.rate:                   906.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              15547.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          939.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16116.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.409 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 100986.512 ops/s
[info]                  ·gc.alloc.rate:                   808.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              12596.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          625.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9748.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.298 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   96875.057 ±(99.9%) 13866.088 ops/s [Average]
[info]   (min, avg, max) = (91721.910, 96875.057, 100986.512), stdev = 3600.979
[info]   CI (99.9%): [83008.970, 110741.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   877.483 ±(99.9%) 277.698 MB/sec [Average]
[info]   (min, avg, max) = (797.863, 877.483, 966.144), stdev = 72.117
[info]   CI (99.9%): [599.784, 1155.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14287.224 ±(99.9%) 5714.490 B/op [Average]
[info]   (min, avg, max) = (12596.722, 14287.224, 15547.574), stdev = 1484.035
[info]   CI (99.9%): [8572.734, 20001.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   879.140 ±(99.9%) 545.981 MB/sec [Average]
[info]   (min, avg, max) = (625.522, 879.140, 944.063), stdev = 141.790
[info]   CI (99.9%): [333.159, 1425.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14340.149 ±(99.9%) 10021.111 B/op [Average]
[info]   (min, avg, max) = (9748.546, 14340.149, 16116.288), stdev = 2602.451
[info]   CI (99.9%): [4319.038, 24361.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   3.515 ±(99.9%) 9.196 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 3.515, 6.657), stdev = 2.388
[info]   CI (99.9%): [≈ 0, 12.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   57.318 ±(99.9%) 146.524 B/op [Average]
[info]   (min, avg, max) = (1.298, 57.318, 106.572), stdev = 38.052
[info]   CI (99.9%): [≈ 0, 203.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 11.800, 18.000), stdev = 6.380
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16708.947 ops/s
[info] # Warmup Iteration   2: 49800.290 ops/s
[info] # Warmup Iteration   3: 63653.271 ops/s
[info] Iteration   1: 73329.791 ops/s
[info]                  ·gc.alloc.rate:                   1607.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              34487.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34497.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.498 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 78938.869 ops/s
[info]                  ·gc.alloc.rate:               1432.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          28549.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1266.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25235.847 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     29.000 ms
[info] Iteration   3: 73346.814 ops/s
[info]                  ·gc.alloc.rate:               1406.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          30179.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1528.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32806.417 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     48.000 ms
[info] Iteration   4: 78424.880 ops/s
[info]                  ·gc.alloc.rate:                   1385.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              27800.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1482.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29745.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.446 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   5: 72080.263 ops/s
[info]                  ·gc.alloc.rate:                   1338.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              29221.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1201.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26224.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 158.227 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   75224.123 ±(99.9%) 12334.212 ops/s [Average]
[info]   (min, avg, max) = (72080.263, 75224.123, 78938.869), stdev = 3203.156
[info]   CI (99.9%): [62889.911, 87558.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1434.077 ±(99.9%) 396.643 MB/sec [Average]
[info]   (min, avg, max) = (1338.352, 1434.077, 1607.656), stdev = 103.007
[info]   CI (99.9%): [1037.434, 1830.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   30047.836 ±(99.9%) 10134.733 B/op [Average]
[info]   (min, avg, max) = (27800.354, 30047.836, 34487.874), stdev = 2631.958
[info]   CI (99.9%): [19913.103, 40182.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1417.330 ±(99.9%) 674.152 MB/sec [Average]
[info]   (min, avg, max) = (1201.090, 1417.330, 1608.124), stdev = 175.075
[info]   CI (99.9%): [743.178, 2091.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29702.105 ±(99.9%) 15483.751 B/op [Average]
[info]   (min, avg, max) = (25235.847, 29702.105, 34497.899), stdev = 4021.081
[info]   CI (99.9%): [14218.353, 45185.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.503 ±(99.9%) 12.996 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.503, 7.247), stdev = 3.375
[info]   CI (99.9%): [≈ 0, 16.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   74.034 ±(99.9%) 276.131 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 74.034, 158.227), stdev = 71.710
[info]   CI (99.9%): [≈ 0, 350.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   172.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 34.400, 48.000), stdev = 9.017
[info]   CI (99.9%): [172.000, 172.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37581.109 ops/s
[info] # Warmup Iteration   2: 117019.731 ops/s
[info] # Warmup Iteration   3: 114953.315 ops/s
[info] Iteration   1: 125672.454 ops/s
[info]                  ·gc.alloc.rate:                   1002.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              12559.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1165.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14591.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.966 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 124088.188 ops/s
[info]                  ·gc.alloc.rate:                   1506.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              19099.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1462.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18541.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      19.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 249.342 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 138590.354 ops/s
[info]                  ·gc.alloc.rate:                   839.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              9531.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          875.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9944.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.449 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186.763 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 140068.405 ops/s
[info]                  ·gc.alloc.rate:                   852.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              9575.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          876.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9850.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 139538.429 ops/s
[info]                  ·gc.alloc.rate:                   846.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              9542.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          590.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6656.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   133591.566 ±(99.9%) 30764.754 ops/s [Average]
[info]   (min, avg, max) = (124088.188, 133591.566, 140068.405), stdev = 7989.509
[info]   CI (99.9%): [102826.811, 164356.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1009.439 ±(99.9%) 1101.227 MB/sec [Average]
[info]   (min, avg, max) = (839.509, 1009.439, 1506.325), stdev = 285.985
[info]   CI (99.9%): [≈ 0, 2110.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   12061.760 ±(99.9%) 15959.370 B/op [Average]
[info]   (min, avg, max) = (9531.775, 12061.760, 19099.829), stdev = 4144.598
[info]   CI (99.9%): [≈ 0, 28021.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   994.074 ±(99.9%) 1276.010 MB/sec [Average]
[info]   (min, avg, max) = (590.231, 994.074, 1462.272), stdev = 331.376
[info]   CI (99.9%): [≈ 0, 2270.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11916.853 ±(99.9%) 17943.780 B/op [Average]
[info]   (min, avg, max) = (6656.958, 11916.853, 18541.259), stdev = 4659.943
[info]   CI (99.9%): [≈ 0, 29860.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   9.616 ±(99.9%) 35.119 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 9.616, 19.665), stdev = 9.120
[info]   CI (99.9%): [≈ 0, 44.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   117.130 ±(99.9%) 430.764 B/op [Average]
[info]   (min, avg, max) = (0.468, 117.130, 249.342), stdev = 111.868
[info]   CI (99.9%): [≈ 0, 547.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.400, 25.000), stdev = 9.209
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3481.599 ops/s
[info] # Warmup Iteration   2: 23508.399 ops/s
[info] # Warmup Iteration   3: 46192.027 ops/s
[info] Iteration   1: 47757.520 ops/s
[info]                  ·gc.alloc.rate:                   2185.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              72029.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74564.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.355 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 48530.704 ops/s
[info]                  ·gc.alloc.rate:                   2047.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              66397.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63310.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.376 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 50047.149 ops/s
[info]                  ·gc.alloc.rate:                   2112.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              66433.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61485.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.619 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 49905.682 ops/s
[info]                  ·gc.alloc.rate:                   2100.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              66254.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72645.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.626 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 50368.661 ops/s
[info]                  ·gc.alloc.rate:                   2146.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              67025.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62382.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.650 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   49321.943 ±(99.9%) 4320.523 ops/s [Average]
[info]   (min, avg, max) = (47757.520, 49321.943, 50368.661), stdev = 1122.026
[info]   CI (99.9%): [45001.420, 53642.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2118.697 ±(99.9%) 198.589 MB/sec [Average]
[info]   (min, avg, max) = (2047.840, 2118.697, 2185.889), stdev = 51.573
[info]   CI (99.9%): [1920.108, 2317.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67627.885 ±(99.9%) 9541.645 B/op [Average]
[info]   (min, avg, max) = (66254.259, 67627.885, 72029.027), stdev = 2477.935
[info]   CI (99.9%): [58086.240, 77169.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2094.371 ±(99.9%) 669.378 MB/sec [Average]
[info]   (min, avg, max) = (1952.641, 2094.371, 2303.473), stdev = 173.835
[info]   CI (99.9%): [1424.993, 2763.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66877.704 ±(99.9%) 23921.034 B/op [Average]
[info]   (min, avg, max) = (61485.007, 66877.704, 74564.282), stdev = 6212.216
[info]   CI (99.9%): [42956.670, 90798.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.181 ±(99.9%) 6.028 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.181, 3.312), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 7.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.525 ±(99.9%) 196.534 B/op [Average]
[info]   (min, avg, max) = (0.650, 38.525, 107.376), stdev = 51.039
[info]   CI (99.9%): [≈ 0, 235.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 18.000), stdev = 3.962
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6860.221 ops/s
[info] # Warmup Iteration   2: 22148.535 ops/s
[info] # Warmup Iteration   3: 40962.877 ops/s
[info] Iteration   1: 40369.150 ops/s
[info]                  ·gc.alloc.rate:                   1042.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              40659.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50877.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.642 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 43581.582 ops/s
[info]                  ·gc.alloc.rate:                   790.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              28530.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23311.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 42863.402 ops/s
[info]                  ·gc.alloc.rate:                   695.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              25547.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23651.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.529 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 42989.227 ops/s
[info]                  ·gc.alloc.rate:                   701.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              25675.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23631.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.626 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 42467.009 ops/s
[info]                  ·gc.alloc.rate:                   686.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              25418.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23947.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.801 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   42454.074 ±(99.9%) 4744.380 ops/s [Average]
[info]   (min, avg, max) = (40369.150, 42454.074, 43581.582), stdev = 1232.100
[info]   CI (99.9%): [37709.694, 47198.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   783.238 ±(99.9%) 581.718 MB/sec [Average]
[info]   (min, avg, max) = (686.114, 783.238, 1042.951), stdev = 151.070
[info]   CI (99.9%): [201.520, 1364.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   29166.239 ±(99.9%) 25238.317 B/op [Average]
[info]   (min, avg, max) = (25418.996, 29166.239, 40659.886), stdev = 6554.311
[info]   CI (99.9%): [3927.922, 54404.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   777.322 ±(99.9%) 1135.928 MB/sec [Average]
[info]   (min, avg, max) = (644.145, 777.322, 1305.027), stdev = 294.997
[info]   CI (99.9%): [≈ 0, 1913.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   29083.955 ±(99.9%) 46919.260 B/op [Average]
[info]   (min, avg, max) = (23311.847, 29083.955, 50877.037), stdev = 12184.783
[info]   CI (99.9%): [≈ 0, 76003.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.994 ±(99.9%) 5.168 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.994, 3.352), stdev = 1.342
[info]   CI (99.9%): [≈ 0, 6.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   36.401 ±(99.9%) 185.952 B/op [Average]
[info]   (min, avg, max) = (1.529, 36.401, 121.040), stdev = 48.291
[info]   CI (99.9%): [≈ 0, 222.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.800, 25.000), stdev = 7.085
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9313.958 ops/s
[info] # Warmup Iteration   2: 32717.544 ops/s
[info] # Warmup Iteration   3: 38216.405 ops/s
[info] Iteration   1: 40376.255 ops/s
[info]                  ·gc.alloc.rate:                   1085.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              42319.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50245.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.489 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 44597.731 ops/s
[info]                  ·gc.alloc.rate:                   460.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              16230.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11425.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.581 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 42781.398 ops/s
[info]                  ·gc.alloc.rate:               677.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          24921.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23820.133 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 44792.532 ops/s
[info]                  ·gc.alloc.rate:                   571.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              20065.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22750.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.321 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.765 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 43969.252 ops/s
[info]                  ·gc.alloc.rate:                   555.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              19870.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23129.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.581 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   43303.434 ±(99.9%) 6988.900 ops/s [Average]
[info]   (min, avg, max) = (40376.255, 43303.434, 44792.532), stdev = 1814.995
[info]   CI (99.9%): [36314.534, 50292.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   670.001 ±(99.9%) 943.011 MB/sec [Average]
[info]   (min, avg, max) = (460.016, 670.001, 1085.724), stdev = 244.897
[info]   CI (99.9%): [≈ 0, 1613.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   24681.360 ±(99.9%) 39785.716 B/op [Average]
[info]   (min, avg, max) = (16230.396, 24681.360, 42319.198), stdev = 10332.224
[info]   CI (99.9%): [≈ 0, 64467.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   710.949 ±(99.9%) 1356.269 MB/sec [Average]
[info]   (min, avg, max) = (323.843, 710.949, 1289.065), stdev = 352.219
[info]   CI (99.9%): [≈ 0, 2067.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26274.285 ±(99.9%) 55246.916 B/op [Average]
[info]   (min, avg, max) = (11425.931, 26274.285, 50245.024), stdev = 14347.449
[info]   CI (99.9%): [≈ 0, 81521.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.779 ±(99.9%) 6.430 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.779, 4.321), stdev = 1.670
[info]   CI (99.9%): [≈ 0, 8.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   64.283 ±(99.9%) 227.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 64.283, 151.765), stdev = 58.977
[info]   CI (99.9%): [≈ 0, 291.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.000, 22.000), stdev = 6.964
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15449.537 ops/s
[info] # Warmup Iteration   2: 37307.902 ops/s
[info] # Warmup Iteration   3: 47723.136 ops/s
[info] Iteration   1: 47693.510 ops/s
[info]                  ·gc.alloc.rate:                   613.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              20227.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21532.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.658 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 48915.789 ops/s
[info]                  ·gc.alloc.rate:               502.419 MB/sec
[info]                  ·gc.alloc.rate.norm:          16164.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10502.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 48465.036 ops/s
[info]                  ·gc.alloc.rate:                   504.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              16384.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21200.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.676 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 48110.502 ops/s
[info]                  ·gc.alloc.rate:               492.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          16105.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10678.407 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 48832.205 ops/s
[info]                  ·gc.alloc.rate:                   514.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              16582.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21062.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.321 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   48403.408 ±(99.9%) 1963.401 ops/s [Average]
[info]   (min, avg, max) = (47693.510, 48403.408, 48915.789), stdev = 509.889
[info]   CI (99.9%): [46440.007, 50366.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   525.400 ±(99.9%) 191.041 MB/sec [Average]
[info]   (min, avg, max) = (492.387, 525.400, 613.021), stdev = 49.613
[info]   CI (99.9%): [334.359, 716.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   17092.873 ±(99.9%) 6787.728 B/op [Average]
[info]   (min, avg, max) = (16105.010, 17092.873, 20227.966), stdev = 1762.751
[info]   CI (99.9%): [10305.145, 23880.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   522.401 ±(99.9%) 688.753 MB/sec [Average]
[info]   (min, avg, max) = (326.449, 522.401, 653.622), stdev = 178.867
[info]   CI (99.9%): [≈ 0, 1211.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16995.494 ±(99.9%) 22525.175 B/op [Average]
[info]   (min, avg, max) = (10502.693, 16995.494, 21532.982), stdev = 5849.716
[info]   CI (99.9%): [≈ 0, 39520.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.696 ±(99.9%) 4.610 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.696, 2.772), stdev = 1.197
[info]   CI (99.9%): [≈ 0, 5.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   22.531 ±(99.9%) 148.561 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.531, 89.321), stdev = 38.581
[info]   CI (99.9%): [≈ 0, 171.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:13:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12988.515 ops/s
[info] # Warmup Iteration   2: 33303.535 ops/s
[info] # Warmup Iteration   3: 46363.269 ops/s
[info] Iteration   1: 47321.701 ops/s
[info]                  ·gc.alloc.rate:                   631.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              21019.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21489.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.611 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 48526.269 ops/s
[info]                  ·gc.alloc.rate:                   530.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              17206.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10479.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 48038.822 ops/s
[info]                  ·gc.alloc.rate:                   560.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              18357.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21212.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.523 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 48415.589 ops/s
[info]                  ·gc.alloc.rate:               550.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          17908.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21048.177 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 49089.718 ops/s
[info]                  ·gc.alloc.rate:               535.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          17158.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10390.505 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   48278.420 ±(99.9%) 2518.544 ops/s [Average]
[info]   (min, avg, max) = (47321.701, 48278.420, 49089.718), stdev = 654.058
[info]   CI (99.9%): [45759.876, 50796.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   561.840 ±(99.9%) 157.822 MB/sec [Average]
[info]   (min, avg, max) = (530.694, 561.840, 631.986), stdev = 40.986
[info]   CI (99.9%): [404.018, 719.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18330.193 ±(99.9%) 6102.100 B/op [Average]
[info]   (min, avg, max) = (17158.955, 18330.193, 21019.320), stdev = 1584.696
[info]   CI (99.9%): [12228.093, 24432.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   517.691 ±(99.9%) 682.056 MB/sec [Average]
[info]   (min, avg, max) = (323.207, 517.691, 647.522), stdev = 177.128
[info]   CI (99.9%): [≈ 0, 1199.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   16924.024 ±(99.9%) 22818.993 B/op [Average]
[info]   (min, avg, max) = (10390.505, 16924.024, 21489.483), stdev = 5926.020
[info]   CI (99.9%): [≈ 0, 39743.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.468 ±(99.9%) 1.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.468, 1.206), stdev = 0.502
[info]   CI (99.9%): [≈ 0, 2.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   15.316 ±(99.9%) 62.796 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.316, 39.111), stdev = 16.308
[info]   CI (99.9%): [≈ 0, 78.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3130.452 ops/s
[info] # Warmup Iteration   2: 9450.964 ops/s
[info] # Warmup Iteration   3: 14471.929 ops/s
[info] Iteration   1: 17456.697 ops/s
[info]                  ·gc.alloc.rate:                   1245.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              112235.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1227.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110629.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.458 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 17138.575 ops/s
[info]                  ·gc.alloc.rate:                   1322.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              121472.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1242.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114088.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.230 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 16720.484 ops/s
[info]                  ·gc.alloc.rate:                   1413.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              133027.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1253.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117936.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.317 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 782.699 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 17852.151 ops/s
[info]                  ·gc.alloc.rate:                   1269.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              111887.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1246.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109820.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.761 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 16745.948 ops/s
[info]                  ·gc.alloc.rate:               1434.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          134802.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1553.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146026.839 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   17182.771 ±(99.9%) 1856.295 ops/s [Average]
[info]   (min, avg, max) = (16720.484, 17182.771, 17852.151), stdev = 482.074
[info]   CI (99.9%): [15326.476, 19039.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1337.088 ±(99.9%) 325.257 MB/sec [Average]
[info]   (min, avg, max) = (1245.184, 1337.088, 1434.391), stdev = 84.468
[info]   CI (99.9%): [1011.831, 1662.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   122684.985 ±(99.9%) 42227.829 B/op [Average]
[info]   (min, avg, max) = (111887.028, 122684.985, 134802.143), stdev = 10966.433
[info]   CI (99.9%): [80457.155, 164912.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1304.568 ±(99.9%) 537.785 MB/sec [Average]
[info]   (min, avg, max) = (1227.365, 1304.568, 1553.830), stdev = 139.661
[info]   CI (99.9%): [766.783, 1842.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   119700.295 ±(99.9%) 58002.691 B/op [Average]
[info]   (min, avg, max) = (109820.057, 119700.295, 146026.839), stdev = 15063.115
[info]   CI (99.9%): [61697.604, 177702.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.284 ±(99.9%) 13.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.284, 8.317), stdev = 3.403
[info]   CI (99.9%): [≈ 0, 15.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   212.430 ±(99.9%) 1237.603 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 212.430, 782.699), stdev = 321.402
[info]   CI (99.9%): [≈ 0, 1450.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 19.200, 28.000), stdev = 7.855
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4129.904 ops/s
[info] # Warmup Iteration   2: 10848.155 ops/s
[info] # Warmup Iteration   3: 13960.558 ops/s
[info] Iteration   1: 16587.974 ops/s
[info]                  ·gc.alloc.rate:                   1052.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              99862.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1129.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107126.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 230.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 16813.022 ops/s
[info]                  ·gc.alloc.rate:                   1061.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              99366.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1150.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107657.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 16700.574 ops/s
[info]                  ·gc.alloc.rate:                   1049.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              98891.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          880.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82960.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.322 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 16177.632 ops/s
[info]                  ·gc.alloc.rate:                   1019.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              99108.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          899.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87451.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 453.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 15046.945 ops/s
[info]                  ·gc.alloc.rate:                        1382.384 MB/sec
[info]                  ·gc.alloc.rate.norm:                   144526.735 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.024 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.494 B/op
[info]                  ·gc.churn.Metaspace:                   0.066 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              6.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1432.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          149792.789 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  54.597 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             5708.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           1.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      170.069 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              48.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   16265.229 ±(99.9%) 2780.511 ops/s [Average]
[info]   (min, avg, max) = (15046.945, 16265.229, 16813.022), stdev = 722.090
[info]   CI (99.9%): [13484.718, 19045.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1113.205 ±(99.9%) 582.721 MB/sec [Average]
[info]   (min, avg, max) = (1019.221, 1113.205, 1382.384), stdev = 151.331
[info]   CI (99.9%): [530.484, 1695.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   108351.268 ±(99.9%) 77882.890 B/op [Average]
[info]   (min, avg, max) = (98891.433, 108351.268, 144526.735), stdev = 20225.939
[info]   CI (99.9%): [30468.378, 186234.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.499 ±(99.9%) 4.295 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.499, 2.494), stdev = 1.115
[info]   CI (99.9%): [≈ 0, 4.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.013 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.066), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.376 ±(99.9%) 11.851 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.376, 6.882), stdev = 3.078
[info]   CI (99.9%): [≈ 0, 13.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1098.525 ±(99.9%) 866.585 MB/sec [Average]
[info]   (min, avg, max) = (880.492, 1098.525, 1432.753), stdev = 225.049
[info]   CI (99.9%): [231.940, 1965.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   106997.795 ±(99.9%) 101727.343 B/op [Average]
[info]   (min, avg, max) = (82960.737, 106997.795, 149792.789), stdev = 26418.268
[info]   CI (99.9%): [5270.452, 208725.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   10.919 ±(99.9%) 94.020 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 10.919, 54.597), stdev = 24.417
[info]   CI (99.9%): [≈ 0, 104.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   1141.617 ±(99.9%) 9829.664 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1141.617, 5708.083), stdev = 2552.733
[info]   CI (99.9%): [≈ 0, 10971.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.761 ±(99.9%) 7.392 MB/sec [Average]
[info]   (min, avg, max) = (0.046, 1.761, 4.659), stdev = 1.920
[info]   CI (99.9%): [≈ 0, 9.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   172.351 ±(99.9%) 716.807 B/op [Average]
[info]   (min, avg, max) = (4.293, 172.351, 453.073), stdev = 186.153
[info]   CI (99.9%): [≈ 0, 889.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   100.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 20.000, 48.000), stdev = 15.890
[info]   CI (99.9%): [100.000, 100.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69301.002 ops/s
[info] # Warmup Iteration   2: 132837.401 ops/s
[info] # Warmup Iteration   3: 157714.385 ops/s
[info] Iteration   1: 159155.407 ops/s
[info]                  ·gc.alloc.rate:               423.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          4182.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3241.185 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 158738.136 ops/s
[info]                  ·gc.alloc.rate:                   421.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              4173.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3249.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 158533.694 ops/s
[info]                  ·gc.alloc.rate:                   429.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              4259.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6514.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 154174.008 ops/s
[info]                  ·gc.alloc.rate:                   412.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              4214.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3352.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 154378.183 ops/s
[info]                  ·gc.alloc.rate:               414.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          4226.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3348.217 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   156995.886 ±(99.9%) 9603.321 ops/s [Average]
[info]   (min, avg, max) = (154174.008, 156995.886, 159155.407), stdev = 2493.952
[info]   CI (99.9%): [147392.565, 166599.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   420.164 ±(99.9%) 25.452 MB/sec [Average]
[info]   (min, avg, max) = (412.885, 420.164, 429.217), stdev = 6.610
[info]   CI (99.9%): [394.711, 445.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4211.225 ±(99.9%) 134.568 B/op [Average]
[info]   (min, avg, max) = (4173.167, 4211.225, 4259.935), stdev = 34.947
[info]   CI (99.9%): [4076.657, 4345.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   393.809 ±(99.9%) 565.206 MB/sec [Average]
[info]   (min, avg, max) = (327.836, 393.809, 656.380), stdev = 146.782
[info]   CI (99.9%): [≈ 0, 959.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3941.253 ±(99.9%) 5542.805 B/op [Average]
[info]   (min, avg, max) = (3241.185, 3941.253, 6514.496), stdev = 1439.449
[info]   CI (99.9%): [≈ 0, 9484.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.049 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.126 ±(99.9%) 0.494 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.126, 0.292), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1264.412 ops/s
[info] # Warmup Iteration   2: 9040.642 ops/s
[info] # Warmup Iteration   3: 13853.106 ops/s
[info] Iteration   1: 16433.626 ops/s
[info]                  ·gc.alloc.rate:                   1487.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              142399.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1606.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153815.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.994 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 16494.191 ops/s
[info]                  ·gc.alloc.rate:                   1474.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              140662.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122999.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.986 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 14724.654 ops/s
[info]                  ·gc.alloc.rate:                   1417.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              151495.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172662.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.276 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 670.729 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 14987.902 ops/s
[info]                  ·gc.alloc.rate:                   1405.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              147557.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1280.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     134438.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 15123.135 ops/s
[info]                  ·gc.alloc.rate:                   1598.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              166244.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1594.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165809.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   15552.702 ±(99.9%) 3251.239 ops/s [Average]
[info]   (min, avg, max) = (14724.654, 15552.702, 16494.191), stdev = 844.337
[info]   CI (99.9%): [12301.462, 18803.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1476.590 ±(99.9%) 294.926 MB/sec [Average]
[info]   (min, avg, max) = (1405.468, 1476.590, 1598.244), stdev = 76.591
[info]   CI (99.9%): [1181.664, 1771.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   149671.994 ±(99.9%) 39292.382 B/op [Average]
[info]   (min, avg, max) = (140662.836, 149671.994, 166244.561), stdev = 10204.107
[info]   CI (99.9%): [110379.613, 188964.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1477.198 ±(99.9%) 677.045 MB/sec [Average]
[info]   (min, avg, max) = (1280.504, 1477.198, 1615.636), stdev = 175.826
[info]   CI (99.9%): [800.153, 2154.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   149944.902 ±(99.9%) 80525.026 B/op [Average]
[info]   (min, avg, max) = (122999.185, 149944.902, 172662.239), stdev = 20912.093
[info]   CI (99.9%): [69419.876, 230469.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.436 ±(99.9%) 10.508 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.436, 6.276), stdev = 2.729
[info]   CI (99.9%): [≈ 0, 11.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   153.053 ±(99.9%) 1123.598 B/op [Average]
[info]   (min, avg, max) = (1.986, 153.053, 670.729), stdev = 291.795
[info]   CI (99.9%): [≈ 0, 1276.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.800, 24.000), stdev = 7.791
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:12:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11059.289 ops/s
[info] # Warmup Iteration   2: 61148.767 ops/s
[info] # Warmup Iteration   3: 63806.763 ops/s
[info] Iteration   1: 64397.577 ops/s
[info]                  ·gc.alloc.rate:                   1647.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              40248.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39890.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.598 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161.237 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 67068.029 ops/s
[info]                  ·gc.alloc.rate:                   1562.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              36666.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38064.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.328 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 67108.798 ops/s
[info]                  ·gc.alloc.rate:                   1556.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              36506.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38049.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 67211.708 ops/s
[info]                  ·gc.alloc.rate:                   1552.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              36357.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30606.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.900 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 67926.565 ops/s
[info]                  ·gc.alloc.rate:               1582.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          36655.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38133.235 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   66742.536 ±(99.9%) 5223.613 ops/s [Average]
[info]   (min, avg, max) = (64397.577, 66742.536, 67926.565), stdev = 1356.556
[info]   CI (99.9%): [61518.923, 71966.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1580.458 ±(99.9%) 150.089 MB/sec [Average]
[info]   (min, avg, max) = (1552.769, 1580.458, 1647.066), stdev = 38.978
[info]   CI (99.9%): [1430.369, 1730.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   37287.089 ±(99.9%) 6393.663 B/op [Average]
[info]   (min, avg, max) = (36357.841, 37287.089, 40248.738), stdev = 1660.414
[info]   CI (99.9%): [30893.426, 43680.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1566.239 ±(99.9%) 559.054 MB/sec [Average]
[info]   (min, avg, max) = (1307.121, 1566.239, 1646.546), stdev = 145.185
[info]   CI (99.9%): [1007.185, 2125.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36948.914 ±(99.9%) 13983.033 B/op [Average]
[info]   (min, avg, max) = (30606.021, 36948.914, 39890.859), stdev = 3631.349
[info]   CI (99.9%): [22965.881, 50931.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.420 ±(99.9%) 11.158 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.420, 6.598), stdev = 2.898
[info]   CI (99.9%): [≈ 0, 12.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   34.591 ±(99.9%) 272.854 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.591, 161.237), stdev = 70.859
[info]   CI (99.9%): [≈ 0, 307.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 18.000), stdev = 5.099
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19109.238 ops/s
[info] # Warmup Iteration   2: 78722.950 ops/s
[info] # Warmup Iteration   3: 96897.343 ops/s
[info] Iteration   1: 105101.391 ops/s
[info]                  ·gc.alloc.rate:                   1392.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              20851.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19398.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 106113.661 ops/s
[info]                  ·gc.alloc.rate:                   1412.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              20945.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19173.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 101274.450 ops/s
[info]                  ·gc.alloc.rate:                   1351.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              21000.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20022.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.612 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 107971.707 ops/s
[info]                  ·gc.alloc.rate:                   1436.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              20939.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18800.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.517 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 106074.736 ops/s
[info]                  ·gc.alloc.rate:                   1431.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              21237.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24018.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   105307.189 ±(99.9%) 9557.923 ops/s [Average]
[info]   (min, avg, max) = (101274.450, 105307.189, 107971.707), stdev = 2482.162
[info]   CI (99.9%): [95749.266, 114865.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1404.993 ±(99.9%) 132.904 MB/sec [Average]
[info]   (min, avg, max) = (1351.518, 1404.993, 1436.755), stdev = 34.515
[info]   CI (99.9%): [1272.088, 1537.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20994.765 ±(99.9%) 560.597 B/op [Average]
[info]   (min, avg, max) = (20851.394, 20994.765, 21237.078), stdev = 145.585
[info]   CI (99.9%): [20434.167, 21555.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1357.221 ±(99.9%) 563.213 MB/sec [Average]
[info]   (min, avg, max) = (1288.568, 1357.221, 1618.819), stdev = 146.265
[info]   CI (99.9%): [794.008, 1920.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20282.452 ±(99.9%) 8220.929 B/op [Average]
[info]   (min, avg, max) = (18800.177, 20282.452, 24018.171), stdev = 2134.949
[info]   CI (99.9%): [12061.524, 28503.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.292 ±(99.9%) 4.908 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.292, 3.097), stdev = 1.275
[info]   CI (99.9%): [≈ 0, 6.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   19.466 ±(99.9%) 73.700 B/op [Average]
[info]   (min, avg, max) = (0.309, 19.466, 46.366), stdev = 19.140
[info]   CI (99.9%): [≈ 0, 93.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 20.000), stdev = 5.675
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120974.397 ops/s
[info] # Warmup Iteration   2: 229890.776 ops/s
[info] # Warmup Iteration   3: 262642.392 ops/s
[info] Iteration   1: 270812.602 ops/s
[info]                  ·gc.alloc.rate:                   446.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              2593.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3809.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.419 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.435 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 270566.145 ops/s
[info]                  ·gc.alloc.rate:               437.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          2544.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1910.370 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 271503.065 ops/s
[info]                  ·gc.alloc.rate:                   440.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              2552.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1903.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 270747.707 ops/s
[info]                  ·gc.alloc.rate:                   452.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              2627.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3818.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 269223.413 ops/s
[info]                  ·gc.alloc.rate:               439.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          2567.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1921.810 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   270570.587 ±(99.9%) 3206.892 ops/s [Average]
[info]   (min, avg, max) = (269223.413, 270570.587, 271503.065), stdev = 832.820
[info]   CI (99.9%): [267363.694, 273777.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   443.144 ±(99.9%) 23.068 MB/sec [Average]
[info]   (min, avg, max) = (437.562, 443.144, 452.038), stdev = 5.991
[info]   CI (99.9%): [420.076, 466.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2577.148 ±(99.9%) 130.120 B/op [Average]
[info]   (min, avg, max) = (2544.796, 2577.148, 2627.405), stdev = 33.792
[info]   CI (99.9%): [2447.027, 2707.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.675 ±(99.9%) 691.117 MB/sec [Average]
[info]   (min, avg, max) = (328.477, 459.675, 656.886), stdev = 179.481
[info]   CI (99.9%): [≈ 0, 1150.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2672.732 ±(99.9%) 4011.278 B/op [Average]
[info]   (min, avg, max) = (1903.785, 2672.732, 3818.059), stdev = 1041.716
[info]   CI (99.9%): [≈ 0, 6684.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.705 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.419), stdev = 0.183
[info]   CI (99.9%): [≈ 0, 0.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.535 ±(99.9%) 4.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.535, 2.435), stdev = 1.064
[info]   CI (99.9%): [≈ 0, 4.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129140.572 ops/s
[info] # Warmup Iteration   2: 266831.478 ops/s
[info] # Warmup Iteration   3: 290993.239 ops/s
[info] Iteration   1: 290532.954 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 289859.339 ops/s
[info]                  ·gc.alloc.rate:      1.837 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.973 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 290085.155 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 290105.524 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 290032.131 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   290123.021 ±(99.9%) 957.979 ops/s [Average]
[info]   (min, avg, max) = (289859.339, 290123.021, 290532.954), stdev = 248.784
[info]   CI (99.9%): [289165.042, 291080.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.368 ±(99.9%) 3.163 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.368, 1.837), stdev = 0.821
[info]   CI (99.9%): [≈ 0, 3.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.996 ±(99.9%) 17.171 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.996, 9.973), stdev = 4.459
[info]   CI (99.9%): [≈ 0, 19.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13431.804 ops/s
[info] # Warmup Iteration   2: 61440.531 ops/s
[info] # Warmup Iteration   3: 81197.196 ops/s
[info] Iteration   1: 86196.764 ops/s
[info]                  ·gc.alloc.rate:                   1964.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              35858.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1768.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32281.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.296 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   2: 70566.532 ops/s
[info]                  ·gc.alloc.rate:                   1912.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              42626.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1895.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42246.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      30.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 669.671 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         69.000 ms
[info] Iteration   3: 91349.702 ops/s
[info]                  ·gc.alloc.rate:                   2089.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              35984.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2206.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38000.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.896 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         46.000 ms
[info] Iteration   4: 83196.676 ops/s
[info]                  ·gc.alloc.rate:                   1507.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              28524.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1487.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28134.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      56.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1067.433 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         111.000 ms
[info] Iteration   5: 97532.016 ops/s
[info]                  ·gc.alloc.rate:                   1655.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              26703.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1501.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24224.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.920 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   85768.338 ±(99.9%) 38862.311 ops/s [Average]
[info]   (min, avg, max) = (70566.532, 85768.338, 97532.016), stdev = 10092.419
[info]   CI (99.9%): [46906.027, 124630.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1825.886 ±(99.9%) 916.338 MB/sec [Average]
[info]   (min, avg, max) = (1507.835, 1825.886, 2089.562), stdev = 237.970
[info]   CI (99.9%): [909.547, 2742.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33939.408 ±(99.9%) 24731.304 B/op [Average]
[info]   (min, avg, max) = (26703.954, 33939.408, 42626.312), stdev = 6422.641
[info]   CI (99.9%): [9208.104, 58670.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1771.844 ±(99.9%) 1152.525 MB/sec [Average]
[info]   (min, avg, max) = (1487.223, 1771.844, 2206.642), stdev = 299.307
[info]   CI (99.9%): [619.320, 2924.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   32977.509 ±(99.9%) 28012.757 B/op [Average]
[info]   (min, avg, max) = (24224.865, 32977.509, 42246.424), stdev = 7274.824
[info]   CI (99.9%): [4964.753, 60990.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   18.891 ±(99.9%) 93.066 MB/sec [Average]
[info]   (min, avg, max) = (1.002, 18.891, 56.426), stdev = 24.169
[info]   CI (99.9%): [≈ 0, 111.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   374.843 ±(99.9%) 1821.989 B/op [Average]
[info]   (min, avg, max) = (18.296, 374.843, 1067.433), stdev = 473.165
[info]   CI (99.9%): [≈ 0, 2196.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   295.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 59.000, 111.000), stdev = 32.856
[info]   CI (99.9%): [295.000, 295.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12036.905 ops/s
[info] # Warmup Iteration   2: 86170.259 ops/s
[info] # Warmup Iteration   3: 114307.572 ops/s
[info] Iteration   1: 129498.581 ops/s
[info]                  ·gc.alloc.rate:                   1981.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              24086.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23605.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.425 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 129028.912 ops/s
[info]                  ·gc.alloc.rate:                   1618.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              19735.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1611.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19648.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.152 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 127154.403 ops/s
[info]                  ·gc.alloc.rate:                   1598.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              19786.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19907.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.546 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 122353.567 ops/s
[info]                  ·gc.alloc.rate:                        1540.042 MB/sec
[info]                  ·gc.alloc.rate.norm:                   19807.084 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.018 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.228 B/op
[info]                  ·gc.churn.Metaspace:                   0.051 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1358.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          17467.039 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  5.962 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             76.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      5.226 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              43.000 ms
[info] Iteration   5: 128900.438 ops/s
[info]                  ·gc.alloc.rate:                   1619.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              19767.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20012.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   127387.180 ±(99.9%) 11363.428 ops/s [Average]
[info]   (min, avg, max) = (122353.567, 127387.180, 129498.581), stdev = 2951.046
[info]   CI (99.9%): [116023.752, 138750.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1671.649 ±(99.9%) 679.033 MB/sec [Average]
[info]   (min, avg, max) = (1540.042, 1671.649, 1981.758), stdev = 176.343
[info]   CI (99.9%): [992.616, 2350.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20636.824 ±(99.9%) 7427.295 B/op [Average]
[info]   (min, avg, max) = (19735.975, 20636.824, 24086.930), stdev = 1928.845
[info]   CI (99.9%): [13209.529, 28064.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.031 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm":
[info]   0.046 ±(99.9%) 0.393 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.228), stdev = 0.102
[info]   CI (99.9%): [≈ 0, 0.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.051), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.Metaspace.norm":
[info]   0.131 ±(99.9%) 1.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.653), stdev = 0.292
[info]   CI (99.9%): [≈ 0, 1.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1631.864 ±(99.9%) 799.046 MB/sec [Average]
[info]   (min, avg, max) = (1358.099, 1631.864, 1942.118), stdev = 207.510
[info]   CI (99.9%): [832.819, 2430.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20128.125 ±(99.9%) 8493.963 B/op [Average]
[info]   (min, avg, max) = (17467.039, 20128.125, 23605.125), stdev = 2205.855
[info]   CI (99.9%): [11634.162, 28622.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Old_Gen":
[info]   1.192 ±(99.9%) 10.267 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.192, 5.962), stdev = 2.666
[info]   CI (99.9%): [≈ 0, 11.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Old_Gen.norm":
[info]   15.336 ±(99.9%) 132.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.336, 76.680), stdev = 34.292
[info]   CI (99.9%): [≈ 0, 147.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.825 ±(99.9%) 8.886 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.825, 5.136), stdev = 2.308
[info]   CI (99.9%): [≈ 0, 10.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.273 ±(99.9%) 107.898 B/op [Average]
[info]   (min, avg, max) = (1.017, 22.273, 62.425), stdev = 28.021
[info]   CI (99.9%): [≈ 0, 130.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   89.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 17.800, 43.000), stdev = 15.595
[info]   CI (99.9%): [89.000, 89.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29483.559 ops/s
[info] # Warmup Iteration   2: 107834.531 ops/s
[info] # Warmup Iteration   3: 145063.173 ops/s
[info] Iteration   1: 152721.273 ops/s
[info]                  ·gc.alloc.rate:                   914.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              9423.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9848.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.733 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 154049.590 ops/s
[info]                  ·gc.alloc.rate:                   927.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              9479.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          959.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9803.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 151980.916 ops/s
[info]                  ·gc.alloc.rate:                   907.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              9401.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6657.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.907 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 152918.838 ops/s
[info]                  ·gc.alloc.rate:                   921.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              9484.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9921.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.543 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.461 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 155238.541 ops/s
[info]                  ·gc.alloc.rate:                   935.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              9475.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9732.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.900 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   153381.831 ±(99.9%) 4911.094 ops/s [Average]
[info]   (min, avg, max) = (151980.916, 153381.831, 155238.541), stdev = 1275.395
[info]   CI (99.9%): [148470.738, 158292.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   921.393 ±(99.9%) 41.270 MB/sec [Average]
[info]   (min, avg, max) = (907.876, 921.393, 935.065), stdev = 10.718
[info]   CI (99.9%): [880.123, 962.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9452.842 ±(99.9%) 144.920 B/op [Average]
[info]   (min, avg, max) = (9401.552, 9452.842, 9484.170), stdev = 37.635
[info]   CI (99.9%): [9307.923, 9597.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   896.551 ±(99.9%) 546.210 MB/sec [Average]
[info]   (min, avg, max) = (642.860, 896.551, 964.124), stdev = 141.849
[info]   CI (99.9%): [350.340, 1442.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9192.597 ±(99.9%) 5464.082 B/op [Average]
[info]   (min, avg, max) = (6657.165, 9192.597, 9921.075), stdev = 1419.005
[info]   CI (99.9%): [3728.516, 14656.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.309 ±(99.9%) 5.481 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.309, 3.543), stdev = 1.423
[info]   CI (99.9%): [≈ 0, 6.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.485 ±(99.9%) 56.455 B/op [Average]
[info]   (min, avg, max) = (0.425, 13.485, 36.461), stdev = 14.661
[info]   CI (99.9%): [≈ 0, 69.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 12.000), stdev = 3.130
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88634.030 ops/s
[info] # Warmup Iteration   2: 192022.154 ops/s
[info] # Warmup Iteration   3: 225771.955 ops/s
[info] Iteration   1: 227062.806 ops/s
[info]                  ·gc.alloc.rate:      163.865 MB/sec
[info]                  ·gc.alloc.rate.norm: 1135.795 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 224746.376 ops/s
[info]                  ·gc.alloc.rate:               175.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          1230.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1791.329 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 228947.821 ops/s
[info]                  ·gc.alloc.rate:      148.999 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 227776.307 ops/s
[info]                  ·gc.alloc.rate:                   155.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              1073.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2260.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 227626.709 ops/s
[info]                  ·gc.alloc.rate:      148.178 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   227232.004 ±(99.9%) 5966.343 ops/s [Average]
[info]   (min, avg, max) = (224746.376, 227232.004, 228947.821), stdev = 1549.440
[info]   CI (99.9%): [221265.661, 233198.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   158.441 ±(99.9%) 44.445 MB/sec [Average]
[info]   (min, avg, max) = (148.178, 158.441, 175.756), stdev = 11.542
[info]   CI (99.9%): [113.996, 202.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1097.600 ±(99.9%) 336.544 B/op [Average]
[info]   (min, avg, max) = (1024.002, 1097.600, 1230.592), stdev = 87.399
[info]   CI (99.9%): [761.056, 1434.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   116.598 ±(99.9%) 622.405 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 116.598, 327.149), stdev = 161.637
[info]   CI (99.9%): [≈ 0, 739.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   810.272 ±(99.9%) 4319.719 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 810.272, 2260.031), stdev = 1121.817
[info]   CI (99.9%): [≈ 0, 5129.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.288), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 5.000), stdev = 2.490
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1142.563 ops/s
[info] # Warmup Iteration   2: 43556.229 ops/s
[info] # Warmup Iteration   3: 78371.873 ops/s
[info] Iteration   1: 79152.329 ops/s
[info]                  ·gc.alloc.rate:                   2562.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              50957.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52226.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.193 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.485 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 83062.515 ops/s
[info]                  ·gc.alloc.rate:                   2601.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              49273.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43692.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.972 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 82916.670 ops/s
[info]                  ·gc.alloc.rate:                   2603.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              49406.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2661.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50508.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.790 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 81902.217 ops/s
[info]                  ·gc.alloc.rate:                   2620.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              50326.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2687.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51612.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.800 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 80884.781 ops/s
[info]                  ·gc.alloc.rate:                   2568.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              49974.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46003.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.810 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   81583.702 ±(99.9%) 6228.412 ops/s [Average]
[info]   (min, avg, max) = (79152.329, 81583.702, 83062.515), stdev = 1617.499
[info]   CI (99.9%): [75355.291, 87812.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2591.420 ±(99.9%) 94.771 MB/sec [Average]
[info]   (min, avg, max) = (2562.825, 2591.420, 2620.175), stdev = 24.612
[info]   CI (99.9%): [2496.649, 2686.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   49987.694 ±(99.9%) 2657.186 B/op [Average]
[info]   (min, avg, max) = (49273.051, 49987.694, 50957.743), stdev = 690.063
[info]   CI (99.9%): [47330.508, 52644.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2529.442 ±(99.9%) 690.174 MB/sec [Average]
[info]   (min, avg, max) = (2307.032, 2529.442, 2687.089), stdev = 179.236
[info]   CI (99.9%): [1839.268, 3219.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48808.871 ±(99.9%) 14468.400 B/op [Average]
[info]   (min, avg, max) = (43692.770, 48808.871, 52226.807), stdev = 3757.398
[info]   CI (99.9%): [34340.471, 63277.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.684 ±(99.9%) 5.401 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.684, 3.193), stdev = 1.403
[info]   CI (99.9%): [≈ 0, 6.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   13.572 ±(99.9%) 107.460 B/op [Average]
[info]   (min, avg, max) = (0.790, 13.572, 63.485), stdev = 27.907
[info]   CI (99.9%): [≈ 0, 121.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 15.000), stdev = 1.924
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24391.793 ops/s
[info] # Warmup Iteration   2: 172361.639 ops/s
[info] # Warmup Iteration   3: 221949.143 ops/s
[info] Iteration   1: 240468.639 ops/s
[info]                  ·gc.alloc.rate:                   1565.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              10244.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10632.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.139 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.000 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 240617.483 ops/s
[info]                  ·gc.alloc.rate:                   1568.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              10260.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10677.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.183 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 241297.431 ops/s
[info]                  ·gc.alloc.rate:                   1552.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              10123.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8557.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 241782.287 ops/s
[info]                  ·gc.alloc.rate:                   1574.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              10242.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10719.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 242380.113 ops/s
[info]                  ·gc.alloc.rate:               1599.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          10375.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10748.634 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   241309.191 ±(99.9%) 3077.999 ops/s [Average]
[info]   (min, avg, max) = (240468.639, 241309.191, 242380.113), stdev = 799.346
[info]   CI (99.9%): [238231.192, 244387.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1571.939 ±(99.9%) 66.487 MB/sec [Average]
[info]   (min, avg, max) = (1552.329, 1571.939, 1599.304), stdev = 17.266
[info]   CI (99.9%): [1505.453, 1638.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10249.517 ±(99.9%) 345.183 B/op [Average]
[info]   (min, avg, max) = (10123.136, 10249.517, 10375.910), stdev = 89.643
[info]   CI (99.9%): [9904.333, 10594.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1574.621 ±(99.9%) 566.980 MB/sec [Average]
[info]   (min, avg, max) = (1312.186, 1574.621, 1656.755), stdev = 147.243
[info]   CI (99.9%): [1007.641, 2141.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10266.949 ±(99.9%) 3684.467 B/op [Average]
[info]   (min, avg, max) = (8557.100, 10266.949, 10748.634), stdev = 956.844
[info]   CI (99.9%): [6582.482, 13951.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 3.334 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 2.139), stdev = 0.866
[info]   CI (99.9%): [≈ 0, 4.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.770 ±(99.9%) 21.825 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.770, 14.000), stdev = 5.668
[info]   CI (99.9%): [≈ 0, 26.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201014.030 ops/s
[info] # Warmup Iteration   2: 659980.977 ops/s
[info] # Warmup Iteration   3: 642417.299 ops/s
[info] Iteration   1: 766307.178 ops/s
[info]                  ·gc.alloc.rate:               625.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          1285.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1318.933 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 772570.503 ops/s
[info]                  ·gc.alloc.rate:               612.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          1246.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1310.924 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 767938.340 ops/s
[info]                  ·gc.alloc.rate:               612.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          1255.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1322.936 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 762757.431 ops/s
[info]                  ·gc.alloc.rate:               608.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          1255.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1337.343 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 770478.426 ops/s
[info]                  ·gc.alloc.rate:                   601.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              1227.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     664.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   768010.375 ±(99.9%) 14584.938 ops/s [Average]
[info]   (min, avg, max) = (762757.431, 768010.375, 772570.503), stdev = 3787.662
[info]   CI (99.9%): [753425.438, 782595.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   612.035 ±(99.9%) 34.384 MB/sec [Average]
[info]   (min, avg, max) = (601.160, 612.035, 625.778), stdev = 8.929
[info]   CI (99.9%): [577.651, 646.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1254.086 ±(99.9%) 80.235 B/op [Average]
[info]   (min, avg, max) = (1227.552, 1254.086, 1285.302), stdev = 20.837
[info]   CI (99.9%): [1173.851, 1334.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.020 ±(99.9%) 550.011 MB/sec [Average]
[info]   (min, avg, max) = (325.540, 581.020, 648.304), stdev = 142.836
[info]   CI (99.9%): [31.009, 1131.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1190.976 ±(99.9%) 1133.354 B/op [Average]
[info]   (min, avg, max) = (664.744, 1190.976, 1337.343), stdev = 294.328
[info]   CI (99.9%): [57.622, 2324.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332392.275 ops/s
[info] # Warmup Iteration   2: 582563.153 ops/s
[info] # Warmup Iteration   3: 643580.245 ops/s
[info] Iteration   1: 675537.164 ops/s
[info]                  ·gc.alloc.rate:                   527.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              1228.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 682501.258 ops/s
[info]                  ·gc.alloc.rate:                   541.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              1247.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1514.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 682794.963 ops/s
[info]                  ·gc.alloc.rate:                   534.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     758.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 681840.328 ops/s
[info]                  ·gc.alloc.rate:               551.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          1274.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1519.265 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 685339.456 ops/s
[info]                  ·gc.alloc.rate:                   544.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              1250.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1512.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   681602.634 ±(99.9%) 14021.770 ops/s [Average]
[info]   (min, avg, max) = (675537.164, 681602.634, 685339.456), stdev = 3641.409
[info]   CI (99.9%): [667580.864, 695624.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   540.026 ±(99.9%) 36.022 MB/sec [Average]
[info]   (min, avg, max) = (527.566, 540.026, 551.971), stdev = 9.355
[info]   CI (99.9%): [504.003, 576.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1246.731 ±(99.9%) 69.315 B/op [Average]
[info]   (min, avg, max) = (1228.945, 1246.731, 1274.077), stdev = 18.001
[info]   CI (99.9%): [1177.417, 1316.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.215 ±(99.9%) 695.086 MB/sec [Average]
[info]   (min, avg, max) = (327.798, 526.215, 658.851), stdev = 180.512
[info]   CI (99.9%): [≈ 0, 1221.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1213.818 ±(99.9%) 1591.534 B/op [Average]
[info]   (min, avg, max) = (758.535, 1213.818, 1519.265), stdev = 413.316
[info]   CI (99.9%): [≈ 0, 2805.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.046 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.031), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.073), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247981.014 ops/s
[info] # Warmup Iteration   2: 589331.986 ops/s
[info] # Warmup Iteration   3: 664459.663 ops/s
[info] Iteration   1: 674969.831 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 674348.470 ops/s
[info]                  ·gc.alloc.rate:      0.330 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.770 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 656885.311 ops/s
[info]                  ·gc.alloc.rate:      20.298 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.630 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 673998.386 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.982 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 673934.528 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   670827.305 ±(99.9%) 30052.846 ops/s [Average]
[info]   (min, avg, max) = (656885.311, 670827.305, 674969.831), stdev = 7804.629
[info]   CI (99.9%): [640774.459, 700880.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.295 ±(99.9%) 34.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.295, 20.298), stdev = 8.952
[info]   CI (99.9%): [≈ 0, 38.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   10.277 ±(99.9%) 82.617 B/op [Average]
[info]   (min, avg, max) = (0.001, 10.277, 48.630), stdev = 21.455
[info]   CI (99.9%): [≈ 0, 92.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59246.442 ops/s
[info] # Warmup Iteration   2: 443278.490 ops/s
[info] # Warmup Iteration   3: 558707.390 ops/s
[info] Iteration   1: 599361.186 ops/s
[info]                  ·gc.alloc.rate:                   1500.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              3939.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3434.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 604090.668 ops/s
[info]                  ·gc.alloc.rate:                   1493.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              3889.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4272.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.454 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 612939.504 ops/s
[info]                  ·gc.alloc.rate:               1506.533 MB/sec
[info]                  ·gc.alloc.rate.norm:          3868.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3371.325 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 612592.344 ops/s
[info]                  ·gc.alloc.rate:               1518.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          3901.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4237.597 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 612322.439 ops/s
[info]                  ·gc.alloc.rate:                   1525.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              3919.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3413.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   608261.228 ±(99.9%) 23872.641 ops/s [Average]
[info]   (min, avg, max) = (599361.186, 608261.228, 612939.504), stdev = 6199.649
[info]   CI (99.9%): [584388.588, 632133.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1508.818 ±(99.9%) 50.479 MB/sec [Average]
[info]   (min, avg, max) = (1493.185, 1508.818, 1525.415), stdev = 13.109
[info]   CI (99.9%): [1458.338, 1559.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3903.569 ±(99.9%) 105.167 B/op [Average]
[info]   (min, avg, max) = (3868.458, 3903.569, 3939.567), stdev = 27.312
[info]   CI (99.9%): [3798.402, 4008.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1447.911 ±(99.9%) 693.262 MB/sec [Average]
[info]   (min, avg, max) = (1308.210, 1447.911, 1649.383), stdev = 180.038
[info]   CI (99.9%): [754.648, 2141.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3746.017 ±(99.9%) 1792.940 B/op [Average]
[info]   (min, avg, max) = (3371.325, 3746.017, 4272.967), stdev = 465.621
[info]   CI (99.9%): [1953.077, 5538.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.502 ±(99.9%) 4.254 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.502, 2.478), stdev = 1.105
[info]   CI (99.9%): [≈ 0, 4.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.307 ±(99.9%) 11.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.307, 6.454), stdev = 2.877
[info]   CI (99.9%): [≈ 0, 12.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.789
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:09:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5673.888 ops/s
[info] # Warmup Iteration   2: 28509.515 ops/s
[info] # Warmup Iteration   3: 38628.432 ops/s
[info] Iteration   1: 37925.270 ops/s
[info]                  ·gc.alloc.rate:                   2104.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              87297.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1900.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78811.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.559 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   2: 39546.565 ops/s
[info]                  ·gc.alloc.rate:                   2081.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              82799.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2224.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88506.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 330.545 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 43246.734 ops/s
[info]                  ·gc.alloc.rate:                   1991.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              72482.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1891.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68833.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.031 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 42850.399 ops/s
[info]                  ·gc.alloc.rate:                   1977.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              72634.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1909.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70126.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.411 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 42541.444 ops/s
[info]                  ·gc.alloc.rate:                   1963.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              72626.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71843.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.770 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   41222.082 ±(99.9%) 9064.909 ops/s [Average]
[info]   (min, avg, max) = (37925.270, 41222.082, 43246.734), stdev = 2354.128
[info]   CI (99.9%): [32157.174, 50286.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   2023.675 ±(99.9%) 248.216 MB/sec [Average]
[info]   (min, avg, max) = (1963.433, 2023.675, 2104.653), stdev = 64.461
[info]   CI (99.9%): [1775.459, 2271.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   77567.858 ±(99.9%) 26998.671 B/op [Average]
[info]   (min, avg, max) = (72482.425, 77567.858, 87297.018), stdev = 7011.469
[info]   CI (99.9%): [50569.187, 104566.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1973.511 ±(99.9%) 545.222 MB/sec [Average]
[info]   (min, avg, max) = (1891.455, 1973.511, 2224.448), stdev = 141.592
[info]   CI (99.9%): [1428.289, 2518.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   75624.506 ±(99.9%) 31444.667 B/op [Average]
[info]   (min, avg, max) = (68833.409, 75624.506, 88506.471), stdev = 8166.080
[info]   CI (99.9%): [44179.839, 107069.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.986 ±(99.9%) 13.752 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.986, 8.308), stdev = 3.571
[info]   CI (99.9%): [≈ 0, 15.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   79.263 ±(99.9%) 547.266 B/op [Average]
[info]   (min, avg, max) = (0.770, 79.263, 330.545), stdev = 142.123
[info]   CI (99.9%): [≈ 0, 626.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   94.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 18.800, 41.000), stdev = 15.073
[info]   CI (99.9%): [94.000, 94.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.615 ops/s
[info] # Warmup Iteration   2: 224419.495 ops/s
[info] # Warmup Iteration   3: 288961.766 ops/s
[info] Iteration   1: 304743.620 ops/s
[info]                  ·gc.alloc.rate:                   319.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              1651.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1682.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.994 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 304624.512 ops/s
[info]                  ·gc.alloc.rate:               322.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          1667.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1683.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 304267.666 ops/s
[info]                  ·gc.alloc.rate:               321.961 MB/sec
[info]                  ·gc.alloc.rate.norm:          1665.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1681.432 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 305057.307 ops/s
[info]                  ·gc.alloc.rate:                   324.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              1672.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1677.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 297849.148 ops/s
[info]                  ·gc.alloc.rate:               315.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          1667.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1717.794 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   303308.451 ±(99.9%) 11801.817 ops/s [Average]
[info]   (min, avg, max) = (297849.148, 303308.451, 305057.307), stdev = 3064.894
[info]   CI (99.9%): [291506.633, 315110.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   320.902 ±(99.9%) 13.017 MB/sec [Average]
[info]   (min, avg, max) = (315.550, 320.902, 324.297), stdev = 3.380
[info]   CI (99.9%): [307.885, 333.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1664.875 ±(99.9%) 29.993 B/op [Average]
[info]   (min, avg, max) = (1651.936, 1664.875, 1672.842), stdev = 7.789
[info]   CI (99.9%): [1634.882, 1694.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   325.411 ±(99.9%) 1.414 MB/sec [Average]
[info]   (min, avg, max) = (325.134, 325.411, 325.837), stdev = 0.367
[info]   CI (99.9%): [323.997, 326.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1688.391 ±(99.9%) 63.909 B/op [Average]
[info]   (min, avg, max) = (1677.194, 1688.391, 1717.794), stdev = 16.597
[info]   CI (99.9%): [1624.482, 1752.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.249 ±(99.9%) 1.968 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.249, 1.161), stdev = 0.511
[info]   CI (99.9%): [≈ 0, 2.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.285 ±(99.9%) 10.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.285, 5.994), stdev = 2.639
[info]   CI (99.9%): [≈ 0, 11.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20390.490 ops/s
[info] # Warmup Iteration   2: 102935.231 ops/s
[info] # Warmup Iteration   3: 119571.982 ops/s
[info] Iteration   1: 124807.137 ops/s
[info]                  ·gc.alloc.rate:                   1155.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              14566.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12193.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 127601.223 ops/s
[info]                  ·gc.alloc.rate:                   1188.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              14651.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11922.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 127576.382 ops/s
[info]                  ·gc.alloc.rate:                   1191.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              14689.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1275.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15730.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 127963.402 ops/s
[info]                  ·gc.alloc.rate:               1180.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          14515.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:      957.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11769.739 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 126251.171 ops/s
[info]                  ·gc.alloc.rate:                   1175.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              14657.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1283.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15999.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   126839.863 ±(99.9%) 5043.830 ops/s [Average]
[info]   (min, avg, max) = (124807.137, 126839.863, 127963.402), stdev = 1309.867
[info]   CI (99.9%): [121796.033, 131883.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1178.189 ±(99.9%) 54.805 MB/sec [Average]
[info]   (min, avg, max) = (1155.106, 1178.189, 1191.102), stdev = 14.233
[info]   CI (99.9%): [1123.385, 1232.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   14616.234 ±(99.9%) 278.798 B/op [Average]
[info]   (min, avg, max) = (14515.826, 14616.234, 14689.738), stdev = 72.403
[info]   CI (99.9%): [14337.436, 14895.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1090.016 ±(99.9%) 666.443 MB/sec [Average]
[info]   (min, avg, max) = (957.278, 1090.016, 1283.596), stdev = 173.073
[info]   CI (99.9%): [423.573, 1756.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   13522.951 ±(99.9%) 8260.765 B/op [Average]
[info]   (min, avg, max) = (11769.739, 13522.951, 15999.380), stdev = 2145.294
[info]   CI (99.9%): [5262.187, 21783.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.258 ±(99.9%) 0.699 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.258, 0.514), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 14.000), stdev = 4.359
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 213129.033 ops/s
[info] # Warmup Iteration   2: 522658.117 ops/s
[info] # Warmup Iteration   3: 560763.960 ops/s
[info] Iteration   1: 562716.019 ops/s
[info]                  ·gc.alloc.rate:               373.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          1043.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 917.664 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 563555.111 ops/s
[info]                  ·gc.alloc.rate:               375.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          1049.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 916.274 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 543545.544 ops/s
[info]                  ·gc.alloc.rate:                   364.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              1054.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     950.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 556659.140 ops/s
[info]                  ·gc.alloc.rate:               374.087 MB/sec
[info]                  ·gc.alloc.rate.norm:          1057.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 928.560 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 549311.381 ops/s
[info]                  ·gc.alloc.rate:               369.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          1058.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 942.861 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   555157.439 ±(99.9%) 33287.511 ops/s [Average]
[info]   (min, avg, max) = (543545.544, 555157.439, 563555.111), stdev = 8644.661
[info]   CI (99.9%): [521869.928, 588444.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   371.275 ±(99.9%) 17.820 MB/sec [Average]
[info]   (min, avg, max) = (364.093, 371.275, 375.728), stdev = 4.628
[info]   CI (99.9%): [353.455, 389.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1052.570 ±(99.9%) 24.402 B/op [Average]
[info]   (min, avg, max) = (1043.244, 1052.570, 1058.455), stdev = 6.337
[info]   CI (99.9%): [1028.168, 1076.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   328.433 ±(99.9%) 1.574 MB/sec [Average]
[info]   (min, avg, max) = (328.097, 328.433, 329.105), stdev = 0.409
[info]   CI (99.9%): [326.860, 330.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   931.258 ±(99.9%) 58.975 B/op [Average]
[info]   (min, avg, max) = (916.274, 931.258, 950.931), stdev = 15.316
[info]   CI (99.9%): [872.283, 990.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2197.447 ops/s
[info] # Warmup Iteration   2: 21446.934 ops/s
[info] # Warmup Iteration   3: 48633.232 ops/s
[info] Iteration   1: 51480.664 ops/s
[info]                  ·gc.alloc.rate:                   2353.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              71924.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2274.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69498.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.510 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 49882.943 ops/s
[info]                  ·gc.alloc.rate:                   2288.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              72170.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72207.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.006 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 51715.970 ops/s
[info]                  ·gc.alloc.rate:                   2213.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              67363.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60050.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.801 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 52297.944 ops/s
[info]                  ·gc.alloc.rate:                   2249.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              67678.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2323.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69913.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.132 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 52667.210 ops/s
[info]                  ·gc.alloc.rate:                   2283.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              68217.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70039.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   51608.946 ±(99.9%) 4130.091 ops/s [Average]
[info]   (min, avg, max) = (49882.943, 51608.946, 52667.210), stdev = 1072.572
[info]   CI (99.9%): [47478.855, 55739.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2277.516 ±(99.9%) 199.954 MB/sec [Average]
[info]   (min, avg, max) = (2213.660, 2277.516, 2353.484), stdev = 51.927
[info]   CI (99.9%): [2077.562, 2477.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69470.967 ±(99.9%) 9138.939 B/op [Average]
[info]   (min, avg, max) = (67363.379, 69470.967, 72170.479), stdev = 2373.353
[info]   CI (99.9%): [60332.028, 78609.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2240.867 ±(99.9%) 585.561 MB/sec [Average]
[info]   (min, avg, max) = (1973.355, 2240.867, 2344.064), stdev = 152.068
[info]   CI (99.9%): [1655.307, 2826.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68342.121 ±(99.9%) 18303.877 B/op [Average]
[info]   (min, avg, max) = (60050.697, 68342.121, 72207.959), stdev = 4753.459
[info]   CI (99.9%): [50038.244, 86645.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.750 ±(99.9%) 8.873 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.750, 4.696), stdev = 2.304
[info]   CI (99.9%): [≈ 0, 10.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   54.214 ±(99.9%) 274.487 B/op [Average]
[info]   (min, avg, max) = (0.622, 54.214, 143.510), stdev = 71.283
[info]   CI (99.9%): [≈ 0, 328.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 16.000), stdev = 2.950
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25342.296 ops/s
[info] # Warmup Iteration   2: 81463.705 ops/s
[info] # Warmup Iteration   3: 90551.741 ops/s
[info] Iteration   1: 92997.862 ops/s
[info]                  ·gc.alloc.rate:                   745.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              12607.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16567.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 92942.752 ops/s
[info]                  ·gc.alloc.rate:               741.122 MB/sec
[info]                  ·gc.alloc.rate.norm:          12548.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11078.016 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 94346.027 ops/s
[info]                  ·gc.alloc.rate:                   757.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              12640.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10912.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 94092.946 ops/s
[info]                  ·gc.alloc.rate:                   751.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              12573.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10964.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.716 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 95079.468 ops/s
[info]                  ·gc.alloc.rate:                   762.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              12618.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16187.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   93891.811 ±(99.9%) 3527.678 ops/s [Average]
[info]   (min, avg, max) = (92942.752, 93891.811, 95079.468), stdev = 916.127
[info]   CI (99.9%): [90364.133, 97419.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   751.653 ±(99.9%) 33.862 MB/sec [Average]
[info]   (min, avg, max) = (741.122, 751.653, 762.426), stdev = 8.794
[info]   CI (99.9%): [717.792, 785.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12597.807 ±(99.9%) 141.738 B/op [Average]
[info]   (min, avg, max) = (12548.022, 12597.807, 12640.616), stdev = 36.809
[info]   CI (99.9%): [12456.070, 12739.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   784.255 ±(99.9%) 683.117 MB/sec [Average]
[info]   (min, avg, max) = (654.298, 784.255, 979.123), stdev = 177.403
[info]   CI (99.9%): [101.138, 1467.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13142.100 ±(99.9%) 11388.163 B/op [Average]
[info]   (min, avg, max) = (10912.596, 13142.100, 16567.916), stdev = 2957.470
[info]   CI (99.9%): [1753.937, 24530.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.873 ±(99.9%) 5.821 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.873, 3.510), stdev = 1.512
[info]   CI (99.9%): [≈ 0, 6.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.573 ±(99.9%) 97.374 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.573, 58.716), stdev = 25.288
[info]   CI (99.9%): [≈ 0, 111.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 14.000), stdev = 3.421
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.749 ops/s
[info] # Warmup Iteration   2: 93624.098 ops/s
[info] # Warmup Iteration   3: 114883.228 ops/s
[info] Iteration   1: 122523.346 ops/s
[info]                  ·gc.alloc.rate:                   467.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              6005.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8308.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.883 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 122108.449 ops/s
[info]                  ·gc.alloc.rate:               458.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          5914.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4164.253 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 121259.676 ops/s
[info]                  ·gc.alloc.rate:               457.088 MB/sec
[info]                  ·gc.alloc.rate.norm:          5932.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4197.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 122493.436 ops/s
[info]                  ·gc.alloc.rate:                   469.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              6031.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8315.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 122548.457 ops/s
[info]                  ·gc.alloc.rate:               465.969 MB/sec
[info]                  ·gc.alloc.rate.norm:          5983.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4157.892 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   122186.673 ±(99.9%) 2112.405 ops/s [Average]
[info]   (min, avg, max) = (121259.676, 122186.673, 122548.457), stdev = 548.585
[info]   CI (99.9%): [120074.268, 124299.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   463.786 ±(99.9%) 21.003 MB/sec [Average]
[info]   (min, avg, max) = (457.088, 463.786, 469.452), stdev = 5.454
[info]   CI (99.9%): [442.783, 484.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   5973.483 ±(99.9%) 189.347 B/op [Average]
[info]   (min, avg, max) = (5914.188, 5973.483, 6031.611), stdev = 49.173
[info]   CI (99.9%): [5784.136, 6162.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   452.868 ±(99.9%) 682.409 MB/sec [Average]
[info]   (min, avg, max) = (323.140, 452.868, 647.192), stdev = 177.219
[info]   CI (99.9%): [≈ 0, 1135.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   5828.733 ±(99.9%) 8728.925 B/op [Average]
[info]   (min, avg, max) = (4157.892, 5828.733, 8315.239), stdev = 2266.874
[info]   CI (99.9%): [≈ 0, 14557.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.582 ±(99.9%) 4.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.582, 2.883), stdev = 1.286
[info]   CI (99.9%): [≈ 0, 5.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   7.482 ±(99.9%) 63.619 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.482, 37.035), stdev = 16.522
[info]   CI (99.9%): [≈ 0, 71.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19840.773 ops/s
[info] # Warmup Iteration   2: 90859.627 ops/s
[info] # Warmup Iteration   3: 102850.647 ops/s
[info] Iteration   1: 107456.007 ops/s
[info]                  ·gc.alloc.rate:               403.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          5906.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4746.697 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 105923.945 ops/s
[info]                  ·gc.alloc.rate:                   404.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              6006.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4820.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 106755.470 ops/s
[info]                  ·gc.alloc.rate:                   401.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              5919.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4782.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 106506.744 ops/s
[info]                  ·gc.alloc.rate:                   413.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              6103.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9597.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 106825.539 ops/s
[info]                  ·gc.alloc.rate:               403.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          5940.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4789.542 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   106693.541 ±(99.9%) 2135.098 ops/s [Average]
[info]   (min, avg, max) = (105923.945, 106693.541, 107456.007), stdev = 554.478
[info]   CI (99.9%): [104558.443, 108828.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   405.072 ±(99.9%) 17.634 MB/sec [Average]
[info]   (min, avg, max) = (401.540, 405.072, 413.077), stdev = 4.579
[info]   CI (99.9%): [387.439, 422.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5975.353 ±(99.9%) 313.686 B/op [Average]
[info]   (min, avg, max) = (5906.112, 5975.353, 6103.860), stdev = 81.463
[info]   CI (99.9%): [5661.667, 6289.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   389.511 ±(99.9%) 559.674 MB/sec [Average]
[info]   (min, avg, max) = (324.112, 389.511, 649.513), stdev = 145.346
[info]   CI (99.9%): [≈ 0, 949.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5747.391 ±(99.9%) 8288.406 B/op [Average]
[info]   (min, avg, max) = (4746.697, 5747.391, 9597.567), stdev = 2152.473
[info]   CI (99.9%): [≈ 0, 14035.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 1.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 0.615), stdev = 0.270
[info]   CI (99.9%): [≈ 0, 1.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 9.000), stdev = 2.236
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46643.361 ops/s
[info] # Warmup Iteration   2: 102220.780 ops/s
[info] # Warmup Iteration   3: 112469.844 ops/s
[info] Iteration   1: 123652.052 ops/s
[info]                  ·gc.alloc.rate:                   465.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              5918.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4167.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.978 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 124138.395 ops/s
[info]                  ·gc.alloc.rate:                   473.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              6005.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8319.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 124431.079 ops/s
[info]                  ·gc.alloc.rate:               471.084 MB/sec
[info]                  ·gc.alloc.rate.norm:          5956.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4153.894 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 124121.228 ops/s
[info]                  ·gc.alloc.rate:                   476.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              6035.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8332.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 123925.842 ops/s
[info]                  ·gc.alloc.rate:                   467.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              5936.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4175.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.363 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   124053.719 ±(99.9%) 1109.055 ops/s [Average]
[info]   (min, avg, max) = (123652.052, 124053.719, 124431.079), stdev = 288.018
[info]   CI (99.9%): [122944.665, 125162.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   470.682 ±(99.9%) 17.410 MB/sec [Average]
[info]   (min, avg, max) = (465.003, 470.682, 476.173), stdev = 4.521
[info]   CI (99.9%): [453.272, 488.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5970.463 ±(99.9%) 187.378 B/op [Average]
[info]   (min, avg, max) = (5918.434, 5970.463, 6035.386), stdev = 48.662
[info]   CI (99.9%): [5783.084, 6157.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.661 ±(99.9%) 692.972 MB/sec [Average]
[info]   (min, avg, max) = (327.417, 459.661, 657.439), stdev = 179.963
[info]   CI (99.9%): [≈ 0, 1152.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5829.638 ±(99.9%) 8774.969 B/op [Average]
[info]   (min, avg, max) = (4153.894, 5829.638, 8332.892), stdev = 2278.832
[info]   CI (99.9%): [≈ 0, 14604.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.111 ±(99.9%) 0.775 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.111, 0.470), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 0.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.414 ±(99.9%) 9.860 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.414, 5.978), stdev = 2.560
[info]   CI (99.9%): [≈ 0, 11.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.702
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42450.422 ops/s
[info] # Warmup Iteration   2: 107676.568 ops/s
[info] # Warmup Iteration   3: 118549.030 ops/s
[info] Iteration   1: 120909.118 ops/s
[info]                  ·gc.alloc.rate:                   359.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              4674.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4261.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.166 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 121943.283 ops/s
[info]                  ·gc.alloc.rate:                   383.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              4948.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8455.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.537 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 122618.311 ops/s
[info]                  ·gc.alloc.rate:               365.170 MB/sec
[info]                  ·gc.alloc.rate.norm:          4686.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4207.062 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 118803.041 ops/s
[info]                  ·gc.alloc.rate:                   354.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              4700.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4346.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 121598.915 ops/s
[info]                  ·gc.alloc.rate:               368.403 MB/sec
[info]                  ·gc.alloc.rate.norm:          4768.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4246.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   121174.533 ±(99.9%) 5629.712 ops/s [Average]
[info]   (min, avg, max) = (118803.041, 121174.533, 122618.311), stdev = 1462.018
[info]   CI (99.9%): [115544.822, 126804.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   366.218 ±(99.9%) 42.500 MB/sec [Average]
[info]   (min, avg, max) = (354.830, 366.218, 383.574), stdev = 11.037
[info]   CI (99.9%): [323.717, 408.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4755.568 ±(99.9%) 438.725 B/op [Average]
[info]   (min, avg, max) = (4674.547, 4755.568, 4948.768), stdev = 113.936
[info]   CI (99.9%): [4316.843, 5194.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   393.377 ±(99.9%) 564.057 MB/sec [Average]
[info]   (min, avg, max) = (327.414, 393.377, 655.414), stdev = 146.484
[info]   CI (99.9%): [≈ 0, 957.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   5103.578 ±(99.9%) 7218.959 B/op [Average]
[info]   (min, avg, max) = (4207.062, 5103.578, 8455.981), stdev = 1874.741
[info]   CI (99.9%): [≈ 0, 12322.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.173 ±(99.9%) 1.312 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.173, 0.781), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.251 ±(99.9%) 17.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.251, 10.166), stdev = 4.433
[info]   CI (99.9%): [≈ 0, 19.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 8.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:07:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 877.628 ops/s
[info] # Warmup Iteration   2: 6624.981 ops/s
[info] # Warmup Iteration   3: 9070.081 ops/s
[info] Iteration   1: 11199.188 ops/s
[info]                  ·gc.alloc.rate:                   2289.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              321724.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330740.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      29.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4082.457 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         73.000 ms
[info] Iteration   2: 13709.589 ops/s
[info]                  ·gc.alloc.rate:                   2063.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              236863.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2046.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234920.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.390 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13850.437 ops/s
[info]                  ·gc.alloc.rate:                   2076.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              235965.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2113.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240098.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.096 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 12919.185 ops/s
[info]                  ·gc.alloc.rate:                   2245.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              273499.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2204.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268494.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.536 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 13296.548 ops/s
[info]                  ·gc.alloc.rate:                   2211.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              261741.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1921.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227370.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1164.647 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   12994.990 ±(99.9%) 4113.180 ops/s [Average]
[info]   (min, avg, max) = (11199.188, 12994.990, 13850.437), stdev = 1068.180
[info]   CI (99.9%): [8881.810, 17108.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   2177.180 ±(99.9%) 392.126 MB/sec [Average]
[info]   (min, avg, max) = (2063.214, 2177.180, 2289.373), stdev = 101.834
[info]   CI (99.9%): [1785.054, 2569.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   265958.701 ±(99.9%) 135193.534 B/op [Average]
[info]   (min, avg, max) = (235965.016, 265958.701, 321724.782), stdev = 35109.331
[info]   CI (99.9%): [130765.168, 401152.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2127.603 ±(99.9%) 627.930 MB/sec [Average]
[info]   (min, avg, max) = (1921.076, 2127.603, 2353.524), stdev = 163.071
[info]   CI (99.9%): [1499.673, 2755.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   260324.601 ±(99.9%) 162977.692 B/op [Average]
[info]   (min, avg, max) = (227370.198, 260324.601, 330740.024), stdev = 42324.789
[info]   CI (99.9%): [97346.909, 423302.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   7.799 ±(99.9%) 48.579 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 7.799, 29.050), stdev = 12.616
[info]   CI (99.9%): [≈ 0, 56.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1051.825 ±(99.9%) 6804.655 B/op [Average]
[info]   (min, avg, max) = (2.390, 1051.825, 4082.457), stdev = 1767.147
[info]   CI (99.9%): [≈ 0, 7856.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   123.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 24.600, 73.000), stdev = 27.153
[info]   CI (99.9%): [123.000, 123.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 613.625 ops/s
[info] # Warmup Iteration   2: 8342.935 ops/s
[info] # Warmup Iteration   3: 13162.557 ops/s
[info] Iteration   1: 13578.984 ops/s
[info]                  ·gc.alloc.rate:                   1956.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              226769.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224794.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.846 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 561.529 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 13774.366 ops/s
[info]                  ·gc.alloc.rate:                   1972.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              225383.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1931.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220660.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.087 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13250.968 ops/s
[info]                  ·gc.alloc.rate:                        1904.303 MB/sec
[info]                  ·gc.alloc.rate.norm:                   226176.456 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.014 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.675 B/op
[info]                  ·gc.churn.Metaspace:                   0.040 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              4.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1626.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          193178.158 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.865 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             340.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      19.778 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              50.000 ms
[info] Iteration   4: 13509.486 ops/s
[info]                  ·gc.alloc.rate:                   1975.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              230021.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229473.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.850 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 13844.809 ops/s
[info]                  ·gc.alloc.rate:                   2022.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              229834.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226571.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.733 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   13591.723 ±(99.9%) 903.979 ops/s [Average]
[info]   (min, avg, max) = (13250.968, 13591.723, 13844.809), stdev = 234.760
[info]   CI (99.9%): [12687.744, 14495.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1966.359 ±(99.9%) 163.339 MB/sec [Average]
[info]   (min, avg, max) = (1904.303, 1966.359, 2022.332), stdev = 42.419
[info]   CI (99.9%): [1803.020, 2129.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   227637.096 ±(99.9%) 8276.366 B/op [Average]
[info]   (min, avg, max) = (225383.302, 227637.096, 230021.433), stdev = 2149.346
[info]   CI (99.9%): [219360.730, 235913.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.335 ±(99.9%) 2.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.335, 1.675), stdev = 0.749
[info]   CI (99.9%): [≈ 0, 3.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.069 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.946 ±(99.9%) 8.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.946, 4.730), stdev = 2.115
[info]   CI (99.9%): [≈ 0, 9.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1892.431 ±(99.9%) 580.393 MB/sec [Average]
[info]   (min, avg, max) = (1626.472, 1892.431, 1993.623), stdev = 150.726
[info]   CI (99.9%): [1312.038, 2472.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   218935.553 ±(99.9%) 56791.849 B/op [Average]
[info]   (min, avg, max) = (193178.158, 218935.553, 229473.004), stdev = 14748.663
[info]   CI (99.9%): [162143.705, 275727.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.573 ±(99.9%) 4.933 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.573, 2.865), stdev = 1.281
[info]   CI (99.9%): [≈ 0, 5.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   68.046 ±(99.9%) 585.897 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.046, 340.230), stdev = 152.155
[info]   CI (99.9%): [≈ 0, 653.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.119 ±(99.9%) 8.054 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.119, 4.846), stdev = 2.092
[info]   CI (99.9%): [≈ 0, 9.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   129.596 ±(99.9%) 933.406 B/op [Average]
[info]   (min, avg, max) = (4.733, 129.596, 561.529), stdev = 242.403
[info]   CI (99.9%): [≈ 0, 1063.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   95.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 19.000, 50.000), stdev = 17.762
[info]   CI (99.9%): [95.000, 95.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77427.957 ops/s
[info] # Warmup Iteration   2: 190432.225 ops/s
[info] # Warmup Iteration   3: 227058.634 ops/s
[info] Iteration   1: 219299.285 ops/s
[info]                  ·gc.alloc.rate:               576.757 MB/sec
[info]                  ·gc.alloc.rate.norm:          4139.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2328.310 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 222694.220 ops/s
[info]                  ·gc.alloc.rate:               593.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          4194.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4585.657 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 222833.261 ops/s
[info]                  ·gc.alloc.rate:                   605.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              4276.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4587.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 227783.111 ops/s
[info]                  ·gc.alloc.rate:               609.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          4207.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4492.306 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 228539.368 ops/s
[info]                  ·gc.alloc.rate:                   614.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              4233.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4486.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.361 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   224229.849 ±(99.9%) 14890.683 ops/s [Average]
[info]   (min, avg, max) = (219299.285, 224229.849, 228539.368), stdev = 3867.063
[info]   CI (99.9%): [209339.166, 239120.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   599.985 ±(99.9%) 58.152 MB/sec [Average]
[info]   (min, avg, max) = (576.757, 599.985, 614.769), stdev = 15.102
[info]   CI (99.9%): [541.833, 658.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4210.312 ±(99.9%) 195.395 B/op [Average]
[info]   (min, avg, max) = (4139.103, 4210.312, 4276.864), stdev = 50.743
[info]   CI (99.9%): [4014.917, 4405.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   584.988 ±(99.9%) 560.872 MB/sec [Average]
[info]   (min, avg, max) = (324.435, 584.988, 651.534), stdev = 145.657
[info]   CI (99.9%): [24.117, 1145.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4096.096 ±(99.9%) 3809.892 B/op [Average]
[info]   (min, avg, max) = (2328.310, 4096.096, 4587.544), stdev = 989.417
[info]   CI (99.9%): [286.203, 7905.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.629 ±(99.9%) 5.324 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.629, 3.102), stdev = 1.383
[info]   CI (99.9%): [≈ 0, 5.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.331 ±(99.9%) 36.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.331, 21.361), stdev = 9.521
[info]   CI (99.9%): [≈ 0, 40.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 8.000), stdev = 2.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406.751 ops/s
[info] # Warmup Iteration   2: 2921.692 ops/s
[info] # Warmup Iteration   3: 5871.984 ops/s
[info] Iteration   1: 6823.996 ops/s
[info]                  ·gc.alloc.rate:                   1745.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              402495.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     376203.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.650 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6471.613 ops/s
[info]                  ·gc.alloc.rate:                   1652.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              401781.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     399148.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.125 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 6835.129 ops/s
[info]                  ·gc.alloc.rate:                   1740.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              400647.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380889.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 6786.827 ops/s
[info]                  ·gc.alloc.rate:                   1741.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              403688.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     385955.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.827 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6802.896 ops/s
[info]                  ·gc.alloc.rate:                   1756.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              406295.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     387128.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.816 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6744.092 ±(99.9%) 590.925 ops/s [Average]
[info]   (min, avg, max) = (6471.613, 6744.092, 6835.129), stdev = 153.461
[info]   CI (99.9%): [6153.168, 7335.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1727.274 ±(99.9%) 162.140 MB/sec [Average]
[info]   (min, avg, max) = (1652.811, 1727.274, 1756.259), stdev = 42.107
[info]   CI (99.9%): [1565.135, 1889.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   402981.815 ±(99.9%) 8304.550 B/op [Average]
[info]   (min, avg, max) = (400647.703, 402981.815, 406295.700), stdev = 2156.665
[info]   CI (99.9%): [394677.265, 411286.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1653.267 ±(99.9%) 64.568 MB/sec [Average]
[info]   (min, avg, max) = (1631.801, 1653.267, 1673.407), stdev = 16.768
[info]   CI (99.9%): [1588.699, 1717.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   385865.086 ±(99.9%) 33134.574 B/op [Average]
[info]   (min, avg, max) = (376203.139, 385865.086, 399148.967), stdev = 8604.944
[info]   CI (99.9%): [352730.512, 418999.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.149 ±(99.9%) 0.788 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.149, 0.500), stdev = 0.205
[info]   CI (99.9%): [≈ 0, 0.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.489 ±(99.9%) 181.125 B/op [Average]
[info]   (min, avg, max) = (4.816, 34.489, 115.026), stdev = 47.038
[info]   CI (99.9%): [≈ 0, 215.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4279.498 ops/s
[info] # Warmup Iteration   2: 18587.649 ops/s
[info] # Warmup Iteration   3: 31798.908 ops/s
[info] Iteration   1: 34495.519 ops/s
[info]                  ·gc.alloc.rate:               2067.869 MB/sec
[info]                  ·gc.alloc.rate.norm:          94330.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1937.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88381.757 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Iteration   2: 32994.372 ops/s
[info]                  ·gc.alloc.rate:                   2357.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              112383.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2277.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108575.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.391 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 28632.509 ops/s
[info]                  ·gc.alloc.rate:                   2273.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              124918.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2423.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133140.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 894.928 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         119.000 ms
[info] Iteration   4: 32359.753 ops/s
[info]                  ·gc.alloc.rate:                   2003.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              97416.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1822.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88625.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      19.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 958.220 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   5: 33810.990 ops/s
[info]                  ·gc.alloc.rate:                   2021.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              94100.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89350.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.845 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   32458.629 ±(99.9%) 8804.805 ops/s [Average]
[info]   (min, avg, max) = (28632.509, 32458.629, 34495.519), stdev = 2286.580
[info]   CI (99.9%): [23653.824, 41263.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2144.736 ±(99.9%) 617.297 MB/sec [Average]
[info]   (min, avg, max) = (2003.053, 2144.736, 2357.079), stdev = 160.310
[info]   CI (99.9%): [1527.440, 2762.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   104629.875 ±(99.9%) 52400.102 B/op [Average]
[info]   (min, avg, max) = (94100.632, 104629.875, 124918.361), stdev = 13608.140
[info]   CI (99.9%): [52229.772, 157029.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2076.051 ±(99.9%) 998.775 MB/sec [Average]
[info]   (min, avg, max) = (1822.307, 2076.051, 2423.415), stdev = 259.379
[info]   CI (99.9%): [1077.276, 3074.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   101614.850 ±(99.9%) 75471.190 B/op [Average]
[info]   (min, avg, max) = (88381.757, 101614.850, 133140.883), stdev = 19599.628
[info]   CI (99.9%): [26143.661, 177086.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   7.817 ±(99.9%) 36.377 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 7.817, 19.703), stdev = 9.447
[info]   CI (99.9%): [≈ 0, 44.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   400.077 ±(99.9%) 1865.749 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 400.077, 958.220), stdev = 484.529
[info]   CI (99.9%): [≈ 0, 2265.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.095
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   236.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 47.200, 119.000), stdev = 41.847
[info]   CI (99.9%): [236.000, 236.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5398.766 ops/s
[info] # Warmup Iteration   2: 23101.401 ops/s
[info] # Warmup Iteration   3: 29885.033 ops/s
[info] Iteration   1: 33662.713 ops/s
[info]                  ·gc.alloc.rate:                   1968.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              92035.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2177.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101808.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.299 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 294.484 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 35778.046 ops/s
[info]                  ·gc.alloc.rate:                   2153.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              94665.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1892.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83222.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.786 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 298.364 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 38305.056 ops/s
[info]                  ·gc.alloc.rate:                   1851.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              76081.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1870.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76831.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250.737 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 37650.927 ops/s
[info]                  ·gc.alloc.rate:                   1807.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              75541.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1900.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79445.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.636 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 36206.234 ops/s
[info]                  ·gc.alloc.rate:                   2190.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              95203.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1911.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83078.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 305.215 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   36320.595 ±(99.9%) 6963.079 ops/s [Average]
[info]   (min, avg, max) = (33662.713, 36320.595, 38305.056), stdev = 1808.289
[info]   CI (99.9%): [29357.516, 43283.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1994.206 ±(99.9%) 665.741 MB/sec [Average]
[info]   (min, avg, max) = (1807.110, 1994.206, 2190.237), stdev = 172.891
[info]   CI (99.9%): [1328.465, 2659.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   86705.688 ±(99.9%) 38578.619 B/op [Average]
[info]   (min, avg, max) = (75541.466, 86705.688, 95203.947), stdev = 10018.745
[info]   CI (99.9%): [48127.069, 125284.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1950.506 ±(99.9%) 492.767 MB/sec [Average]
[info]   (min, avg, max) = (1870.141, 1950.506, 2177.827), stdev = 127.970
[info]   CI (99.9%): [1457.739, 2443.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   84877.417 ±(99.9%) 37869.643 B/op [Average]
[info]   (min, avg, max) = (76831.889, 84877.417, 101808.635), stdev = 9834.626
[info]   CI (99.9%): [47007.774, 122747.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.413 ±(99.9%) 9.917 MB/sec [Average]
[info]   (min, avg, max) = (0.852, 5.413, 7.022), stdev = 2.576
[info]   CI (99.9%): [≈ 0, 15.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   236.887 ±(99.9%) 440.976 B/op [Average]
[info]   (min, avg, max) = (35.636, 236.887, 305.215), stdev = 114.520
[info]   CI (99.9%): [≈ 0, 677.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   119.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (20.000, 23.800, 28.000), stdev = 3.033
[info]   CI (99.9%): [119.000, 119.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128501.697 ops/s
[info] # Warmup Iteration   2: 303799.994 ops/s
[info] # Warmup Iteration   3: 314321.978 ops/s
[info] Iteration   1: 312226.262 ops/s
[info]                  ·gc.alloc.rate:               714.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          3602.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3314.262 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 316404.820 ops/s
[info]                  ·gc.alloc.rate:                   721.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              3588.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3273.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 317072.475 ops/s
[info]                  ·gc.alloc.rate:                   720.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              3575.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3270.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 307943.993 ops/s
[info]                  ·gc.alloc.rate:               708.658 MB/sec
[info]                  ·gc.alloc.rate.norm:          3620.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3370.664 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 318351.312 ops/s
[info]                  ·gc.alloc.rate:                   718.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              3550.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3263.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.640 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   314399.772 ±(99.9%) 16470.165 ops/s [Average]
[info]   (min, avg, max) = (307943.993, 314399.772, 318351.312), stdev = 4277.250
[info]   CI (99.9%): [297929.607, 330869.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   716.760 ±(99.9%) 19.936 MB/sec [Average]
[info]   (min, avg, max) = (708.658, 716.760, 721.496), stdev = 5.177
[info]   CI (99.9%): [696.824, 736.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3587.507 ±(99.9%) 103.063 B/op [Average]
[info]   (min, avg, max) = (3550.043, 3587.507, 3620.494), stdev = 26.765
[info]   CI (99.9%): [3484.444, 3690.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.977 ±(99.9%) 4.229 MB/sec [Average]
[info]   (min, avg, max) = (657.660, 658.977, 660.369), stdev = 1.098
[info]   CI (99.9%): [654.748, 663.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3298.526 ±(99.9%) 173.022 B/op [Average]
[info]   (min, avg, max) = (3263.822, 3298.526, 3370.664), stdev = 44.933
[info]   CI (99.9%): [3125.503, 3471.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 6.486 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.771), stdev = 1.684
[info]   CI (99.9%): [≈ 0, 7.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.749 ±(99.9%) 32.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.749, 18.640), stdev = 8.324
[info]   CI (99.9%): [≈ 0, 35.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133530.199 ops/s
[info] # Warmup Iteration   2: 341291.781 ops/s
[info] # Warmup Iteration   3: 354891.011 ops/s
[info] Iteration   1: 354671.129 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 354038.618 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 354145.688 ops/s
[info]                  ·gc.alloc.rate:      11.605 MB/sec
[info]                  ·gc.alloc.rate.norm: 51.574 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 354313.889 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 355021.377 ops/s
[info]                  ·gc.alloc.rate:      0.046 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.205 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   354438.140 ±(99.9%) 1558.243 ops/s [Average]
[info]   (min, avg, max) = (354038.618, 354438.140, 355021.377), stdev = 404.671
[info]   CI (99.9%): [352879.897, 355996.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.330 ±(99.9%) 19.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.330, 11.605), stdev = 5.185
[info]   CI (99.9%): [≈ 0, 22.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   10.357 ±(99.9%) 88.724 B/op [Average]
[info]   (min, avg, max) = (0.001, 10.357, 51.574), stdev = 23.041
[info]   CI (99.9%): [≈ 0, 99.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6203.306 ops/s
[info] # Warmup Iteration   2: 15743.900 ops/s
[info] # Warmup Iteration   3: 14972.101 ops/s
[info] Iteration   1: 15299.674 ops/s
[info]                  ·gc.alloc.rate:                   1508.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              156421.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136228.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 840.317 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         112.000 ms
[info] Iteration   2: 22843.324 ops/s
[info]                  ·gc.alloc.rate:                   2596.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              178772.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2447.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168512.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      21.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1496.531 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         63.000 ms
[info] Iteration   3: 38111.149 ops/s
[info]                  ·gc.alloc.rate:                   2614.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              107935.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2602.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107418.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      24.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 994.619 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   4: 38526.486 ops/s
[info]                  ·gc.alloc.rate:                   2758.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              112650.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2840.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115982.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.827 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   5: 39363.940 ops/s
[info]                  ·gc.alloc.rate:                   2129.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              85104.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79424.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.891 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 435.233 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         71.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   30828.914 ±(99.9%) 42621.305 ops/s [Average]
[info]   (min, avg, max) = (15299.674, 30828.914, 39363.940), stdev = 11068.617
[info]   CI (99.9%): [≈ 0, 73450.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2321.697 ±(99.9%) 1972.890 MB/sec [Average]
[info]   (min, avg, max) = (1508.891, 2321.697, 2758.889), stdev = 512.353
[info]   CI (99.9%): [348.807, 4294.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   128177.008 ±(99.9%) 147431.091 B/op [Average]
[info]   (min, avg, max) = (85104.871, 128177.008, 178772.882), stdev = 38287.386
[info]   CI (99.9%): [≈ 0, 275608.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2238.329 ±(99.9%) 2323.134 MB/sec [Average]
[info]   (min, avg, max) = (1314.103, 2238.329, 2840.498), stdev = 603.311
[info]   CI (99.9%): [≈ 0, 4561.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   121513.399 ±(99.9%) 128091.592 B/op [Average]
[info]   (min, avg, max) = (79424.258, 121513.399, 168512.947), stdev = 33264.980
[info]   CI (99.9%): [≈ 0, 249604.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   13.185 ±(99.9%) 36.999 MB/sec [Average]
[info]   (min, avg, max) = (1.098, 13.185, 24.097), stdev = 9.608
[info]   CI (99.9%): [≈ 0, 50.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   762.305 ±(99.9%) 2127.367 B/op [Average]
[info]   (min, avg, max) = (44.827, 762.305, 1496.531), stdev = 552.470
[info]   CI (99.9%): [≈ 0, 2889.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 11.000), stdev = 2.168
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   334.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (41.000, 66.800, 112.000), stdev = 27.986
[info]   CI (99.9%): [334.000, 334.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17914.365 ops/s
[info] # Warmup Iteration   2: 154860.329 ops/s
[info] # Warmup Iteration   3: 150418.855 ops/s
[info] Iteration   1: 170030.590 ops/s
[info]                  ·gc.alloc.rate:                   2682.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              24830.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2593.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24002.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.972 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 158072.365 ops/s
[info]                  ·gc.alloc.rate:                   2200.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              21908.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19481.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.674 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 157980.848 ops/s
[info]                  ·gc.alloc.rate:               2212.976 MB/sec
[info]                  ·gc.alloc.rate.norm:          22047.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2300.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22919.495 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 157784.066 ops/s
[info]                  ·gc.alloc.rate:                   2222.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              22166.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19875.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 157965.312 ops/s
[info]                  ·gc.alloc.rate:                   2245.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              22368.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2345.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23370.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   160366.636 ±(99.9%) 20806.281 ops/s [Average]
[info]   (min, avg, max) = (157784.066, 160366.636, 170030.590), stdev = 5403.325
[info]   CI (99.9%): [139560.355, 181172.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2312.811 ±(99.9%) 799.004 MB/sec [Average]
[info]   (min, avg, max) = (2200.376, 2312.811, 2682.829), stdev = 207.499
[info]   CI (99.9%): [1513.807, 3111.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22664.195 ±(99.9%) 4708.132 B/op [Average]
[info]   (min, avg, max) = (21908.423, 22664.195, 24830.466), stdev = 1222.687
[info]   CI (99.9%): [17956.064, 27372.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2237.860 ±(99.9%) 1020.798 MB/sec [Average]
[info]   (min, avg, max) = (1956.636, 2237.860, 2593.404), stdev = 265.098
[info]   CI (99.9%): [1217.061, 3258.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21929.924 ±(99.9%) 8069.124 B/op [Average]
[info]   (min, avg, max) = (19481.580, 21929.924, 24002.811), stdev = 2095.526
[info]   CI (99.9%): [13860.800, 29999.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.750 ±(99.9%) 3.791 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.750, 2.050), stdev = 0.984
[info]   CI (99.9%): [≈ 0, 4.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.178 ±(99.9%) 35.956 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.178, 18.972), stdev = 9.338
[info]   CI (99.9%): [≈ 0, 43.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 15.000), stdev = 2.775
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.654 ops/s
[info] # Warmup Iteration   2: 488726.308 ops/s
[info] # Warmup Iteration   3: 524013.141 ops/s
[info] Iteration   1: 539473.335 ops/s
[info]                  ·gc.alloc.rate:               575.147 MB/sec
[info]                  ·gc.alloc.rate.norm:          1677.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1896.771 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 539946.893 ops/s
[info]                  ·gc.alloc.rate:               569.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          1660.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 947.539 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 538395.166 ops/s
[info]                  ·gc.alloc.rate:                   574.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              1679.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1902.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 537766.978 ops/s
[info]                  ·gc.alloc.rate:                   582.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1703.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1906.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 543244.138 ops/s
[info]                  ·gc.alloc.rate:               582.065 MB/sec
[info]                  ·gc.alloc.rate.norm:          1686.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1887.448 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   539765.302 ±(99.9%) 8189.092 ops/s [Average]
[info]   (min, avg, max) = (537766.978, 539765.302, 543244.138), stdev = 2126.681
[info]   CI (99.9%): [531576.210, 547954.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   576.821 ±(99.9%) 20.661 MB/sec [Average]
[info]   (min, avg, max) = (569.687, 576.821, 582.318), stdev = 5.366
[info]   CI (99.9%): [556.160, 597.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1681.524 ±(99.9%) 60.466 B/op [Average]
[info]   (min, avg, max) = (1660.122, 1681.524, 1703.609), stdev = 15.703
[info]   CI (99.9%): [1621.058, 1741.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.951 ±(99.9%) 561.382 MB/sec [Average]
[info]   (min, avg, max) = (325.157, 585.951, 651.748), stdev = 145.789
[info]   CI (99.9%): [24.568, 1147.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1708.218 ±(99.9%) 1637.657 B/op [Average]
[info]   (min, avg, max) = (947.539, 1708.218, 1906.732), stdev = 425.294
[info]   CI (99.9%): [70.561, 3345.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.091), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28746.464 ops/s
[info] # Warmup Iteration   2: 257989.663 ops/s
[info] # Warmup Iteration   3: 366085.412 ops/s
[info] Iteration   1: 540985.484 ops/s
[info]                  ·gc.alloc.rate:                   520.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              1514.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     934.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 536510.715 ops/s
[info]                  ·gc.alloc.rate:               527.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          1547.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1883.921 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 519862.491 ops/s
[info]                  ·gc.alloc.rate:                   505.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              1528.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     972.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 519175.659 ops/s
[info]                  ·gc.alloc.rate:               514.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          1557.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1948.673 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 518511.499 ops/s
[info]                  ·gc.alloc.rate:               511.914 MB/sec
[info]                  ·gc.alloc.rate.norm:          1553.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1956.246 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   527009.170 ±(99.9%) 41751.797 ops/s [Average]
[info]   (min, avg, max) = (518511.499, 527009.170, 540985.484), stdev = 10842.809
[info]   CI (99.9%): [485257.373, 568760.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   515.839 ±(99.9%) 33.165 MB/sec [Average]
[info]   (min, avg, max) = (505.099, 515.839, 527.728), stdev = 8.613
[info]   CI (99.9%): [482.673, 549.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1540.451 ±(99.9%) 70.647 B/op [Average]
[info]   (min, avg, max) = (1514.166, 1540.451, 1557.518), stdev = 18.347
[info]   CI (99.9%): [1469.804, 1611.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   514.428 ±(99.9%) 679.544 MB/sec [Average]
[info]   (min, avg, max) = (321.094, 514.428, 644.516), stdev = 176.475
[info]   CI (99.9%): [≈ 0, 1193.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1539.015 ±(99.9%) 2062.998 B/op [Average]
[info]   (min, avg, max) = (934.173, 1539.015, 1956.246), stdev = 535.754
[info]   CI (99.9%): [≈ 0, 3602.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.063), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 264579.539 ops/s
[info] # Warmup Iteration   2: 645539.582 ops/s
[info] # Warmup Iteration   3: 683870.735 ops/s
[info] Iteration   1: 681036.299 ops/s
[info]                  ·gc.alloc.rate:                   458.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              1058.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1514.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 661945.983 ops/s
[info]                  ·gc.alloc.rate:                   439.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              1044.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     780.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 661950.072 ops/s
[info]                  ·gc.alloc.rate:                   439.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1045.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     780.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 680765.933 ops/s
[info]                  ·gc.alloc.rate:               460.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          1063.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1518.432 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 664432.036 ops/s
[info]                  ·gc.alloc.rate:               470.179 MB/sec
[info]                  ·gc.alloc.rate.norm:          1113.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 778.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   670026.065 ±(99.9%) 38428.027 ops/s [Average]
[info]   (min, avg, max) = (661945.983, 670026.065, 681036.299), stdev = 9979.636
[info]   CI (99.9%): [631598.038, 708454.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   453.548 ±(99.9%) 51.985 MB/sec [Average]
[info]   (min, avg, max) = (439.527, 453.548, 470.179), stdev = 13.500
[info]   CI (99.9%): [401.562, 505.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1065.172 ±(99.9%) 109.166 B/op [Average]
[info]   (min, avg, max) = (1044.514, 1065.172, 1113.697), stdev = 28.350
[info]   CI (99.9%): [956.006, 1174.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.659 ±(99.9%) 691.160 MB/sec [Average]
[info]   (min, avg, max) = (328.407, 459.659, 657.047), stdev = 179.492
[info]   CI (99.9%): [≈ 0, 1150.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1074.727 ±(99.9%) 1553.438 B/op [Average]
[info]   (min, avg, max) = (778.706, 1074.727, 1518.432), stdev = 403.423
[info]   CI (99.9%): [≈ 0, 2628.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.096), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.588
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3212.873 ops/s
[info] # Warmup Iteration   2: 68769.561 ops/s
[info] # Warmup Iteration   3: 110765.332 ops/s
[info] Iteration   1: 110955.947 ops/s
[info]                  ·gc.alloc.rate:                   3623.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              51390.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3296.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46756.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.973 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 111458.898 ops/s
[info]                  ·gc.alloc.rate:                   3677.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              51919.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3673.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51872.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.882 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 110965.029 ops/s
[info]                  ·gc.alloc.rate:                   3681.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              52202.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3712.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52631.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 110891.360 ops/s
[info]                  ·gc.alloc.rate:                   3666.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              52024.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3391.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48123.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 110134.248 ops/s
[info]                  ·gc.alloc.rate:                   3641.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              52043.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48549.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   110881.097 ±(99.9%) 1830.970 ops/s [Average]
[info]   (min, avg, max) = (110134.248, 110881.097, 111458.898), stdev = 475.497
[info]   CI (99.9%): [109050.127, 112712.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3658.252 ±(99.9%) 95.707 MB/sec [Average]
[info]   (min, avg, max) = (3623.483, 3658.252, 3681.818), stdev = 24.855
[info]   CI (99.9%): [3562.544, 3753.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51916.233 ±(99.9%) 1196.458 B/op [Average]
[info]   (min, avg, max) = (51390.644, 51916.233, 52202.517), stdev = 310.716
[info]   CI (99.9%): [50719.776, 53112.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3494.383 ±(99.9%) 716.927 MB/sec [Average]
[info]   (min, avg, max) = (3296.719, 3494.383, 3712.071), stdev = 186.184
[info]   CI (99.9%): [2777.456, 4211.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49586.589 ±(99.9%) 9764.970 B/op [Average]
[info]   (min, avg, max) = (46756.250, 49586.589, 52631.465), stdev = 2535.932
[info]   CI (99.9%): [39821.620, 59351.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.202 ±(99.9%) 1.383 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.202, 0.844), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.867 ±(99.9%) 19.619 B/op [Average]
[info]   (min, avg, max) = (0.297, 2.867, 11.973), stdev = 5.095
[info]   CI (99.9%): [≈ 0, 22.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   52.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.600, 17.000), stdev = 1.817
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:04:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69397.263 ops/s
[info] # Warmup Iteration   2: 210073.782 ops/s
[info] # Warmup Iteration   3: 227744.814 ops/s
[info] Iteration   1: 240577.431 ops/s
[info]                  ·gc.alloc.rate:                   1720.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              11255.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10720.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.238 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 239893.947 ops/s
[info]                  ·gc.alloc.rate:                   1740.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              11419.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12809.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.229 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 245878.095 ops/s
[info]                  ·gc.alloc.rate:                   1743.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              11159.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10457.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.533 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 245289.803 ops/s
[info]                  ·gc.alloc.rate:                   1755.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              11266.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10564.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 244827.105 ops/s
[info]                  ·gc.alloc.rate:               1760.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          11311.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10678.866 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   243293.276 ±(99.9%) 10882.974 ops/s [Average]
[info]   (min, avg, max) = (239893.947, 243293.276, 245878.095), stdev = 2826.274
[info]   CI (99.9%): [232410.303, 254176.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1744.102 ±(99.9%) 59.597 MB/sec [Average]
[info]   (min, avg, max) = (1720.573, 1744.102, 1760.090), stdev = 15.477
[info]   CI (99.9%): [1684.505, 1803.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11282.398 ±(99.9%) 364.523 B/op [Average]
[info]   (min, avg, max) = (11159.143, 11282.398, 11419.735), stdev = 94.665
[info]   CI (99.9%): [10917.875, 11646.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1706.618 ±(99.9%) 530.908 MB/sec [Average]
[info]   (min, avg, max) = (1633.698, 1706.618, 1952.530), stdev = 137.875
[info]   CI (99.9%): [1175.711, 2237.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11046.079 ±(99.9%) 3816.583 B/op [Average]
[info]   (min, avg, max) = (10457.192, 11046.079, 12809.524), stdev = 991.155
[info]   CI (99.9%): [7229.495, 14862.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.899 ±(99.9%) 7.031 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.899, 4.164), stdev = 1.826
[info]   CI (99.9%): [≈ 0, 7.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.880 ±(99.9%) 46.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.880, 27.238), stdev = 11.947
[info]   CI (99.9%): [≈ 0, 51.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.435
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.609 ops/s
[info] # Warmup Iteration   2: 1128183.472 ops/s
[info] # Warmup Iteration   3: 1222277.985 ops/s
[info] Iteration   1: 1221201.884 ops/s
[info]                  ·gc.alloc.rate:                   682.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              879.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1178734.086 ops/s
[info]                  ·gc.alloc.rate:                   656.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     869.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1210657.349 ops/s
[info]                  ·gc.alloc.rate:                   694.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              902.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1270.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1215257.957 ops/s
[info]                  ·gc.alloc.rate:                   689.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              892.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1231497.133 ops/s
[info]                  ·gc.alloc.rate:                   686.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.327 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   1211469.682 ±(99.9%) 76589.218 ops/s [Average]
[info]   (min, avg, max) = (1178734.086, 1211469.682, 1231497.133), stdev = 19889.977
[info]   CI (99.9%): [1134880.464, 1288058.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   681.950 ±(99.9%) 56.317 MB/sec [Average]
[info]   (min, avg, max) = (656.893, 681.950, 694.166), stdev = 14.625
[info]   CI (99.9%): [625.634, 738.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   885.692 ±(99.9%) 42.686 B/op [Average]
[info]   (min, avg, max) = (876.723, 885.692, 902.015), stdev = 11.085
[info]   CI (99.9%): [843.006, 928.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   716.880 ±(99.9%) 561.055 MB/sec [Average]
[info]   (min, avg, max) = (650.280, 716.880, 977.519), stdev = 145.704
[info]   CI (99.9%): [155.825, 1277.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   931.299 ±(99.9%) 731.545 B/op [Average]
[info]   (min, avg, max) = (833.452, 931.299, 1270.211), stdev = 189.980
[info]   CI (99.9%): [199.753, 1662.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.023 ±(99.9%) 8.456 MB/sec [Average]
[info]   (min, avg, max) = (0.014, 1.023, 4.951), stdev = 2.196
[info]   CI (99.9%): [≈ 0, 9.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.308 ±(99.9%) 10.805 B/op [Average]
[info]   (min, avg, max) = (0.018, 1.308, 6.327), stdev = 2.806
[info]   CI (99.9%): [≈ 0, 12.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 12.000), stdev = 2.608
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 363474.835 ops/s
[info] # Warmup Iteration   2: 1061287.741 ops/s
[info] # Warmup Iteration   3: 1227128.675 ops/s
[info] Iteration   1: 1235269.689 ops/s
[info]                  ·gc.alloc.rate:               684.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 827.564 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1235341.022 ops/s
[info]                  ·gc.alloc.rate:                   695.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              885.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1190059.474 ops/s
[info]                  ·gc.alloc.rate:                   667.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1198091.489 ops/s
[info]                  ·gc.alloc.rate:               680.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          893.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 858.446 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1216452.742 ops/s
[info]                  ·gc.alloc.rate:                   677.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.730 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   1215042.883 ±(99.9%) 80187.898 ops/s [Average]
[info]   (min, avg, max) = (1190059.474, 1215042.883, 1235341.022), stdev = 20824.543
[info]   CI (99.9%): [1134854.985, 1295230.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   680.901 ±(99.9%) 39.009 MB/sec [Average]
[info]   (min, avg, max) = (667.424, 680.901, 695.117), stdev = 10.131
[info]   CI (99.9%): [641.892, 719.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   881.849 ±(99.9%) 33.134 B/op [Average]
[info]   (min, avg, max) = (871.787, 881.849, 893.902), stdev = 8.605
[info]   CI (99.9%): [848.715, 914.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   652.180 ±(99.9%) 7.230 MB/sec [Average]
[info]   (min, avg, max) = (649.664, 652.180, 654.408), stdev = 1.878
[info]   CI (99.9%): [644.950, 659.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   844.815 ±(99.9%) 62.128 B/op [Average]
[info]   (min, avg, max) = (827.564, 844.815, 862.482), stdev = 16.134
[info]   CI (99.9%): [782.687, 906.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.744 ±(99.9%) 6.272 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.744, 3.657), stdev = 1.629
[info]   CI (99.9%): [≈ 0, 7.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.962 ±(99.9%) 8.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.962, 4.730), stdev = 2.106
[info]   CI (99.9%): [≈ 0, 9.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 663209.507 ops/s
[info] # Warmup Iteration   2: 1099030.398 ops/s
[info] # Warmup Iteration   3: 1132459.931 ops/s
[info] Iteration   1: 1118549.995 ops/s
[info]                  ·gc.alloc.rate:                   624.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     924.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1116393.652 ops/s
[info]                  ·gc.alloc.rate:                   618.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              872.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     463.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1107676.743 ops/s
[info]                  ·gc.alloc.rate:                   647.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     934.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1100282.067 ops/s
[info]                  ·gc.alloc.rate:                   633.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              905.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     941.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.953 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1140083.177 ops/s
[info]                  ·gc.alloc.rate:                   643.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              888.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     909.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1116597.127 ±(99.9%) 57798.283 ops/s [Average]
[info]   (min, avg, max) = (1100282.067, 1116597.127, 1140083.177), stdev = 15010.031
[info]   CI (99.9%): [1058798.844, 1174395.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   633.609 ±(99.9%) 46.990 MB/sec [Average]
[info]   (min, avg, max) = (618.790, 633.609, 647.630), stdev = 12.203
[info]   CI (99.9%): [586.619, 680.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   893.085 ±(99.9%) 75.889 B/op [Average]
[info]   (min, avg, max) = (872.329, 893.085, 920.169), stdev = 19.708
[info]   CI (99.9%): [817.196, 968.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   591.952 ±(99.9%) 567.255 MB/sec [Average]
[info]   (min, avg, max) = (328.431, 591.952, 658.491), stdev = 147.314
[info]   CI (99.9%): [24.698, 1159.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   834.376 ±(99.9%) 800.786 B/op [Average]
[info]   (min, avg, max) = (463.000, 834.376, 941.482), stdev = 207.961
[info]   CI (99.9%): [33.591, 1635.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.742 ±(99.9%) 4.912 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.742, 2.969), stdev = 1.276
[info]   CI (99.9%): [≈ 0, 5.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.032 ±(99.9%) 6.778 B/op [Average]
[info]   (min, avg, max) = (0.011, 1.032, 4.099), stdev = 1.760
[info]   CI (99.9%): [≈ 0, 7.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 8.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 670216.783 ops/s
[info] # Warmup Iteration   2: 934979.170 ops/s
[info] # Warmup Iteration   3: 1161710.854 ops/s
[info] Iteration   1: 1148731.041 ops/s
[info]                  ·gc.alloc.rate:      0.159 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.218 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1164741.669 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1165062.290 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1165758.268 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1165397.576 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1161938.169 ±(99.9%) 28466.693 ops/s [Average]
[info]   (min, avg, max) = (1148731.041, 1161938.169, 1165758.268), stdev = 7392.710
[info]   CI (99.9%): [1133471.476, 1190404.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.032 ±(99.9%) 0.273 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.032, 0.159), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.044 ±(99.9%) 0.375 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.044, 0.218), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:03:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5533.755 ops/s
[info] # Warmup Iteration   2: 20114.301 ops/s
[info] # Warmup Iteration   3: 37833.299 ops/s
[info] Iteration   1: 39688.197 ops/s
[info]                  ·gc.alloc.rate:                   2023.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              80215.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76858.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.556 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 37682.010 ops/s
[info]                  ·gc.alloc.rate:                   1940.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              81010.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80989.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.907 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.868 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 40490.225 ops/s
[info]                  ·gc.alloc.rate:                   1947.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              75701.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75284.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.046 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 39876.333 ops/s
[info]                  ·gc.alloc.rate:                   1913.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              75511.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64137.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.465 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 39808.419 ops/s
[info]                  ·gc.alloc.rate:                   1925.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              76094.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77983.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.646 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   39509.037 ±(99.9%) 4110.186 ops/s [Average]
[info]   (min, avg, max) = (37682.010, 39509.037, 40490.225), stdev = 1067.402
[info]   CI (99.9%): [35398.851, 43619.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1950.022 ±(99.9%) 165.608 MB/sec [Average]
[info]   (min, avg, max) = (1913.500, 1950.022, 2023.198), stdev = 43.008
[info]   CI (99.9%): [1784.414, 2115.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77706.868 ±(99.9%) 10303.700 B/op [Average]
[info]   (min, avg, max) = (75511.949, 77706.868, 81010.077), stdev = 2675.838
[info]   CI (99.9%): [67403.168, 88010.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1882.754 ±(99.9%) 557.252 MB/sec [Average]
[info]   (min, avg, max) = (1625.271, 1882.754, 1973.035), stdev = 144.717
[info]   CI (99.9%): [1325.501, 2440.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75050.794 ±(99.9%) 24827.453 B/op [Average]
[info]   (min, avg, max) = (64137.631, 75050.794, 80989.274), stdev = 6447.611
[info]   CI (99.9%): [50223.341, 99878.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.364 ±(99.9%) 8.100 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.364, 4.907), stdev = 2.104
[info]   CI (99.9%): [≈ 0, 9.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   56.116 ±(99.9%) 337.974 B/op [Average]
[info]   (min, avg, max) = (1.646, 56.116, 204.868), stdev = 87.771
[info]   CI (99.9%): [≈ 0, 394.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.400, 23.000), stdev = 6.656
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22181.340 ops/s
[info] # Warmup Iteration   2: 79794.552 ops/s
[info] # Warmup Iteration   3: 138622.798 ops/s
[info] Iteration   1: 138877.904 ops/s
[info]                  ·gc.alloc.rate:                   2182.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              24728.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2247.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25471.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.160 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.809 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   2: 141324.871 ops/s
[info]                  ·gc.alloc.rate:                   1774.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              19765.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1588.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17686.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.501 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.991 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 142855.906 ops/s
[info]                  ·gc.alloc.rate:                   1793.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              19748.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17628.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.066 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   4: 142362.598 ops/s
[info]                  ·gc.alloc.rate:                   1833.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              20276.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21225.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.316 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 143560.250 ops/s
[info]                  ·gc.alloc.rate:                   1807.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              19808.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1914.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20985.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   141796.306 ±(99.9%) 7019.972 ops/s [Average]
[info]   (min, avg, max) = (138877.904, 141796.306, 143560.250), stdev = 1823.064
[info]   CI (99.9%): [134776.334, 148816.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1878.214 ±(99.9%) 659.394 MB/sec [Average]
[info]   (min, avg, max) = (1774.974, 1878.214, 2182.110), stdev = 171.243
[info]   CI (99.9%): [1218.819, 2537.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20865.562 ±(99.9%) 8357.755 B/op [Average]
[info]   (min, avg, max) = (19748.201, 20865.562, 24728.511), stdev = 2170.482
[info]   CI (99.9%): [12507.807, 29223.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1854.123 ±(99.9%) 1050.635 MB/sec [Average]
[info]   (min, avg, max) = (1588.264, 1854.123, 2247.694), stdev = 272.847
[info]   CI (99.9%): [803.488, 2904.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20599.481 ±(99.9%) 12416.412 B/op [Average]
[info]   (min, avg, max) = (17628.677, 20599.481, 25471.726), stdev = 3224.503
[info]   CI (99.9%): [8183.069, 33015.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.343 ±(99.9%) 8.484 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.343, 6.160), stdev = 2.203
[info]   CI (99.9%): [≈ 0, 11.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   37.328 ±(99.9%) 95.963 B/op [Average]
[info]   (min, avg, max) = (0.456, 37.328, 69.809), stdev = 24.921
[info]   CI (99.9%): [≈ 0, 133.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   112.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 22.400, 38.000), stdev = 10.784
[info]   CI (99.9%): [112.000, 112.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33850.973 ops/s
[info] # Warmup Iteration   2: 172033.759 ops/s
[info] # Warmup Iteration   3: 187396.725 ops/s
[info] Iteration   1: 191468.977 ops/s
[info]                  ·gc.alloc.rate:                   1135.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              9336.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          928.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7633.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.485 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.649 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 192299.898 ops/s
[info]                  ·gc.alloc.rate:                   1151.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              9424.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1237.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10127.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.645 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 191899.259 ops/s
[info]                  ·gc.alloc.rate:                   1146.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              9406.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1246.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10224.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.751 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 195554.252 ops/s
[info]                  ·gc.alloc.rate:                   1163.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              9360.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          941.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7575.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 194852.567 ops/s
[info]                  ·gc.alloc.rate:                   1166.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              9424.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1249.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10093.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.549 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   193214.991 ±(99.9%) 7144.712 ops/s [Average]
[info]   (min, avg, max) = (191468.977, 193214.991, 195554.252), stdev = 1855.459
[info]   CI (99.9%): [186070.279, 200359.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1152.897 ±(99.9%) 48.052 MB/sec [Average]
[info]   (min, avg, max) = (1135.927, 1152.897, 1166.773), stdev = 12.479
[info]   CI (99.9%): [1104.846, 1200.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9390.522 ±(99.9%) 154.150 B/op [Average]
[info]   (min, avg, max) = (9336.593, 9390.522, 9424.858), stdev = 40.032
[info]   CI (99.9%): [9236.373, 9544.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1120.790 ±(99.9%) 653.336 MB/sec [Average]
[info]   (min, avg, max) = (928.687, 1120.790, 1249.711), stdev = 169.669
[info]   CI (99.9%): [467.454, 1774.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9130.939 ±(99.9%) 5369.576 B/op [Average]
[info]   (min, avg, max) = (7575.688, 9130.939, 10224.666), stdev = 1394.462
[info]   CI (99.9%): [3761.363, 14500.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.641 ±(99.9%) 4.970 MB/sec [Average]
[info]   (min, avg, max) = (0.812, 2.641, 4.115), stdev = 1.291
[info]   CI (99.9%): [≈ 0, 7.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21.540 ±(99.9%) 40.936 B/op [Average]
[info]   (min, avg, max) = (6.645, 21.540, 33.751), stdev = 10.631
[info]   CI (99.9%): [≈ 0, 62.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.600, 22.000), stdev = 6.656
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83205.537 ops/s
[info] # Warmup Iteration   2: 171953.402 ops/s
[info] # Warmup Iteration   3: 247753.890 ops/s
[info] Iteration   1: 243380.339 ops/s
[info]                  ·gc.alloc.rate:                   1309.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              8465.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1285.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8309.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.837 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 250813.444 ops/s
[info]                  ·gc.alloc.rate:                   1340.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              8409.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8076.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.401 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 252219.241 ops/s
[info]                  ·gc.alloc.rate:                   1345.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              8395.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8026.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.151 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 252312.190 ops/s
[info]                  ·gc.alloc.rate:                   1358.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              8471.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1282.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8000.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 249857.128 ops/s
[info]                  ·gc.alloc.rate:                   1352.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              8515.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8103.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   249716.468 ±(99.9%) 14196.730 ops/s [Average]
[info]   (min, avg, max) = (243380.339, 249716.468, 252312.190), stdev = 3686.846
[info]   CI (99.9%): [235519.739, 263913.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1341.167 ±(99.9%) 72.632 MB/sec [Average]
[info]   (min, avg, max) = (1309.560, 1341.167, 1358.066), stdev = 18.862
[info]   CI (99.9%): [1268.535, 1413.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8451.295 ±(99.9%) 188.880 B/op [Average]
[info]   (min, avg, max) = (8395.065, 8451.295, 8515.379), stdev = 49.052
[info]   CI (99.9%): [8262.415, 8640.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1285.756 ±(99.9%) 7.206 MB/sec [Average]
[info]   (min, avg, max) = (1282.678, 1285.756, 1287.519), stdev = 1.871
[info]   CI (99.9%): [1278.550, 1292.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8103.385 ±(99.9%) 470.259 B/op [Average]
[info]   (min, avg, max) = (8000.892, 8103.385, 8309.656), stdev = 122.125
[info]   CI (99.9%): [7633.126, 8573.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.395 ±(99.9%) 5.732 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.395, 3.151), stdev = 1.489
[info]   CI (99.9%): [≈ 0, 7.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.832 ±(99.9%) 36.312 B/op [Average]
[info]   (min, avg, max) = (0.130, 8.832, 19.662), stdev = 9.430
[info]   CI (99.9%): [≈ 0, 45.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.400, 20.000), stdev = 6.025
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:02:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2242.010 ops/s
[info] # Warmup Iteration   2: 52581.948 ops/s
[info] # Warmup Iteration   3: 85623.449 ops/s
[info] Iteration   1: 93205.933 ops/s
[info]                  ·gc.alloc.rate:                   3239.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2957.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49936.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.599 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 101436.483 ops/s
[info]                  ·gc.alloc.rate:                   3360.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              52121.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3303.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51237.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.230 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 101774.360 ops/s
[info]                  ·gc.alloc.rate:                   3387.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              52381.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3342.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51681.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.966 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 101501.855 ops/s
[info]                  ·gc.alloc.rate:                   3388.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              52544.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3372.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52291.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 101674.401 ops/s
[info]                  ·gc.alloc.rate:                   3360.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              52002.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52464.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.644 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   99918.606 ±(99.9%) 14458.803 ops/s [Average]
[info]   (min, avg, max) = (93205.933, 99918.606, 101774.360), stdev = 3754.905
[info]   CI (99.9%): [85459.804, 114377.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3347.498 ±(99.9%) 237.578 MB/sec [Average]
[info]   (min, avg, max) = (3239.878, 3347.498, 3388.720), stdev = 61.698
[info]   CI (99.9%): [3109.920, 3585.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52751.005 ±(99.9%) 4283.511 B/op [Average]
[info]   (min, avg, max) = (52002.974, 52751.005, 54704.177), stdev = 1112.414
[info]   CI (99.9%): [48467.494, 57034.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3273.282 ±(99.9%) 691.532 MB/sec [Average]
[info]   (min, avg, max) = (2957.493, 3273.282, 3390.726), stdev = 179.589
[info]   CI (99.9%): [2581.751, 3964.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   51522.503 ±(99.9%) 3899.948 B/op [Average]
[info]   (min, avg, max) = (49936.208, 51522.503, 52464.890), stdev = 1012.804
[info]   CI (99.9%): [47622.555, 55422.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 5.636 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.737, 3.352), stdev = 1.464
[info]   CI (99.9%): [≈ 0, 6.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   12.352 ±(99.9%) 95.345 B/op [Average]
[info]   (min, avg, max) = (0.323, 12.352, 56.599), stdev = 24.761
[info]   CI (99.9%): [≈ 0, 107.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.200, 17.000), stdev = 1.095
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52508.205 ops/s
[info] # Warmup Iteration   2: 209768.240 ops/s
[info] # Warmup Iteration   3: 213325.634 ops/s
[info] Iteration   1: 234851.072 ops/s
[info]                  ·gc.alloc.rate:                   1524.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              10216.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8785.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.595 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 235092.483 ops/s
[info]                  ·gc.alloc.rate:                   1549.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              10366.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10895.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.272 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 238068.967 ops/s
[info]                  ·gc.alloc.rate:                   1539.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              10174.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8590.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 236648.013 ops/s
[info]                  ·gc.alloc.rate:                   1534.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              10206.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10861.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 233683.384 ops/s
[info]                  ·gc.alloc.rate:                   1536.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              10342.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11104.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   235668.784 ±(99.9%) 6575.012 ops/s [Average]
[info]   (min, avg, max) = (233683.384, 235668.784, 238068.967), stdev = 1707.510
[info]   CI (99.9%): [229093.772, 242243.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1536.789 ±(99.9%) 33.755 MB/sec [Average]
[info]   (min, avg, max) = (1524.726, 1536.789, 1549.086), stdev = 8.766
[info]   CI (99.9%): [1503.034, 1570.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10261.296 ±(99.9%) 334.126 B/op [Average]
[info]   (min, avg, max) = (10174.949, 10261.296, 10366.300), stdev = 86.771
[info]   CI (99.9%): [9927.171, 10595.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1504.282 ±(99.9%) 700.192 MB/sec [Average]
[info]   (min, avg, max) = (1299.445, 1504.282, 1649.548), stdev = 181.838
[info]   CI (99.9%): [804.090, 2204.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10047.373 ±(99.9%) 4799.005 B/op [Average]
[info]   (min, avg, max) = (8590.301, 10047.373, 11104.137), stdev = 1246.286
[info]   CI (99.9%): [5248.368, 14846.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 5.791 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.921, 3.521), stdev = 1.504
[info]   CI (99.9%): [≈ 0, 6.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.167 ±(99.9%) 38.806 B/op [Average]
[info]   (min, avg, max) = (0.140, 6.167, 23.595), stdev = 10.078
[info]   CI (99.9%): [≈ 0, 44.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 17.000), stdev = 4.658
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178717.079 ops/s
[info] # Warmup Iteration   2: 608244.693 ops/s
[info] # Warmup Iteration   3: 676565.983 ops/s
[info] Iteration   1: 680367.959 ops/s
[info]                  ·gc.alloc.rate:                   528.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              1221.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     740.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 673042.518 ops/s
[info]                  ·gc.alloc.rate:               529.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          1238.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1498.540 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 678287.364 ops/s
[info]                  ·gc.alloc.rate:               540.567 MB/sec
[info]                  ·gc.alloc.rate.norm:          1254.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1491.597 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 666670.269 ops/s
[info]                  ·gc.alloc.rate:                   520.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              1229.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     760.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 678614.591 ops/s
[info]                  ·gc.alloc.rate:               544.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          1263.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1500.175 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   675396.540 ±(99.9%) 21535.821 ops/s [Average]
[info]   (min, avg, max) = (666670.269, 675396.540, 680367.959), stdev = 5592.784
[info]   CI (99.9%): [653860.720, 696932.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   532.783 ±(99.9%) 37.276 MB/sec [Average]
[info]   (min, avg, max) = (520.812, 532.783, 544.641), stdev = 9.680
[info]   CI (99.9%): [495.508, 570.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1241.413 ±(99.9%) 65.624 B/op [Average]
[info]   (min, avg, max) = (1221.938, 1241.413, 1263.009), stdev = 17.042
[info]   CI (99.9%): [1175.789, 1307.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   514.573 ±(99.9%) 680.140 MB/sec [Average]
[info]   (min, avg, max) = (320.105, 514.573, 646.913), stdev = 176.630
[info]   CI (99.9%): [≈ 0, 1194.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1198.224 ±(99.9%) 1574.436 B/op [Average]
[info]   (min, avg, max) = (740.436, 1198.224, 1500.175), stdev = 408.876
[info]   CI (99.9%): [≈ 0, 2772.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.049), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 416857.901 ops/s
[info] # Warmup Iteration   2: 534803.326 ops/s
[info] # Warmup Iteration   3: 679914.356 ops/s
[info] Iteration   1: 684725.896 ops/s
[info]                  ·gc.alloc.rate:                   536.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     754.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 676724.395 ops/s
[info]                  ·gc.alloc.rate:               543.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          1263.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1527.662 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 672489.425 ops/s
[info]                  ·gc.alloc.rate:                   536.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1256.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1540.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 671766.207 ops/s
[info]                  ·gc.alloc.rate:                   527.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              1235.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     771.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 671742.558 ops/s
[info]                  ·gc.alloc.rate:                   534.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              1252.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   675489.696 ±(99.9%) 21416.895 ops/s [Average]
[info]   (min, avg, max) = (671742.558, 675489.696, 684725.896), stdev = 5561.900
[info]   CI (99.9%): [654072.802, 696906.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   535.693 ±(99.9%) 21.862 MB/sec [Average]
[info]   (min, avg, max) = (527.409, 535.693, 543.270), stdev = 5.678
[info]   CI (99.9%): [513.831, 557.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1247.948 ±(99.9%) 51.316 B/op [Average]
[info]   (min, avg, max) = (1232.666, 1247.948, 1263.200), stdev = 13.327
[info]   CI (99.9%): [1196.631, 1299.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.440 ±(99.9%) 694.756 MB/sec [Average]
[info]   (min, avg, max) = (328.100, 526.440, 659.311), stdev = 180.426
[info]   CI (99.9%): [≈ 0, 1221.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1227.647 ±(99.9%) 1633.762 B/op [Average]
[info]   (min, avg, max) = (754.138, 1227.647, 1544.388), stdev = 424.283
[info]   CI (99.9%): [≈ 0, 2861.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.097), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 428867.411 ops/s
[info] # Warmup Iteration   2: 620942.834 ops/s
[info] # Warmup Iteration   3: 691078.464 ops/s
[info] Iteration   1: 690091.684 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 692519.513 ops/s
[info]                  ·gc.alloc.rate:      0.151 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.344 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 692116.449 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 692655.403 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 692058.986 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   691888.407 ±(99.9%) 3990.525 ops/s [Average]
[info]   (min, avg, max) = (690091.684, 691888.407, 692655.403), stdev = 1036.327
[info]   CI (99.9%): [687897.882, 695878.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.030 ±(99.9%) 0.260 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.030, 0.151), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.069 ±(99.9%) 0.591 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.069, 0.344), stdev = 0.153
[info]   CI (99.9%): [≈ 0, 0.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:01:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40859.335 ops/s
[info] # Warmup Iteration   2: 496844.794 ops/s
[info] # Warmup Iteration   3: 554897.734 ops/s
[info] Iteration   1: 605249.268 ops/s
[info]                  ·gc.alloc.rate:                   1493.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              3883.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3403.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 600574.979 ops/s
[info]                  ·gc.alloc.rate:                   1482.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              3886.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4309.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.375 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 615625.829 ops/s
[info]                  ·gc.alloc.rate:                   1519.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              3884.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3366.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 605891.481 ops/s
[info]                  ·gc.alloc.rate:                   1489.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              3869.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3434.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 615492.813 ops/s
[info]                  ·gc.alloc.rate:                   1546.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              3953.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4253.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   608566.874 ±(99.9%) 25818.854 ops/s [Average]
[info]   (min, avg, max) = (600574.979, 608566.874, 615625.829), stdev = 6705.074
[info]   CI (99.9%): [582748.020, 634385.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1506.531 ±(99.9%) 101.260 MB/sec [Average]
[info]   (min, avg, max) = (1482.987, 1506.531, 1546.562), stdev = 26.297
[info]   CI (99.9%): [1405.272, 1607.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3895.141 ±(99.9%) 127.461 B/op [Average]
[info]   (min, avg, max) = (3869.067, 3895.141, 3953.098), stdev = 33.101
[info]   CI (99.9%): [3767.680, 4022.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1451.545 ±(99.9%) 713.394 MB/sec [Average]
[info]   (min, avg, max) = (1309.553, 1451.545, 1664.118), stdev = 185.266
[info]   CI (99.9%): [738.151, 2164.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3753.698 ±(99.9%) 1859.091 B/op [Average]
[info]   (min, avg, max) = (3366.896, 3753.698, 4309.384), stdev = 482.800
[info]   CI (99.9%): [1894.607, 5612.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.439 ±(99.9%) 3.470 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.439, 2.051), stdev = 0.901
[info]   CI (99.9%): [≈ 0, 3.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.150 ±(99.9%) 9.095 B/op [Average]
[info]   (min, avg, max) = (0.053, 1.150, 5.375), stdev = 2.362
[info]   CI (99.9%): [≈ 0, 10.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 823.621 ops/s
[info] # Warmup Iteration   2: 6057.288 ops/s
[info] # Warmup Iteration   3: 10841.725 ops/s
[info] Iteration   1: 11904.565 ops/s
[info]                  ·gc.alloc.rate:                   1490.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              197071.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171562.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.752 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 11871.328 ops/s
[info]                  ·gc.alloc.rate:                   1491.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              197669.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215711.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 11864.676 ops/s
[info]                  ·gc.alloc.rate:                   1472.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              195345.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173820.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.092 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 11732.354 ops/s
[info]                  ·gc.alloc.rate:               1572.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          210928.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 221394.839 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 11656.044 ops/s
[info]                  ·gc.alloc.rate:                   1535.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              207216.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179349.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 215.821 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   11805.793 ±(99.9%) 409.944 ops/s [Average]
[info]   (min, avg, max) = (11656.044, 11805.793, 11904.565), stdev = 106.461
[info]   CI (99.9%): [11395.850, 12215.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1512.474 ±(99.9%) 156.172 MB/sec [Average]
[info]   (min, avg, max) = (1472.774, 1512.474, 1572.310), stdev = 40.557
[info]   CI (99.9%): [1356.302, 1668.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   201646.514 ±(99.9%) 26791.172 B/op [Average]
[info]   (min, avg, max) = (195345.948, 201646.514, 210928.817), stdev = 6957.582
[info]   CI (99.9%): [174855.341, 228437.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1442.961 ±(99.9%) 690.755 MB/sec [Average]
[info]   (min, avg, max) = (1297.885, 1442.961, 1650.326), stdev = 179.387
[info]   CI (99.9%): [752.206, 2133.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   192367.873 ±(99.9%) 93012.172 B/op [Average]
[info]   (min, avg, max) = (171562.746, 192367.873, 221394.839), stdev = 24154.966
[info]   CI (99.9%): [99355.701, 285380.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.366 ±(99.9%) 2.666 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.366, 1.599), stdev = 0.692
[info]   CI (99.9%): [≈ 0, 3.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   49.237 ±(99.9%) 360.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.237, 215.821), stdev = 93.519
[info]   CI (99.9%): [≈ 0, 409.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1094.223 ops/s
[info] # Warmup Iteration   2: 6140.485 ops/s
[info] # Warmup Iteration   3: 11816.369 ops/s
[info] Iteration   1: 11813.730 ops/s
[info]                  ·gc.alloc.rate:                   1394.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              185771.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173224.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.413 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 11883.151 ops/s
[info]                  ·gc.alloc.rate:                   1396.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              185003.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215317.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.533 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 600.304 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 11563.014 ops/s
[info]                  ·gc.alloc.rate:                        1348.163 MB/sec
[info]                  ·gc.alloc.rate.norm:                   183474.193 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.845 B/op
[info]                  ·gc.churn.Metaspace:                   0.058 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              7.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1297.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          176548.270 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.052 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             279.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      110.502 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              43.000 ms
[info] Iteration   4: 11514.172 ops/s
[info]                  ·gc.alloc.rate:                   1384.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              189249.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176917.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.527 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 12041.828 ops/s
[info]                  ·gc.alloc.rate:                   1408.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              184064.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170293.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.721 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   11763.179 ±(99.9%) 853.821 ops/s [Average]
[info]   (min, avg, max) = (11514.172, 11763.179, 12041.828), stdev = 221.735
[info]   CI (99.9%): [10909.358, 12617.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1386.614 ±(99.9%) 89.287 MB/sec [Average]
[info]   (min, avg, max) = (1348.163, 1386.614, 1408.997), stdev = 23.188
[info]   CI (99.9%): [1297.327, 1475.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   185512.641 ±(99.9%) 8726.206 B/op [Average]
[info]   (min, avg, max) = (183474.193, 185512.641, 189249.503), stdev = 2266.168
[info]   CI (99.9%): [176786.435, 194238.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.569 ±(99.9%) 4.899 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.569, 2.845), stdev = 1.272
[info]   CI (99.9%): [≈ 0, 5.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.058), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.581 ±(99.9%) 13.614 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.581, 7.906), stdev = 3.536
[info]   CI (99.9%): [≈ 0, 15.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1364.249 ±(99.9%) 563.063 MB/sec [Average]
[info]   (min, avg, max) = (1294.345, 1364.249, 1625.753), stdev = 146.226
[info]   CI (99.9%): [801.186, 1927.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   182460.286 ±(99.9%) 71486.457 B/op [Average]
[info]   (min, avg, max) = (170293.479, 182460.286, 215317.604), stdev = 18564.806
[info]   CI (99.9%): [110973.829, 253946.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.410 ±(99.9%) 3.534 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.410, 2.052), stdev = 0.918
[info]   CI (99.9%): [≈ 0, 3.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   55.858 ±(99.9%) 480.950 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 55.858, 279.288), stdev = 124.901
[info]   CI (99.9%): [≈ 0, 536.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.146 ±(99.9%) 7.393 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.146, 4.533), stdev = 1.920
[info]   CI (99.9%): [≈ 0, 8.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   152.693 ±(99.9%) 978.129 B/op [Average]
[info]   (min, avg, max) = (2.721, 152.693, 600.304), stdev = 254.017
[info]   CI (99.9%): [≈ 0, 1130.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 18.000, 43.000), stdev = 15.149
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138518.045 ops/s
[info] # Warmup Iteration   2: 244207.992 ops/s
[info] # Warmup Iteration   3: 282966.720 ops/s
[info] Iteration   1: 324172.759 ops/s
[info]                  ·gc.alloc.rate:                   2156.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              10469.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9476.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.256 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 325532.295 ops/s
[info]                  ·gc.alloc.rate:                   2170.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              10492.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11035.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 323387.819 ops/s
[info]                  ·gc.alloc.rate:                   2183.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              10626.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9618.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 322112.061 ops/s
[info]                  ·gc.alloc.rate:                   2174.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              10626.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1996.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9754.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.305 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 322250.741 ops/s
[info]                  ·gc.alloc.rate:                   2176.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              10629.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9827.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   323491.135 ±(99.9%) 5473.484 ops/s [Average]
[info]   (min, avg, max) = (322112.061, 323491.135, 325532.295), stdev = 1421.446
[info]   CI (99.9%): [318017.651, 328964.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2172.501 ±(99.9%) 39.348 MB/sec [Average]
[info]   (min, avg, max) = (2156.364, 2172.501, 2183.858), stdev = 10.218
[info]   CI (99.9%): [2133.154, 2211.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10568.801 ±(99.9%) 311.087 B/op [Average]
[info]   (min, avg, max) = (10469.212, 10568.801, 10629.830), stdev = 80.788
[info]   CI (99.9%): [10257.713, 10879.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2044.156 ±(99.9%) 521.529 MB/sec [Average]
[info]   (min, avg, max) = (1951.838, 2044.156, 2283.011), stdev = 135.439
[info]   CI (99.9%): [1522.627, 2565.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9942.733 ±(99.9%) 2409.347 B/op [Average]
[info]   (min, avg, max) = (9476.234, 9942.733, 11035.896), stdev = 625.700
[info]   CI (99.9%): [7533.386, 12352.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.241 ±(99.9%) 1.812 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.241, 1.083), stdev = 0.470
[info]   CI (99.9%): [≈ 0, 2.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.173 ±(99.9%) 8.795 B/op [Average]
[info]   (min, avg, max) = (0.101, 1.173, 5.256), stdev = 2.284
[info]   CI (99.9%): [≈ 0, 9.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 608.145 ops/s
[info] # Warmup Iteration   2: 5544.198 ops/s
[info] # Warmup Iteration   3: 8962.404 ops/s
[info] Iteration   1: 9917.597 ops/s
[info]                  ·gc.alloc.rate:                   1706.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              270862.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255378.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.606 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 9891.839 ops/s
[info]                  ·gc.alloc.rate:                   1719.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              273397.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309124.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.624 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 9996.520 ops/s
[info]                  ·gc.alloc.rate:                   1716.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              270303.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257188.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.715 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 9957.939 ops/s
[info]                  ·gc.alloc.rate:                   1723.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              272399.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260196.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.290 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 9236.476 ops/s
[info]                  ·gc.alloc.rate:               1780.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          303462.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1659.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 282688.734 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   9800.074 ±(99.9%) 1222.826 ops/s [Average]
[info]   (min, avg, max) = (9236.476, 9800.074, 9996.520), stdev = 317.564
[info]   CI (99.9%): [8577.248, 11022.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1729.522 ±(99.9%) 113.194 MB/sec [Average]
[info]   (min, avg, max) = (1706.971, 1729.522, 1780.966), stdev = 29.396
[info]   CI (99.9%): [1616.328, 1842.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   278085.253 ±(99.9%) 54831.066 B/op [Average]
[info]   (min, avg, max) = (270303.829, 278085.253, 303462.933), stdev = 14239.454
[info]   CI (99.9%): [223254.187, 332916.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1698.451 ±(99.9%) 532.906 MB/sec [Average]
[info]   (min, avg, max) = (1609.395, 1698.451, 1943.831), stdev = 138.394
[info]   CI (99.9%): [1165.546, 2231.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   272915.576 ±(99.9%) 88716.629 B/op [Average]
[info]   (min, avg, max) = (255378.994, 272915.576, 309124.826), stdev = 23039.427
[info]   CI (99.9%): [184198.947, 361632.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.233 ±(99.9%) 1.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.233, 1.059), stdev = 0.462
[info]   CI (99.9%): [≈ 0, 2.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.647 ±(99.9%) 280.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.647, 166.715), stdev = 72.762
[info]   CI (99.9%): [≈ 0, 316.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.342
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:00:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5762.528 ops/s
[info] # Warmup Iteration   2: 19517.315 ops/s
[info] # Warmup Iteration   3: 25471.080 ops/s
[info] Iteration   1: 27675.220 ops/s
[info]                  ·gc.alloc.rate:                   1360.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              77347.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1268.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72135.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.968 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 27548.237 ops/s
[info]                  ·gc.alloc.rate:                   1564.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              89347.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1601.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91475.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.847 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.363 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   3: 26517.441 ops/s
[info]                  ·gc.alloc.rate:                   1761.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              104518.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95341.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390.887 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 25381.677 ops/s
[info]                  ·gc.alloc.rate:                   1645.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              102040.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1553.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96340.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.997 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 27114.050 ops/s
[info]                  ·gc.alloc.rate:                   1334.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              77420.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1566.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90887.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 291.227 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   26847.325 ±(99.9%) 3604.404 ops/s [Average]
[info]   (min, avg, max) = (25381.677, 26847.325, 27675.220), stdev = 936.052
[info]   CI (99.9%): [23242.921, 30451.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1533.344 ±(99.9%) 708.747 MB/sec [Average]
[info]   (min, avg, max) = (1334.232, 1533.344, 1761.874), stdev = 184.059
[info]   CI (99.9%): [824.597, 2242.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   90134.820 ±(99.9%) 49999.434 B/op [Average]
[info]   (min, avg, max) = (77347.590, 90134.820, 104518.534), stdev = 12984.694
[info]   CI (99.9%): [40135.386, 140134.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1519.557 ±(99.9%) 547.515 MB/sec [Average]
[info]   (min, avg, max) = (1268.472, 1519.557, 1607.172), stdev = 142.188
[info]   CI (99.9%): [972.043, 2067.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   89236.080 ±(99.9%) 37921.005 B/op [Average]
[info]   (min, avg, max) = (72135.300, 89236.080, 96340.785), stdev = 9847.964
[info]   CI (99.9%): [51315.076, 127157.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.508 ±(99.9%) 11.850 MB/sec [Average]
[info]   (min, avg, max) = (0.032, 2.508, 6.589), stdev = 3.077
[info]   CI (99.9%): [≈ 0, 14.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   147.088 ±(99.9%) 698.928 B/op [Average]
[info]   (min, avg, max) = (1.997, 147.088, 390.887), stdev = 181.509
[info]   CI (99.9%): [≈ 0, 846.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (20.000, 26.000, 30.000), stdev = 4.062
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6457.839 ops/s
[info] # Warmup Iteration   2: 20713.472 ops/s
[info] # Warmup Iteration   3: 30037.942 ops/s
[info] Iteration   1: 32364.834 ops/s
[info]                  ·gc.alloc.rate:                   1242.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              60389.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1225.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59603.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 30169.574 ops/s
[info]                  ·gc.alloc.rate:                   1540.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              80380.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1552.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80972.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.643 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   3: 30157.003 ops/s
[info]                  ·gc.alloc.rate:                   1454.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              75908.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1235.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64471.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 466.569 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 32256.824 ops/s
[info]                  ·gc.alloc.rate:                   1218.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              59461.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1241.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60551.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.475 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 32117.612 ops/s
[info]                  ·gc.alloc.rate:                   1221.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              59838.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1251.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61304.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.102 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   31413.169 ±(99.9%) 4406.482 ops/s [Average]
[info]   (min, avg, max) = (30157.003, 31413.169, 32364.834), stdev = 1144.349
[info]   CI (99.9%): [27006.688, 35819.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1335.523 ±(99.9%) 583.145 MB/sec [Average]
[info]   (min, avg, max) = (1218.904, 1335.523, 1540.897), stdev = 151.441
[info]   CI (99.9%): [752.378, 1918.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   67195.455 ±(99.9%) 38985.984 B/op [Average]
[info]   (min, avg, max) = (59461.341, 67195.455, 80380.352), stdev = 10124.536
[info]   CI (99.9%): [28209.472, 106181.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1301.186 ±(99.9%) 541.578 MB/sec [Average]
[info]   (min, avg, max) = (1225.922, 1301.186, 1552.248), stdev = 140.646
[info]   CI (99.9%): [759.608, 1842.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   65380.668 ±(99.9%) 34292.431 B/op [Average]
[info]   (min, avg, max) = (59603.949, 65380.668, 80972.461), stdev = 8905.635
[info]   CI (99.9%): [31088.237, 99673.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.990 ±(99.9%) 13.875 MB/sec [Average]
[info]   (min, avg, max) = (0.145, 2.990, 8.940), stdev = 3.603
[info]   CI (99.9%): [≈ 0, 16.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   154.367 ±(99.9%) 727.069 B/op [Average]
[info]   (min, avg, max) = (7.048, 154.367, 466.569), stdev = 188.818
[info]   CI (99.9%): [≈ 0, 881.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   108.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 21.600, 33.000), stdev = 8.325
[info]   CI (99.9%): [108.000, 108.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 313003.000 ops/s
[info] # Warmup Iteration   2: 702691.330 ops/s
[info] # Warmup Iteration   3: 789144.663 ops/s
[info] Iteration   1: 778446.450 ops/s
[info]                  ·gc.alloc.rate:                   1440.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              2911.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2668.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 778170.406 ops/s
[info]                  ·gc.alloc.rate:                   1435.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              2902.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2659.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.358 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 774193.489 ops/s
[info]                  ·gc.alloc.rate:                   1448.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              2943.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3326.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 783289.816 ops/s
[info]                  ·gc.alloc.rate:                   1465.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              2944.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2637.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 779671.733 ops/s
[info]                  ·gc.alloc.rate:                   1459.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              2945.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2663.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   778754.379 ±(99.9%) 12573.589 ops/s [Average]
[info]   (min, avg, max) = (774193.489, 778754.379, 783289.816), stdev = 3265.321
[info]   CI (99.9%): [766180.789, 791327.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1449.672 ±(99.9%) 49.004 MB/sec [Average]
[info]   (min, avg, max) = (1435.063, 1449.672, 1465.674), stdev = 12.726
[info]   CI (99.9%): [1400.668, 1498.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2929.566 ±(99.9%) 80.060 B/op [Average]
[info]   (min, avg, max) = (2902.433, 2929.566, 2945.105), stdev = 20.791
[info]   CI (99.9%): [2849.505, 3009.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1380.648 ±(99.9%) 550.014 MB/sec [Average]
[info]   (min, avg, max) = (1312.558, 1380.648, 1636.101), stdev = 142.837
[info]   CI (99.9%): [830.633, 1930.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2790.903 ±(99.9%) 1152.821 B/op [Average]
[info]   (min, avg, max) = (2637.001, 2790.903, 3326.027), stdev = 299.384
[info]   CI (99.9%): [1638.082, 3943.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.855 ±(99.9%) 4.995 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.855, 3.003), stdev = 1.297
[info]   CI (99.9%): [≈ 0, 5.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.728 ±(99.9%) 10.098 B/op [Average]
[info]   (min, avg, max) = (0.042, 1.728, 6.070), stdev = 2.622
[info]   CI (99.9%): [≈ 0, 11.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534400.618 ops/s
[info] # Warmup Iteration   2: 842447.762 ops/s
[info] # Warmup Iteration   3: 925168.682 ops/s
[info] Iteration   1: 915100.695 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 917773.836 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 886526.848 ops/s
[info]                  ·gc.alloc.rate:      6.010 MB/sec
[info]                  ·gc.alloc.rate.norm: 10.665 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 879690.107 ops/s
[info]                  ·gc.alloc.rate:      0.123 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.221 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 928780.125 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   905574.322 ±(99.9%) 81931.172 ops/s [Average]
[info]   (min, avg, max) = (879690.107, 905574.322, 928780.125), stdev = 21277.265
[info]   CI (99.9%): [823643.150, 987505.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.227 ±(99.9%) 10.297 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.227, 6.010), stdev = 2.674
[info]   CI (99.9%): [≈ 0, 11.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.177 ±(99.9%) 18.274 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 2.177, 10.665), stdev = 4.746
[info]   CI (99.9%): [≈ 0, 20.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4689.021 ops/s
[info] # Warmup Iteration   2: 17700.111 ops/s
[info] # Warmup Iteration   3: 24645.267 ops/s
[info] Iteration   1: 30063.743 ops/s
[info]                  ·gc.alloc.rate:                   1297.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              67915.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1187.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62179.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 249.815 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 30035.213 ops/s
[info]                  ·gc.alloc.rate:                   1543.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              80863.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1500.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78573.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.831 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   3: 29021.206 ops/s
[info]                  ·gc.alloc.rate:                   1567.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              84996.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1482.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80360.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 667.756 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   4: 31556.572 ops/s
[info]                  ·gc.alloc.rate:                   1324.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              66031.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1471.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73374.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243.628 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 31824.423 ops/s
[info]                  ·gc.alloc.rate:                   1326.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              65615.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1187.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58709.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.284 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   30500.231 ±(99.9%) 4500.322 ops/s [Average]
[info]   (min, avg, max) = (29021.206, 30500.231, 31824.423), stdev = 1168.719
[info]   CI (99.9%): [25999.909, 35000.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1411.978 ±(99.9%) 508.154 MB/sec [Average]
[info]   (min, avg, max) = (1297.357, 1411.978, 1567.524), stdev = 131.966
[info]   CI (99.9%): [903.824, 1920.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   73084.468 ±(99.9%) 35220.494 B/op [Average]
[info]   (min, avg, max) = (65615.979, 73084.468, 84996.413), stdev = 9146.650
[info]   CI (99.9%): [37863.974, 108304.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1365.742 ±(99.9%) 627.594 MB/sec [Average]
[info]   (min, avg, max) = (1187.326, 1365.742, 1500.143), stdev = 162.984
[info]   CI (99.9%): [738.148, 1993.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70639.698 ±(99.9%) 37473.181 B/op [Average]
[info]   (min, avg, max) = (58709.977, 70639.698, 80360.963), stdev = 9731.666
[info]   CI (99.9%): [33166.517, 108112.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.466 ±(99.9%) 19.124 MB/sec [Average]
[info]   (min, avg, max) = (0.073, 4.466, 12.315), stdev = 4.966
[info]   CI (99.9%): [≈ 0, 23.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   235.819 ±(99.9%) 1036.498 B/op [Average]
[info]   (min, avg, max) = (3.831, 235.819, 667.756), stdev = 269.175
[info]   CI (99.9%): [≈ 0, 1272.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   138.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 27.600, 38.000), stdev = 10.502
[info]   CI (99.9%): [138.000, 138.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2476.765 ops/s
[info] # Warmup Iteration   2: 22308.651 ops/s
[info] # Warmup Iteration   3: 29941.166 ops/s
[info] Iteration   1: 47695.793 ops/s
[info]                  ·gc.alloc.rate:                   2605.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              85943.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2470.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81486.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 194.985 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 46853.742 ops/s
[info]                  ·gc.alloc.rate:                   2382.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              80036.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2508.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84269.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 305.053 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 45172.334 ops/s
[info]                  ·gc.alloc.rate:                   2431.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              84706.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2231.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77734.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133.310 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   4: 38365.917 ops/s
[info]                  ·gc.alloc.rate:                   2008.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              82372.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2215.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90872.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 292.598 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         40.000 ms
[info] Iteration   5: 42807.689 ops/s
[info]                  ·gc.alloc.rate:                   1793.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              65926.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1542.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56685.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.794 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   44179.095 ±(99.9%) 14431.083 ops/s [Average]
[info]   (min, avg, max) = (38365.917, 44179.095, 47695.793), stdev = 3747.706
[info]   CI (99.9%): [29748.012, 58610.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   2244.346 ±(99.9%) 1282.160 MB/sec [Average]
[info]   (min, avg, max) = (1793.584, 2244.346, 2605.613), stdev = 332.973
[info]   CI (99.9%): [962.186, 3526.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   79796.970 ±(99.9%) 31103.050 B/op [Average]
[info]   (min, avg, max) = (65926.042, 79796.970, 85943.389), stdev = 8077.363
[info]   CI (99.9%): [48693.919, 110900.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2193.672 ±(99.9%) 1494.206 MB/sec [Average]
[info]   (min, avg, max) = (1542.183, 2193.672, 2508.864), stdev = 388.041
[info]   CI (99.9%): [699.466, 3687.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   78209.589 ±(99.9%) 49884.599 B/op [Average]
[info]   (min, avg, max) = (56685.410, 78209.589, 90872.215), stdev = 12954.872
[info]   CI (99.9%): [28324.990, 128094.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.560 ±(99.9%) 10.860 MB/sec [Average]
[info]   (min, avg, max) = (1.844, 5.560, 9.082), stdev = 2.820
[info]   CI (99.9%): [≈ 0, 16.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   198.748 ±(99.9%) 392.472 B/op [Average]
[info]   (min, avg, max) = (67.794, 198.748, 305.053), stdev = 101.924
[info]   CI (99.9%): [≈ 0, 591.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   153.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (25.000, 30.600, 40.000), stdev = 5.683
[info]   CI (99.9%): [153.000, 153.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2181.859 ops/s
[info] # Warmup Iteration   2: 26636.845 ops/s
[info] # Warmup Iteration   3: 41728.019 ops/s
[info] Iteration   1: 39791.602 ops/s
[info]                  ·gc.alloc.rate:                   1635.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              64655.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1571.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62128.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.546 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.643 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   2: 38141.981 ops/s
[info]                  ·gc.alloc.rate:                   1654.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              68270.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1570.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64816.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 276.001 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 42021.036 ops/s
[info]                  ·gc.alloc.rate:                   1451.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              54378.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1565.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58635.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.528 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.599 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 41696.041 ops/s
[info]                  ·gc.alloc.rate:                   1461.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              55154.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1249.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47158.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.357 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 44650.448 ops/s
[info]                  ·gc.alloc.rate:                   1549.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              54619.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1577.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55615.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.468 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   41260.222 ±(99.9%) 9460.109 ops/s [Average]
[info]   (min, avg, max) = (38141.981, 41260.222, 44650.448), stdev = 2456.760
[info]   CI (99.9%): [31800.113, 50720.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1550.517 ±(99.9%) 363.990 MB/sec [Average]
[info]   (min, avg, max) = (1451.823, 1550.517, 1654.528), stdev = 94.527
[info]   CI (99.9%): [1186.527, 1914.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   59415.637 ±(99.9%) 25279.497 B/op [Average]
[info]   (min, avg, max) = (54378.160, 59415.637, 68270.339), stdev = 6565.005
[info]   CI (99.9%): [34136.140, 84695.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1507.006 ±(99.9%) 554.768 MB/sec [Average]
[info]   (min, avg, max) = (1249.401, 1507.006, 1577.802), stdev = 144.072
[info]   CI (99.9%): [952.237, 2061.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   57670.831 ±(99.9%) 26299.835 B/op [Average]
[info]   (min, avg, max) = (47158.512, 57670.831, 64816.164), stdev = 6829.984
[info]   CI (99.9%): [31370.996, 83970.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.773 ±(99.9%) 11.106 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.773, 6.689), stdev = 2.884
[info]   CI (99.9%): [≈ 0, 13.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   110.014 ±(99.9%) 449.728 B/op [Average]
[info]   (min, avg, max) = (1.468, 110.014, 276.001), stdev = 116.793
[info]   CI (99.9%): [≈ 0, 559.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   85.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 17.000, 38.000), stdev = 15.067
[info]   CI (99.9%): [85.000, 85.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 213525.763 ops/s
[info] # Warmup Iteration   2: 497090.178 ops/s
[info] # Warmup Iteration   3: 518438.106 ops/s
[info] Iteration   1: 522427.417 ops/s
[info]                  ·gc.alloc.rate:                   1399.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              4215.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3963.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.533 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 490976.032 ops/s
[info]                  ·gc.alloc.rate:                   1319.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              4227.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4198.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 498459.486 ops/s
[info]                  ·gc.alloc.rate:                   1336.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              4219.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4122.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 534993.668 ops/s
[info]                  ·gc.alloc.rate:               1424.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          4191.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3852.869 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 528792.033 ops/s
[info]                  ·gc.alloc.rate:               1429.026 MB/sec
[info]                  ·gc.alloc.rate.norm:          4252.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3921.986 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   515129.727 ±(99.9%) 74462.657 ops/s [Average]
[info]   (min, avg, max) = (490976.032, 515129.727, 534993.668), stdev = 19337.716
[info]   CI (99.9%): [440667.070, 589592.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1381.877 ±(99.9%) 196.043 MB/sec [Average]
[info]   (min, avg, max) = (1319.132, 1381.877, 1429.026), stdev = 50.912
[info]   CI (99.9%): [1185.834, 1577.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4221.479 ±(99.9%) 84.018 B/op [Average]
[info]   (min, avg, max) = (4191.807, 4221.479, 4252.243), stdev = 21.819
[info]   CI (99.9%): [4137.461, 4305.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1311.928 ±(99.9%) 18.929 MB/sec [Average]
[info]   (min, avg, max) = (1306.064, 1311.928, 1318.039), stdev = 4.916
[info]   CI (99.9%): [1292.999, 1330.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4011.972 ±(99.9%) 553.916 B/op [Average]
[info]   (min, avg, max) = (3852.869, 4011.972, 4198.413), stdev = 143.850
[info]   CI (99.9%): [3458.056, 4565.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 5.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.165), stdev = 1.368
[info]   CI (99.9%): [≈ 0, 6.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.587 ±(99.9%) 15.892 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.587, 9.533), stdev = 4.127
[info]   CI (99.9%): [≈ 0, 18.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 14.000), stdev = 3.899
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 610.678 ops/s
[info] # Warmup Iteration   2: 12640.505 ops/s
[info] # Warmup Iteration   3: 21655.691 ops/s
[info] Iteration   1: 22069.587 ops/s
[info]                  ·gc.alloc.rate:                   2054.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              146462.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139331.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.969 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 20843.492 ops/s
[info]                  ·gc.alloc.rate:                   2146.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              162099.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148129.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 288.863 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 21777.694 ops/s
[info]                  ·gc.alloc.rate:                   2023.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              146251.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141584.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.504 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 19822.366 ops/s
[info]                  ·gc.alloc.rate:                   2166.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              171949.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182845.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.184 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 21896.372 ops/s
[info]                  ·gc.alloc.rate:                   1985.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              142684.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143089.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.589 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   21281.902 ±(99.9%) 3635.893 ops/s [Average]
[info]   (min, avg, max) = (19822.366, 21281.902, 22069.587), stdev = 944.230
[info]   CI (99.9%): [17646.009, 24917.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2075.356 ±(99.9%) 301.998 MB/sec [Average]
[info]   (min, avg, max) = (1985.166, 2075.356, 2166.201), stdev = 78.428
[info]   CI (99.9%): [1773.357, 2377.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   153889.300 ±(99.9%) 48424.884 B/op [Average]
[info]   (min, avg, max) = (142684.370, 153889.300, 171949.110), stdev = 12575.789
[info]   CI (99.9%): [105464.416, 202314.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2034.012 ±(99.9%) 582.591 MB/sec [Average]
[info]   (min, avg, max) = (1954.673, 2034.012, 2303.467), stdev = 151.297
[info]   CI (99.9%): [1451.420, 2616.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   150996.275 ±(99.9%) 69677.046 B/op [Average]
[info]   (min, avg, max) = (139331.917, 150996.275, 182845.043), stdev = 18094.908
[info]   CI (99.9%): [81319.229, 220673.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.442 ±(99.9%) 6.077 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.442, 3.826), stdev = 1.578
[info]   CI (99.9%): [≈ 0, 7.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   109.422 ±(99.9%) 462.171 B/op [Average]
[info]   (min, avg, max) = (1.504, 109.422, 288.863), stdev = 120.024
[info]   CI (99.9%): [≈ 0, 571.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 16.000), stdev = 3.000
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:58:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12177.520 ops/s
[info] # Warmup Iteration   2: 59011.360 ops/s
[info] # Warmup Iteration   3: 62437.653 ops/s
[info] Iteration   1: 67804.403 ops/s
[info]                  ·gc.alloc.rate:                   1905.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              44227.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45522.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.696 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 68970.115 ops/s
[info]                  ·gc.alloc.rate:                   1821.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              41554.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37200.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.375 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 69378.411 ops/s
[info]                  ·gc.alloc.rate:                   1826.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              41421.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44488.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.446 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.475 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 69362.308 ops/s
[info]                  ·gc.alloc.rate:                   1822.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              41352.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37086.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.945 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 68249.109 ops/s
[info]                  ·gc.alloc.rate:                   1828.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              42130.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45444.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.959 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   68752.869 ±(99.9%) 2697.702 ops/s [Average]
[info]   (min, avg, max) = (67804.403, 68752.869, 69378.411), stdev = 700.585
[info]   CI (99.9%): [66055.167, 71450.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1840.780 ±(99.9%) 140.183 MB/sec [Average]
[info]   (min, avg, max) = (1821.237, 1840.780, 1905.712), stdev = 36.405
[info]   CI (99.9%): [1700.597, 1980.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   42137.493 ±(99.9%) 4651.727 B/op [Average]
[info]   (min, avg, max) = (41352.737, 42137.493, 44227.747), stdev = 1208.039
[info]   CI (99.9%): [37485.766, 46789.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1831.967 ±(99.9%) 701.606 MB/sec [Average]
[info]   (min, avg, max) = (1630.392, 1831.967, 1971.914), stdev = 182.205
[info]   CI (99.9%): [1130.361, 2533.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   41948.432 ±(99.9%) 16963.611 B/op [Average]
[info]   (min, avg, max) = (37086.366, 41948.432, 45522.359), stdev = 4405.396
[info]   CI (99.9%): [24984.821, 58912.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.412 ±(99.9%) 7.608 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.412, 4.425), stdev = 1.976
[info]   CI (99.9%): [≈ 0, 9.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   32.490 ±(99.9%) 175.969 B/op [Average]
[info]   (min, avg, max) = (0.945, 32.490, 102.696), stdev = 45.699
[info]   CI (99.9%): [≈ 0, 208.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.000, 21.000), stdev = 5.385
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40332.520 ops/s
[info] # Warmup Iteration   2: 168406.172 ops/s
[info] # Warmup Iteration   3: 187387.340 ops/s
[info] Iteration   1: 201878.200 ops/s
[info]                  ·gc.alloc.rate:                   1569.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              12233.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10199.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.325 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.923 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 202709.962 ops/s
[info]                  ·gc.alloc.rate:                   1583.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              12294.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12615.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.860 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 205251.165 ops/s
[info]                  ·gc.alloc.rate:                   1601.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              12275.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12448.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 199381.754 ops/s
[info]                  ·gc.alloc.rate:                   1563.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              12338.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12893.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 203886.455 ops/s
[info]                  ·gc.alloc.rate:               1598.074 MB/sec
[info]                  ·gc.alloc.rate.norm:          12333.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10187.689 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   202621.507 ±(99.9%) 8517.569 ops/s [Average]
[info]   (min, avg, max) = (199381.754, 202621.507, 205251.165), stdev = 2211.986
[info]   CI (99.9%): [194103.938, 211139.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1583.230 ±(99.9%) 64.081 MB/sec [Average]
[info]   (min, avg, max) = (1563.874, 1583.230, 1601.009), stdev = 16.642
[info]   CI (99.9%): [1519.149, 1647.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12295.204 ±(99.9%) 166.362 B/op [Average]
[info]   (min, avg, max) = (12233.975, 12295.204, 12338.034), stdev = 43.204
[info]   CI (99.9%): [12128.842, 12461.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1502.277 ±(99.9%) 661.738 MB/sec [Average]
[info]   (min, avg, max) = (1308.276, 1502.277, 1634.238), stdev = 171.851
[info]   CI (99.9%): [840.539, 2164.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   11668.871 ±(99.9%) 5221.644 B/op [Average]
[info]   (min, avg, max) = (10187.689, 11668.871, 12893.167), stdev = 1356.044
[info]   CI (99.9%): [6447.227, 16890.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.927 ±(99.9%) 5.570 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.927, 3.325), stdev = 1.447
[info]   CI (99.9%): [≈ 0, 6.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.221 ±(99.9%) 43.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.221, 25.923), stdev = 11.275
[info]   CI (99.9%): [≈ 0, 50.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 492421.359 ops/s
[info] # Warmup Iteration   2: 792890.340 ops/s
[info] # Warmup Iteration   3: 864591.234 ops/s
[info] Iteration   1: 832459.369 ops/s
[info]                  ·gc.alloc.rate:               973.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          1840.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1867.790 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 848499.818 ops/s
[info]                  ·gc.alloc.rate:                   953.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              1768.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1834.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 843023.815 ops/s
[info]                  ·gc.alloc.rate:                   923.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              1724.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1233.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.339 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 846940.708 ops/s
[info]                  ·gc.alloc.rate:                   934.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1828.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 851535.981 ops/s
[info]                  ·gc.alloc.rate:                   940.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              1738.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1813.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   844491.938 ±(99.9%) 28467.187 ops/s [Average]
[info]   (min, avg, max) = (832459.369, 844491.938, 851535.981), stdev = 7392.838
[info]   CI (99.9%): [816024.751, 872959.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   945.249 ±(99.9%) 73.716 MB/sec [Average]
[info]   (min, avg, max) = (923.559, 945.249, 973.380), stdev = 19.144
[info]   CI (99.9%): [871.533, 1018.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1761.740 ±(99.9%) 180.241 B/op [Average]
[info]   (min, avg, max) = (1724.247, 1761.740, 1840.314), stdev = 46.808
[info]   CI (99.9%): [1581.499, 1941.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.739 ±(99.9%) 559.566 MB/sec [Average]
[info]   (min, avg, max) = (660.853, 920.739, 989.647), stdev = 145.317
[info]   CI (99.9%): [361.173, 1480.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1715.720 ±(99.9%) 1040.201 B/op [Average]
[info]   (min, avg, max) = (1233.784, 1715.720, 1867.790), stdev = 270.137
[info]   CI (99.9%): [675.519, 2755.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.850 ±(99.9%) 5.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.850, 3.396), stdev = 1.464
[info]   CI (99.9%): [≈ 0, 6.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.585 ±(99.9%) 10.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.585, 6.339), stdev = 2.734
[info]   CI (99.9%): [≈ 0, 12.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 828433.562 ops/s
[info] # Warmup Iteration   2: 872265.040 ops/s
[info] # Warmup Iteration   3: 907403.614 ops/s
[info] Iteration   1: 907752.533 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 907332.916 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 907328.710 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 907374.710 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 907982.293 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   907554.233 ±(99.9%) 1146.542 ops/s [Average]
[info]   (min, avg, max) = (907328.710, 907554.233, 907982.293), stdev = 297.753
[info]   CI (99.9%): [906407.690, 908700.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14815.726 ops/s
[info] # Warmup Iteration   2: 62830.690 ops/s
[info] # Warmup Iteration   3: 76739.453 ops/s
[info] Iteration   1: 90854.354 ops/s
[info]                  ·gc.alloc.rate:                   1892.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              32777.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28273.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.156 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 94146.643 ops/s
[info]                  ·gc.alloc.rate:                   1959.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              32750.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32607.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.004 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 93838.794 ops/s
[info]                  ·gc.alloc.rate:                   1949.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              32691.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32814.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.169 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.604 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 93099.506 ops/s
[info]                  ·gc.alloc.rate:                   1953.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              33013.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33266.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.352 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 94010.974 ops/s
[info]                  ·gc.alloc.rate:               1978.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          33118.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27685.672 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   93190.054 ±(99.9%) 5263.398 ops/s [Average]
[info]   (min, avg, max) = (90854.354, 93190.054, 94146.643), stdev = 1366.888
[info]   CI (99.9%): [87926.656, 98453.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1946.621 ±(99.9%) 124.047 MB/sec [Average]
[info]   (min, avg, max) = (1892.604, 1946.621, 1978.662), stdev = 32.215
[info]   CI (99.9%): [1822.574, 2070.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32870.202 ±(99.9%) 712.735 B/op [Average]
[info]   (min, avg, max) = (32691.204, 32870.202, 33118.054), stdev = 185.095
[info]   CI (99.9%): [32157.467, 33582.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1832.435 ±(99.9%) 665.855 MB/sec [Average]
[info]   (min, avg, max) = (1632.534, 1832.435, 1967.973), stdev = 172.920
[info]   CI (99.9%): [1166.580, 2498.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30929.351 ±(99.9%) 10440.166 B/op [Average]
[info]   (min, avg, max) = (27685.672, 30929.351, 33266.319), stdev = 2711.278
[info]   CI (99.9%): [20489.185, 41369.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.306 ±(99.9%) 7.865 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.306, 4.859), stdev = 2.042
[info]   CI (99.9%): [≈ 0, 9.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.423 ±(99.9%) 136.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.423, 84.156), stdev = 35.414
[info]   CI (99.9%): [≈ 0, 158.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 17.000), stdev = 4.099
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:57:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1487.509 ops/s
[info] # Warmup Iteration   2: 11949.846 ops/s
[info] # Warmup Iteration   3: 17147.810 ops/s
[info] Iteration   1: 18822.719 ops/s
[info]                  ·gc.alloc.rate:                   1653.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              138248.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1574.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131649.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.035 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 17698.174 ops/s
[info]                  ·gc.alloc.rate:                   1794.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              159591.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1900.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168997.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 431.361 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 18859.950 ops/s
[info]                  ·gc.alloc.rate:                   1753.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              146314.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1581.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132023.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 585.036 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 18723.886 ops/s
[info]                  ·gc.alloc.rate:               1784.884 MB/sec
[info]                  ·gc.alloc.rate.norm:          150011.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1903.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 159943.255 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 18221.316 ops/s
[info]                  ·gc.alloc.rate:                   1846.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              159419.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138753.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 604.630 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   18465.209 ±(99.9%) 1923.756 ops/s [Average]
[info]   (min, avg, max) = (17698.174, 18465.209, 18859.950), stdev = 499.593
[info]   CI (99.9%): [16541.453, 20388.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1766.560 ±(99.9%) 275.025 MB/sec [Average]
[info]   (min, avg, max) = (1653.743, 1766.560, 1846.370), stdev = 71.423
[info]   CI (99.9%): [1491.535, 2041.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   150716.918 ±(99.9%) 34966.184 B/op [Average]
[info]   (min, avg, max) = (138248.390, 150716.918, 159591.410), stdev = 9080.607
[info]   CI (99.9%): [115750.734, 185683.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1713.448 ±(99.9%) 663.556 MB/sec [Average]
[info]   (min, avg, max) = (1574.811, 1713.448, 1903.061), stdev = 172.323
[info]   CI (99.9%): [1049.892, 2377.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   146273.521 ±(99.9%) 66043.808 B/op [Average]
[info]   (min, avg, max) = (131649.900, 146273.521, 168997.137), stdev = 17151.367
[info]   CI (99.9%): [80229.713, 212317.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.868 ±(99.9%) 13.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.868, 7.010), stdev = 3.432
[info]   CI (99.9%): [≈ 0, 17.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   332.213 ±(99.9%) 1128.728 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 332.213, 604.630), stdev = 293.127
[info]   CI (99.9%): [≈ 0, 1460.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 16.600, 27.000), stdev = 8.204
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1518.380 ops/s
[info] # Warmup Iteration   2: 9962.591 ops/s
[info] # Warmup Iteration   3: 18099.611 ops/s
[info] Iteration   1: 18198.181 ops/s
[info]                  ·gc.alloc.rate:                   1469.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              127001.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138974.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.595 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 18132.002 ops/s
[info]                  ·gc.alloc.rate:                   1450.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              125858.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112264.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.614 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 17754.231 ops/s
[info]                  ·gc.alloc.rate:                   1426.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              126385.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115356.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.652 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.397 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 17716.873 ops/s
[info]                  ·gc.alloc.rate:                   1604.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              142463.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145206.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.849 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 16756.717 ops/s
[info]                  ·gc.alloc.rate:                   1580.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              148427.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153219.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.257 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211.966 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17711.601 ±(99.9%) 2218.006 ops/s [Average]
[info]   (min, avg, max) = (16756.717, 17711.601, 18198.181), stdev = 576.009
[info]   CI (99.9%): [15493.595, 19929.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1506.233 ±(99.9%) 310.359 MB/sec [Average]
[info]   (min, avg, max) = (1426.339, 1506.233, 1604.411), stdev = 80.599
[info]   CI (99.9%): [1195.873, 1816.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   134027.083 ±(99.9%) 40979.537 B/op [Average]
[info]   (min, avg, max) = (125858.321, 134027.083, 148427.048), stdev = 10642.256
[info]   CI (99.9%): [93047.545, 175006.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1494.110 ±(99.9%) 691.490 MB/sec [Average]
[info]   (min, avg, max) = (1293.607, 1494.110, 1635.299), stdev = 179.578
[info]   CI (99.9%): [802.620, 2185.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   133004.439 ±(99.9%) 70340.232 B/op [Average]
[info]   (min, avg, max) = (112264.823, 133004.439, 153219.727), stdev = 18267.135
[info]   CI (99.9%): [62664.207, 203344.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.803 ±(99.9%) 4.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.803, 2.257), stdev = 1.073
[info]   CI (99.9%): [≈ 0, 4.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   73.484 ±(99.9%) 382.124 B/op [Average]
[info]   (min, avg, max) = (1.849, 73.484, 211.966), stdev = 99.236
[info]   CI (99.9%): [≈ 0, 455.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 18.000), stdev = 4.528
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 265764.736 ops/s
[info] # Warmup Iteration   2: 645087.129 ops/s
[info] # Warmup Iteration   3: 763011.995 ops/s
[info] Iteration   1: 768497.009 ops/s
[info]                  ·gc.alloc.rate:                   2045.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              4188.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4026.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.473 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 780006.220 ops/s
[info]                  ·gc.alloc.rate:                   2120.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              4279.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3963.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.386 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 782611.175 ops/s
[info]                  ·gc.alloc.rate:                   2086.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              4194.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4642.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 789594.041 ops/s
[info]                  ·gc.alloc.rate:                   2115.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              4215.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3983.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 780826.302 ops/s
[info]                  ·gc.alloc.rate:                   2112.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              4257.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4056.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   780306.949 ±(99.9%) 29287.329 ops/s [Average]
[info]   (min, avg, max) = (768497.009, 780306.949, 789594.041), stdev = 7605.826
[info]   CI (99.9%): [751019.620, 809594.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2096.006 ±(99.9%) 120.514 MB/sec [Average]
[info]   (min, avg, max) = (2045.334, 2096.006, 2120.855), stdev = 31.297
[info]   CI (99.9%): [1975.492, 2216.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4227.072 ±(99.9%) 152.885 B/op [Average]
[info]   (min, avg, max) = (4188.692, 4227.072, 4279.344), stdev = 39.704
[info]   CI (99.9%): [4074.187, 4379.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2050.145 ±(99.9%) 562.776 MB/sec [Average]
[info]   (min, avg, max) = (1964.225, 2050.145, 2308.875), stdev = 146.151
[info]   CI (99.9%): [1487.369, 2612.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4134.371 ±(99.9%) 1102.830 B/op [Average]
[info]   (min, avg, max) = (3963.305, 4134.371, 4642.556), stdev = 286.402
[info]   CI (99.9%): [3031.541, 5237.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.412 ±(99.9%) 2.011 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.412, 1.207), stdev = 0.522
[info]   CI (99.9%): [≈ 0, 2.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.839 ±(99.9%) 4.112 B/op [Average]
[info]   (min, avg, max) = (0.084, 0.839, 2.473), stdev = 1.068
[info]   CI (99.9%): [≈ 0, 4.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 11.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1010.282 ops/s
[info] # Warmup Iteration   2: 8807.483 ops/s
[info] # Warmup Iteration   3: 11757.004 ops/s
[info] Iteration   1: 14278.947 ops/s
[info]                  ·gc.alloc.rate:                   1944.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              214300.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215023.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.884 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 14438.377 ops/s
[info]                  ·gc.alloc.rate:                   1958.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              213375.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213440.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.633 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 14566.191 ops/s
[info]                  ·gc.alloc.rate:                   1968.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              212727.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176118.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.079 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.583 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 14597.345 ops/s
[info]                  ·gc.alloc.rate:                   2006.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              216272.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211280.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.488 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 14669.196 ops/s
[info]                  ·gc.alloc.rate:                   2015.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              216252.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212345.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.467 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   14510.011 ±(99.9%) 592.316 ops/s [Average]
[info]   (min, avg, max) = (14278.947, 14510.011, 14669.196), stdev = 153.822
[info]   CI (99.9%): [13917.696, 15102.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1978.598 ±(99.9%) 119.393 MB/sec [Average]
[info]   (min, avg, max) = (1944.184, 1978.598, 2015.921), stdev = 31.006
[info]   CI (99.9%): [1859.205, 2097.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   214585.569 ±(99.9%) 6274.339 B/op [Average]
[info]   (min, avg, max) = (212727.794, 214585.569, 216272.341), stdev = 1629.426
[info]   CI (99.9%): [208311.230, 220859.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1895.721 ±(99.9%) 573.459 MB/sec [Average]
[info]   (min, avg, max) = (1629.991, 1895.721, 1979.501), stdev = 148.926
[info]   CI (99.9%): [1322.262, 2469.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   205641.654 ±(99.9%) 63774.894 B/op [Average]
[info]   (min, avg, max) = (176118.160, 205641.654, 215023.795), stdev = 16562.137
[info]   CI (99.9%): [141866.760, 269416.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.720 ±(99.9%) 5.713 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.720, 3.374), stdev = 1.484
[info]   CI (99.9%): [≈ 0, 6.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   78.411 ±(99.9%) 622.608 B/op [Average]
[info]   (min, avg, max) = (4.467, 78.411, 367.633), stdev = 161.689
[info]   CI (99.9%): [≈ 0, 701.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.000, 16.000), stdev = 3.742
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4086.374 ops/s
[info] # Warmup Iteration   2: 26560.319 ops/s
[info] # Warmup Iteration   3: 46740.143 ops/s
[info] Iteration   1: 47449.040 ops/s
[info]                  ·gc.alloc.rate:                   2022.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              67043.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1931.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64021.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.537 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.251 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 45567.265 ops/s
[info]                  ·gc.alloc.rate:                   2041.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              70474.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1890.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65275.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.489 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   3: 44233.999 ops/s
[info]                  ·gc.alloc.rate:                   1847.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              65717.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1857.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66072.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135.422 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   4: 45341.194 ops/s
[info]                  ·gc.alloc.rate:                   1636.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              56773.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1815.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62988.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.755 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         40.000 ms
[info] Iteration   5: 45948.148 ops/s
[info]                  ·gc.alloc.rate:                   1635.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              56013.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1535.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52572.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.694 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   45707.929 ±(99.9%) 4480.635 ops/s [Average]
[info]   (min, avg, max) = (44233.999, 45707.929, 47449.040), stdev = 1163.607
[info]   CI (99.9%): [41227.294, 50188.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1836.712 ±(99.9%) 762.748 MB/sec [Average]
[info]   (min, avg, max) = (1635.851, 1836.712, 2041.413), stdev = 198.083
[info]   CI (99.9%): [1073.964, 2599.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   63204.596 ±(99.9%) 24878.964 B/op [Average]
[info]   (min, avg, max) = (56013.831, 63204.596, 70474.734), stdev = 6460.988
[info]   CI (99.9%): [38325.631, 88083.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1806.078 ±(99.9%) 605.330 MB/sec [Average]
[info]   (min, avg, max) = (1535.350, 1806.078, 1931.060), stdev = 157.202
[info]   CI (99.9%): [1200.748, 2411.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   62185.947 ±(99.9%) 21185.436 B/op [Average]
[info]   (min, avg, max) = (52572.553, 62185.947, 66072.282), stdev = 5501.790
[info]   CI (99.9%): [41000.510, 83371.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.530 ±(99.9%) 3.296 MB/sec [Average]
[info]   (min, avg, max) = (2.327, 3.530, 4.691), stdev = 0.856
[info]   CI (99.9%): [0.234, 6.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   121.722 ±(99.9%) 117.517 B/op [Average]
[info]   (min, avg, max) = (79.694, 121.722, 162.755), stdev = 30.519
[info]   CI (99.9%): [4.206, 239.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   165.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (21.000, 33.000, 43.000), stdev = 9.083
[info]   CI (99.9%): [165.000, 165.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8612.722 ops/s
[info] # Warmup Iteration   2: 37067.865 ops/s
[info] # Warmup Iteration   3: 46920.464 ops/s
[info] Iteration   1: 48597.321 ops/s
[info]                  ·gc.alloc.rate:                   1716.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              55584.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1850.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59908.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134.723 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         49.000 ms
[info] Iteration   2: 53564.962 ops/s
[info]                  ·gc.alloc.rate:                   1829.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              53626.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1839.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53914.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 270.676 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   3: 54872.542 ops/s
[info]                  ·gc.alloc.rate:                   1483.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              42545.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1532.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43965.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.788 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 338.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 55106.125 ops/s
[info]                  ·gc.alloc.rate:                   1485.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              42436.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1225.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34989.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.784 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 55075.797 ops/s
[info]                  ·gc.alloc.rate:                   1484.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              42430.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1548.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44259.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.380 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   53443.350 ±(99.9%) 10714.738 ops/s [Average]
[info]   (min, avg, max) = (48597.321, 53443.350, 55106.125), stdev = 2782.583
[info]   CI (99.9%): [42728.612, 64158.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1600.044 ±(99.9%) 626.912 MB/sec [Average]
[info]   (min, avg, max) = (1483.455, 1600.044, 1829.187), stdev = 162.807
[info]   CI (99.9%): [973.132, 2226.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   47324.721 ±(99.9%) 25731.166 B/op [Average]
[info]   (min, avg, max) = (42430.669, 47324.721, 55584.259), stdev = 6682.302
[info]   CI (99.9%): [21593.555, 73055.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1599.268 ±(99.9%) 995.722 MB/sec [Average]
[info]   (min, avg, max) = (1225.085, 1599.268, 1850.353), stdev = 258.586
[info]   CI (99.9%): [603.546, 2594.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47407.318 ±(99.9%) 37262.650 B/op [Average]
[info]   (min, avg, max) = (34989.317, 47407.318, 59908.150), stdev = 9676.992
[info]   CI (99.9%): [10144.668, 84669.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.066 ±(99.9%) 20.488 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 5.066, 11.788), stdev = 5.321
[info]   CI (99.9%): [≈ 0, 25.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   149.531 ±(99.9%) 590.082 B/op [Average]
[info]   (min, avg, max) = (1.784, 149.531, 338.091), stdev = 153.242
[info]   CI (99.9%): [≈ 0, 739.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   113.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 22.600, 49.000), stdev = 18.902
[info]   CI (99.9%): [113.000, 113.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 622437.721 ops/s
[info] # Warmup Iteration   2: 929880.484 ops/s
[info] # Warmup Iteration   3: 1024338.607 ops/s
[info] Iteration   1: 1033867.601 ops/s
[info]                  ·gc.alloc.rate:                   967.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              1473.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1008219.668 ops/s
[info]                  ·gc.alloc.rate:                   949.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              1481.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 939486.335 ops/s
[info]                  ·gc.alloc.rate:                   876.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              1467.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1107.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 939758.136 ops/s
[info]                  ·gc.alloc.rate:                   876.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1467.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1651.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 937821.243 ops/s
[info]                  ·gc.alloc.rate:                   878.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              1474.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1647.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   971830.597 ±(99.9%) 176502.621 ops/s [Average]
[info]   (min, avg, max) = (937821.243, 971830.597, 1033867.601), stdev = 45837.170
[info]   CI (99.9%): [795327.976, 1148333.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   909.627 ±(99.9%) 173.786 MB/sec [Average]
[info]   (min, avg, max) = (876.079, 909.627, 967.944), stdev = 45.132
[info]   CI (99.9%): [735.842, 1083.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1472.668 ±(99.9%) 22.971 B/op [Average]
[info]   (min, avg, max) = (1467.042, 1472.668, 1481.517), stdev = 5.966
[info]   CI (99.9%): [1449.696, 1495.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   921.342 ±(99.9%) 560.321 MB/sec [Average]
[info]   (min, avg, max) = (661.084, 921.342, 989.230), stdev = 145.514
[info]   CI (99.9%): [361.021, 1481.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1490.820 ±(99.9%) 862.465 B/op [Average]
[info]   (min, avg, max) = (1107.020, 1490.820, 1651.099), stdev = 223.979
[info]   CI (99.9%): [628.355, 2353.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.819 ±(99.9%) 5.253 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.819, 3.178), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.370 ±(99.9%) 8.801 B/op [Average]
[info]   (min, avg, max) = (0.032, 1.370, 5.322), stdev = 2.286
[info]   CI (99.9%): [≈ 0, 10.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 645591.735 ops/s
[info] # Warmup Iteration   2: 1565604.549 ops/s
[info] # Warmup Iteration   3: 1099806.207 ops/s
[info] Iteration   1: 1100235.575 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1082895.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1099200.852 ops/s
[info]                  ·gc.alloc.rate:      0.973 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.393 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1100174.507 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1097977.215 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1096096.686 ±(99.9%) 28635.461 ops/s [Average]
[info]   (min, avg, max) = (1082895.279, 1096096.686, 1100235.575), stdev = 7436.538
[info]   CI (99.9%): [1067461.224, 1124732.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.195 ±(99.9%) 1.675 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.195, 0.973), stdev = 0.435
[info]   CI (99.9%): [≈ 0, 1.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.279 ±(99.9%) 2.399 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.279, 1.393), stdev = 0.623
[info]   CI (99.9%): [≈ 0, 2.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 702.714 ops/s
[info] # Warmup Iteration   2: 2721.330 ops/s
[info] # Warmup Iteration   3: 3431.237 ops/s
[info] Iteration   1: 3377.324 ops/s
[info]                  ·gc.alloc.rate:                   1523.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              709474.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1576.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     734437.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 852.161 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         48.000 ms
[info] Iteration   2: 3415.424 ops/s
[info]                  ·gc.alloc.rate:                   1241.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              571866.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1172.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539784.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 717.884 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         66.000 ms
[info] Iteration   3: 3887.593 ops/s
[info]                  ·gc.alloc.rate:                   566.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              229431.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          529.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214352.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.855 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1560.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   4: 3991.485 ops/s
[info]                  ·gc.alloc.rate:                   543.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              214195.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          533.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210214.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.825 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   5: 3938.740 ops/s
[info]                  ·gc.alloc.rate:               552.734 MB/sec
[info]                  ·gc.alloc.rate.norm:          220847.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:      540.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215836.329 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     25.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3722.114 ±(99.9%) 1154.887 ops/s [Average]
[info]   (min, avg, max) = (3377.324, 3722.114, 3991.485), stdev = 299.921
[info]   CI (99.9%): [2567.226, 4877.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   885.586 ±(99.9%) 1788.567 MB/sec [Average]
[info]   (min, avg, max) = (543.282, 885.586, 1523.274), stdev = 464.485
[info]   CI (99.9%): [≈ 0, 2674.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   389163.320 ±(99.9%) 903954.656 B/op [Average]
[info]   (min, avg, max) = (214195.819, 389163.320, 709474.854), stdev = 234754.154
[info]   CI (99.9%): [≈ 0, 1293117.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   870.393 ±(99.9%) 1855.668 MB/sec [Average]
[info]   (min, avg, max) = (529.661, 870.393, 1576.871), stdev = 481.911
[info]   CI (99.9%): [≈ 0, 2726.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   382925.195 ±(99.9%) 932004.073 B/op [Average]
[info]   (min, avg, max) = (210214.147, 382925.195, 734437.779), stdev = 242038.498
[info]   CI (99.9%): [≈ 0, 1314929.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.465 ±(99.9%) 6.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.465, 3.855), stdev = 1.574
[info]   CI (99.9%): [≈ 0, 7.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   632.589 ±(99.9%) 2492.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 632.589, 1560.074), stdev = 647.225
[info]   CI (99.9%): [≈ 0, 3124.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.414
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   191.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (24.000, 38.200, 66.000), stdev = 18.363
[info]   CI (99.9%): [191.000, 191.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:55:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27199.605 ops/s
[info] # Warmup Iteration   2: 128213.512 ops/s
[info] # Warmup Iteration   3: 138999.618 ops/s
[info] Iteration   1: 146415.807 ops/s
[info]                  ·gc.alloc.rate:                   2285.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              24557.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2274.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24447.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.070 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 147095.130 ops/s
[info]                  ·gc.alloc.rate:                   2272.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              24312.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20897.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.336 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 145271.556 ops/s
[info]                  ·gc.alloc.rate:                   2268.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              24571.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24955.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 143327.815 ops/s
[info]                  ·gc.alloc.rate:                   2281.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              25052.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2330.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25588.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.686 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 147508.837 ops/s
[info]                  ·gc.alloc.rate:                   2288.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              24420.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21493.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   145923.829 ±(99.9%) 6469.478 ops/s [Average]
[info]   (min, avg, max) = (143327.815, 145923.829, 147508.837), stdev = 1680.103
[info]   CI (99.9%): [139454.351, 152393.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   2279.431 ±(99.9%) 32.367 MB/sec [Average]
[info]   (min, avg, max) = (2268.879, 2279.431, 2288.939), stdev = 8.406
[info]   CI (99.9%): [2247.064, 2311.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24582.905 ±(99.9%) 1089.927 B/op [Average]
[info]   (min, avg, max) = (24312.100, 24582.905, 25052.102), stdev = 283.051
[info]   CI (99.9%): [23492.978, 25672.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2175.511 ±(99.9%) 682.270 MB/sec [Average]
[info]   (min, avg, max) = (1953.593, 2175.511, 2330.244), stdev = 177.183
[info]   CI (99.9%): [1493.241, 2857.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   23476.396 ±(99.9%) 8207.464 B/op [Average]
[info]   (min, avg, max) = (20897.822, 23476.396, 25588.049), stdev = 2131.452
[info]   CI (99.9%): [15268.933, 31683.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.246 ±(99.9%) 1.493 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.246, 0.937), stdev = 0.388
[info]   CI (99.9%): [≈ 0, 1.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.643 ±(99.9%) 16.040 B/op [Average]
[info]   (min, avg, max) = (0.444, 2.643, 10.070), stdev = 4.165
[info]   CI (99.9%): [≈ 0, 18.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 12.000), stdev = 1.789
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.795 ops/s
[info] # Warmup Iteration   2: 288879.604 ops/s
[info] # Warmup Iteration   3: 389484.969 ops/s
[info] Iteration   1: 393066.572 ops/s
[info]                  ·gc.alloc.rate:                   813.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3899.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 394955.530 ops/s
[info]                  ·gc.alloc.rate:               815.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          3247.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2590.833 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 387759.220 ops/s
[info]                  ·gc.alloc.rate:                   808.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              3282.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3963.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 401351.669 ops/s
[info]                  ·gc.alloc.rate:                   819.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              3215.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2557.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.342 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 393191.434 ops/s
[info]                  ·gc.alloc.rate:                   809.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              3238.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3898.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   394064.885 ±(99.9%) 18806.308 ops/s [Average]
[info]   (min, avg, max) = (387759.220, 394064.885, 401351.669), stdev = 4883.938
[info]   CI (99.9%): [375258.577, 412871.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   813.208 ±(99.9%) 17.729 MB/sec [Average]
[info]   (min, avg, max) = (808.648, 813.208, 819.870), stdev = 4.604
[info]   CI (99.9%): [795.479, 830.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3247.930 ±(99.9%) 94.403 B/op [Average]
[info]   (min, avg, max) = (3215.091, 3247.930, 3282.107), stdev = 24.516
[info]   CI (99.9%): [3153.526, 3342.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   845.397 ±(99.9%) 682.783 MB/sec [Average]
[info]   (min, avg, max) = (650.174, 845.397, 976.565), stdev = 177.316
[info]   CI (99.9%): [162.615, 1528.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3381.985 ±(99.9%) 2841.987 B/op [Average]
[info]   (min, avg, max) = (2557.381, 3381.985, 3963.645), stdev = 738.055
[info]   CI (99.9%): [539.999, 6223.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.018 ±(99.9%) 7.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.018, 4.342), stdev = 1.877
[info]   CI (99.9%): [≈ 0, 8.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   4.006 ±(99.9%) 28.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.006, 17.027), stdev = 7.356
[info]   CI (99.9%): [≈ 0, 32.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.449
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31932.792 ops/s
[info] # Warmup Iteration   2: 219929.128 ops/s
[info] # Warmup Iteration   3: 254204.690 ops/s
[info] Iteration   1: 285089.869 ops/s
[info]                  ·gc.alloc.rate:                   590.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              3258.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3565.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 286400.340 ops/s
[info]                  ·gc.alloc.rate:               586.062 MB/sec
[info]                  ·gc.alloc.rate.norm:          3219.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1775.504 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 278981.615 ops/s
[info]                  ·gc.alloc.rate:                   582.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              3285.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3652.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 283290.615 ops/s
[info]                  ·gc.alloc.rate:                   588.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              3268.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3601.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 285981.632 ops/s
[info]                  ·gc.alloc.rate:                   598.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              3292.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3578.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   283948.814 ±(99.9%) 11639.941 ops/s [Average]
[info]   (min, avg, max) = (278981.615, 283948.814, 286400.340), stdev = 3022.856
[info]   CI (99.9%): [272308.874, 295588.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   589.177 ±(99.9%) 22.835 MB/sec [Average]
[info]   (min, avg, max) = (582.651, 589.177, 598.448), stdev = 5.930
[info]   CI (99.9%): [566.342, 612.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3264.776 ±(99.9%) 110.043 B/op [Average]
[info]   (min, avg, max) = (3219.800, 3264.776, 3292.161), stdev = 28.578
[info]   CI (99.9%): [3154.733, 3374.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   583.144 ±(99.9%) 559.636 MB/sec [Average]
[info]   (min, avg, max) = (323.174, 583.144, 650.441), stdev = 145.336
[info]   CI (99.9%): [23.508, 1142.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3234.601 ±(99.9%) 3143.457 B/op [Average]
[info]   (min, avg, max) = (1775.504, 3234.601, 3652.907), stdev = 816.346
[info]   CI (99.9%): [91.144, 6378.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.277 ±(99.9%) 2.249 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.277, 1.322), stdev = 0.584
[info]   CI (99.9%): [≈ 0, 2.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.528 ±(99.9%) 12.409 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.528, 7.292), stdev = 3.223
[info]   CI (99.9%): [≈ 0, 13.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 190438.627 ops/s
[info] # Warmup Iteration   2: 399555.015 ops/s
[info] # Warmup Iteration   3: 468722.354 ops/s
[info] Iteration   1: 476613.458 ops/s
[info]                  ·gc.alloc.rate:                   614.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              2026.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2167.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 467261.656 ops/s
[info]                  ·gc.alloc.rate:                   664.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              2238.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2213.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 489790.564 ops/s
[info]                  ·gc.alloc.rate:               640.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          2058.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2113.935 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 485194.128 ops/s
[info]                  ·gc.alloc.rate:               633.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          2054.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2136.048 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 488947.786 ops/s
[info]                  ·gc.alloc.rate:                   636.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              2047.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2121.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.949 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.490 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   481561.519 ±(99.9%) 36754.963 ops/s [Average]
[info]   (min, avg, max) = (467261.656, 481561.519, 489790.564), stdev = 9545.147
[info]   CI (99.9%): [444806.555, 518316.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   637.844 ±(99.9%) 70.083 MB/sec [Average]
[info]   (min, avg, max) = (614.087, 637.844, 664.866), stdev = 18.200
[info]   CI (99.9%): [567.761, 707.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2085.180 ±(99.9%) 333.989 B/op [Average]
[info]   (min, avg, max) = (2026.964, 2085.180, 2238.836), stdev = 86.736
[info]   CI (99.9%): [1751.191, 2419.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.008 ±(99.9%) 3.766 MB/sec [Average]
[info]   (min, avg, max) = (656.799, 658.008, 659.229), stdev = 0.978
[info]   CI (99.9%): [654.241, 661.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2150.660 ±(99.9%) 157.053 B/op [Average]
[info]   (min, avg, max) = (2113.935, 2150.660, 2213.582), stdev = 40.786
[info]   CI (99.9%): [1993.607, 2307.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 4.914 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 2.949), stdev = 1.276
[info]   CI (99.9%): [≈ 0, 5.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.298 ±(99.9%) 15.806 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.298, 9.490), stdev = 4.105
[info]   CI (99.9%): [≈ 0, 18.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3858.538 ops/s
[info] # Warmup Iteration   2: 71572.723 ops/s
[info] # Warmup Iteration   3: 93737.324 ops/s
[info] Iteration   1: 105648.012 ops/s
[info]                  ·gc.alloc.rate:                   3689.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              54930.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3617.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53861.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.466 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 105586.294 ops/s
[info]                  ·gc.alloc.rate:                   3695.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              55074.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3335.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49707.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.862 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 107631.870 ops/s
[info]                  ·gc.alloc.rate:                   3800.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              55562.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3708.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54213.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.913 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 106152.623 ops/s
[info]                  ·gc.alloc.rate:                   3750.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              55599.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3729.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55289.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.926 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 107166.220 ops/s
[info]                  ·gc.alloc.rate:                   3786.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              55590.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3739.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54892.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   106437.004 ±(99.9%) 3543.089 ops/s [Average]
[info]   (min, avg, max) = (105586.294, 106437.004, 107631.870), stdev = 920.129
[info]   CI (99.9%): [102893.915, 109980.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3744.549 ±(99.9%) 195.898 MB/sec [Average]
[info]   (min, avg, max) = (3689.245, 3744.549, 3800.224), stdev = 50.874
[info]   CI (99.9%): [3548.650, 3940.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   55351.471 ±(99.9%) 1243.048 B/op [Average]
[info]   (min, avg, max) = (54930.764, 55351.471, 55599.358), stdev = 322.816
[info]   CI (99.9%): [54108.424, 56594.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3626.020 ±(99.9%) 651.850 MB/sec [Average]
[info]   (min, avg, max) = (3335.739, 3626.020, 3739.321), stdev = 169.283
[info]   CI (99.9%): [2974.170, 4277.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   53592.995 ±(99.9%) 8636.376 B/op [Average]
[info]   (min, avg, max) = (49707.592, 53592.995, 55289.576), stdev = 2242.839
[info]   CI (99.9%): [44956.619, 62229.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.732 ±(99.9%) 5.722 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.732, 3.389), stdev = 1.486
[info]   CI (99.9%): [≈ 0, 6.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10.894 ±(99.9%) 85.207 B/op [Average]
[info]   (min, avg, max) = (0.306, 10.894, 50.466), stdev = 22.128
[info]   CI (99.9%): [≈ 0, 96.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   54.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 11.000), stdev = 0.447
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.000, 16.000), stdev = 0.707
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:54:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45456.172 ops/s
[info] # Warmup Iteration   2: 186244.971 ops/s
[info] # Warmup Iteration   3: 190795.902 ops/s
[info] Iteration   1: 210614.888 ops/s
[info]                  ·gc.alloc.rate:                   1824.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              13633.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14630.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.201 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 214498.396 ops/s
[info]                  ·gc.alloc.rate:                   1833.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              13449.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11911.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 213271.645 ops/s
[info]                  ·gc.alloc.rate:                   1836.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              13552.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14447.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 215965.945 ops/s
[info]                  ·gc.alloc.rate:                   1872.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              13645.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12014.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.455 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 215430.213 ops/s
[info]                  ·gc.alloc.rate:                   1881.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              13747.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1996.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14582.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   213956.217 ±(99.9%) 8199.871 ops/s [Average]
[info]   (min, avg, max) = (210614.888, 213956.217, 215965.945), stdev = 2129.480
[info]   CI (99.9%): [205756.347, 222156.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1849.874 ±(99.9%) 99.013 MB/sec [Average]
[info]   (min, avg, max) = (1824.560, 1849.874, 1881.921), stdev = 25.713
[info]   CI (99.9%): [1750.862, 1948.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13605.634 ±(99.9%) 429.171 B/op [Average]
[info]   (min, avg, max) = (13449.446, 13605.634, 13747.482), stdev = 111.454
[info]   CI (99.9%): [13176.463, 14034.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1836.979 ±(99.9%) 708.323 MB/sec [Average]
[info]   (min, avg, max) = (1623.811, 1836.979, 1996.217), stdev = 183.949
[info]   CI (99.9%): [1128.656, 2545.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13517.282 ±(99.9%) 5470.979 B/op [Average]
[info]   (min, avg, max) = (11911.582, 13517.282, 14630.135), stdev = 1420.796
[info]   CI (99.9%): [8046.303, 18988.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.316 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.912, 4.309), stdev = 1.900
[info]   CI (99.9%): [≈ 0, 8.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.806 ±(99.9%) 54.683 B/op [Average]
[info]   (min, avg, max) = (0.152, 6.806, 32.201), stdev = 14.201
[info]   CI (99.9%): [≈ 0, 61.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 17.000), stdev = 4.382
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.555 ops/s
[info] # Warmup Iteration   2: 769130.249 ops/s
[info] # Warmup Iteration   3: 872871.302 ops/s
[info] Iteration   1: 931997.213 ops/s
[info]                  ·gc.alloc.rate:                   743.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              1255.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 922055.432 ops/s
[info]                  ·gc.alloc.rate:                   746.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              1274.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1112.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 915767.625 ops/s
[info]                  ·gc.alloc.rate:                   738.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              1269.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 920188.844 ops/s
[info]                  ·gc.alloc.rate:                   761.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              1302.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1674.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 927267.492 ops/s
[info]                  ·gc.alloc.rate:                   743.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1261.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.350 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   923455.321 ±(99.9%) 24294.695 ops/s [Average]
[info]   (min, avg, max) = (915767.625, 923455.321, 931997.213), stdev = 6309.255
[info]   CI (99.9%): [899160.626, 947750.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   746.711 ±(99.9%) 33.077 MB/sec [Average]
[info]   (min, avg, max) = (738.895, 746.711, 761.260), stdev = 8.590
[info]   CI (99.9%): [713.635, 779.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1272.428 ±(99.9%) 69.769 B/op [Average]
[info]   (min, avg, max) = (1255.165, 1272.428, 1302.026), stdev = 18.119
[info]   CI (99.9%): [1202.659, 1342.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   717.394 ±(99.9%) 563.005 MB/sec [Average]
[info]   (min, avg, max) = (651.322, 717.394, 978.941), stdev = 146.211
[info]   CI (99.9%): [154.389, 1280.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1222.873 ±(99.9%) 972.233 B/op [Average]
[info]   (min, avg, max) = (1099.653, 1222.873, 1674.339), stdev = 252.486
[info]   CI (99.9%): [250.640, 2195.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.028 ±(99.9%) 5.313 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 1.028, 2.564), stdev = 1.380
[info]   CI (99.9%): [≈ 0, 6.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.750 ±(99.9%) 9.050 B/op [Average]
[info]   (min, avg, max) = (0.013, 1.750, 4.350), stdev = 2.350
[info]   CI (99.9%): [≈ 0, 10.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.490
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 184946.240 ops/s
[info] # Warmup Iteration   2: 491822.813 ops/s
[info] # Warmup Iteration   3: 595110.990 ops/s
[info] Iteration   1: 604627.604 ops/s
[info]                  ·gc.alloc.rate:               486.754 MB/sec
[info]                  ·gc.alloc.rate.norm:          1267.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 846.213 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 580486.253 ops/s
[info]                  ·gc.alloc.rate:                        461.692 MB/sec
[info]                  ·gc.alloc.rate.norm:                   1251.269 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.020 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.053 B/op
[info]                  ·gc.churn.Metaspace:                   0.052 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:               584.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          1583.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      12.820 B/op
[info]                  ·gc.count:                             3.000 counts
[info]                  ·gc.time:                              42.000 ms
[info] Iteration   3: 602272.854 ops/s
[info]                  ·gc.alloc.rate:               484.331 MB/sec
[info]                  ·gc.alloc.rate.norm:          1265.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 847.815 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 597835.673 ops/s
[info]                  ·gc.alloc.rate:                   484.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              1275.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1704.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 605751.293 ops/s
[info]                  ·gc.alloc.rate:               492.854 MB/sec
[info]                  ·gc.alloc.rate.norm:          1280.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839.470 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   598194.735 ±(99.9%) 39870.144 ops/s [Average]
[info]   (min, avg, max) = (580486.253, 598194.735, 605751.293), stdev = 10354.150
[info]   CI (99.9%): [558324.591, 638064.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   482.068 ±(99.9%) 45.787 MB/sec [Average]
[info]   (min, avg, max) = (461.692, 482.068, 492.854), stdev = 11.891
[info]   CI (99.9%): [436.281, 527.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1267.959 ±(99.9%) 43.190 B/op [Average]
[info]   (min, avg, max) = (1251.269, 1267.959, 1280.544), stdev = 11.216
[info]   CI (99.9%): [1224.769, 1311.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.011 ±(99.9%) 0.092 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.053), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.028 ±(99.9%) 0.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.141), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.959 ±(99.9%) 621.489 MB/sec [Average]
[info]   (min, avg, max) = (323.094, 440.959, 647.734), stdev = 161.399
[info]   CI (99.9%): [≈ 0, 1062.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1164.375 ±(99.9%) 1694.670 B/op [Average]
[info]   (min, avg, max) = (839.470, 1164.375, 1704.645), stdev = 440.100
[info]   CI (99.9%): [≈ 0, 2859.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.950 ±(99.9%) 8.137 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.950, 4.730), stdev = 2.113
[info]   CI (99.9%): [≈ 0, 9.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.575 ±(99.9%) 22.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.575, 12.820), stdev = 5.727
[info]   CI (99.9%): [≈ 0, 24.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 10.200, 42.000), stdev = 17.824
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 403002.376 ops/s
[info] # Warmup Iteration   2: 673716.928 ops/s
[info] # Warmup Iteration   3: 792979.979 ops/s
[info] Iteration   1: 800206.568 ops/s
[info]                  ·gc.alloc.rate:                   644.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              1268.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 753295.476 ops/s
[info]                  ·gc.alloc.rate:               636.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          1330.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1373.731 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 797059.625 ops/s
[info]                  ·gc.alloc.rate:                   661.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              1306.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1300.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 797324.912 ops/s
[info]                  ·gc.alloc.rate:               642.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          1266.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1301.105 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 798340.135 ops/s
[info]                  ·gc.alloc.rate:                   647.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              1275.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1300.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.787 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   789245.343 ±(99.9%) 77530.950 ops/s [Average]
[info]   (min, avg, max) = (753295.476, 789245.343, 800206.568), stdev = 20134.542
[info]   CI (99.9%): [711714.393, 866776.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   646.526 ±(99.9%) 35.808 MB/sec [Average]
[info]   (min, avg, max) = (636.891, 646.526, 661.707), stdev = 9.299
[info]   CI (99.9%): [610.718, 682.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1289.537 ±(99.9%) 107.759 B/op [Average]
[info]   (min, avg, max) = (1266.896, 1289.537, 1330.530), stdev = 27.985
[info]   CI (99.9%): [1181.778, 1397.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.413 ±(99.9%) 5.299 MB/sec [Average]
[info]   (min, avg, max) = (656.573, 658.413, 659.995), stdev = 1.376
[info]   CI (99.9%): [653.113, 663.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1313.449 ±(99.9%) 130.728 B/op [Average]
[info]   (min, avg, max) = (1291.259, 1313.449, 1373.731), stdev = 33.950
[info]   CI (99.9%): [1182.721, 1444.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.594 ±(99.9%) 5.042 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.594, 2.936), stdev = 1.309
[info]   CI (99.9%): [≈ 0, 5.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.171 ±(99.9%) 9.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.171, 5.787), stdev = 2.581
[info]   CI (99.9%): [≈ 0, 11.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 491485.778 ops/s
[info] # Warmup Iteration   2: 733870.244 ops/s
[info] # Warmup Iteration   3: 839193.051 ops/s
[info] Iteration   1: 838721.294 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 837588.021 ops/s
[info]                  ·gc.alloc.rate:      0.191 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.359 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 838025.288 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 801208.236 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 836576.281 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   830423.824 ±(99.9%) 62960.068 ops/s [Average]
[info]   (min, avg, max) = (801208.236, 830423.824, 838721.294), stdev = 16350.530
[info]   CI (99.9%): [767463.756, 893383.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.038 ±(99.9%) 0.329 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.038, 0.191), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.072 ±(99.9%) 0.617 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.072, 0.359), stdev = 0.160
[info]   CI (99.9%): [≈ 0, 0.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:53:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4482.220 ops/s
[info] # Warmup Iteration   2: 21961.872 ops/s
[info] # Warmup Iteration   3: 31509.401 ops/s
[info] Iteration   1: 35044.403 ops/s
[info]                  ·gc.alloc.rate:                   1611.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              72372.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72819.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.225 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 32310.125 ops/s
[info]                  ·gc.alloc.rate:                   1844.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              89819.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79172.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.263 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.647 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 35615.435 ops/s
[info]                  ·gc.alloc.rate:                   1623.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              71737.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71243.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.285 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 36166.246 ops/s
[info]                  ·gc.alloc.rate:                   1636.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              71218.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69955.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.718 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 36152.326 ops/s
[info]                  ·gc.alloc.rate:                   1628.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              70888.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70516.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.813 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   35057.707 ±(99.9%) 6175.302 ops/s [Average]
[info]   (min, avg, max) = (32310.125, 35057.707, 36166.246), stdev = 1603.706
[info]   CI (99.9%): [28882.405, 41233.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1668.880 ±(99.9%) 378.666 MB/sec [Average]
[info]   (min, avg, max) = (1611.502, 1668.880, 1844.032), stdev = 98.338
[info]   CI (99.9%): [1290.214, 2047.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   75207.430 ±(99.9%) 31528.697 B/op [Average]
[info]   (min, avg, max) = (70888.481, 75207.430, 89819.946), stdev = 8187.903
[info]   CI (99.9%): [43678.732, 106736.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1617.398 ±(99.9%) 27.670 MB/sec [Average]
[info]   (min, avg, max) = (1607.696, 1617.398, 1625.428), stdev = 7.186
[info]   CI (99.9%): [1589.728, 1645.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   72741.403 ±(99.9%) 14448.070 B/op [Average]
[info]   (min, avg, max) = (69955.318, 72741.403, 79172.096), stdev = 3752.118
[info]   CI (99.9%): [58293.334, 87189.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.601 ±(99.9%) 6.868 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.601, 4.263), stdev = 1.784
[info]   CI (99.9%): [≈ 0, 8.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   74.738 ±(99.9%) 331.525 B/op [Average]
[info]   (min, avg, max) = (1.813, 74.738, 207.647), stdev = 86.096
[info]   CI (99.9%): [≈ 0, 406.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.600, 21.000), stdev = 7.232
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 796.049 ops/s
[info] # Warmup Iteration   2: 5402.098 ops/s
[info] # Warmup Iteration   3: 7309.206 ops/s
[info] Iteration   1: 9274.401 ops/s
[info]                  ·gc.alloc.rate:                   1288.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              218577.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220770.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 298.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 9160.697 ops/s
[info]                  ·gc.alloc.rate:                   1273.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              218618.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223664.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 9156.724 ops/s
[info]                  ·gc.alloc.rate:                   1270.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              218313.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224531.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.507 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9351.019 ops/s
[info]                  ·gc.alloc.rate:                   1282.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              215801.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165812.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.503 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 9062.720 ops/s
[info]                  ·gc.alloc.rate:               1248.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          216888.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229404.921 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   9201.112 ±(99.9%) 433.088 ops/s [Average]
[info]   (min, avg, max) = (9062.720, 9201.112, 9351.019), stdev = 112.471
[info]   CI (99.9%): [8768.025, 9634.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1272.659 ±(99.9%) 57.862 MB/sec [Average]
[info]   (min, avg, max) = (1248.966, 1272.659, 1288.246), stdev = 15.027
[info]   CI (99.9%): [1214.796, 1330.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   217639.845 ±(99.9%) 4808.163 B/op [Average]
[info]   (min, avg, max) = (215801.320, 217639.845, 218618.748), stdev = 1248.665
[info]   CI (99.9%): [212831.682, 222448.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1243.363 ±(99.9%) 556.265 MB/sec [Average]
[info]   (min, avg, max) = (985.331, 1243.363, 1321.045), stdev = 144.460
[info]   CI (99.9%): [687.099, 1799.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   212836.883 ±(99.9%) 101928.491 B/op [Average]
[info]   (min, avg, max) = (165812.456, 212836.883, 229404.921), stdev = 26470.505
[info]   CI (99.9%): [110908.392, 314765.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.447 ±(99.9%) 2.897 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.447, 1.758), stdev = 0.752
[info]   CI (99.9%): [≈ 0, 3.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   76.072 ±(99.9%) 491.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 76.072, 298.197), stdev = 127.636
[info]   CI (99.9%): [≈ 0, 567.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 811.521 ops/s
[info] # Warmup Iteration   2: 6419.223 ops/s
[info] # Warmup Iteration   3: 8094.592 ops/s
[info] Iteration   1: 9164.138 ops/s
[info]                  ·gc.alloc.rate:                   1189.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              204221.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166678.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.071 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 8977.430 ops/s
[info]                  ·gc.alloc.rate:                   1172.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              205559.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226204.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.195 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 9109.288 ops/s
[info]                  ·gc.alloc.rate:               1176.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          203271.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      967.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 167205.984 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 9232.599 ops/s
[info]                  ·gc.alloc.rate:                   1195.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              203796.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221093.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.549 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9168.849 ops/s
[info]                  ·gc.alloc.rate:               1193.781 MB/sec
[info]                  ·gc.alloc.rate.norm:          204870.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224441.684 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   9130.461 ±(99.9%) 369.876 ops/s [Average]
[info]   (min, avg, max) = (8977.430, 9130.461, 9232.599), stdev = 96.056
[info]   CI (99.9%): [8760.585, 9500.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1185.593 ±(99.9%) 40.016 MB/sec [Average]
[info]   (min, avg, max) = (1172.593, 1185.593, 1195.611), stdev = 10.392
[info]   CI (99.9%): [1145.577, 1225.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   204343.607 ±(99.9%) 3454.459 B/op [Average]
[info]   (min, avg, max) = (203271.029, 204343.607, 205559.055), stdev = 897.112
[info]   CI (99.9%): [200889.148, 207798.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1166.770 ±(99.9%) 694.602 MB/sec [Average]
[info]   (min, avg, max) = (967.832, 1166.770, 1307.824), stdev = 180.386
[info]   CI (99.9%): [472.168, 1861.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   201124.872 ±(99.9%) 120366.644 B/op [Average]
[info]   (min, avg, max) = (166678.511, 201124.872, 226204.668), stdev = 31258.835
[info]   CI (99.9%): [80758.227, 321491.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.432 ±(99.9%) 2.704 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.432, 1.625), stdev = 0.702
[info]   CI (99.9%): [≈ 0, 3.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   74.563 ±(99.9%) 464.599 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 74.563, 279.071), stdev = 120.655
[info]   CI (99.9%): [≈ 0, 539.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62674.292 ops/s
[info] # Warmup Iteration   2: 139152.734 ops/s
[info] # Warmup Iteration   3: 169691.677 ops/s
[info] Iteration   1: 190417.205 ops/s
[info]                  ·gc.alloc.rate:                   1905.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              15748.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15857.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.783 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 195522.665 ops/s
[info]                  ·gc.alloc.rate:                   1951.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              15704.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15497.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.525 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 195597.418 ops/s
[info]                  ·gc.alloc.rate:                   1945.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              15650.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15592.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.864 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.998 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 195726.021 ops/s
[info]                  ·gc.alloc.rate:                   1977.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              15894.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15699.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 194113.250 ops/s
[info]                  ·gc.alloc.rate:                   1943.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              15757.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13344.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   194275.312 ±(99.9%) 8678.839 ops/s [Average]
[info]   (min, avg, max) = (190417.205, 194275.312, 195726.021), stdev = 2253.867
[info]   CI (99.9%): [185596.472, 202954.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1944.610 ±(99.9%) 98.984 MB/sec [Average]
[info]   (min, avg, max) = (1905.456, 1944.610, 1977.277), stdev = 25.706
[info]   CI (99.9%): [1845.626, 2043.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15751.045 ±(99.9%) 349.256 B/op [Average]
[info]   (min, avg, max) = (15650.678, 15751.045, 15894.488), stdev = 90.701
[info]   CI (99.9%): [15401.789, 16100.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1876.291 ±(99.9%) 497.784 MB/sec [Average]
[info]   (min, avg, max) = (1646.234, 1876.291, 1953.027), stdev = 129.273
[info]   CI (99.9%): [1378.507, 2374.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15198.382 ±(99.9%) 4024.078 B/op [Average]
[info]   (min, avg, max) = (13344.324, 15198.382, 15857.649), stdev = 1045.040
[info]   CI (99.9%): [11174.305, 19222.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.848 ±(99.9%) 10.938 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.848, 6.749), stdev = 2.841
[info]   CI (99.9%): [≈ 0, 12.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.162 ±(99.9%) 90.467 B/op [Average]
[info]   (min, avg, max) = (0.167, 15.162, 55.783), stdev = 23.494
[info]   CI (99.9%): [≈ 0, 105.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.000, 20.000), stdev = 5.477
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:52:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 587.668 ops/s
[info] # Warmup Iteration   2: 5024.313 ops/s
[info] # Warmup Iteration   3: 7100.392 ops/s
[info] Iteration   1: 8804.646 ops/s
[info]                  ·gc.alloc.rate:                   1376.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              246071.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230291.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.721 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 8931.644 ops/s
[info]                  ·gc.alloc.rate:                   1407.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              247935.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284123.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.668 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 8953.721 ops/s
[info]                  ·gc.alloc.rate:                   1394.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              245123.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227981.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 410.596 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 8985.349 ops/s
[info]                  ·gc.alloc.rate:                   1403.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              245790.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227870.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8928.657 ops/s
[info]                  ·gc.alloc.rate:               1401.000 MB/sec
[info]                  ·gc.alloc.rate.norm:          246915.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229885.994 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8920.803 ±(99.9%) 264.838 ops/s [Average]
[info]   (min, avg, max) = (8804.646, 8920.803, 8985.349), stdev = 68.778
[info]   CI (99.9%): [8655.965, 9185.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1396.586 ±(99.9%) 46.562 MB/sec [Average]
[info]   (min, avg, max) = (1376.633, 1396.586, 1407.509), stdev = 12.092
[info]   CI (99.9%): [1350.024, 1443.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   246367.200 ±(99.9%) 4185.961 B/op [Average]
[info]   (min, avg, max) = (245123.537, 246367.200, 247935.379), stdev = 1087.081
[info]   CI (99.9%): [242181.238, 250553.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1360.727 ±(99.9%) 543.413 MB/sec [Average]
[info]   (min, avg, max) = (1288.353, 1360.727, 1612.948), stdev = 141.123
[info]   CI (99.9%): [817.314, 1904.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   240030.641 ±(99.9%) 95006.938 B/op [Average]
[info]   (min, avg, max) = (227870.138, 240030.641, 284123.834), stdev = 24673.000
[info]   CI (99.9%): [145023.703, 335037.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.487 ±(99.9%) 3.980 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.487, 2.336), stdev = 1.034
[info]   CI (99.9%): [≈ 0, 4.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   85.661 ±(99.9%) 699.595 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 85.661, 410.596), stdev = 181.683
[info]   CI (99.9%): [≈ 0, 785.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 10.000), stdev = 1.871
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4469.803 ops/s
[info] # Warmup Iteration   2: 16121.026 ops/s
[info] # Warmup Iteration   3: 21077.195 ops/s
[info] Iteration   1: 23717.021 ops/s
[info]                  ·gc.alloc.rate:                   1273.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              84474.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1253.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83130.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.425 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 23246.926 ops/s
[info]                  ·gc.alloc.rate:                   1240.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              83926.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1265.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85671.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.417 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 22190.875 ops/s
[info]                  ·gc.alloc.rate:                   1486.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              105385.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1592.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112870.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.338 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.542 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 22439.246 ops/s
[info]                  ·gc.alloc.rate:                   1421.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              99655.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1270.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89102.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 469.599 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 20879.761 ops/s
[info]                  ·gc.alloc.rate:               1530.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          115398.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1587.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119629.954 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   22494.766 ±(99.9%) 4202.024 ops/s [Average]
[info]   (min, avg, max) = (20879.761, 22494.766, 23717.021), stdev = 1091.252
[info]   CI (99.9%): [18292.742, 26696.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1390.411 ±(99.9%) 495.711 MB/sec [Average]
[info]   (min, avg, max) = (1240.017, 1390.411, 1530.904), stdev = 128.735
[info]   CI (99.9%): [894.700, 1886.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   97768.008 ±(99.9%) 52400.439 B/op [Average]
[info]   (min, avg, max) = (83926.314, 97768.008, 115398.423), stdev = 13608.228
[info]   CI (99.9%): [45367.569, 150168.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1393.760 ±(99.9%) 689.053 MB/sec [Average]
[info]   (min, avg, max) = (1253.012, 1393.760, 1592.252), stdev = 178.945
[info]   CI (99.9%): [704.707, 2082.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   98080.831 ±(99.9%) 65041.529 B/op [Average]
[info]   (min, avg, max) = (83130.150, 98080.831, 119629.954), stdev = 16891.079
[info]   CI (99.9%): [33039.302, 163122.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.307 ±(99.9%) 11.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.307, 6.697), stdev = 3.053
[info]   CI (99.9%): [≈ 0, 14.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   162.197 ±(99.9%) 827.261 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 162.197, 469.599), stdev = 214.837
[info]   CI (99.9%): [≈ 0, 989.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   95.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 19.000, 24.000), stdev = 6.245
[info]   CI (99.9%): [95.000, 95.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2407.746 ops/s
[info] # Warmup Iteration   2: 20328.333 ops/s
[info] # Warmup Iteration   3: 23464.244 ops/s
[info] Iteration   1: 23016.106 ops/s
[info]                  ·gc.alloc.rate:                   1454.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              99402.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1583.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108233.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.424 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 25769.925 ops/s
[info]                  ·gc.alloc.rate:                   1077.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              65793.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          951.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58098.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.529 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 276.527 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 24067.920 ops/s
[info]                  ·gc.alloc.rate:                   1228.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              80329.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1270.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83028.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.587 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 23349.375 ops/s
[info]                  ·gc.alloc.rate:                   1217.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              82070.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84455.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.959 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 469.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 25303.881 ops/s
[info]                  ·gc.alloc.rate:                   1022.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              63601.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          908.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56514.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.573 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24301.441 ±(99.9%) 4626.537 ops/s [Average]
[info]   (min, avg, max) = (23016.106, 24301.441, 25769.925), stdev = 1201.497
[info]   CI (99.9%): [19674.905, 28927.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1200.198 ±(99.9%) 644.974 MB/sec [Average]
[info]   (min, avg, max) = (1022.796, 1200.198, 1454.353), stdev = 167.498
[info]   CI (99.9%): [555.224, 1845.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   78239.520 ±(99.9%) 55672.112 B/op [Average]
[info]   (min, avg, max) = (63601.030, 78239.520, 99402.978), stdev = 14457.871
[info]   CI (99.9%): [22567.408, 133911.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1193.370 ±(99.9%) 1056.498 MB/sec [Average]
[info]   (min, avg, max) = (908.827, 1193.370, 1583.545), stdev = 274.369
[info]   CI (99.9%): [136.872, 2249.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   78065.910 ±(99.9%) 82557.965 B/op [Average]
[info]   (min, avg, max) = (56514.053, 78065.910, 108233.050), stdev = 21440.041
[info]   CI (99.9%): [≈ 0, 160623.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.404 ±(99.9%) 12.213 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.404, 6.959), stdev = 3.172
[info]   CI (99.9%): [≈ 0, 14.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   156.033 ±(99.9%) 806.771 B/op [Average]
[info]   (min, avg, max) = (1.424, 156.033, 469.054), stdev = 209.516
[info]   CI (99.9%): [≈ 0, 962.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   105.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 21.000, 29.000), stdev = 5.523
[info]   CI (99.9%): [105.000, 105.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 264807.569 ops/s
[info] # Warmup Iteration   2: 505503.307 ops/s
[info] # Warmup Iteration   3: 526321.936 ops/s
[info] Iteration   1: 533234.629 ops/s
[info]                  ·gc.alloc.rate:                   1246.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              3677.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3893.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 526613.774 ops/s
[info]                  ·gc.alloc.rate:                   1217.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              3638.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2956.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.605 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 536950.230 ops/s
[info]                  ·gc.alloc.rate:                   1255.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3842.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.319 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 528899.739 ops/s
[info]                  ·gc.alloc.rate:               1238.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          3683.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3894.261 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 527273.190 ops/s
[info]                  ·gc.alloc.rate:                   1234.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              3682.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2935.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   530594.312 ±(99.9%) 16907.252 ops/s [Average]
[info]   (min, avg, max) = (526613.774, 530594.312, 536950.230), stdev = 4390.760
[info]   CI (99.9%): [513687.061, 547501.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1238.487 ±(99.9%) 54.802 MB/sec [Average]
[info]   (min, avg, max) = (1217.679, 1238.487, 1255.647), stdev = 14.232
[info]   CI (99.9%): [1183.685, 1293.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3672.724 ±(99.9%) 73.581 B/op [Average]
[info]   (min, avg, max) = (3638.813, 3672.724, 3683.818), stdev = 19.109
[info]   CI (99.9%): [3599.143, 3746.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.570 ±(99.9%) 689.061 MB/sec [Average]
[info]   (min, avg, max) = (983.856, 1182.570, 1319.515), stdev = 178.947
[info]   CI (99.9%): [493.510, 1871.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3504.460 ±(99.9%) 1964.273 B/op [Average]
[info]   (min, avg, max) = (2935.870, 3504.460, 3894.261), stdev = 510.115
[info]   CI (99.9%): [1540.187, 5468.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.880 ±(99.9%) 5.886 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.880, 3.549), stdev = 1.528
[info]   CI (99.9%): [≈ 0, 6.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.622 ±(99.9%) 17.592 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.622, 10.605), stdev = 4.569
[info]   CI (99.9%): [≈ 0, 20.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 15.000), stdev = 4.550
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 315202.846 ops/s
[info] # Warmup Iteration   2: 607886.038 ops/s
[info] # Warmup Iteration   3: 628784.277 ops/s
[info] Iteration   1: 628351.935 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 625853.548 ops/s
[info]                  ·gc.alloc.rate:      1.475 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.708 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 625348.246 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 626708.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 594484.092 ops/s
[info]                  ·gc.alloc.rate:      44.834 MB/sec
[info]                  ·gc.alloc.rate.norm: 118.691 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   620149.273 ±(99.9%) 55420.429 ops/s [Average]
[info]   (min, avg, max) = (594484.092, 620149.273, 628351.935), stdev = 14392.509
[info]   CI (99.9%): [564728.844, 675569.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   9.262 ±(99.9%) 76.611 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 9.262, 44.834), stdev = 19.896
[info]   CI (99.9%): [≈ 0, 85.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   24.480 ±(99.9%) 202.890 B/op [Average]
[info]   (min, avg, max) = (0.001, 24.480, 118.691), stdev = 52.690
[info]   CI (99.9%): [≈ 0, 227.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:51:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3560.265 ops/s
[info] # Warmup Iteration   2: 16400.714 ops/s
[info] # Warmup Iteration   3: 20066.680 ops/s
[info] Iteration   1: 24050.876 ops/s
[info]                  ·gc.alloc.rate:                   1074.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              70318.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          903.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59133.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.655 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 25318.035 ops/s
[info]                  ·gc.alloc.rate:                   1155.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              71817.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1211.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75285.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.176 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   3: 24506.120 ops/s
[info]                  ·gc.alloc.rate:                   1439.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              92410.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1529.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98179.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 259.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         42.000 ms
[info] Iteration   4: 23409.224 ops/s
[info]                  ·gc.alloc.rate:                   1353.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              90971.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1223.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82227.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 576.800 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 25199.172 ops/s
[info]                  ·gc.alloc.rate:                   1183.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              73908.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1208.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75474.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 800.383 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24496.685 ±(99.9%) 3074.197 ops/s [Average]
[info]   (min, avg, max) = (23409.224, 24496.685, 25318.035), stdev = 798.359
[info]   CI (99.9%): [21422.489, 27570.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1241.398 ±(99.9%) 578.913 MB/sec [Average]
[info]   (min, avg, max) = (1074.729, 1241.398, 1439.586), stdev = 150.342
[info]   CI (99.9%): [662.485, 1820.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   79885.208 ±(99.9%) 41833.413 B/op [Average]
[info]   (min, avg, max) = (70318.628, 79885.208, 92410.046), stdev = 10864.005
[info]   CI (99.9%): [38051.794, 121718.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1215.337 ±(99.9%) 852.112 MB/sec [Average]
[info]   (min, avg, max) = (903.777, 1215.337, 1529.467), stdev = 221.291
[info]   CI (99.9%): [363.224, 2067.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   78060.166 ±(99.9%) 54277.849 B/op [Average]
[info]   (min, avg, max) = (59133.339, 78060.166, 98179.671), stdev = 14095.785
[info]   CI (99.9%): [23782.317, 132338.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   5.151 ±(99.9%) 21.229 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 5.151, 12.816), stdev = 5.513
[info]   CI (99.9%): [≈ 0, 26.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   331.403 ±(99.9%) 1349.820 B/op [Average]
[info]   (min, avg, max) = (5.176, 331.403, 800.383), stdev = 350.544
[info]   CI (99.9%): [≈ 0, 1681.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   124.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 24.800, 42.000), stdev = 13.330
[info]   CI (99.9%): [124.000, 124.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1419.401 ops/s
[info] # Warmup Iteration   2: 7103.936 ops/s
[info] # Warmup Iteration   3: 8863.391 ops/s
[info] Iteration   1: 13370.169 ops/s
[info]                  ·gc.alloc.rate:                   1286.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              151431.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1279.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150558.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.817 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 449.302 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 13616.332 ops/s
[info]                  ·gc.alloc.rate:                   1304.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              150748.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1280.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147981.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 141.957 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 12958.214 ops/s
[info]                  ·gc.alloc.rate:                   1258.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              152766.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1283.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155830.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.552 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 12480.615 ops/s
[info]                  ·gc.alloc.rate:                   1502.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              189425.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161952.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1122.421 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 13711.023 ops/s
[info]                  ·gc.alloc.rate:                   1308.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              150162.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1277.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146585.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.169 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13227.271 ±(99.9%) 1959.380 ops/s [Average]
[info]   (min, avg, max) = (12480.615, 13227.271, 13711.023), stdev = 508.845
[info]   CI (99.9%): [11267.891, 15186.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1331.999 ±(99.9%) 374.385 MB/sec [Average]
[info]   (min, avg, max) = (1258.272, 1331.999, 1502.281), stdev = 97.227
[info]   CI (99.9%): [957.614, 1706.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   158906.853 ±(99.9%) 65800.775 B/op [Average]
[info]   (min, avg, max) = (150162.247, 158906.853, 189425.930), stdev = 17088.252
[info]   CI (99.9%): [93106.078, 224707.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1280.964 ±(99.9%) 11.355 MB/sec [Average]
[info]   (min, avg, max) = (1277.375, 1280.964, 1284.398), stdev = 2.949
[info]   CI (99.9%): [1269.609, 1292.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   152581.543 ±(99.9%) 24321.627 B/op [Average]
[info]   (min, avg, max) = (146585.006, 152581.543, 161952.618), stdev = 6316.249
[info]   CI (99.9%): [128259.916, 176903.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.262 ±(99.9%) 13.256 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 3.262, 8.902), stdev = 3.443
[info]   CI (99.9%): [≈ 0, 16.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   400.080 ±(99.9%) 1678.161 B/op [Average]
[info]   (min, avg, max) = (7.169, 400.080, 1122.421), stdev = 435.813
[info]   CI (99.9%): [≈ 0, 2078.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.000, 17.000), stdev = 3.391
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1159.406 ops/s
[info] # Warmup Iteration   2: 8885.270 ops/s
[info] # Warmup Iteration   3: 13353.709 ops/s
[info] Iteration   1: 13113.686 ops/s
[info]                  ·gc.alloc.rate:                        1183.814 MB/sec
[info]                  ·gc.alloc.rate.norm:                   142082.799 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.024 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.849 B/op
[info]                  ·gc.churn.Metaspace:                   0.064 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              7.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1311.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          157403.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.405 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      648.678 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              62.000 ms
[info] Iteration   2: 14047.406 ops/s
[info]                  ·gc.alloc.rate:                   1249.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              140004.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109036.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 13590.083 ops/s
[info]                  ·gc.alloc.rate:                   1211.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              140260.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149460.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.411 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 13852.085 ops/s
[info]                  ·gc.alloc.rate:                   1232.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              140021.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147061.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 13889.433 ops/s
[info]                  ·gc.alloc.rate:                   1249.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              141409.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147483.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.354 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13698.539 ±(99.9%) 1408.963 ops/s [Average]
[info]   (min, avg, max) = (13113.686, 13698.539, 14047.406), stdev = 365.903
[info]   CI (99.9%): [12289.576, 15107.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1225.230 ±(99.9%) 107.707 MB/sec [Average]
[info]   (min, avg, max) = (1183.814, 1225.230, 1249.711), stdev = 27.971
[info]   CI (99.9%): [1117.523, 1332.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   140755.712 ±(99.9%) 3621.467 B/op [Average]
[info]   (min, avg, max) = (140004.567, 140755.712, 142082.799), stdev = 940.483
[info]   CI (99.9%): [137134.245, 144377.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.570 ±(99.9%) 4.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.570, 2.849), stdev = 1.274
[info]   CI (99.9%): [≈ 0, 5.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.013 ±(99.9%) 0.111 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.547 ±(99.9%) 13.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.547, 7.735), stdev = 3.459
[info]   CI (99.9%): [≈ 0, 14.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1234.487 ±(99.9%) 563.101 MB/sec [Average]
[info]   (min, avg, max) = (973.287, 1234.487, 1311.468), stdev = 146.236
[info]   CI (99.9%): [671.385, 1797.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   142089.078 ±(99.9%) 72937.359 B/op [Average]
[info]   (min, avg, max) = (109036.978, 142089.078, 157403.880), stdev = 18941.601
[info]   CI (99.9%): [69151.719, 215026.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.098 ±(99.9%) 9.271 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.098, 5.405), stdev = 2.408
[info]   CI (99.9%): [≈ 0, 10.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   131.628 ±(99.9%) 1112.989 B/op [Average]
[info]   (min, avg, max) = (2.332, 131.628, 648.678), stdev = 289.040
[info]   CI (99.9%): [≈ 0, 1244.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 16.600, 62.000), stdev = 25.383
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74084.108 ops/s
[info] # Warmup Iteration   2: 261995.278 ops/s
[info] # Warmup Iteration   3: 277765.447 ops/s
[info] Iteration   1: 321754.765 ops/s
[info]                  ·gc.alloc.rate:                   1919.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              9386.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1895.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9268.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 326197.215 ops/s
[info]                  ·gc.alloc.rate:                   1930.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              9310.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1577.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7607.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.536 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 330600.748 ops/s
[info]                  ·gc.alloc.rate:                   1958.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              9319.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2209.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10514.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 322627.092 ops/s
[info]                  ·gc.alloc.rate:                   1924.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              9385.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1601.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7813.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 328290.898 ops/s
[info]                  ·gc.alloc.rate:                   1976.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              9476.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9370.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   325894.144 ±(99.9%) 14381.586 ops/s [Average]
[info]   (min, avg, max) = (321754.765, 325894.144, 330600.748), stdev = 3734.852
[info]   CI (99.9%): [311512.557, 340275.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1941.668 ±(99.9%) 95.491 MB/sec [Average]
[info]   (min, avg, max) = (1919.145, 1941.668, 1976.909), stdev = 24.799
[info]   CI (99.9%): [1846.176, 2037.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9375.748 ±(99.9%) 256.183 B/op [Average]
[info]   (min, avg, max) = (9310.768, 9375.748, 9476.362), stdev = 66.530
[info]   CI (99.9%): [9119.565, 9631.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1847.581 ±(99.9%) 1015.141 MB/sec [Average]
[info]   (min, avg, max) = (1577.109, 1847.581, 2209.043), stdev = 263.629
[info]   CI (99.9%): [832.440, 2862.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8914.977 ±(99.9%) 4641.636 B/op [Average]
[info]   (min, avg, max) = (7607.716, 8914.977, 10514.238), stdev = 1205.418
[info]   CI (99.9%): [4273.340, 13556.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.794 ±(99.9%) 9.590 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.794, 5.328), stdev = 2.491
[info]   CI (99.9%): [≈ 0, 11.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.723 ±(99.9%) 46.752 B/op [Average]
[info]   (min, avg, max) = (0.102, 8.723, 26.060), stdev = 12.141
[info]   CI (99.9%): [≈ 0, 55.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.000, 27.000), stdev = 8.515
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 189.910 ops/s
[info] # Warmup Iteration   2: 4284.176 ops/s
[info] # Warmup Iteration   3: 10508.239 ops/s
[info] Iteration   1: 13258.097 ops/s
[info]                  ·gc.alloc.rate:                   1537.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              182459.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154400.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.926 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 13186.388 ops/s
[info]                  ·gc.alloc.rate:                   1545.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              184337.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194401.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211.198 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13360.013 ops/s
[info]                  ·gc.alloc.rate:                   1551.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              182743.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192458.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.570 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 13702.972 ops/s
[info]                  ·gc.alloc.rate:                   1579.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              181406.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150763.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.782 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13713.034 ops/s
[info]                  ·gc.alloc.rate:                   1606.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              184384.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189607.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.389 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   13444.101 ±(99.9%) 957.687 ops/s [Average]
[info]   (min, avg, max) = (13186.388, 13444.101, 13713.034), stdev = 248.708
[info]   CI (99.9%): [12486.413, 14401.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1564.124 ±(99.9%) 110.728 MB/sec [Average]
[info]   (min, avg, max) = (1537.521, 1564.124, 1606.900), stdev = 28.756
[info]   CI (99.9%): [1453.396, 1674.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   183066.229 ±(99.9%) 4939.283 B/op [Average]
[info]   (min, avg, max) = (181406.593, 183066.229, 184384.554), stdev = 1282.716
[info]   CI (99.9%): [178126.946, 188005.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1505.936 ±(99.9%) 700.315 MB/sec [Average]
[info]   (min, avg, max) = (1301.075, 1505.936, 1652.419), stdev = 181.870
[info]   CI (99.9%): [805.621, 2206.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   176326.362 ±(99.9%) 83868.950 B/op [Average]
[info]   (min, avg, max) = (150763.882, 176326.362, 194401.601), stdev = 21780.500
[info]   CI (99.9%): [92457.412, 260195.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 2.760 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.658, 1.770), stdev = 0.717
[info]   CI (99.9%): [≈ 0, 3.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   78.173 ±(99.9%) 329.433 B/op [Average]
[info]   (min, avg, max) = (2.389, 78.173, 211.198), stdev = 85.553
[info]   CI (99.9%): [≈ 0, 407.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 12.000), stdev = 2.236
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:50:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4986.881 ops/s
[info] # Warmup Iteration   2: 25618.856 ops/s
[info] # Warmup Iteration   3: 36202.309 ops/s
[info] Iteration   1: 35558.190 ops/s
[info]                  ·gc.alloc.rate:                   1615.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              71447.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1531.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67729.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.434 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   2: 32755.319 ops/s
[info]                  ·gc.alloc.rate:               1642.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          78905.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1548.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74388.431 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     39.000 ms
[info] Iteration   3: 34191.272 ops/s
[info]                  ·gc.alloc.rate:                   1761.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              81067.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1788.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82283.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 468.671 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 34018.231 ops/s
[info]                  ·gc.alloc.rate:                   1410.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              65258.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1459.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67510.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 473.737 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   5: 34390.268 ops/s
[info]                  ·gc.alloc.rate:                   1372.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              62788.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1192.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54568.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188.489 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   34182.656 ±(99.9%) 3850.450 ops/s [Average]
[info]   (min, avg, max) = (32755.319, 34182.656, 35558.190), stdev = 999.950
[info]   CI (99.9%): [30332.206, 38033.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1560.560 ±(99.9%) 632.913 MB/sec [Average]
[info]   (min, avg, max) = (1372.368, 1560.560, 1761.977), stdev = 164.366
[info]   CI (99.9%): [927.647, 2193.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   71893.399 ±(99.9%) 31071.819 B/op [Average]
[info]   (min, avg, max) = (62788.477, 71893.399, 81067.154), stdev = 8069.253
[info]   CI (99.9%): [40821.579, 102965.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1504.038 ±(99.9%) 822.433 MB/sec [Average]
[info]   (min, avg, max) = (1192.712, 1504.038, 1788.417), stdev = 213.583
[info]   CI (99.9%): [681.605, 2326.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   69296.068 ±(99.9%) 39322.965 B/op [Average]
[info]   (min, avg, max) = (54568.875, 69296.068, 82283.642), stdev = 10212.049
[info]   CI (99.9%): [29973.104, 108619.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   5.662 ±(99.9%) 17.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 5.662, 10.242), stdev = 4.458
[info]   CI (99.9%): [≈ 0, 22.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   259.466 ±(99.9%) 795.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 259.466, 473.737), stdev = 206.576
[info]   CI (99.9%): [≈ 0, 1054.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   168.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (24.000, 33.600, 39.000), stdev = 6.427
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24306.615 ops/s
[info] # Warmup Iteration   2: 95182.728 ops/s
[info] # Warmup Iteration   3: 123168.266 ops/s
[info] Iteration   1: 126452.237 ops/s
[info]                  ·gc.alloc.rate:                   2374.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              29555.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2253.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28047.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.768 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 127255.345 ops/s
[info]                  ·gc.alloc.rate:                   2373.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              29350.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27978.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.533 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 129985.365 ops/s
[info]                  ·gc.alloc.rate:               2461.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          29800.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2264.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27414.753 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 128730.155 ops/s
[info]                  ·gc.alloc.rate:                   2453.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              29986.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2625.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32087.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.763 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 129415.269 ops/s
[info]                  ·gc.alloc.rate:                   2430.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              29550.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2330.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28331.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.506 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   128367.674 ±(99.9%) 5695.812 ops/s [Average]
[info]   (min, avg, max) = (126452.237, 128367.674, 129985.365), stdev = 1479.184
[info]   CI (99.9%): [122671.863, 134063.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2418.895 ±(99.9%) 163.288 MB/sec [Average]
[info]   (min, avg, max) = (2373.588, 2418.895, 2461.778), stdev = 42.405
[info]   CI (99.9%): [2255.607, 2582.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   29648.753 ±(99.9%) 952.184 B/op [Average]
[info]   (min, avg, max) = (29350.401, 29648.753, 29986.488), stdev = 247.279
[info]   CI (99.9%): [28696.569, 30600.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2347.381 ±(99.9%) 610.460 MB/sec [Average]
[info]   (min, avg, max) = (2253.540, 2347.381, 2625.628), stdev = 158.535
[info]   CI (99.9%): [1736.921, 2957.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28771.948 ±(99.9%) 7250.267 B/op [Average]
[info]   (min, avg, max) = (27414.753, 28771.948, 32087.216), stdev = 1882.871
[info]   CI (99.9%): [21521.682, 36022.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.011 ±(99.9%) 6.229 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.011, 3.763), stdev = 1.618
[info]   CI (99.9%): [≈ 0, 7.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.514 ±(99.9%) 77.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.514, 46.533), stdev = 20.008
[info]   CI (99.9%): [≈ 0, 89.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 17.000), stdev = 3.114
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 409031.679 ops/s
[info] # Warmup Iteration   2: 771728.148 ops/s
[info] # Warmup Iteration   3: 861983.469 ops/s
[info] Iteration   1: 859195.184 ops/s
[info]                  ·gc.alloc.rate:                   1220.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              2234.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2416.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 855507.531 ops/s
[info]                  ·gc.alloc.rate:                   1213.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              2231.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2428.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.377 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 867558.408 ops/s
[info]                  ·gc.alloc.rate:                   1224.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              2220.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1786.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 854625.914 ops/s
[info]                  ·gc.alloc.rate:                   1204.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              2218.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2410.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 877820.716 ops/s
[info]                  ·gc.alloc.rate:               1244.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          2230.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1764.755 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   862941.551 ±(99.9%) 37588.412 ops/s [Average]
[info]   (min, avg, max) = (854625.914, 862941.551, 877820.716), stdev = 9761.591
[info]   CI (99.9%): [825353.138, 900529.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1221.379 ±(99.9%) 57.129 MB/sec [Average]
[info]   (min, avg, max) = (1204.804, 1221.379, 1244.449), stdev = 14.836
[info]   CI (99.9%): [1164.249, 1278.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2226.946 ±(99.9%) 28.211 B/op [Average]
[info]   (min, avg, max) = (2218.111, 2226.946, 2234.741), stdev = 7.326
[info]   CI (99.9%): [2198.734, 2255.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1183.700 ±(99.9%) 699.555 MB/sec [Average]
[info]   (min, avg, max) = (984.716, 1183.700, 1320.320), stdev = 181.672
[info]   CI (99.9%): [484.145, 1883.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2161.192 ±(99.9%) 1356.490 B/op [Average]
[info]   (min, avg, max) = (1764.755, 2161.192, 2428.354), stdev = 352.276
[info]   CI (99.9%): [804.702, 3517.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.832 ±(99.9%) 5.767 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.832, 3.467), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.528 ±(99.9%) 10.610 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.528, 6.377), stdev = 2.755
[info]   CI (99.9%): [≈ 0, 12.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 14.000), stdev = 4.450
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 558847.971 ops/s
[info] # Warmup Iteration   2: 872159.125 ops/s
[info] # Warmup Iteration   3: 929893.445 ops/s
[info] Iteration   1: 954786.742 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 952744.161 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 956608.467 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 958290.439 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 933418.507 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   951169.663 ±(99.9%) 39030.027 ops/s [Average]
[info]   (min, avg, max) = (933418.507, 951169.663, 958290.439), stdev = 10135.974
[info]   CI (99.9%): [912139.636, 990199.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6761.506 ops/s
[info] # Warmup Iteration   2: 75663.589 ops/s
[info] # Warmup Iteration   3: 103057.179 ops/s
[info] Iteration   1: 124606.097 ops/s
[info]                  ·gc.alloc.rate:                   2791.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              35247.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33013.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.544 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 124579.821 ops/s
[info]                  ·gc.alloc.rate:                   2808.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              35470.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2965.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37461.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.526 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 123471.068 ops/s
[info]                  ·gc.alloc.rate:                   2773.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              35347.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2669.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34033.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 125508.326 ops/s
[info]                  ·gc.alloc.rate:                   2832.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              35506.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33770.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.783 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 125500.397 ops/s
[info]                  ·gc.alloc.rate:                   2847.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              35711.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33950.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   124733.142 ±(99.9%) 3234.351 ops/s [Average]
[info]   (min, avg, max) = (123471.068, 124733.142, 125508.326), stdev = 839.951
[info]   CI (99.9%): [121498.790, 127967.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2810.626 ±(99.9%) 116.117 MB/sec [Average]
[info]   (min, avg, max) = (2773.036, 2810.626, 2847.660), stdev = 30.155
[info]   CI (99.9%): [2694.509, 2926.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35456.792 ±(99.9%) 675.243 B/op [Average]
[info]   (min, avg, max) = (35247.427, 35456.792, 35711.010), stdev = 175.358
[info]   CI (99.9%): [34781.549, 36132.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2730.377 ±(99.9%) 524.685 MB/sec [Average]
[info]   (min, avg, max) = (2614.723, 2730.377, 2965.738), stdev = 136.259
[info]   CI (99.9%): [2205.692, 3255.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34446.174 ±(99.9%) 6674.377 B/op [Average]
[info]   (min, avg, max) = (33013.593, 34446.174, 37461.766), stdev = 1733.315
[info]   CI (99.9%): [27771.797, 41120.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.311 ±(99.9%) 2.322 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.311, 1.390), stdev = 0.603
[info]   CI (99.9%): [≈ 0, 2.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.929 ±(99.9%) 29.316 B/op [Average]
[info]   (min, avg, max) = (0.261, 3.929, 17.544), stdev = 7.613
[info]   CI (99.9%): [≈ 0, 33.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4613.922 ops/s
[info] # Warmup Iteration   2: 11158.847 ops/s
[info] # Warmup Iteration   3: 17820.880 ops/s
[info] Iteration   1: 18421.234 ops/s
[info]                  ·gc.alloc.rate:                   932.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              79648.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82216.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.336 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 17167.317 ops/s
[info]                  ·gc.alloc.rate:               1095.564 MB/sec
[info]                  ·gc.alloc.rate.norm:          100403.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:      967.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88643.452 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   3: 18041.995 ops/s
[info]                  ·gc.alloc.rate:                   913.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              79716.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84170.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.925 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.923 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 17259.912 ops/s
[info]                  ·gc.alloc.rate:                   1078.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              98329.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88049.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.731 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.872 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 17286.950 ops/s
[info]                  ·gc.alloc.rate:                   1201.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              109350.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117138.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 432.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   17635.481 ±(99.9%) 2164.909 ops/s [Average]
[info]   (min, avg, max) = (17167.317, 17635.481, 18421.234), stdev = 562.220
[info]   CI (99.9%): [15470.573, 19800.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   1044.274 ±(99.9%) 463.696 MB/sec [Average]
[info]   (min, avg, max) = (913.874, 1044.274, 1201.296), stdev = 120.420
[info]   CI (99.9%): [580.579, 1507.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   93489.880 ±(99.9%) 51088.417 B/op [Average]
[info]   (min, avg, max) = (79648.150, 93489.880, 109350.964), stdev = 13267.500
[info]   CI (99.9%): [42401.463, 144578.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1029.395 ±(99.9%) 554.228 MB/sec [Average]
[info]   (min, avg, max) = (962.306, 1029.395, 1286.847), stdev = 143.931
[info]   CI (99.9%): [475.167, 1583.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   92043.686 ±(99.9%) 54992.363 B/op [Average]
[info]   (min, avg, max) = (82216.145, 92043.686, 117138.493), stdev = 14281.342
[info]   CI (99.9%): [37051.322, 147036.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.694 ±(99.9%) 7.437 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.694, 4.749), stdev = 1.931
[info]   CI (99.9%): [≈ 0, 9.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   152.684 ±(99.9%) 676.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 152.684, 432.291), stdev = 175.686
[info]   CI (99.9%): [≈ 0, 829.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.400, 17.000), stdev = 1.342
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4082.512 ops/s
[info] # Warmup Iteration   2: 14166.344 ops/s
[info] # Warmup Iteration   3: 19281.656 ops/s
[info] Iteration   1: 19555.458 ops/s
[info]                  ·gc.alloc.rate:                   815.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              65602.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51844.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.351 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16901.420 ops/s
[info]                  ·gc.alloc.rate:                   1567.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              145922.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1610.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149929.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.803 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   3: 18364.074 ops/s
[info]                  ·gc.alloc.rate:                   767.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              65771.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          884.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75758.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.480 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   4: 17089.787 ops/s
[info]                  ·gc.alloc.rate:               1102.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          101497.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:      847.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77969.935 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     34.000 ms
[info] Iteration   5: 16630.360 ops/s
[info]                  ·gc.alloc.rate:                   1094.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              103512.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124633.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 754.540 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         79.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   17708.220 ±(99.9%) 4730.811 ops/s [Average]
[info]   (min, avg, max) = (16630.360, 17708.220, 19555.458), stdev = 1228.577
[info]   CI (99.9%): [12977.409, 22439.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1069.421 ±(99.9%) 1225.801 MB/sec [Average]
[info]   (min, avg, max) = (767.691, 1069.421, 1567.319), stdev = 318.337
[info]   CI (99.9%): [≈ 0, 2295.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   96461.570 ±(99.9%) 127937.732 B/op [Average]
[info]   (min, avg, max) = (65602.825, 96461.570, 145922.813), stdev = 33225.023
[info]   CI (99.9%): [≈ 0, 224399.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1060.694 ±(99.9%) 1514.127 MB/sec [Average]
[info]   (min, avg, max) = (644.147, 1060.694, 1610.354), stdev = 393.214
[info]   CI (99.9%): [≈ 0, 2574.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   96027.281 ±(99.9%) 154179.618 B/op [Average]
[info]   (min, avg, max) = (51844.411, 96027.281, 149929.496), stdev = 40039.957
[info]   CI (99.9%): [≈ 0, 250206.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.614 ±(99.9%) 13.699 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.614, 7.977), stdev = 3.557
[info]   CI (99.9%): [≈ 0, 15.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   152.435 ±(99.9%) 1296.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 152.435, 754.540), stdev = 336.591
[info]   CI (99.9%): [≈ 0, 1448.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   183.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 36.600, 79.000), stdev = 27.172
[info]   CI (99.9%): [183.000, 183.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47693.859 ops/s
[info] # Warmup Iteration   2: 132902.110 ops/s
[info] # Warmup Iteration   3: 162260.679 ops/s
[info] Iteration   1: 168173.224 ops/s
[info]                  ·gc.alloc.rate:                   428.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              4007.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3017.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 167058.808 ops/s
[info]                  ·gc.alloc.rate:                   436.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              4113.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6075.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 167651.943 ops/s
[info]                  ·gc.alloc.rate:               430.516 MB/sec
[info]                  ·gc.alloc.rate.norm:          4041.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3026.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 168038.563 ops/s
[info]                  ·gc.alloc.rate:               428.052 MB/sec
[info]                  ·gc.alloc.rate.norm:          4009.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3022.813 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 163820.651 ops/s
[info]                  ·gc.alloc.rate:                   425.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              4091.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   166948.638 ±(99.9%) 6936.138 ops/s [Average]
[info]   (min, avg, max) = (163820.651, 166948.638, 168173.224), stdev = 1801.293
[info]   CI (99.9%): [160012.500, 173884.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   429.889 ±(99.9%) 15.776 MB/sec [Average]
[info]   (min, avg, max) = (425.980, 429.889, 436.632), stdev = 4.097
[info]   CI (99.9%): [414.113, 445.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4052.690 ±(99.9%) 185.704 B/op [Average]
[info]   (min, avg, max) = (4007.410, 4052.690, 4113.422), stdev = 48.227
[info]   CI (99.9%): [3866.986, 4238.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   451.751 ±(99.9%) 681.291 MB/sec [Average]
[info]   (min, avg, max) = (322.401, 451.751, 646.261), stdev = 176.929
[info]   CI (99.9%): [≈ 0, 1133.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4270.019 ±(99.9%) 6581.380 B/op [Average]
[info]   (min, avg, max) = (3017.521, 4270.019, 6208.000), stdev = 1709.164
[info]   CI (99.9%): [≈ 0, 10851.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.390), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 886.418 ops/s
[info] # Warmup Iteration   2: 11359.932 ops/s
[info] # Warmup Iteration   3: 17975.675 ops/s
[info] Iteration   1: 18148.986 ops/s
[info]                  ·gc.alloc.rate:                   1244.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              107876.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83881.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.805 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 16740.524 ops/s
[info]                  ·gc.alloc.rate:                   1287.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              121018.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121560.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.957 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 17665.002 ops/s
[info]                  ·gc.alloc.rate:                   1215.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              108319.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115849.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.557 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 17898.749 ops/s
[info]                  ·gc.alloc.rate:                   1230.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              108199.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85755.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.831 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 15682.457 ops/s
[info]                  ·gc.alloc.rate:                   1368.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              137307.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162908.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.172 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.977 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   17227.144 ±(99.9%) 3905.805 ops/s [Average]
[info]   (min, avg, max) = (15682.457, 17227.144, 18148.986), stdev = 1014.325
[info]   CI (99.9%): [13321.338, 21132.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1269.210 ±(99.9%) 236.686 MB/sec [Average]
[info]   (min, avg, max) = (1215.844, 1269.210, 1368.276), stdev = 61.467
[info]   CI (99.9%): [1032.524, 1505.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   116544.376 ±(99.9%) 49594.271 B/op [Average]
[info]   (min, avg, max) = (107876.849, 116544.376, 137307.457), stdev = 12879.475
[info]   CI (99.9%): [66950.105, 166138.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1231.892 ±(99.9%) 1050.153 MB/sec [Average]
[info]   (min, avg, max) = (967.359, 1231.892, 1623.390), stdev = 272.722
[info]   CI (99.9%): [181.739, 2282.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   113991.006 ±(99.9%) 124141.620 B/op [Average]
[info]   (min, avg, max) = (83881.458, 113991.006, 162908.308), stdev = 32239.184
[info]   CI (99.9%): [≈ 0, 238132.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.272 ±(99.9%) 7.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.272, 4.126), stdev = 1.847
[info]   CI (99.9%): [≈ 0, 8.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   118.225 ±(99.9%) 646.451 B/op [Average]
[info]   (min, avg, max) = (1.805, 118.225, 367.557), stdev = 167.881
[info]   CI (99.9%): [≈ 0, 764.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.200, 17.000), stdev = 4.868
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:48:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11228.063 ops/s
[info] # Warmup Iteration   2: 57437.359 ops/s
[info] # Warmup Iteration   3: 58337.258 ops/s
[info] Iteration   1: 62177.810 ops/s
[info]                  ·gc.alloc.rate:                   1895.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              47965.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49607.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.973 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 65057.018 ops/s
[info]                  ·gc.alloc.rate:                   1873.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              45306.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47113.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.532 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 65818.296 ops/s
[info]                  ·gc.alloc.rate:                   1871.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              44724.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38970.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.991 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 65524.530 ops/s
[info]                  ·gc.alloc.rate:                   1893.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              45470.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47458.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.000 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 65892.436 ops/s
[info]                  ·gc.alloc.rate:                   1905.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              45504.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39690.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.497 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   64894.018 ±(99.9%) 5981.846 ops/s [Average]
[info]   (min, avg, max) = (62177.810, 64894.018, 65892.436), stdev = 1553.466
[info]   CI (99.9%): [58912.172, 70875.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1887.770 ±(99.9%) 57.870 MB/sec [Average]
[info]   (min, avg, max) = (1871.088, 1887.770, 1905.568), stdev = 15.029
[info]   CI (99.9%): [1829.900, 1945.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   45794.241 ±(99.9%) 4826.721 B/op [Average]
[info]   (min, avg, max) = (44724.932, 45794.241, 47965.484), stdev = 1253.484
[info]   CI (99.9%): [40967.520, 50620.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1835.415 ±(99.9%) 667.509 MB/sec [Average]
[info]   (min, avg, max) = (1630.368, 1835.415, 1976.145), stdev = 173.350
[info]   CI (99.9%): [1167.906, 2502.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44568.213 ±(99.9%) 18800.515 B/op [Average]
[info]   (min, avg, max) = (38970.957, 44568.213, 49607.799), stdev = 4882.434
[info]   CI (99.9%): [25767.698, 63368.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.292 ±(99.9%) 10.407 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.292, 6.125), stdev = 2.703
[info]   CI (99.9%): [≈ 0, 11.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   32.599 ±(99.9%) 263.488 B/op [Average]
[info]   (min, avg, max) = (0.497, 32.599, 154.973), stdev = 68.427
[info]   CI (99.9%): [≈ 0, 296.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 17.000), stdev = 4.147
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30890.703 ops/s
[info] # Warmup Iteration   2: 74094.694 ops/s
[info] # Warmup Iteration   3: 95428.861 ops/s
[info] Iteration   1: 98237.600 ops/s
[info]                  ·gc.alloc.rate:                   1876.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              30058.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31259.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.430 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 101597.979 ops/s
[info]                  ·gc.alloc.rate:                   1922.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              29776.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25403.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.935 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 94832.928 ops/s
[info]                  ·gc.alloc.rate:               1809.837 MB/sec
[info]                  ·gc.alloc.rate.norm:          30022.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1981.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32874.759 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 100466.598 ops/s
[info]                  ·gc.alloc.rate:                   1927.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              30187.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26067.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 100007.820 ops/s
[info]                  ·gc.alloc.rate:                   1933.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              30417.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31639.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.983 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   99028.585 ±(99.9%) 10161.936 ops/s [Average]
[info]   (min, avg, max) = (94832.928, 99028.585, 101597.979), stdev = 2639.023
[info]   CI (99.9%): [88866.649, 109190.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1894.050 ±(99.9%) 200.896 MB/sec [Average]
[info]   (min, avg, max) = (1809.837, 1894.050, 1933.171), stdev = 52.172
[info]   CI (99.9%): [1693.154, 2094.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   30092.784 ±(99.9%) 904.226 B/op [Average]
[info]   (min, avg, max) = (29776.780, 30092.784, 30417.801), stdev = 234.825
[info]   CI (99.9%): [29188.559, 30997.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1849.856 ±(99.9%) 699.086 MB/sec [Average]
[info]   (min, avg, max) = (1640.371, 1849.856, 2010.807), stdev = 181.550
[info]   CI (99.9%): [1150.770, 2548.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29448.998 ±(99.9%) 13285.225 B/op [Average]
[info]   (min, avg, max) = (25403.230, 29448.998, 32874.759), stdev = 3450.131
[info]   CI (99.9%): [16163.773, 42734.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.259 ±(99.9%) 1.794 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.259, 1.088), stdev = 0.466
[info]   CI (99.9%): [≈ 0, 2.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.135 ±(99.9%) 28.760 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.135, 17.430), stdev = 7.469
[info]   CI (99.9%): [≈ 0, 32.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 11.000), stdev = 1.949
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133710.993 ops/s
[info] # Warmup Iteration   2: 283126.237 ops/s
[info] # Warmup Iteration   3: 293365.644 ops/s
[info] Iteration   1: 306767.484 ops/s
[info]                  ·gc.alloc.rate:               598.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1684.989 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 302314.968 ops/s
[info]                  ·gc.alloc.rate:               620.444 MB/sec
[info]                  ·gc.alloc.rate.norm:          3229.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3421.301 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 294742.756 ops/s
[info]                  ·gc.alloc.rate:                   583.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              3116.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3512.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 298639.059 ops/s
[info]                  ·gc.alloc.rate:               590.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          3112.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3470.281 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 303937.299 ops/s
[info]                  ·gc.alloc.rate:                   591.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              3062.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1705.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   301280.313 ±(99.9%) 18056.504 ops/s [Average]
[info]   (min, avg, max) = (294742.756, 301280.313, 306767.484), stdev = 4689.217
[info]   CI (99.9%): [283223.810, 319336.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   597.083 ±(99.9%) 54.353 MB/sec [Average]
[info]   (min, avg, max) = (583.870, 597.083, 620.444), stdev = 14.115
[info]   CI (99.9%): [542.729, 651.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3118.827 ±(99.9%) 256.114 B/op [Average]
[info]   (min, avg, max) = (3062.488, 3118.827, 3229.891), stdev = 66.512
[info]   CI (99.9%): [2862.712, 3374.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.345 ±(99.9%) 693.888 MB/sec [Average]
[info]   (min, avg, max) = (328.493, 526.345, 658.514), stdev = 180.201
[info]   CI (99.9%): [≈ 0, 1220.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2758.980 ±(99.9%) 3740.996 B/op [Average]
[info]   (min, avg, max) = (1684.989, 2758.980, 3512.624), stdev = 971.525
[info]   CI (99.9%): [≈ 0, 6499.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.034), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.175), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170560.103 ops/s
[info] # Warmup Iteration   2: 339478.727 ops/s
[info] # Warmup Iteration   3: 375689.113 ops/s
[info] Iteration   1: 362833.017 ops/s
[info]                  ·gc.alloc.rate:                   69.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1109.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.730 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 371226.179 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 382745.487 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 377493.870 ops/s
[info]                  ·gc.alloc.rate:      3.324 MB/sec
[info]                  ·gc.alloc.rate.norm: 13.856 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 383155.499 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   375490.810 ±(99.9%) 33000.987 ops/s [Average]
[info]   (min, avg, max) = (362833.017, 375490.810, 383155.499), stdev = 8570.252
[info]   CI (99.9%): [342489.823, 408491.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   14.662 ±(99.9%) 119.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 14.662, 69.986), stdev = 30.960
[info]   CI (99.9%): [≈ 0, 133.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   63.479 ±(99.9%) 517.252 B/op [Average]
[info]   (min, avg, max) = (0.001, 63.479, 303.534), stdev = 134.329
[info]   CI (99.9%): [≈ 0, 580.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.169 ±(99.9%) 440.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.169, 255.844), stdev = 114.417
[info]   CI (99.9%): [≈ 0, 491.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   221.924 ±(99.9%) 1910.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 221.924, 1109.620), stdev = 496.237
[info]   CI (99.9%): [≈ 0, 2132.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.218 ±(99.9%) 1.878 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.218, 1.090), stdev = 0.488
[info]   CI (99.9%): [≈ 0, 2.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.946 ±(99.9%) 8.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.946, 4.730), stdev = 2.115
[info]   CI (99.9%): [≈ 0, 9.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 5.000), stdev = 2.236
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20323.830 ops/s
[info] # Warmup Iteration   2: 59208.807 ops/s
[info] # Warmup Iteration   3: 79295.683 ops/s
[info] Iteration   1: 91122.827 ops/s
[info]                  ·gc.alloc.rate:                   1979.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              34191.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33585.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.775 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 94766.541 ops/s
[info]                  ·gc.alloc.rate:                   1971.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              32736.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32178.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.495 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 96522.322 ops/s
[info]                  ·gc.alloc.rate:                   1991.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              32469.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31846.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.339 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 95269.196 ops/s
[info]                  ·gc.alloc.rate:                   1975.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              32636.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32673.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 95422.312 ops/s
[info]                  ·gc.alloc.rate:                   1999.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              32979.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27451.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.687 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   94620.640 ±(99.9%) 7923.274 ops/s [Average]
[info]   (min, avg, max) = (91122.827, 94620.640, 96522.322), stdev = 2057.649
[info]   CI (99.9%): [86697.366, 102543.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1983.524 ±(99.9%) 44.897 MB/sec [Average]
[info]   (min, avg, max) = (1971.244, 1983.524, 1999.557), stdev = 11.660
[info]   CI (99.9%): [1938.627, 2028.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33002.758 ±(99.9%) 2655.352 B/op [Average]
[info]   (min, avg, max) = (32469.690, 33002.758, 34191.243), stdev = 689.587
[info]   CI (99.9%): [30347.406, 35658.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1895.562 ±(99.9%) 501.141 MB/sec [Average]
[info]   (min, avg, max) = (1664.373, 1895.562, 1978.144), stdev = 130.145
[info]   CI (99.9%): [1394.421, 2396.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31547.198 ±(99.9%) 9170.990 B/op [Average]
[info]   (min, avg, max) = (27451.273, 31547.198, 33585.636), stdev = 2381.677
[info]   CI (99.9%): [22376.208, 40718.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.659 ±(99.9%) 4.927 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.659, 2.940), stdev = 1.279
[info]   CI (99.9%): [≈ 0, 5.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   11.328 ±(99.9%) 85.180 B/op [Average]
[info]   (min, avg, max) = (0.339, 11.328, 50.775), stdev = 22.121
[info]   CI (99.9%): [≈ 0, 96.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 12.000), stdev = 2.302
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:47:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17024.475 ops/s
[info] # Warmup Iteration   2: 170001.599 ops/s
[info] # Warmup Iteration   3: 198630.049 ops/s
[info] Iteration   1: 194037.399 ops/s
[info]                  ·gc.alloc.rate:                   2485.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              20152.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2260.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18329.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.828 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.931 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 194479.434 ops/s
[info]                  ·gc.alloc.rate:                   2486.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              20120.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2600.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21041.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.011 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 195863.712 ops/s
[info]                  ·gc.alloc.rate:                   2533.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              20355.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18550.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 197807.198 ops/s
[info]                  ·gc.alloc.rate:                   2565.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              20400.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18586.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.497 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 197150.665 ops/s
[info]                  ·gc.alloc.rate:                   2572.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              20524.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21501.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   195867.682 ±(99.9%) 6293.464 ops/s [Average]
[info]   (min, avg, max) = (194037.399, 195867.682, 197807.198), stdev = 1634.393
[info]   CI (99.9%): [189574.218, 202161.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   2528.680 ±(99.9%) 159.834 MB/sec [Average]
[info]   (min, avg, max) = (2485.533, 2528.680, 2572.361), stdev = 41.508
[info]   CI (99.9%): [2368.846, 2688.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20310.890 ±(99.9%) 659.056 B/op [Average]
[info]   (min, avg, max) = (20120.056, 20310.890, 20524.668), stdev = 171.155
[info]   CI (99.9%): [19651.835, 20969.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2440.393 ±(99.9%) 747.230 MB/sec [Average]
[info]   (min, avg, max) = (2260.617, 2440.393, 2694.778), stdev = 194.053
[info]   CI (99.9%): [1693.163, 3187.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19601.900 ±(99.9%) 5914.057 B/op [Average]
[info]   (min, avg, max) = (18329.330, 19601.900, 21501.424), stdev = 1535.862
[info]   CI (99.9%): [13687.843, 25515.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.616 ±(99.9%) 4.765 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.616, 2.828), stdev = 1.237
[info]   CI (99.9%): [≈ 0, 5.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.988 ±(99.9%) 38.643 B/op [Average]
[info]   (min, avg, max) = (0.166, 4.988, 22.931), stdev = 10.035
[info]   CI (99.9%): [≈ 0, 43.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 13.000), stdev = 2.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.835 ops/s
[info] # Warmup Iteration   2: 602443.903 ops/s
[info] # Warmup Iteration   3: 798452.153 ops/s
[info] Iteration   1: 823919.592 ops/s
[info]                  ·gc.alloc.rate:                   462.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              883.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     619.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 821648.352 ops/s
[info]                  ·gc.alloc.rate:               477.549 MB/sec
[info]                  ·gc.alloc.rate.norm:          914.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1242.841 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 819208.694 ops/s
[info]                  ·gc.alloc.rate:                   464.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              892.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 793859.136 ops/s
[info]                  ·gc.alloc.rate:                   460.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 831182.462 ops/s
[info]                  ·gc.alloc.rate:               471.892 MB/sec
[info]                  ·gc.alloc.rate.norm:          893.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 615.561 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   817963.647 ±(99.9%) 54672.533 ops/s [Average]
[info]   (min, avg, max) = (793859.136, 817963.647, 831182.462), stdev = 14198.283
[info]   CI (99.9%): [763291.115, 872636.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   467.500 ±(99.9%) 26.999 MB/sec [Average]
[info]   (min, avg, max) = (460.793, 467.500, 477.549), stdev = 7.012
[info]   CI (99.9%): [440.500, 494.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   899.338 ±(99.9%) 52.076 B/op [Average]
[info]   (min, avg, max) = (883.965, 899.338, 914.612), stdev = 13.524
[info]   CI (99.9%): [847.261, 951.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   454.322 ±(99.9%) 684.080 MB/sec [Average]
[info]   (min, avg, max) = (324.089, 454.322, 648.933), stdev = 177.653
[info]   CI (99.9%): [≈ 0, 1138.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   877.185 ±(99.9%) 1360.985 B/op [Average]
[info]   (min, avg, max) = (615.561, 877.185, 1285.168), stdev = 353.443
[info]   CI (99.9%): [≈ 0, 2238.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.038), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.119 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.073), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86382.802 ops/s
[info] # Warmup Iteration   2: 294933.985 ops/s
[info] # Warmup Iteration   3: 397822.966 ops/s
[info] Iteration   1: 417007.611 ops/s
[info]                  ·gc.alloc.rate:                   367.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              1388.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1220.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.260 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 413406.322 ops/s
[info]                  ·gc.alloc.rate:               371.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          1414.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1229.991 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 413063.103 ops/s
[info]                  ·gc.alloc.rate:                   372.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1419.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2461.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 414042.128 ops/s
[info]                  ·gc.alloc.rate:               370.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          1409.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1228.146 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 413016.817 ops/s
[info]                  ·gc.alloc.rate:               372.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          1419.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1231.170 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   414107.196 ±(99.9%) 6439.597 ops/s [Average]
[info]   (min, avg, max) = (413016.817, 414107.196, 417007.611), stdev = 1672.343
[info]   CI (99.9%): [407667.599, 420546.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   371.085 ±(99.9%) 7.328 MB/sec [Average]
[info]   (min, avg, max) = (367.983, 371.085, 372.684), stdev = 1.903
[info]   CI (99.9%): [363.757, 378.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1410.358 ±(99.9%) 49.336 B/op [Average]
[info]   (min, avg, max) = (1388.781, 1410.358, 1419.900), stdev = 12.812
[info]   CI (99.9%): [1361.022, 1459.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   387.777 ±(99.9%) 556.258 MB/sec [Average]
[info]   (min, avg, max) = (323.085, 387.777, 646.192), stdev = 144.458
[info]   CI (99.9%): [≈ 0, 944.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1474.377 ±(99.9%) 2125.877 B/op [Average]
[info]   (min, avg, max) = (1220.631, 1474.377, 2461.946), stdev = 552.083
[info]   CI (99.9%): [≈ 0, 3600.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.552 ±(99.9%) 4.664 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.552, 2.719), stdev = 1.211
[info]   CI (99.9%): [≈ 0, 5.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.084 ±(99.9%) 17.603 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.084, 10.260), stdev = 4.571
[info]   CI (99.9%): [≈ 0, 19.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332082.166 ops/s
[info] # Warmup Iteration   2: 1017686.319 ops/s
[info] # Warmup Iteration   3: 1094448.478 ops/s
[info] Iteration   1: 1098756.328 ops/s
[info]                  ·gc.alloc.rate:               387.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          555.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 469.471 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1097115.336 ops/s
[info]                  ·gc.alloc.rate:                   386.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1103368.043 ops/s
[info]                  ·gc.alloc.rate:               388.852 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 468.445 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1097116.648 ops/s
[info]                  ·gc.alloc.rate:                   394.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              565.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     942.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1094741.062 ops/s
[info]                  ·gc.alloc.rate:                   386.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1098219.483 ±(99.9%) 12377.689 ops/s [Average]
[info]   (min, avg, max) = (1094741.062, 1098219.483, 1103368.043), stdev = 3214.447
[info]   CI (99.9%): [1085841.794, 1110597.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   388.806 ±(99.9%) 12.648 MB/sec [Average]
[info]   (min, avg, max) = (386.307, 388.806, 394.438), stdev = 3.285
[info]   CI (99.9%): [376.158, 401.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   557.101 ±(99.9%) 18.499 B/op [Average]
[info]   (min, avg, max) = (554.048, 557.101, 565.563), stdev = 4.804
[info]   CI (99.9%): [538.602, 575.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   394.058 ±(99.9%) 567.089 MB/sec [Average]
[info]   (min, avg, max) = (327.752, 394.058, 657.504), stdev = 147.271
[info]   CI (99.9%): [≈ 0, 961.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   564.693 ±(99.9%) 813.836 B/op [Average]
[info]   (min, avg, max) = (468.445, 564.693, 942.759), stdev = 211.351
[info]   CI (99.9%): [≈ 0, 1378.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.049), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5247.280 ops/s
[info] # Warmup Iteration   2: 67431.517 ops/s
[info] # Warmup Iteration   3: 111250.912 ops/s
[info] Iteration   1: 118129.993 ops/s
[info]                  ·gc.alloc.rate:                   3898.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              51911.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3625.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48283.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.920 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.891 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 116633.934 ops/s
[info]                  ·gc.alloc.rate:                   3893.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              52521.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3668.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49484.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 118956.131 ops/s
[info]                  ·gc.alloc.rate:                   3990.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              52773.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4047.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53523.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.102 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 118490.590 ops/s
[info]                  ·gc.alloc.rate:                   3962.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              52614.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3731.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49550.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.830 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 118650.707 ops/s
[info]                  ·gc.alloc.rate:               3967.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          52619.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3739.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49590.094 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   118172.271 ±(99.9%) 3504.369 ops/s [Average]
[info]   (min, avg, max) = (116633.934, 118172.271, 118956.131), stdev = 910.073
[info]   CI (99.9%): [114667.902, 121676.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3942.419 ±(99.9%) 169.655 MB/sec [Average]
[info]   (min, avg, max) = (3893.203, 3942.419, 3990.715), stdev = 44.059
[info]   CI (99.9%): [3772.764, 4112.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52488.038 ±(99.9%) 1288.522 B/op [Average]
[info]   (min, avg, max) = (51911.562, 52488.038, 52773.110), stdev = 334.625
[info]   CI (99.9%): [51199.516, 53776.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3762.405 ±(99.9%) 639.601 MB/sec [Average]
[info]   (min, avg, max) = (3625.548, 3762.405, 4047.453), stdev = 166.102
[info]   CI (99.9%): [3122.804, 4402.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50086.205 ±(99.9%) 7692.038 B/op [Average]
[info]   (min, avg, max) = (48283.028, 50086.205, 53523.417), stdev = 1997.598
[info]   CI (99.9%): [42394.167, 57778.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.626 ±(99.9%) 4.941 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 2.920), stdev = 1.283
[info]   CI (99.9%): [≈ 0, 5.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.333 ±(99.9%) 65.798 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.333, 38.891), stdev = 17.087
[info]   CI (99.9%): [≈ 0, 74.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   56.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.200, 12.000), stdev = 0.447
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.000, 16.000), stdev = 0.707
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70129.625 ops/s
[info] # Warmup Iteration   2: 279553.430 ops/s
[info] # Warmup Iteration   3: 296062.174 ops/s
[info] Iteration   1: 296864.699 ops/s
[info]                  ·gc.alloc.rate:                   1751.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              9287.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8613.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 301592.820 ops/s
[info]                  ·gc.alloc.rate:                   1773.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              9253.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8471.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 304494.212 ops/s
[info]                  ·gc.alloc.rate:                   1787.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              9239.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10122.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.949 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 305577.435 ops/s
[info]                  ·gc.alloc.rate:                   1807.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              9310.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8446.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 303289.801 ops/s
[info]                  ·gc.alloc.rate:                   1802.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              9348.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8569.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   302363.793 ±(99.9%) 13137.145 ops/s [Average]
[info]   (min, avg, max) = (296864.699, 302363.793, 305577.435), stdev = 3411.675
[info]   CI (99.9%): [289226.648, 315500.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1784.633 ±(99.9%) 87.061 MB/sec [Average]
[info]   (min, avg, max) = (1751.920, 1784.633, 1807.701), stdev = 22.609
[info]   CI (99.9%): [1697.572, 1871.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9287.815 ±(99.9%) 169.621 B/op [Average]
[info]   (min, avg, max) = (9239.343, 9287.815, 9348.595), stdev = 44.050
[info]   CI (99.9%): [9118.194, 9457.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1699.884 ±(99.9%) 558.436 MB/sec [Average]
[info]   (min, avg, max) = (1623.900, 1699.884, 1958.468), stdev = 145.024
[info]   CI (99.9%): [1141.448, 2258.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8845.026 ±(99.9%) 2763.410 B/op [Average]
[info]   (min, avg, max) = (8446.961, 8845.026, 10122.919), stdev = 717.649
[info]   CI (99.9%): [6081.616, 11608.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.562 ±(99.9%) 2.794 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.562, 1.538), stdev = 0.726
[info]   CI (99.9%): [≈ 0, 3.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.934 ±(99.9%) 14.558 B/op [Average]
[info]   (min, avg, max) = (0.108, 2.934, 7.949), stdev = 3.781
[info]   CI (99.9%): [≈ 0, 17.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 13.000), stdev = 2.490
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.659 ops/s
[info] # Warmup Iteration   2: 1791043.461 ops/s
[info] # Warmup Iteration   3: 1906305.612 ops/s
[info] Iteration   1: 1905752.192 ops/s
[info]                  ·gc.alloc.rate:                   667.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1925141.053 ops/s
[info]                  ·gc.alloc.rate:                   672.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     532.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1961493.704 ops/s
[info]                  ·gc.alloc.rate:               693.455 MB/sec
[info]                  ·gc.alloc.rate.norm:          556.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 523.808 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 2000693.142 ops/s
[info]                  ·gc.alloc.rate:                   708.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     770.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1964139.285 ops/s
[info]                  ·gc.alloc.rate:                   684.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.828 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.868 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1951443.875 ±(99.9%) 142359.706 ops/s [Average]
[info]   (min, avg, max) = (1905752.192, 1951443.875, 2000693.142), stdev = 36970.364
[info]   CI (99.9%): [1809084.169, 2093803.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   685.186 ±(99.9%) 63.047 MB/sec [Average]
[info]   (min, avg, max) = (667.177, 685.186, 708.137), stdev = 16.373
[info]   CI (99.9%): [622.139, 748.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   552.464 ±(99.9%) 15.072 B/op [Average]
[info]   (min, avg, max) = (548.201, 552.464, 557.000), stdev = 3.914
[info]   CI (99.9%): [537.392, 567.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   717.993 ±(99.9%) 564.094 MB/sec [Average]
[info]   (min, avg, max) = (651.604, 717.993, 980.043), stdev = 146.493
[info]   CI (99.9%): [153.899, 1282.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   577.802 ±(99.9%) 416.269 B/op [Average]
[info]   (min, avg, max) = (523.646, 577.802, 770.874), stdev = 108.104
[info]   CI (99.9%): [161.533, 994.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.980 ±(99.9%) 8.284 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.980, 4.828), stdev = 2.151
[info]   CI (99.9%): [≈ 0, 9.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.785 ±(99.9%) 6.636 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.785, 3.868), stdev = 1.723
[info]   CI (99.9%): [≈ 0, 7.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309815.817 ops/s
[info] # Warmup Iteration   2: 1596923.356 ops/s
[info] # Warmup Iteration   3: 1899264.587 ops/s
[info] Iteration   1: 1778583.349 ops/s
[info]                  ·gc.alloc.rate:                        671.358 MB/sec
[info]                  ·gc.alloc.rate.norm:                   594.098 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.027 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.024 B/op
[info]                  ·gc.churn.Metaspace:                   0.075 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:               672.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          594.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      4.605 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              47.000 ms
[info] Iteration   2: 1909655.688 ops/s
[info]                  ·gc.alloc.rate:                   672.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1856911.397 ops/s
[info]                  ·gc.alloc.rate:               653.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 548.831 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1920317.771 ops/s
[info]                  ·gc.alloc.rate:                   677.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     529.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1906710.602 ops/s
[info]                  ·gc.alloc.rate:                   666.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1874435.761 ±(99.9%) 226845.546 ops/s [Average]
[info]   (min, avg, max) = (1778583.349, 1874435.761, 1920317.771), stdev = 58911.068
[info]   CI (99.9%): [1647590.215, 2101281.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   668.133 ±(99.9%) 35.159 MB/sec [Average]
[info]   (min, avg, max) = (653.453, 668.133, 677.277), stdev = 9.131
[info]   CI (99.9%): [632.974, 703.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   561.325 ±(99.9%) 70.979 B/op [Average]
[info]   (min, avg, max) = (549.671, 561.325, 594.098), stdev = 18.433
[info]   CI (99.9%): [490.346, 632.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.005 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.130 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.075), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.013 ±(99.9%) 0.115 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.067), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   652.838 ±(99.9%) 42.487 MB/sec [Average]
[info]   (min, avg, max) = (646.322, 652.838, 672.204), stdev = 11.034
[info]   CI (99.9%): [610.351, 695.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   548.729 ±(99.9%) 103.072 B/op [Average]
[info]   (min, avg, max) = (529.602, 548.729, 594.847), stdev = 26.768
[info]   CI (99.9%): [445.656, 651.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.055 ±(99.9%) 8.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.055, 5.204), stdev = 2.319
[info]   CI (99.9%): [≈ 0, 9.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.933 ±(99.9%) 7.905 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.933, 4.605), stdev = 2.053
[info]   CI (99.9%): [≈ 0, 8.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 12.000, 47.000), stdev = 19.570
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1177925.251 ops/s
[info] # Warmup Iteration   2: 1962903.070 ops/s
[info] # Warmup Iteration   3: 2259818.694 ops/s
[info] Iteration   1: 2198172.139 ops/s
[info]                  ·gc.alloc.rate:                   780.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              558.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     704.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2244007.786 ops/s
[info]                  ·gc.alloc.rate:                   786.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2177867.319 ops/s
[info]                  ·gc.alloc.rate:                   759.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2217049.097 ops/s
[info]                  ·gc.alloc.rate:                   788.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              559.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     701.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.300 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.342 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2158522.381 ops/s
[info]                  ·gc.alloc.rate:                   774.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              565.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2199123.744 ±(99.9%) 128248.807 ops/s [Average]
[info]   (min, avg, max) = (2158522.381, 2199123.744, 2244007.786), stdev = 33305.808
[info]   CI (99.9%): [2070874.937, 2327372.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   777.867 ±(99.9%) 44.966 MB/sec [Average]
[info]   (min, avg, max) = (759.223, 777.867, 788.349), stdev = 11.678
[info]   CI (99.9%): [732.901, 822.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   556.645 ±(99.9%) 25.518 B/op [Average]
[info]   (min, avg, max) = (548.558, 556.645, 565.070), stdev = 6.627
[info]   CI (99.9%): [531.127, 582.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.273 ±(99.9%) 694.293 MB/sec [Average]
[info]   (min, avg, max) = (656.814, 789.273, 988.783), stdev = 180.306
[info]   CI (99.9%): [94.979, 1483.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   564.495 ±(99.9%) 488.915 B/op [Average]
[info]   (min, avg, max) = (461.149, 564.495, 704.967), stdev = 126.970
[info]   CI (99.9%): [75.580, 1053.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 5.459 MB/sec [Average]
[info]   (min, avg, max) = (0.018, 0.816, 3.300), stdev = 1.418
[info]   CI (99.9%): [≈ 0, 6.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.582 ±(99.9%) 3.874 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.582, 2.342), stdev = 1.006
[info]   CI (99.9%): [≈ 0, 4.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:45:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1243794.771 ops/s
[info] # Warmup Iteration   2: 1982144.950 ops/s
[info] # Warmup Iteration   3: 2426464.831 ops/s
[info] Iteration   1: 2425427.641 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2419587.786 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2419113.406 ops/s
[info]                  ·gc.alloc.rate:      3.220 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.094 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2341758.873 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2421484.029 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2405474.347 ±(99.9%) 137486.304 ops/s [Average]
[info]   (min, avg, max) = (2341758.873, 2405474.347, 2425427.641), stdev = 35704.756
[info]   CI (99.9%): [2267988.043, 2542960.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.644 ±(99.9%) 5.544 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.644, 3.220), stdev = 1.440
[info]   CI (99.9%): [≈ 0, 6.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.419 ±(99.9%) 3.605 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.419, 2.094), stdev = 0.936
[info]   CI (99.9%): [≈ 0, 4.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4514.440 ops/s
[info] # Warmup Iteration   2: 21314.802 ops/s
[info] # Warmup Iteration   3: 43178.435 ops/s
[info] Iteration   1: 45353.858 ops/s
[info]                  ·gc.alloc.rate:                   1948.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              67625.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67372.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.227 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 44564.658 ops/s
[info]                  ·gc.alloc.rate:                   1979.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              69890.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68507.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.801 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.538 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 47410.386 ops/s
[info]                  ·gc.alloc.rate:                   1978.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              65647.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64142.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.455 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 47559.099 ops/s
[info]                  ·gc.alloc.rate:                   1961.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              64880.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64460.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.132 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 47087.951 ops/s
[info]                  ·gc.alloc.rate:                   1933.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              64626.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54874.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.696 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   46395.190 ±(99.9%) 5202.092 ops/s [Average]
[info]   (min, avg, max) = (44564.658, 46395.190, 47559.099), stdev = 1350.967
[info]   CI (99.9%): [41193.098, 51597.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1960.208 ±(99.9%) 75.063 MB/sec [Average]
[info]   (min, avg, max) = (1933.628, 1960.208, 1979.015), stdev = 19.494
[info]   CI (99.9%): [1885.146, 2035.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   66534.154 ±(99.9%) 8526.663 B/op [Average]
[info]   (min, avg, max) = (64626.850, 66534.154, 69890.252), stdev = 2214.347
[info]   CI (99.9%): [58007.491, 75060.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1880.952 ±(99.9%) 515.123 MB/sec [Average]
[info]   (min, avg, max) = (1641.846, 1880.952, 1948.400), stdev = 133.776
[info]   CI (99.9%): [1365.829, 2396.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63871.545 ±(99.9%) 20656.776 B/op [Average]
[info]   (min, avg, max) = (54874.728, 63871.545, 68507.624), stdev = 5364.499
[info]   CI (99.9%): [43214.769, 84528.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.398 ±(99.9%) 7.952 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.398, 4.801), stdev = 2.065
[info]   CI (99.9%): [≈ 0, 9.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   49.010 ±(99.9%) 280.876 B/op [Average]
[info]   (min, avg, max) = (0.696, 49.010, 169.538), stdev = 72.942
[info]   CI (99.9%): [≈ 0, 329.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.400, 26.000), stdev = 8.142
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4028.313 ops/s
[info] # Warmup Iteration   2: 11047.995 ops/s
[info] # Warmup Iteration   3: 13631.494 ops/s
[info] Iteration   1: 17408.762 ops/s
[info]                  ·gc.alloc.rate:                   1957.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              176966.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2067.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186867.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 792.887 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 17508.463 ops/s
[info]                  ·gc.alloc.rate:                   1989.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              178827.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1809.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162636.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.871 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 18363.271 ops/s
[info]                  ·gc.alloc.rate:                   2085.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              178672.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2189.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187580.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.352 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 18373.160 ops/s
[info]                  ·gc.alloc.rate:                   2079.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              178063.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165623.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.566 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 16602.827 ops/s
[info]                  ·gc.alloc.rate:                   2283.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              216396.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217785.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.511 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   17651.297 ±(99.9%) 2859.934 ops/s [Average]
[info]   (min, avg, max) = (16602.827, 17651.297, 18373.160), stdev = 742.716
[info]   CI (99.9%): [14791.363, 20511.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   2079.021 ±(99.9%) 488.968 MB/sec [Average]
[info]   (min, avg, max) = (1957.790, 2079.021, 2283.460), stdev = 126.983
[info]   CI (99.9%): [1590.053, 2567.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   185785.285 ±(99.9%) 65953.453 B/op [Average]
[info]   (min, avg, max) = (176966.572, 185785.285, 216396.678), stdev = 17127.902
[info]   CI (99.9%): [119831.831, 251738.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2059.568 ±(99.9%) 750.719 MB/sec [Average]
[info]   (min, avg, max) = (1809.601, 2059.568, 2298.111), stdev = 194.959
[info]   CI (99.9%): [1308.850, 2810.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   184098.463 ±(99.9%) 85161.805 B/op [Average]
[info]   (min, avg, max) = (162636.766, 184098.463, 217785.055), stdev = 22116.250
[info]   CI (99.9%): [98936.658, 269260.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.791 ±(99.9%) 15.027 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.791, 8.772), stdev = 3.902
[info]   CI (99.9%): [≈ 0, 16.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   161.838 ±(99.9%) 1358.394 B/op [Average]
[info]   (min, avg, max) = (1.871, 161.838, 792.887), stdev = 352.771
[info]   CI (99.9%): [≈ 0, 1520.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.600, 20.000), stdev = 3.647
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25752.924 ops/s
[info] # Warmup Iteration   2: 84829.670 ops/s
[info] # Warmup Iteration   3: 97949.084 ops/s
[info] Iteration   1: 94898.445 ops/s
[info]                  ·gc.alloc.rate:                   1038.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              17231.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16037.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.601 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 95860.865 ops/s
[info]                  ·gc.alloc.rate:                   1077.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              17688.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21218.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.684 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 96230.154 ops/s
[info]                  ·gc.alloc.rate:                   1057.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              17296.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15913.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.200 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 97194.451 ops/s
[info]                  ·gc.alloc.rate:                   1063.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              17225.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15809.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 96054.962 ops/s
[info]                  ·gc.alloc.rate:                   1057.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              17321.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16083.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   96047.775 ±(99.9%) 3166.013 ops/s [Average]
[info]   (min, avg, max) = (94898.445, 96047.775, 97194.451), stdev = 822.203
[info]   CI (99.9%): [92881.763, 99213.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1059.168 ±(99.9%) 53.865 MB/sec [Average]
[info]   (min, avg, max) = (1038.997, 1059.168, 1077.823), stdev = 13.989
[info]   CI (99.9%): [1005.303, 1113.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17352.521 ±(99.9%) 739.618 B/op [Average]
[info]   (min, avg, max) = (17225.347, 17352.521, 17688.101), stdev = 192.076
[info]   CI (99.9%): [16612.903, 18092.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1038.273 ±(99.9%) 548.653 MB/sec [Average]
[info]   (min, avg, max) = (966.990, 1038.273, 1292.974), stdev = 142.483
[info]   CI (99.9%): [489.620, 1586.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   17012.419 ±(99.9%) 9064.295 B/op [Average]
[info]   (min, avg, max) = (15809.061, 17012.419, 21218.928), stdev = 2353.969
[info]   CI (99.9%): [7948.124, 26076.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.990 ±(99.9%) 6.226 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.990, 3.775), stdev = 1.617
[info]   CI (99.9%): [≈ 0, 7.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.367 ±(99.9%) 103.268 B/op [Average]
[info]   (min, avg, max) = (0.341, 16.367, 62.601), stdev = 26.818
[info]   CI (99.9%): [≈ 0, 119.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.673
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89325.837 ops/s
[info] # Warmup Iteration   2: 234236.740 ops/s
[info] # Warmup Iteration   3: 276107.013 ops/s
[info] Iteration   1: 271603.016 ops/s
[info]                  ·gc.alloc.rate:                   916.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              5311.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5614.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 272919.149 ops/s
[info]                  ·gc.alloc.rate:                   916.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              5283.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5606.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 276913.419 ops/s
[info]                  ·gc.alloc.rate:                   917.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              5214.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3695.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.756 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 277032.827 ops/s
[info]                  ·gc.alloc.rate:                   953.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5521.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.993 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 277721.538 ops/s
[info]                  ·gc.alloc.rate:                   930.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              5273.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5477.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   275237.990 ±(99.9%) 10682.775 ops/s [Average]
[info]   (min, avg, max) = (271603.016, 275237.990, 277721.538), stdev = 2774.283
[info]   CI (99.9%): [264555.215, 285920.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   926.978 ±(99.9%) 61.285 MB/sec [Average]
[info]   (min, avg, max) = (916.529, 926.978, 953.406), stdev = 15.916
[info]   CI (99.9%): [865.692, 988.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5299.997 ±(99.9%) 285.378 B/op [Average]
[info]   (min, avg, max) = (5214.875, 5299.997, 5416.581), stdev = 74.112
[info]   CI (99.9%): [5014.619, 5585.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   906.080 ±(99.9%) 550.950 MB/sec [Average]
[info]   (min, avg, max) = (650.166, 906.080, 972.628), stdev = 143.080
[info]   CI (99.9%): [355.130, 1457.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5183.164 ±(99.9%) 3210.824 B/op [Average]
[info]   (min, avg, max) = (3695.128, 5183.164, 5614.842), stdev = 833.841
[info]   CI (99.9%): [1972.340, 8393.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.213 ±(99.9%) 6.178 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.213, 2.993), stdev = 1.604
[info]   CI (99.9%): [≈ 0, 7.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.895 ±(99.9%) 35.100 B/op [Average]
[info]   (min, avg, max) = (0.120, 6.895, 17.002), stdev = 9.115
[info]   CI (99.9%): [≈ 0, 41.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 13.000), stdev = 3.742
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:44:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1664.120 ops/s
[info] # Warmup Iteration   2: 10442.328 ops/s
[info] # Warmup Iteration   3: 14781.020 ops/s
[info] Iteration   1: 16146.418 ops/s
[info]                  ·gc.alloc.rate:                   2094.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              204046.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2199.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214370.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.990 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 16979.782 ops/s
[info]                  ·gc.alloc.rate:                   2145.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              198821.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1906.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176687.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426.908 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 17487.338 ops/s
[info]                  ·gc.alloc.rate:                   2592.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              233292.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2542.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     228810.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.688 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 17366.824 ops/s
[info]                  ·gc.alloc.rate:                   2640.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              239313.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2577.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233603.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.773 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 15758.311 ops/s
[info]                  ·gc.alloc.rate:                        2624.000 MB/sec
[info]                  ·gc.alloc.rate.norm:                   262002.204 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.020 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.018 B/op
[info]                  ·gc.churn.Metaspace:                   0.060 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              5.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2511.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          250761.341 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  18.162 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             1813.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      29.107 B/op
[info]                  ·gc.count:                             9.000 counts
[info]                  ·gc.time:                              57.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   16747.735 ±(99.9%) 2935.513 ops/s [Average]
[info]   (min, avg, max) = (15758.311, 16747.735, 17487.338), stdev = 762.343
[info]   CI (99.9%): [13812.222, 19683.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2419.207 ±(99.9%) 1057.479 MB/sec [Average]
[info]   (min, avg, max) = (2094.040, 2419.207, 2640.706), stdev = 274.624
[info]   CI (99.9%): [1361.728, 3476.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   227495.153 ±(99.9%) 100707.666 B/op [Average]
[info]   (min, avg, max) = (198821.262, 227495.153, 262002.204), stdev = 26153.461
[info]   CI (99.9%): [126787.487, 328202.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.404 ±(99.9%) 3.474 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.404, 2.018), stdev = 0.902
[info]   CI (99.9%): [≈ 0, 3.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace.norm":
[info]   1.194 ±(99.9%) 10.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.194, 5.972), stdev = 2.671
[info]   CI (99.9%): [≈ 0, 11.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2347.556 ±(99.9%) 1112.886 MB/sec [Average]
[info]   (min, avg, max) = (1906.411, 2347.556, 2577.708), stdev = 289.013
[info]   CI (99.9%): [1234.670, 3460.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   220846.646 ±(99.9%) 107422.883 B/op [Average]
[info]   (min, avg, max) = (176687.094, 220846.646, 250761.341), stdev = 27897.382
[info]   CI (99.9%): [113423.763, 328269.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen":
[info]   3.632 ±(99.9%) 31.275 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.632, 18.162), stdev = 8.122
[info]   CI (99.9%): [≈ 0, 34.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   362.683 ±(99.9%) 3122.806 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 362.683, 1813.413), stdev = 810.983
[info]   CI (99.9%): [≈ 0, 3485.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.304 ±(99.9%) 7.220 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.304, 4.606), stdev = 1.875
[info]   CI (99.9%): [≈ 0, 8.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   121.493 ±(99.9%) 667.674 B/op [Average]
[info]   (min, avg, max) = (3.773, 121.493, 426.908), stdev = 173.393
[info]   CI (99.9%): [≈ 0, 789.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   141.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 28.200, 57.000), stdev = 18.780
[info]   CI (99.9%): [141.000, 141.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8253.375 ops/s
[info] # Warmup Iteration   2: 36667.632 ops/s
[info] # Warmup Iteration   3: 40366.935 ops/s
[info] Iteration   1: 38639.491 ops/s
[info]                  ·gc.alloc.rate:                   3308.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              134763.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3254.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132567.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.512 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.585 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 40628.667 ops/s
[info]                  ·gc.alloc.rate:                   3181.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              123220.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2972.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115130.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.412 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 40271.488 ops/s
[info]                  ·gc.alloc.rate:                   3156.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              123348.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3343.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130635.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.068 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 40739.442 ops/s
[info]                  ·gc.alloc.rate:                   3222.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              124484.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117261.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.413 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 40789.036 ops/s
[info]                  ·gc.alloc.rate:                   3228.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              124526.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117689.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.803 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   40213.625 ±(99.9%) 3476.839 ops/s [Average]
[info]   (min, avg, max) = (38639.491, 40213.625, 40789.036), stdev = 902.924
[info]   CI (99.9%): [36736.786, 43690.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   3219.591 ±(99.9%) 223.362 MB/sec [Average]
[info]   (min, avg, max) = (3156.635, 3219.591, 3308.757), stdev = 58.006
[info]   CI (99.9%): [2996.228, 3442.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   126068.720 ±(99.9%) 18864.539 B/op [Average]
[info]   (min, avg, max) = (123220.360, 126068.720, 134763.683), stdev = 4899.061
[info]   CI (99.9%): [107204.180, 144933.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   3131.485 ±(99.9%) 611.552 MB/sec [Average]
[info]   (min, avg, max) = (2972.613, 3131.485, 3343.130), stdev = 158.818
[info]   CI (99.9%): [2519.933, 3743.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   122657.134 ±(99.9%) 31771.497 B/op [Average]
[info]   (min, avg, max) = (115130.724, 122657.134, 132567.659), stdev = 8250.957
[info]   CI (99.9%): [90885.637, 154428.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.461 ±(99.9%) 2.439 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.461, 1.512), stdev = 0.633
[info]   CI (99.9%): [≈ 0, 2.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.456 ±(99.9%) 99.312 B/op [Average]
[info]   (min, avg, max) = (0.803, 18.456, 61.585), stdev = 25.791
[info]   CI (99.9%): [≈ 0, 117.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 17.000), stdev = 2.074
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28043.252 ops/s
[info] # Warmup Iteration   2: 114226.876 ops/s
[info] # Warmup Iteration   3: 136527.498 ops/s
[info] Iteration   1: 142803.262 ops/s
[info]                  ·gc.alloc.rate:                   1975.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              21765.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21592.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.048 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 145047.400 ops/s
[info]                  ·gc.alloc.rate:                   1999.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              21689.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21459.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.259 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 144925.479 ops/s
[info]                  ·gc.alloc.rate:                   2016.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              21892.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21660.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 145469.594 ops/s
[info]                  ·gc.alloc.rate:                   2037.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              22039.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21744.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.901 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 145346.798 ops/s
[info]                  ·gc.alloc.rate:               2037.283 MB/sec
[info]                  ·gc.alloc.rate.norm:          22057.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21893.274 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   144718.507 ±(99.9%) 4208.515 ops/s [Average]
[info]   (min, avg, max) = (142803.262, 144718.507, 145469.594), stdev = 1092.938
[info]   CI (99.9%): [140509.991, 148927.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2013.126 ±(99.9%) 102.197 MB/sec [Average]
[info]   (min, avg, max) = (1975.057, 2013.126, 2037.426), stdev = 26.540
[info]   CI (99.9%): [1910.929, 2115.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21888.693 ±(99.9%) 626.603 B/op [Average]
[info]   (min, avg, max) = (21689.491, 21888.693, 22057.144), stdev = 162.727
[info]   CI (99.9%): [21262.091, 22515.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1993.019 ±(99.9%) 96.108 MB/sec [Average]
[info]   (min, avg, max) = (1959.396, 1993.019, 2022.147), stdev = 24.959
[info]   CI (99.9%): [1896.911, 2089.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21670.233 ±(99.9%) 625.633 B/op [Average]
[info]   (min, avg, max) = (21459.990, 21670.233, 21893.274), stdev = 162.475
[info]   CI (99.9%): [21044.600, 22295.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.154 ±(99.9%) 0.725 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.154, 0.458), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.687 ±(99.9%) 7.989 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.687, 5.048), stdev = 2.075
[info]   CI (99.9%): [≈ 0, 9.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 10.000), stdev = 0.837
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134297.189 ops/s
[info] # Warmup Iteration   2: 229006.207 ops/s
[info] # Warmup Iteration   3: 227781.500 ops/s
[info] Iteration   1: 251096.155 ops/s
[info]                  ·gc.alloc.rate:               821.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4123.287 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 246519.422 ops/s
[info]                  ·gc.alloc.rate:                   820.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              5238.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6311.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 246911.227 ops/s
[info]                  ·gc.alloc.rate:                   813.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              5184.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4203.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 250022.585 ops/s
[info]                  ·gc.alloc.rate:                   835.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              5259.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6227.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.849 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 249905.378 ops/s
[info]                  ·gc.alloc.rate:                   815.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4132.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.918 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   248890.954 ±(99.9%) 7871.727 ops/s [Average]
[info]   (min, avg, max) = (246519.422, 248890.954, 251096.155), stdev = 2044.263
[info]   CI (99.9%): [241019.226, 256762.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   821.346 ±(99.9%) 33.225 MB/sec [Average]
[info]   (min, avg, max) = (813.576, 821.346, 835.711), stdev = 8.629
[info]   CI (99.9%): [788.121, 854.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5192.889 ±(99.9%) 212.217 B/op [Average]
[info]   (min, avg, max) = (5136.881, 5192.889, 5259.689), stdev = 55.112
[info]   CI (99.9%): [4980.672, 5405.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   790.412 ±(99.9%) 698.106 MB/sec [Average]
[info]   (min, avg, max) = (656.311, 790.412, 989.418), stdev = 181.296
[info]   CI (99.9%): [92.307, 1488.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4999.641 ±(99.9%) 4466.250 B/op [Average]
[info]   (min, avg, max) = (4123.287, 4999.641, 6311.599), stdev = 1159.871
[info]   CI (99.9%): [533.390, 9465.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.709 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.948), stdev = 1.742
[info]   CI (99.9%): [≈ 0, 7.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.243 ±(99.9%) 42.224 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.243, 24.849), stdev = 10.965
[info]   CI (99.9%): [≈ 0, 47.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151479.270 ops/s
[info] # Warmup Iteration   2: 275947.658 ops/s
[info] # Warmup Iteration   3: 266450.312 ops/s
[info] Iteration   1: 281220.617 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 280646.902 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 281116.342 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 281655.434 ops/s
[info]                  ·gc.alloc.rate:      0.977 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.459 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 281315.937 ops/s
[info]                  ·gc.alloc.rate:      0.934 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.226 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   281191.046 ±(99.9%) 1406.674 ops/s [Average]
[info]   (min, avg, max) = (280646.902, 281191.046, 281655.434), stdev = 365.309
[info]   CI (99.9%): [279784.372, 282597.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.382 ±(99.9%) 2.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.382, 0.977), stdev = 0.524
[info]   CI (99.9%): [≈ 0, 2.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.138 ±(99.9%) 11.269 B/op [Average]
[info]   (min, avg, max) = (0.002, 2.138, 5.459), stdev = 2.927
[info]   CI (99.9%): [≈ 0, 13.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9044.067 ops/s
[info] # Warmup Iteration   2: 47182.477 ops/s
[info] # Warmup Iteration   3: 54323.428 ops/s
[info] Iteration   1: 57163.176 ops/s
[info]                  ·gc.alloc.rate:                   3808.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              104807.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3605.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99232.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.870 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.971 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 59406.690 ops/s
[info]                  ·gc.alloc.rate:                   3877.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              102696.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3994.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105800.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.964 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 59587.963 ops/s
[info]                  ·gc.alloc.rate:                   3917.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              103426.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3706.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97862.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.649 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 60044.997 ops/s
[info]                  ·gc.alloc.rate:                   3946.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              103424.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3728.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97710.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.091 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 60448.319 ops/s
[info]                  ·gc.alloc.rate:                   3972.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              103422.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3737.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97302.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.542 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   59330.229 ±(99.9%) 4919.720 ops/s [Average]
[info]   (min, avg, max) = (57163.176, 59330.229, 60448.319), stdev = 1277.636
[info]   CI (99.9%): [54410.509, 64249.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3904.572 ±(99.9%) 247.635 MB/sec [Average]
[info]   (min, avg, max) = (3808.432, 3904.572, 3972.851), stdev = 64.310
[info]   CI (99.9%): [3656.937, 4152.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   103555.437 ±(99.9%) 2954.721 B/op [Average]
[info]   (min, avg, max) = (102696.910, 103555.437, 104807.077), stdev = 767.332
[info]   CI (99.9%): [100600.716, 106510.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3754.722 ±(99.9%) 554.949 MB/sec [Average]
[info]   (min, avg, max) = (3605.865, 3754.722, 3994.818), stdev = 144.119
[info]   CI (99.9%): [3199.773, 4309.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   99581.652 ±(99.9%) 13673.883 B/op [Average]
[info]   (min, avg, max) = (97302.358, 99581.652, 105800.005), stdev = 3551.064
[info]   CI (99.9%): [85907.768, 113255.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.636 ±(99.9%) 4.814 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.636, 2.870), stdev = 1.250
[info]   CI (99.9%): [≈ 0, 5.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   17.443 ±(99.9%) 132.608 B/op [Average]
[info]   (min, avg, max) = (0.542, 17.443, 78.971), stdev = 34.438
[info]   CI (99.9%): [≈ 0, 150.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   56.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.200, 12.000), stdev = 0.447
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.400, 17.000), stdev = 1.673
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2756.740 ops/s
[info] # Warmup Iteration   2: 14058.628 ops/s
[info] # Warmup Iteration   3: 24184.991 ops/s
[info] Iteration   1: 31963.542 ops/s
[info]                  ·gc.alloc.rate:                   2036.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              100256.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2149.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105831.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 475.599 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   2: 38514.628 ops/s
[info]                  ·gc.alloc.rate:                   1894.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              77395.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1849.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75580.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 388.784 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 36735.772 ops/s
[info]                  ·gc.alloc.rate:                   2063.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              88384.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1852.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79335.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 301.510 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 36494.851 ops/s
[info]                  ·gc.alloc.rate:                   1792.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              77286.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1873.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80812.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 347.902 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 38274.280 ops/s
[info]                  ·gc.alloc.rate:                   1640.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              67457.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1577.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64864.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.280 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   36396.615 ±(99.9%) 10149.281 ops/s [Average]
[info]   (min, avg, max) = (31963.542, 36396.615, 38514.628), stdev = 2635.736
[info]   CI (99.9%): [26247.334, 46545.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1885.380 ±(99.9%) 675.463 MB/sec [Average]
[info]   (min, avg, max) = (1640.766, 1885.380, 2063.312), stdev = 175.416
[info]   CI (99.9%): [1209.917, 2560.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   82156.103 ±(99.9%) 48280.241 B/op [Average]
[info]   (min, avg, max) = (67457.810, 82156.103, 100256.184), stdev = 12538.225
[info]   CI (99.9%): [33875.862, 130436.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1860.639 ±(99.9%) 779.675 MB/sec [Average]
[info]   (min, avg, max) = (1577.698, 1860.639, 2149.718), stdev = 202.479
[info]   CI (99.9%): [1080.964, 2640.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   81285.116 ±(99.9%) 58038.963 B/op [Average]
[info]   (min, avg, max) = (64864.889, 81285.116, 105831.784), stdev = 15072.534
[info]   CI (99.9%): [23246.153, 139324.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   6.877 ±(99.9%) 15.163 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 6.877, 9.661), stdev = 3.938
[info]   CI (99.9%): [≈ 0, 22.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   303.615 ±(99.9%) 689.898 B/op [Average]
[info]   (min, avg, max) = (4.280, 303.615, 475.599), stdev = 179.164
[info]   CI (99.9%): [≈ 0, 993.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   102.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 20.400, 47.000), stdev = 15.582
[info]   CI (99.9%): [102.000, 102.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2673.803 ops/s
[info] # Warmup Iteration   2: 18757.525 ops/s
[info] # Warmup Iteration   3: 33828.688 ops/s
[info] Iteration   1: 42337.583 ops/s
[info]                  ·gc.alloc.rate:                   1340.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              49808.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47743.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 39922.515 ops/s
[info]                  ·gc.alloc.rate:                   1662.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              65494.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63553.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.836 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 33439.809 ops/s
[info]                  ·gc.alloc.rate:                   1084.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              51026.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60731.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 33412.039 ops/s
[info]                  ·gc.alloc.rate:                   1054.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              49646.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45702.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.942 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 33324.441 ops/s
[info]                  ·gc.alloc.rate:                   1046.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              49380.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46139.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.950 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   36487.277 ±(99.9%) 16648.705 ops/s [Average]
[info]   (min, avg, max) = (33324.441, 36487.277, 42337.583), stdev = 4323.616
[info]   CI (99.9%): [19838.572, 53135.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1237.409 ±(99.9%) 1027.089 MB/sec [Average]
[info]   (min, avg, max) = (1046.037, 1237.409, 1662.183), stdev = 266.732
[info]   CI (99.9%): [210.320, 2264.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   53071.018 ±(99.9%) 26852.227 B/op [Average]
[info]   (min, avg, max) = (49380.082, 53071.018, 65494.257), stdev = 6973.438
[info]   CI (99.9%): [26218.791, 79923.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1227.209 ±(99.9%) 1026.604 MB/sec [Average]
[info]   (min, avg, max) = (970.633, 1227.209, 1612.922), stdev = 266.606
[info]   CI (99.9%): [200.605, 2253.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   52774.051 ±(99.9%) 33282.543 B/op [Average]
[info]   (min, avg, max) = (45702.814, 52774.051, 63553.244), stdev = 8643.371
[info]   CI (99.9%): [19491.508, 86056.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.495 ±(99.9%) 7.798 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.495, 4.432), stdev = 2.025
[info]   CI (99.9%): [≈ 0, 9.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   65.838 ±(99.9%) 355.819 B/op [Average]
[info]   (min, avg, max) = (2.942, 65.838, 208.593), stdev = 92.405
[info]   CI (99.9%): [≈ 0, 421.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 15.000), stdev = 3.194
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285222.499 ops/s
[info] # Warmup Iteration   2: 609746.820 ops/s
[info] # Warmup Iteration   3: 651486.454 ops/s
[info] Iteration   1: 626738.826 ops/s
[info]                  ·gc.alloc.rate:                   1735.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              4356.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4126.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.863 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.697 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 656987.641 ops/s
[info]                  ·gc.alloc.rate:                   1760.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              4214.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3919.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 647799.384 ops/s
[info]                  ·gc.alloc.rate:                   1720.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              4178.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3988.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 662500.891 ops/s
[info]                  ·gc.alloc.rate:               1764.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          4189.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3925.659 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 657486.271 ops/s
[info]                  ·gc.alloc.rate:                   1778.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              4255.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3987.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   650302.602 ±(99.9%) 54680.863 ops/s [Average]
[info]   (min, avg, max) = (626738.826, 650302.602, 662500.891), stdev = 14200.447
[info]   CI (99.9%): [595621.739, 704983.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1751.722 ±(99.9%) 89.477 MB/sec [Average]
[info]   (min, avg, max) = (1720.706, 1751.722, 1778.216), stdev = 23.237
[info]   CI (99.9%): [1662.244, 1841.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4239.096 ±(99.9%) 276.766 B/op [Average]
[info]   (min, avg, max) = (4178.761, 4239.096, 4356.230), stdev = 71.875
[info]   CI (99.9%): [3962.330, 4515.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1648.469 ±(99.9%) 43.857 MB/sec [Average]
[info]   (min, avg, max) = (1636.828, 1648.469, 1665.987), stdev = 11.389
[info]   CI (99.9%): [1604.612, 1692.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3989.670 ±(99.9%) 321.448 B/op [Average]
[info]   (min, avg, max) = (3919.546, 3989.670, 4126.981), stdev = 83.479
[info]   CI (99.9%): [3668.222, 4311.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.793 ±(99.9%) 6.608 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.793, 3.863), stdev = 1.716
[info]   CI (99.9%): [≈ 0, 7.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.990 ±(99.9%) 16.592 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.990, 9.697), stdev = 4.309
[info]   CI (99.9%): [≈ 0, 18.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 10.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:42:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 510.620 ops/s
[info] # Warmup Iteration   2: 14928.347 ops/s
[info] # Warmup Iteration   3: 22108.477 ops/s
[info] Iteration   1: 30436.714 ops/s
[info]                  ·gc.alloc.rate:                   1797.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              92914.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1793.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92726.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 351.860 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         52.000 ms
[info] Iteration   2: 35227.783 ops/s
[info]                  ·gc.alloc.rate:                   2244.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              100279.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2410.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107672.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.987 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.139 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   3: 33818.984 ops/s
[info]                  ·gc.alloc.rate:                   2049.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              95373.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1835.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85407.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 251.426 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 33398.019 ops/s
[info]                  ·gc.alloc.rate:                   2114.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              99631.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2164.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101975.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.666 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 34941.374 ops/s
[info]                  ·gc.alloc.rate:                   2045.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              92083.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1898.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85473.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.938 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   33564.575 ±(99.9%) 7340.961 ops/s [Average]
[info]   (min, avg, max) = (30436.714, 33564.575, 35227.783), stdev = 1906.424
[info]   CI (99.9%): [26223.614, 40905.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2050.246 ±(99.9%) 626.670 MB/sec [Average]
[info]   (min, avg, max) = (1797.272, 2050.246, 2244.676), stdev = 162.744
[info]   CI (99.9%): [1423.576, 2676.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   96056.504 ±(99.9%) 14503.004 B/op [Average]
[info]   (min, avg, max) = (92083.799, 96056.504, 100279.785), stdev = 3766.384
[info]   CI (99.9%): [81553.500, 110559.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2020.369 ±(99.9%) 1006.151 MB/sec [Average]
[info]   (min, avg, max) = (1793.634, 2020.369, 2410.165), stdev = 261.294
[info]   CI (99.9%): [1014.218, 3026.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   94651.172 ±(99.9%) 38342.324 B/op [Average]
[info]   (min, avg, max) = (85407.606, 94651.172, 107672.929), stdev = 9957.380
[info]   CI (99.9%): [56308.848, 132993.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.722 ±(99.9%) 10.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.722, 6.806), stdev = 2.640
[info]   CI (99.9%): [≈ 0, 13.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   179.006 ±(99.9%) 513.860 B/op [Average]
[info]   (min, avg, max) = (0.938, 179.006, 351.860), stdev = 133.448
[info]   CI (99.9%): [≈ 0, 692.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 8.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 26.000, 52.000), stdev = 20.335
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20610.076 ops/s
[info] # Warmup Iteration   2: 81405.144 ops/s
[info] # Warmup Iteration   3: 79956.790 ops/s
[info] Iteration   1: 94583.187 ops/s
[info]                  ·gc.alloc.rate:                   2110.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              35099.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32611.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.405 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 94675.416 ops/s
[info]                  ·gc.alloc.rate:                   2113.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              35127.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37951.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.769 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 93315.162 ops/s
[info]                  ·gc.alloc.rate:               2072.824 MB/sec
[info]                  ·gc.alloc.rate.norm:          34955.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1973.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33278.140 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 94774.787 ops/s
[info]                  ·gc.alloc.rate:                   2131.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              35386.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33098.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.037 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 93261.245 ops/s
[info]                  ·gc.alloc.rate:                   2105.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              35530.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33906.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.351 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   94121.959 ±(99.9%) 2943.274 ops/s [Average]
[info]   (min, avg, max) = (93261.245, 94121.959, 94774.787), stdev = 764.359
[info]   CI (99.9%): [91178.685, 97065.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2106.672 ±(99.9%) 81.760 MB/sec [Average]
[info]   (min, avg, max) = (2072.824, 2106.672, 2131.035), stdev = 21.233
[info]   CI (99.9%): [2024.911, 2188.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   35219.977 ±(99.9%) 897.043 B/op [Average]
[info]   (min, avg, max) = (34955.902, 35219.977, 35530.765), stdev = 232.959
[info]   CI (99.9%): [34322.934, 36117.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2044.043 ±(99.9%) 520.824 MB/sec [Average]
[info]   (min, avg, max) = (1960.661, 2044.043, 2283.702), stdev = 135.256
[info]   CI (99.9%): [1523.219, 2564.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34169.302 ±(99.9%) 8335.515 B/op [Average]
[info]   (min, avg, max) = (32611.427, 34169.302, 37951.840), stdev = 2164.707
[info]   CI (99.9%): [25833.787, 42504.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.392 ±(99.9%) 2.844 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.392, 1.708), stdev = 0.739
[info]   CI (99.9%): [≈ 0, 3.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.512 ±(99.9%) 47.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.512, 28.405), stdev = 12.285
[info]   CI (99.9%): [≈ 0, 53.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 11.000), stdev = 1.304
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64163.660 ops/s
[info] # Warmup Iteration   2: 205671.316 ops/s
[info] # Warmup Iteration   3: 244289.696 ops/s
[info] Iteration   1: 240938.260 ops/s
[info]                  ·gc.alloc.rate:                   1678.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              10960.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10691.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 244580.065 ops/s
[info]                  ·gc.alloc.rate:                   1682.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              10825.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10459.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.420 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 245435.512 ops/s
[info]                  ·gc.alloc.rate:               1686.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          10811.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1627.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10431.297 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 247855.827 ops/s
[info]                  ·gc.alloc.rate:                   1729.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              10978.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12502.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.397 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 244181.138 ops/s
[info]                  ·gc.alloc.rate:                   1685.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              10860.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8536.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   244598.160 ±(99.9%) 9603.990 ops/s [Average]
[info]   (min, avg, max) = (240938.260, 244598.160, 247855.827), stdev = 2494.126
[info]   CI (99.9%): [234994.170, 254202.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1692.295 ±(99.9%) 80.437 MB/sec [Average]
[info]   (min, avg, max) = (1678.110, 1692.295, 1729.210), stdev = 20.889
[info]   CI (99.9%): [1611.858, 1772.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10887.008 ±(99.9%) 297.649 B/op [Average]
[info]   (min, avg, max) = (10811.370, 10887.008, 10978.144), stdev = 77.299
[info]   CI (99.9%): [10589.358, 11184.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1636.725 ±(99.9%) 878.518 MB/sec [Average]
[info]   (min, avg, max) = (1324.644, 1636.725, 1969.283), stdev = 228.148
[info]   CI (99.9%): [758.207, 2515.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10524.115 ±(99.9%) 5413.531 B/op [Average]
[info]   (min, avg, max) = (8536.179, 10524.115, 12502.285), stdev = 1405.877
[info]   CI (99.9%): [5110.584, 15937.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.973 ±(99.9%) 6.808 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.973, 4.094), stdev = 1.768
[info]   CI (99.9%): [≈ 0, 7.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.338 ±(99.9%) 44.483 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.338, 26.738), stdev = 11.552
[info]   CI (99.9%): [≈ 0, 50.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 18.000), stdev = 5.244
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 493804.215 ops/s
[info] # Warmup Iteration   2: 1026326.701 ops/s
[info] # Warmup Iteration   3: 1078172.893 ops/s
[info] Iteration   1: 1112860.129 ops/s
[info]                  ·gc.alloc.rate:                   937.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              1326.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     929.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1107756.285 ops/s
[info]                  ·gc.alloc.rate:                   950.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              1350.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1403.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1104190.596 ops/s
[info]                  ·gc.alloc.rate:                   940.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              1341.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1409.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.822 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1103392.682 ops/s
[info]                  ·gc.alloc.rate:                   940.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              1342.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1403.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1078005.920 ops/s
[info]                  ·gc.alloc.rate:                   929.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              1355.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     955.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1101241.122 ±(99.9%) 52042.557 ops/s [Average]
[info]   (min, avg, max) = (1078005.920, 1101241.122, 1112860.129), stdev = 13515.287
[info]   CI (99.9%): [1049198.565, 1153283.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   939.867 ±(99.9%) 29.378 MB/sec [Average]
[info]   (min, avg, max) = (929.143, 939.867, 950.440), stdev = 7.629
[info]   CI (99.9%): [910.490, 969.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1343.122 ±(99.9%) 43.033 B/op [Average]
[info]   (min, avg, max) = (1326.327, 1343.122, 1355.951), stdev = 11.175
[info]   CI (99.9%): [1300.089, 1386.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   854.646 ±(99.9%) 698.305 MB/sec [Average]
[info]   (min, avg, max) = (654.452, 854.646, 989.193), stdev = 181.348
[info]   CI (99.9%): [156.341, 1552.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1220.384 ±(99.9%) 977.549 B/op [Average]
[info]   (min, avg, max) = (929.868, 1220.384, 1409.980), stdev = 253.867
[info]   CI (99.9%): [242.835, 2197.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.848 ±(99.9%) 5.585 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.848, 3.383), stdev = 1.450
[info]   CI (99.9%): [≈ 0, 6.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.209 ±(99.9%) 7.961 B/op [Average]
[info]   (min, avg, max) = (0.030, 1.209, 4.822), stdev = 2.067
[info]   CI (99.9%): [≈ 0, 9.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.864
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 735070.453 ops/s
[info] # Warmup Iteration   2: 1118526.329 ops/s
[info] # Warmup Iteration   3: 1147230.070 ops/s
[info] Iteration   1: 1182185.543 ops/s
[info]                  ·gc.alloc.rate:      0.488 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.650 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1186818.976 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1186419.437 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1147867.127 ops/s
[info]                  ·gc.alloc.rate:      5.909 MB/sec
[info]                  ·gc.alloc.rate.norm: 8.100 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1186332.467 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1177924.710 ±(99.9%) 65108.107 ops/s [Average]
[info]   (min, avg, max) = (1147867.127, 1177924.710, 1186818.976), stdev = 16908.369
[info]   CI (99.9%): [1112816.603, 1243032.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.280 ±(99.9%) 9.998 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.280, 5.909), stdev = 2.596
[info]   CI (99.9%): [≈ 0, 11.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.750 ±(99.9%) 13.712 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 1.750, 8.100), stdev = 3.561
[info]   CI (99.9%): [≈ 0, 15.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:41:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21858.881 ops/s
[info] # Warmup Iteration   2: 159512.839 ops/s
[info] # Warmup Iteration   3: 207386.702 ops/s
[info] Iteration   1: 240004.618 ops/s
[info]                  ·gc.alloc.rate:                   2531.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              16599.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15025.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.054 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 236859.417 ops/s
[info]                  ·gc.alloc.rate:                   2487.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              16524.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2632.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17484.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 238453.514 ops/s
[info]                  ·gc.alloc.rate:               2551.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          16835.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2327.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15360.747 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 237792.354 ops/s
[info]                  ·gc.alloc.rate:                   2535.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              16773.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15541.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 238818.998 ops/s
[info]                  ·gc.alloc.rate:                   2562.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              16882.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17797.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   238385.780 ±(99.9%) 4513.162 ops/s [Average]
[info]   (min, avg, max) = (236859.417, 238385.780, 240004.618), stdev = 1172.054
[info]   CI (99.9%): [233872.619, 242898.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2533.752 ±(99.9%) 109.895 MB/sec [Average]
[info]   (min, avg, max) = (2487.862, 2533.752, 2562.646), stdev = 28.539
[info]   CI (99.9%): [2423.857, 2643.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   16722.860 ±(99.9%) 594.682 B/op [Average]
[info]   (min, avg, max) = (16524.145, 16722.860, 16882.127), stdev = 154.437
[info]   CI (99.9%): [16128.178, 17317.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2460.509 ±(99.9%) 736.198 MB/sec [Average]
[info]   (min, avg, max) = (2291.535, 2460.509, 2701.570), stdev = 191.188
[info]   CI (99.9%): [1724.310, 3196.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   16241.869 ±(99.9%) 4987.323 B/op [Average]
[info]   (min, avg, max) = (15025.026, 16241.869, 17797.327), stdev = 1295.192
[info]   CI (99.9%): [11254.546, 21229.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.275 ±(99.9%) 2.055 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.275, 1.228), stdev = 0.534
[info]   CI (99.9%): [≈ 0, 2.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.803 ±(99.9%) 13.473 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.803, 8.054), stdev = 3.499
[info]   CI (99.9%): [≈ 0, 15.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 14.000), stdev = 2.168
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2841.898 ops/s
[info] # Warmup Iteration   2: 32330.128 ops/s
[info] # Warmup Iteration   3: 50701.942 ops/s
[info] Iteration   1: 59820.254 ops/s
[info]                  ·gc.alloc.rate:                   1865.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              49071.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1912.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50317.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.496 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 47809.081 ops/s
[info]                  ·gc.alloc.rate:                        1579.172 MB/sec
[info]                  ·gc.alloc.rate.norm:                   51987.380 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.024 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.800 B/op
[info]                  ·gc.churn.Metaspace:                   0.066 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              2.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1481.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          48782.491 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  11.426 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             376.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           12.786 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      420.931 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              67.000 ms
[info] Iteration   3: 55291.383 ops/s
[info]                  ·gc.alloc.rate:                   1508.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              42923.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1570.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44682.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.521 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 55220.435 ops/s
[info]                  ·gc.alloc.rate:                   1514.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              43148.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1561.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44493.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.967 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 55521.953 ops/s
[info]                  ·gc.alloc.rate:                   1505.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              42671.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1262.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35765.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.842 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   54732.621 ±(99.9%) 16672.959 ops/s [Average]
[info]   (min, avg, max) = (47809.081, 54732.621, 59820.254), stdev = 4329.914
[info]   CI (99.9%): [38059.662, 71405.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1594.625 ±(99.9%) 594.619 MB/sec [Average]
[info]   (min, avg, max) = (1505.681, 1594.625, 1865.481), stdev = 154.421
[info]   CI (99.9%): [1000.006, 2189.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   45960.338 ±(99.9%) 16556.879 B/op [Average]
[info]   (min, avg, max) = (42671.236, 45960.338, 51987.380), stdev = 4299.769
[info]   CI (99.9%): [29403.460, 62517.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.042 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.160 ±(99.9%) 1.378 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.800), stdev = 0.358
[info]   CI (99.9%): [≈ 0, 1.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.013 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.066), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.432 ±(99.9%) 3.724 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.432, 2.162), stdev = 0.967
[info]   CI (99.9%): [≈ 0, 4.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1557.709 ±(99.9%) 902.039 MB/sec [Average]
[info]   (min, avg, max) = (1262.018, 1557.709, 1912.866), stdev = 234.257
[info]   CI (99.9%): [655.671, 2459.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44808.531 ±(99.9%) 21785.091 B/op [Average]
[info]   (min, avg, max) = (35765.793, 44808.531, 50317.767), stdev = 5657.519
[info]   CI (99.9%): [23023.440, 66593.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   2.285 ±(99.9%) 19.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.285, 11.426), stdev = 5.110
[info]   CI (99.9%): [≈ 0, 21.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   75.233 ±(99.9%) 647.780 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 75.233, 376.166), stdev = 168.226
[info]   CI (99.9%): [≈ 0, 723.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.085 ±(99.9%) 21.259 MB/sec [Average]
[info]   (min, avg, max) = (0.018, 3.085, 12.786), stdev = 5.521
[info]   CI (99.9%): [≈ 0, 24.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   98.151 ±(99.9%) 702.641 B/op [Average]
[info]   (min, avg, max) = (0.521, 98.151, 420.931), stdev = 182.474
[info]   CI (99.9%): [≈ 0, 800.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   122.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 24.400, 67.000), stdev = 26.810
[info]   CI (99.9%): [122.000, 122.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268609.355 ops/s
[info] # Warmup Iteration   2: 713963.979 ops/s
[info] # Warmup Iteration   3: 787169.023 ops/s
[info] Iteration   1: 772235.030 ops/s
[info]                  ·gc.alloc.rate:                   1573.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              3207.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3349.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.603 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 790313.371 ops/s
[info]                  ·gc.alloc.rate:                   1584.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              3154.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2606.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 799959.957 ops/s
[info]                  ·gc.alloc.rate:               1597.523 MB/sec
[info]                  ·gc.alloc.rate.norm:          3141.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3218.987 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 794416.860 ops/s
[info]                  ·gc.alloc.rate:                   1589.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              3149.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3261.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 801170.637 ops/s
[info]                  ·gc.alloc.rate:                   1616.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              3175.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2604.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   791619.171 ±(99.9%) 44991.455 ops/s [Average]
[info]   (min, avg, max) = (772235.030, 791619.171, 801170.637), stdev = 11684.138
[info]   CI (99.9%): [746627.716, 836610.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1592.572 ±(99.9%) 62.064 MB/sec [Average]
[info]   (min, avg, max) = (1573.939, 1592.572, 1616.967), stdev = 16.118
[info]   CI (99.9%): [1530.508, 1654.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3165.888 ±(99.9%) 102.485 B/op [Average]
[info]   (min, avg, max) = (3141.622, 3165.888, 3207.876), stdev = 26.615
[info]   CI (99.9%): [3063.404, 3268.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1512.334 ±(99.9%) 684.774 MB/sec [Average]
[info]   (min, avg, max) = (1309.315, 1512.334, 1646.157), stdev = 177.834
[info]   CI (99.9%): [827.560, 2197.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3008.067 ±(99.9%) 1426.756 B/op [Average]
[info]   (min, avg, max) = (2604.208, 3008.067, 3349.268), stdev = 370.524
[info]   CI (99.9%): [1581.310, 4434.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 5.381 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 3.240), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.627 ±(99.9%) 10.970 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.627, 6.603), stdev = 2.849
[info]   CI (99.9%): [≈ 0, 12.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 15.000), stdev = 4.087
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 578.487 ops/s
[info] # Warmup Iteration   2: 16776.395 ops/s
[info] # Warmup Iteration   3: 37967.113 ops/s
[info] Iteration   1: 47798.899 ops/s
[info]                  ·gc.alloc.rate:                   2808.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              92422.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2607.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85803.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.992 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 37453.060 ops/s
[info]                  ·gc.alloc.rate:                   2610.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              109671.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110248.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.674 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 44138.765 ops/s
[info]                  ·gc.alloc.rate:                   2558.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              91215.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82602.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.175 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 44238.564 ops/s
[info]                  ·gc.alloc.rate:                   2418.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              86008.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2328.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82829.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.962 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 44034.167 ops/s
[info]                  ·gc.alloc.rate:                   2391.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              85438.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2345.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83789.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.488 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   43532.691 ±(99.9%) 14443.700 ops/s [Average]
[info]   (min, avg, max) = (37453.060, 43532.691, 47798.899), stdev = 3750.983
[info]   CI (99.9%): [29088.991, 57976.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2557.308 ±(99.9%) 646.361 MB/sec [Average]
[info]   (min, avg, max) = (2391.477, 2557.308, 2808.237), stdev = 167.858
[info]   CI (99.9%): [1910.947, 3203.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   92951.355 ±(99.9%) 37900.456 B/op [Average]
[info]   (min, avg, max) = (85438.445, 92951.355, 109671.618), stdev = 9842.628
[info]   CI (99.9%): [55050.899, 130851.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2444.422 ±(99.9%) 604.104 MB/sec [Average]
[info]   (min, avg, max) = (2316.528, 2444.422, 2624.439), stdev = 156.884
[info]   CI (99.9%): [1840.318, 3048.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   89054.964 ±(99.9%) 45880.344 B/op [Average]
[info]   (min, avg, max) = (82602.914, 89054.964, 110248.981), stdev = 11914.980
[info]   CI (99.9%): [43174.619, 134935.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.862 ±(99.9%) 6.614 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.862, 3.875), stdev = 1.718
[info]   CI (99.9%): [≈ 0, 8.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   68.458 ±(99.9%) 243.874 B/op [Average]
[info]   (min, avg, max) = (1.488, 68.458, 138.175), stdev = 63.333
[info]   CI (99.9%): [≈ 0, 312.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.000, 17.000), stdev = 2.915
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96261.602 ops/s
[info] # Warmup Iteration   2: 321107.716 ops/s
[info] # Warmup Iteration   3: 401119.502 ops/s
[info] Iteration   1: 403492.112 ops/s
[info]                  ·gc.alloc.rate:                   1056.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              4121.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3770.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 404113.338 ops/s
[info]                  ·gc.alloc.rate:                   1051.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              4095.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3783.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 407671.027 ops/s
[info]                  ·gc.alloc.rate:               1055.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          4074.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:      976.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3768.951 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 410941.191 ops/s
[info]                  ·gc.alloc.rate:                   1067.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              4089.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3757.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.533 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 402289.042 ops/s
[info]                  ·gc.alloc.rate:               1046.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          4094.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3851.887 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   405701.342 ±(99.9%) 13665.978 ops/s [Average]
[info]   (min, avg, max) = (402289.042, 405701.342, 410941.191), stdev = 3549.011
[info]   CI (99.9%): [392035.364, 419367.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1055.823 ±(99.9%) 29.916 MB/sec [Average]
[info]   (min, avg, max) = (1046.739, 1055.823, 1067.719), stdev = 7.769
[info]   CI (99.9%): [1025.907, 1085.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4095.225 ±(99.9%) 65.251 B/op [Average]
[info]   (min, avg, max) = (4074.952, 4095.225, 4121.719), stdev = 16.945
[info]   CI (99.9%): [4029.975, 4160.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   976.230 ±(99.9%) 27.630 MB/sec [Average]
[info]   (min, avg, max) = (966.851, 976.230, 984.751), stdev = 7.175
[info]   CI (99.9%): [948.600, 1003.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3786.632 ±(99.9%) 144.855 B/op [Average]
[info]   (min, avg, max) = (3757.971, 3786.632, 3851.887), stdev = 37.618
[info]   CI (99.9%): [3641.777, 3931.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.258 ±(99.9%) 1.995 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.258, 1.184), stdev = 0.518
[info]   CI (99.9%): [≈ 0, 2.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.991 ±(99.9%) 7.638 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.991, 4.533), stdev = 1.984
[info]   CI (99.9%): [≈ 0, 8.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 721414.574 ops/s
[info] # Warmup Iteration   2: 1452451.506 ops/s
[info] # Warmup Iteration   3: 1560675.411 ops/s
[info] Iteration   1: 1623219.504 ops/s
[info]                  ·gc.alloc.rate:                   977.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     951.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1629131.592 ops/s
[info]                  ·gc.alloc.rate:               985.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          951.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 635.506 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1570671.165 ops/s
[info]                  ·gc.alloc.rate:                   947.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              949.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.212 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1596410.042 ops/s
[info]                  ·gc.alloc.rate:                   956.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     970.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1544264.489 ops/s
[info]                  ·gc.alloc.rate:                   934.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1000.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1592739.358 ±(99.9%) 137545.707 ops/s [Average]
[info]   (min, avg, max) = (1544264.489, 1592739.358, 1629131.592), stdev = 35720.183
[info]   CI (99.9%): [1455193.651, 1730285.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   960.413 ±(99.9%) 80.191 MB/sec [Average]
[info]   (min, avg, max) = (934.981, 960.413, 985.323), stdev = 20.825
[info]   CI (99.9%): [880.222, 1040.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   948.644 ±(99.9%) 15.546 B/op [Average]
[info]   (min, avg, max) = (943.145, 948.644, 952.884), stdev = 4.037
[info]   CI (99.9%): [933.097, 964.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.101 ±(99.9%) 562.403 MB/sec [Average]
[info]   (min, avg, max) = (657.877, 919.101, 988.805), stdev = 146.054
[info]   CI (99.9%): [356.698, 1481.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   909.636 ±(99.9%) 594.430 B/op [Average]
[info]   (min, avg, max) = (635.506, 909.636, 1000.113), stdev = 154.372
[info]   CI (99.9%): [315.206, 1504.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.806 ±(99.9%) 5.317 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.806, 3.207), stdev = 1.381
[info]   CI (99.9%): [≈ 0, 6.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.805 ±(99.9%) 5.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.805, 3.212), stdev = 1.384
[info]   CI (99.9%): [≈ 0, 6.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.162
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1078109.294 ops/s
[info] # Warmup Iteration   2: 1478026.333 ops/s
[info] # Warmup Iteration   3: 1757926.360 ops/s
[info] Iteration   1: 1758248.654 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1755258.087 ops/s
[info]                  ·gc.alloc.rate:      1.111 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.996 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1758097.420 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1677725.297 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1751733.093 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1740212.510 ±(99.9%) 134895.117 ops/s [Average]
[info]   (min, avg, max) = (1677725.297, 1740212.510, 1758248.654), stdev = 35031.834
[info]   CI (99.9%): [1605317.393, 1875107.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.222 ±(99.9%) 1.912 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.222, 1.111), stdev = 0.497
[info]   CI (99.9%): [≈ 0, 2.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.199 ±(99.9%) 1.714 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.199, 0.996), stdev = 0.445
[info]   CI (99.9%): [≈ 0, 1.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31824.808 ops/s
[info] # Warmup Iteration   2: 313689.497 ops/s
[info] # Warmup Iteration   3: 326717.070 ops/s
[info] Iteration   1: 360205.895 ops/s
[info]                  ·gc.alloc.rate:                   2276.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              9940.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10043.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.475 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 368221.588 ops/s
[info]                  ·gc.alloc.rate:                   2316.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              9897.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9872.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.712 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 369750.686 ops/s
[info]                  ·gc.alloc.rate:                   2351.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              10005.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9914.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 369755.806 ops/s
[info]                  ·gc.alloc.rate:                   2345.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              9980.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8566.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 365346.914 ops/s
[info]                  ·gc.alloc.rate:                   2339.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              10073.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2361.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10169.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   366656.178 ±(99.9%) 15517.008 ops/s [Average]
[info]   (min, avg, max) = (360205.895, 366656.178, 369755.806), stdev = 4029.718
[info]   CI (99.9%): [351139.170, 382173.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2325.716 ±(99.9%) 118.319 MB/sec [Average]
[info]   (min, avg, max) = (2276.192, 2325.716, 2351.488), stdev = 30.727
[info]   CI (99.9%): [2207.397, 2444.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9979.674 ±(99.9%) 256.670 B/op [Average]
[info]   (min, avg, max) = (9897.921, 9979.674, 10073.991), stdev = 66.656
[info]   CI (99.9%): [9723.004, 10236.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2262.930 ±(99.9%) 546.115 MB/sec [Average]
[info]   (min, avg, max) = (2012.790, 2262.930, 2361.902), stdev = 141.824
[info]   CI (99.9%): [1716.815, 2809.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9713.190 ±(99.9%) 2509.362 B/op [Average]
[info]   (min, avg, max) = (8566.181, 9713.190, 10169.636), stdev = 651.673
[info]   CI (99.9%): [7203.828, 12222.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.488 ±(99.9%) 3.627 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.488, 2.170), stdev = 0.942
[info]   CI (99.9%): [≈ 0, 4.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.126 ±(99.9%) 15.849 B/op [Average]
[info]   (min, avg, max) = (0.089, 2.126, 9.475), stdev = 4.116
[info]   CI (99.9%): [≈ 0, 17.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.483
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16645.306 ops/s
[info] # Warmup Iteration   2: 39966.700 ops/s
[info] # Warmup Iteration   3: 74062.203 ops/s
[info] Iteration   1: 79388.847 ops/s
[info]                  ·gc.alloc.rate:                   2010.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              39844.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38365.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.836 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 84904.064 ops/s
[info]                  ·gc.alloc.rate:                   1892.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              35065.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35675.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.630 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 84753.405 ops/s
[info]                  ·gc.alloc.rate:                   1713.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              31816.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1605.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29814.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.933 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 84773.179 ops/s
[info]                  ·gc.alloc.rate:                   1709.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              31739.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30058.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 84330.650 ops/s
[info]                  ·gc.alloc.rate:                   1714.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              31997.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30552.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   83630.029 ±(99.9%) 9167.126 ops/s [Average]
[info]   (min, avg, max) = (79388.847, 83630.029, 84904.064), stdev = 2380.674
[info]   CI (99.9%): [74462.902, 92797.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1807.990 ±(99.9%) 528.651 MB/sec [Average]
[info]   (min, avg, max) = (1709.538, 1807.990, 2010.118), stdev = 137.289
[info]   CI (99.9%): [1279.339, 2336.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34092.453 ±(99.9%) 13496.751 B/op [Average]
[info]   (min, avg, max) = (31739.013, 34092.453, 39844.472), stdev = 3505.063
[info]   CI (99.9%): [20595.703, 47589.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1744.504 ±(99.9%) 655.188 MB/sec [Average]
[info]   (min, avg, max) = (1605.491, 1744.504, 1935.486), stdev = 170.150
[info]   CI (99.9%): [1089.316, 2399.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   32893.195 ±(99.9%) 14997.143 B/op [Average]
[info]   (min, avg, max) = (29814.395, 32893.195, 38365.113), stdev = 3894.711
[info]   CI (99.9%): [17896.052, 47890.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.110 ±(99.9%) 16.542 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.110, 9.123), stdev = 4.296
[info]   CI (99.9%): [≈ 0, 19.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   59.990 ±(99.9%) 322.646 B/op [Average]
[info]   (min, avg, max) = (0.773, 59.990, 180.836), stdev = 83.790
[info]   CI (99.9%): [≈ 0, 382.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.600, 24.000), stdev = 7.232
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12748.632 ops/s
[info] # Warmup Iteration   2: 63352.811 ops/s
[info] # Warmup Iteration   3: 90583.965 ops/s
[info] Iteration   1: 96589.646 ops/s
[info]                  ·gc.alloc.rate:                   1616.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              26340.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26398.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.570 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 95159.381 ops/s
[info]                  ·gc.alloc.rate:                   1413.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              23376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21523.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 82729.173 ops/s
[info]                  ·gc.alloc.rate:                   1333.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              25376.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24877.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.976 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 90058.347 ops/s
[info]                  ·gc.alloc.rate:                   1161.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              20295.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17177.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 87614.511 ops/s
[info]                  ·gc.alloc.rate:                   1146.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              20588.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23562.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.496 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   90430.212 ±(99.9%) 21754.956 ops/s [Average]
[info]   (min, avg, max) = (82729.173, 90430.212, 96589.646), stdev = 5649.693
[info]   CI (99.9%): [68675.255, 112185.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1334.350 ±(99.9%) 748.373 MB/sec [Average]
[info]   (min, avg, max) = (1146.516, 1334.350, 1616.532), stdev = 194.350
[info]   CI (99.9%): [585.977, 2082.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   23195.287 ±(99.9%) 10525.547 B/op [Average]
[info]   (min, avg, max) = (20295.338, 23195.287, 26340.647), stdev = 2733.451
[info]   CI (99.9%): [12669.740, 33720.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1304.855 ±(99.9%) 867.624 MB/sec [Average]
[info]   (min, avg, max) = (982.958, 1304.855, 1620.109), stdev = 225.319
[info]   CI (99.9%): [437.231, 2172.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22707.858 ±(99.9%) 13755.961 B/op [Average]
[info]   (min, avg, max) = (17177.461, 22707.858, 26398.932), stdev = 3572.379
[info]   CI (99.9%): [8951.896, 36463.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.062 ±(99.9%) 7.450 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.062, 4.414), stdev = 1.935
[info]   CI (99.9%): [≈ 0, 9.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   36.197 ±(99.9%) 136.481 B/op [Average]
[info]   (min, avg, max) = (0.728, 36.197, 83.976), stdev = 35.444
[info]   CI (99.9%): [≈ 0, 172.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 15.000), stdev = 4.207
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36402.067 ops/s
[info] # Warmup Iteration   2: 84916.437 ops/s
[info] # Warmup Iteration   3: 98968.251 ops/s
[info] Iteration   1: 98443.513 ops/s
[info]                  ·gc.alloc.rate:                   1591.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              25442.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1570.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25103.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.444 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.067 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 102087.260 ops/s
[info]                  ·gc.alloc.rate:                   1254.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              19340.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1254.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19328.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129.461 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 103761.592 ops/s
[info]                  ·gc.alloc.rate:                   1287.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              19526.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1245.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18894.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.526 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 104050.067 ops/s
[info]                  ·gc.alloc.rate:                   1285.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              19448.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1243.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18816.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 102794.238 ops/s
[info]                  ·gc.alloc.rate:                   1264.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              19352.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19241.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.319 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   102227.334 ±(99.9%) 8682.029 ops/s [Average]
[info]   (min, avg, max) = (98443.513, 102227.334, 104050.067), stdev = 2254.695
[info]   CI (99.9%): [93545.305, 110909.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1336.704 ±(99.9%) 550.763 MB/sec [Average]
[info]   (min, avg, max) = (1254.906, 1336.704, 1591.352), stdev = 143.031
[info]   CI (99.9%): [785.941, 1887.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20622.034 ±(99.9%) 10380.543 B/op [Average]
[info]   (min, avg, max) = (19340.428, 20622.034, 25442.505), stdev = 2695.794
[info]   CI (99.9%): [10241.490, 31002.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1314.170 ±(99.9%) 551.384 MB/sec [Average]
[info]   (min, avg, max) = (1243.978, 1314.170, 1570.134), stdev = 143.193
[info]   CI (99.9%): [762.785, 1865.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20276.861 ±(99.9%) 10423.322 B/op [Average]
[info]   (min, avg, max) = (18816.151, 20276.861, 25103.284), stdev = 2706.904
[info]   CI (99.9%): [9853.539, 30700.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.423 ±(99.9%) 14.030 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.423, 8.400), stdev = 3.644
[info]   CI (99.9%): [≈ 0, 16.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   37.726 ±(99.9%) 216.837 B/op [Average]
[info]   (min, avg, max) = (0.319, 37.726, 129.461), stdev = 56.312
[info]   CI (99.9%): [≈ 0, 254.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 13.400, 33.000), stdev = 12.012
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3581.482 ops/s
[info] # Warmup Iteration   2: 27706.527 ops/s
[info] # Warmup Iteration   3: 56859.228 ops/s
[info] Iteration   1: 52560.290 ops/s
[info]                  ·gc.alloc.rate:                   2394.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              71666.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2608.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78075.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.857 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 62484.752 ops/s
[info]                  ·gc.alloc.rate:                   2448.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              61677.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58216.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.771 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 60787.503 ops/s
[info]                  ·gc.alloc.rate:                   2391.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              61906.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2328.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60272.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.234 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 60708.026 ops/s
[info]                  ·gc.alloc.rate:                   2387.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              61886.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2347.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60840.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.159 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 61181.174 ops/s
[info]                  ·gc.alloc.rate:               2433.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          62582.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2360.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60716.231 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   59544.349 ±(99.9%) 15281.990 ops/s [Average]
[info]   (min, avg, max) = (52560.290, 59544.349, 62484.752), stdev = 3968.684
[info]   CI (99.9%): [44262.359, 74826.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2411.112 ±(99.9%) 107.950 MB/sec [Average]
[info]   (min, avg, max) = (2387.504, 2411.112, 2448.824), stdev = 28.034
[info]   CI (99.9%): [2303.162, 2519.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63943.874 ±(99.9%) 16674.736 B/op [Average]
[info]   (min, avg, max) = (61677.539, 63943.874, 71666.279), stdev = 4330.376
[info]   CI (99.9%): [47269.138, 80618.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2391.248 ±(99.9%) 472.976 MB/sec [Average]
[info]   (min, avg, max) = (2311.425, 2391.248, 2608.409), stdev = 122.830
[info]   CI (99.9%): [1918.272, 2864.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63624.335 ±(99.9%) 31372.545 B/op [Average]
[info]   (min, avg, max) = (58216.934, 63624.335, 78075.478), stdev = 8147.350
[info]   CI (99.9%): [32251.790, 94996.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.747 ±(99.9%) 3.671 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.747, 2.067), stdev = 0.953
[info]   CI (99.9%): [≈ 0, 4.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.804 ±(99.9%) 105.971 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.804, 61.857), stdev = 27.520
[info]   CI (99.9%): [≈ 0, 126.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 17.000), stdev = 3.050
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38812.908 ops/s
[info] # Warmup Iteration   2: 127390.402 ops/s
[info] # Warmup Iteration   3: 150181.455 ops/s
[info] Iteration   1: 157287.614 ops/s
[info]                  ·gc.alloc.rate:                   1474.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              14756.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16238.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.128 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 156468.239 ops/s
[info]                  ·gc.alloc.rate:                   1476.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              14854.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13116.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.397 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 158090.239 ops/s
[info]                  ·gc.alloc.rate:                   1484.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              14772.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16331.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 158389.173 ops/s
[info]                  ·gc.alloc.rate:                   1490.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              14809.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13138.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 158068.791 ops/s
[info]                  ·gc.alloc.rate:               1494.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          14877.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1330.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13245.877 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   157660.811 ±(99.9%) 3009.217 ops/s [Average]
[info]   (min, avg, max) = (156468.239, 157660.811, 158389.173), stdev = 781.484
[info]   CI (99.9%): [154651.594, 160670.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1484.144 ±(99.9%) 32.657 MB/sec [Average]
[info]   (min, avg, max) = (1474.749, 1484.144, 1494.502), stdev = 8.481
[info]   CI (99.9%): [1451.487, 1516.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14814.247 ±(99.9%) 200.422 B/op [Average]
[info]   (min, avg, max) = (14756.290, 14814.247, 14877.985), stdev = 52.049
[info]   CI (99.9%): [14613.825, 15014.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1444.125 ±(99.9%) 661.250 MB/sec [Average]
[info]   (min, avg, max) = (1304.129, 1444.125, 1640.759), stdev = 171.724
[info]   CI (99.9%): [782.875, 2105.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14414.393 ±(99.9%) 6580.007 B/op [Average]
[info]   (min, avg, max) = (13116.749, 14414.393, 16331.875), stdev = 1708.807
[info]   CI (99.9%): [7834.386, 20994.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.287 ±(99.9%) 1.512 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.287, 0.912), stdev = 0.393
[info]   CI (99.9%): [≈ 0, 1.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.871 ±(99.9%) 15.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.871, 9.128), stdev = 3.933
[info]   CI (99.9%): [≈ 0, 18.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89507.375 ops/s
[info] # Warmup Iteration   2: 328768.990 ops/s
[info] # Warmup Iteration   3: 347722.846 ops/s
[info] Iteration   1: 396123.144 ops/s
[info]                  ·gc.alloc.rate:                   499.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1270.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 384167.104 ops/s
[info]                  ·gc.alloc.rate:               496.849 MB/sec
[info]                  ·gc.alloc.rate.norm:          2034.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:      641.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2625.466 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 398380.491 ops/s
[info]                  ·gc.alloc.rate:                   503.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              1986.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1269.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 393054.273 ops/s
[info]                  ·gc.alloc.rate:               510.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          2045.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2579.414 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 393772.724 ops/s
[info]                  ·gc.alloc.rate:               514.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          2056.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1290.081 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   393099.547 ±(99.9%) 20849.935 ops/s [Average]
[info]   (min, avg, max) = (384167.104, 393099.547, 398380.491), stdev = 5414.662
[info]   CI (99.9%): [372249.612, 413949.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   504.976 ±(99.9%) 29.258 MB/sec [Average]
[info]   (min, avg, max) = (496.849, 504.976, 514.693), stdev = 7.598
[info]   CI (99.9%): [475.717, 534.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2021.581 ±(99.9%) 131.058 B/op [Average]
[info]   (min, avg, max) = (1984.027, 2021.581, 2056.932), stdev = 34.035
[info]   CI (99.9%): [1890.523, 2152.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.888 ±(99.9%) 677.679 MB/sec [Average]
[info]   (min, avg, max) = (319.773, 449.888, 644.322), stdev = 175.991
[info]   CI (99.9%): [≈ 0, 1127.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1807.034 ±(99.9%) 2796.844 B/op [Average]
[info]   (min, avg, max) = (1269.787, 1807.034, 2625.466), stdev = 726.332
[info]   CI (99.9%): [≈ 0, 4603.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:38:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 601195.501 ops/s
[info] # Warmup Iteration   2: 956734.404 ops/s
[info] # Warmup Iteration   3: 1036278.782 ops/s
[info] Iteration   1: 1025392.973 ops/s
[info]                  ·gc.alloc.rate:                   1308.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              2007.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2024.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.605 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1036867.331 ops/s
[info]                  ·gc.alloc.rate:                   1330.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              2018.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1995.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.801 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1052746.748 ops/s
[info]                  ·gc.alloc.rate:                   1346.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              2012.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1956.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1055536.031 ops/s
[info]                  ·gc.alloc.rate:                   1349.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              2010.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1953.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1051963.387 ops/s
[info]                  ·gc.alloc.rate:                   1350.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              2020.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1970.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   1044501.294 ±(99.9%) 49792.605 ops/s [Average]
[info]   (min, avg, max) = (1025392.973, 1044501.294, 1055536.031), stdev = 12930.981
[info]   CI (99.9%): [994708.689, 1094293.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1336.920 ±(99.9%) 69.152 MB/sec [Average]
[info]   (min, avg, max) = (1308.172, 1336.920, 1350.445), stdev = 17.958
[info]   CI (99.9%): [1267.769, 1406.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2014.017 ±(99.9%) 20.910 B/op [Average]
[info]   (min, avg, max) = (2007.531, 2014.017, 2020.379), stdev = 5.430
[info]   CI (99.9%): [1993.108, 2034.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1314.200 ±(99.9%) 16.409 MB/sec [Average]
[info]   (min, avg, max) = (1309.210, 1314.200, 1319.238), stdev = 4.261
[info]   CI (99.9%): [1297.791, 1330.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1980.099 ±(99.9%) 114.909 B/op [Average]
[info]   (min, avg, max) = (1953.228, 1980.099, 2024.513), stdev = 29.842
[info]   CI (99.9%): [1865.189, 2095.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.863 ±(99.9%) 4.984 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.863, 3.001), stdev = 1.294
[info]   CI (99.9%): [≈ 0, 5.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.319 ±(99.9%) 7.646 B/op [Average]
[info]   (min, avg, max) = (0.031, 1.319, 4.605), stdev = 1.986
[info]   CI (99.9%): [≈ 0, 8.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 15.000), stdev = 4.219
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 468376.274 ops/s
[info] # Warmup Iteration   2: 1068893.079 ops/s
[info] # Warmup Iteration   3: 1138666.491 ops/s
[info] Iteration   1: 1138551.400 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1144402.536 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1122931.023 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1136039.885 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1143258.445 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   1137036.658 ±(99.9%) 33081.029 ops/s [Average]
[info]   (min, avg, max) = (1122931.023, 1137036.658, 1144402.536), stdev = 8591.038
[info]   CI (99.9%): [1103955.629, 1170117.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58980.229 ops/s
[info] # Warmup Iteration   2: 159510.458 ops/s
[info] # Warmup Iteration   3: 224609.702 ops/s
[info] Iteration   1: 310834.017 ops/s
[info]                  ·gc.alloc.rate:               936.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          4739.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:      637.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3227.976 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 314463.931 ops/s
[info]                  ·gc.alloc.rate:                   969.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              4852.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          957.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4787.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.636 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 312436.720 ops/s
[info]                  ·gc.alloc.rate:                   951.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              4788.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          958.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4825.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 314971.360 ops/s
[info]                  ·gc.alloc.rate:                   965.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              4824.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4799.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 316841.578 ops/s
[info]                  ·gc.alloc.rate:                   962.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              4782.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4771.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.239 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   313909.521 ±(99.9%) 8960.445 ops/s [Average]
[info]   (min, avg, max) = (310834.017, 313909.521, 316841.578), stdev = 2326.999
[info]   CI (99.9%): [304949.076, 322869.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   957.187 ±(99.9%) 52.634 MB/sec [Average]
[info]   (min, avg, max) = (936.202, 957.187, 969.928), stdev = 13.669
[info]   CI (99.9%): [904.553, 1009.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4797.523 ±(99.9%) 165.400 B/op [Average]
[info]   (min, avg, max) = (4739.605, 4797.523, 4852.265), stdev = 42.954
[info]   CI (99.9%): [4632.124, 4962.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   894.928 ±(99.9%) 553.922 MB/sec [Average]
[info]   (min, avg, max) = (637.614, 894.928, 960.900), stdev = 143.852
[info]   CI (99.9%): [341.005, 1448.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4482.556 ±(99.9%) 2701.642 B/op [Average]
[info]   (min, avg, max) = (3227.976, 4482.556, 4825.513), stdev = 701.608
[info]   CI (99.9%): [1780.914, 7184.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.059 ±(99.9%) 4.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.059, 2.666), stdev = 1.205
[info]   CI (99.9%): [≈ 0, 5.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.276 ±(99.9%) 23.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.276, 13.239), stdev = 5.992
[info]   CI (99.9%): [≈ 0, 28.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 11.000), stdev = 2.345
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21630.220 ops/s
[info] # Warmup Iteration   2: 91517.625 ops/s
[info] # Warmup Iteration   3: 135964.372 ops/s
[info] Iteration   1: 139968.538 ops/s
[info]                  ·gc.alloc.rate:                   2108.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              23708.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21768.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.100 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 141997.081 ops/s
[info]                  ·gc.alloc.rate:                   1769.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              19607.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1614.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17883.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.884 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 141076.570 ops/s
[info]                  ·gc.alloc.rate:                   1775.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              19810.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21626.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.828 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 142769.836 ops/s
[info]                  ·gc.alloc.rate:                   1786.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              19682.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17838.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.689 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 143128.825 ops/s
[info]                  ·gc.alloc.rate:                   1791.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              19691.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17920.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   141788.170 ±(99.9%) 4954.517 ops/s [Average]
[info]   (min, avg, max) = (139968.538, 141788.170, 143128.825), stdev = 1286.672
[info]   CI (99.9%): [136833.653, 146742.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1846.248 ±(99.9%) 565.272 MB/sec [Average]
[info]   (min, avg, max) = (1769.570, 1846.248, 2108.410), stdev = 146.799
[info]   CI (99.9%): [1280.977, 2411.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20500.072 ±(99.9%) 6911.400 B/op [Average]
[info]   (min, avg, max) = (19607.617, 20500.072, 23708.187), stdev = 1794.869
[info]   CI (99.9%): [13588.672, 27411.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1747.506 ±(99.9%) 667.297 MB/sec [Average]
[info]   (min, avg, max) = (1614.003, 1747.506, 1938.544), stdev = 173.295
[info]   CI (99.9%): [1080.209, 2414.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19407.627 ±(99.9%) 8051.987 B/op [Average]
[info]   (min, avg, max) = (17838.820, 19407.627, 21768.552), stdev = 2091.075
[info]   CI (99.9%): [11355.640, 27459.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.049 ±(99.9%) 10.050 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.049, 6.323), stdev = 2.610
[info]   CI (99.9%): [≈ 0, 12.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.946 ±(99.9%) 113.037 B/op [Average]
[info]   (min, avg, max) = (0.229, 22.946, 71.100), stdev = 29.355
[info]   CI (99.9%): [≈ 0, 135.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.400, 28.000), stdev = 8.820
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53337.867 ops/s
[info] # Warmup Iteration   2: 174183.161 ops/s
[info] # Warmup Iteration   3: 178665.066 ops/s
[info] Iteration   1: 214310.827 ops/s
[info]                  ·gc.alloc.rate:                   1220.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              8965.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1282.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9421.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 215330.427 ops/s
[info]                  ·gc.alloc.rate:               1227.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          8973.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:      964.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7050.363 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 214671.442 ops/s
[info]                  ·gc.alloc.rate:                   1223.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              8968.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9479.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.763 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 216768.929 ops/s
[info]                  ·gc.alloc.rate:                   1227.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              8911.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9440.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 214182.641 ops/s
[info]                  ·gc.alloc.rate:                   1218.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              8951.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9541.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.152 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   215052.853 ±(99.9%) 4073.005 ops/s [Average]
[info]   (min, avg, max) = (214182.641, 215052.853, 216768.929), stdev = 1057.746
[info]   CI (99.9%): [210979.848, 219125.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1223.603 ±(99.9%) 16.078 MB/sec [Average]
[info]   (min, avg, max) = (1218.333, 1223.603, 1227.804), stdev = 4.175
[info]   CI (99.9%): [1207.525, 1239.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8954.024 ±(99.9%) 98.003 B/op [Average]
[info]   (min, avg, max) = (8911.105, 8954.024, 8973.999), stdev = 25.451
[info]   CI (99.9%): [8856.020, 9052.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1228.015 ±(99.9%) 567.605 MB/sec [Average]
[info]   (min, avg, max) = (964.616, 1228.015, 1300.657), stdev = 147.405
[info]   CI (99.9%): [660.410, 1795.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8986.881 ±(99.9%) 4172.223 B/op [Average]
[info]   (min, avg, max) = (7050.363, 8986.881, 9541.673), stdev = 1083.513
[info]   CI (99.9%): [4814.658, 13159.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.996 ±(99.9%) 5.480 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.996, 3.329), stdev = 1.423
[info]   CI (99.9%): [≈ 0, 6.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.261 ±(99.9%) 39.799 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.261, 24.162), stdev = 10.336
[info]   CI (99.9%): [≈ 0, 47.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.702
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:37:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 189285.959 ops/s
[info] # Warmup Iteration   2: 561540.823 ops/s
[info] # Warmup Iteration   3: 608213.295 ops/s
[info] Iteration   1: 631788.949 ops/s
[info]                  ·gc.alloc.rate:               419.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          1043.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 814.828 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 629783.674 ops/s
[info]                  ·gc.alloc.rate:               424.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          1059.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 817.427 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 621399.343 ops/s
[info]                  ·gc.alloc.rate:               425.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          1077.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1656.862 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 631113.768 ops/s
[info]                  ·gc.alloc.rate:                   422.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              1054.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 621384.098 ops/s
[info]                  ·gc.alloc.rate:                   416.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              1054.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   627093.966 ±(99.9%) 20235.815 ops/s [Average]
[info]   (min, avg, max) = (621384.098, 627093.966, 631788.949), stdev = 5255.177
[info]   CI (99.9%): [606858.152, 647329.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   421.553 ±(99.9%) 14.625 MB/sec [Average]
[info]   (min, avg, max) = (416.251, 421.553, 425.568), stdev = 3.798
[info]   CI (99.9%): [406.928, 436.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1057.966 ±(99.9%) 48.106 B/op [Average]
[info]   (min, avg, max) = (1043.901, 1057.966, 1077.903), stdev = 12.493
[info]   CI (99.9%): [1009.861, 1106.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   392.595 ±(99.9%) 563.011 MB/sec [Average]
[info]   (min, avg, max) = (327.073, 392.595, 654.147), stdev = 146.212
[info]   CI (99.9%): [≈ 0, 955.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   986.812 ±(99.9%) 1442.508 B/op [Average]
[info]   (min, avg, max) = (814.828, 986.812, 1656.862), stdev = 374.615
[info]   CI (99.9%): [≈ 0, 2429.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.078), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1136.532 ops/s
[info] # Warmup Iteration   2: 56461.412 ops/s
[info] # Warmup Iteration   3: 94117.846 ops/s
[info] Iteration   1: 97041.932 ops/s
[info]                  ·gc.alloc.rate:                   3213.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              52120.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3281.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53221.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.443 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 98293.073 ops/s
[info]                  ·gc.alloc.rate:                   3367.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              53901.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3317.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53097.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.555 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 99271.976 ops/s
[info]                  ·gc.alloc.rate:                   3131.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              49645.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3005.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47644.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.650 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 98682.714 ops/s
[info]                  ·gc.alloc.rate:                   3154.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              50302.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3028.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48303.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.328 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 96168.657 ops/s
[info]                  ·gc.alloc.rate:                   3084.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              50475.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3046.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49846.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   97891.670 ±(99.9%) 4864.229 ops/s [Average]
[info]   (min, avg, max) = (96168.657, 97891.670, 99271.976), stdev = 1263.225
[info]   CI (99.9%): [93027.441, 102755.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3190.214 ±(99.9%) 421.217 MB/sec [Average]
[info]   (min, avg, max) = (3084.458, 3190.214, 3367.342), stdev = 109.389
[info]   CI (99.9%): [2768.996, 3611.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51289.132 ±(99.9%) 6629.542 B/op [Average]
[info]   (min, avg, max) = (49645.486, 51289.132, 53901.968), stdev = 1721.671
[info]   CI (99.9%): [44659.589, 57918.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3135.744 ±(99.9%) 579.653 MB/sec [Average]
[info]   (min, avg, max) = (3005.216, 3135.744, 3317.057), stdev = 150.534
[info]   CI (99.9%): [2556.091, 3715.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50422.709 ±(99.9%) 10101.262 B/op [Average]
[info]   (min, avg, max) = (47644.784, 50422.709, 53221.833), stdev = 2623.266
[info]   CI (99.9%): [40321.447, 60523.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.964 ±(99.9%) 4.685 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.964, 2.346), stdev = 1.217
[info]   CI (99.9%): [≈ 0, 5.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.532 ±(99.9%) 75.488 B/op [Average]
[info]   (min, avg, max) = (0.681, 15.532, 37.555), stdev = 19.604
[info]   CI (99.9%): [≈ 0, 91.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.600, 17.000), stdev = 1.817
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42255.309 ops/s
[info] # Warmup Iteration   2: 208924.947 ops/s
[info] # Warmup Iteration   3: 217505.017 ops/s
[info] Iteration   1: 230044.684 ops/s
[info]                  ·gc.alloc.rate:                   1452.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              9939.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8941.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 230401.030 ops/s
[info]                  ·gc.alloc.rate:                   1468.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              10025.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8873.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.688 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 232724.274 ops/s
[info]                  ·gc.alloc.rate:                   1478.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              9994.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10977.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 230969.712 ops/s
[info]                  ·gc.alloc.rate:                   1457.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              9929.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8892.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 229696.850 ops/s
[info]                  ·gc.alloc.rate:                   1476.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              10111.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9010.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   230767.310 ±(99.9%) 4585.706 ops/s [Average]
[info]   (min, avg, max) = (229696.850, 230767.310, 232724.274), stdev = 1190.893
[info]   CI (99.9%): [226181.604, 235353.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1466.623 ±(99.9%) 42.993 MB/sec [Average]
[info]   (min, avg, max) = (1452.857, 1466.623, 1478.253), stdev = 11.165
[info]   CI (99.9%): [1423.630, 1509.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10000.126 ±(99.9%) 283.686 B/op [Average]
[info]   (min, avg, max) = (9929.313, 10000.126, 10111.189), stdev = 73.672
[info]   CI (99.9%): [9716.440, 10283.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1370.198 ±(99.9%) 545.842 MB/sec [Average]
[info]   (min, avg, max) = (1299.629, 1370.198, 1623.575), stdev = 141.754
[info]   CI (99.9%): [824.355, 1916.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9339.171 ±(99.9%) 3531.718 B/op [Average]
[info]   (min, avg, max) = (8873.781, 9339.171, 10977.153), stdev = 917.176
[info]   CI (99.9%): [5807.453, 12870.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.894 ±(99.9%) 5.832 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.894, 3.531), stdev = 1.515
[info]   CI (99.9%): [≈ 0, 6.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.111 ±(99.9%) 39.902 B/op [Average]
[info]   (min, avg, max) = (0.142, 6.111, 24.159), stdev = 10.362
[info]   CI (99.9%): [≈ 0, 46.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 15.000), stdev = 4.159
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 163412.647 ops/s
[info] # Warmup Iteration   2: 685539.624 ops/s
[info] # Warmup Iteration   3: 787599.948 ops/s
[info] Iteration   1: 785746.054 ops/s
[info]                  ·gc.alloc.rate:                   598.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1286.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 786852.118 ops/s
[info]                  ·gc.alloc.rate:                   602.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              1205.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1286.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 778899.714 ops/s
[info]                  ·gc.alloc.rate:               599.599 MB/sec
[info]                  ·gc.alloc.rate.norm:          1210.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1303.007 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 785303.778 ops/s
[info]                  ·gc.alloc.rate:                   598.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1200.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1296.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 786726.856 ops/s
[info]                  ·gc.alloc.rate:                   592.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              1184.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     648.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   784705.704 ±(99.9%) 12748.145 ops/s [Average]
[info]   (min, avg, max) = (778899.714, 784705.704, 786852.118), stdev = 3310.653
[info]   CI (99.9%): [771957.560, 797453.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   598.487 ±(99.9%) 15.337 MB/sec [Average]
[info]   (min, avg, max) = (592.021, 598.487, 602.961), stdev = 3.983
[info]   CI (99.9%): [583.149, 613.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1200.006 ±(99.9%) 38.991 B/op [Average]
[info]   (min, avg, max) = (1184.029, 1200.006, 1210.984), stdev = 10.126
[info]   CI (99.9%): [1161.015, 1238.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.426 ±(99.9%) 551.616 MB/sec [Average]
[info]   (min, avg, max) = (324.186, 580.426, 646.997), stdev = 143.253
[info]   CI (99.9%): [28.810, 1132.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1164.118 ±(99.9%) 1110.527 B/op [Average]
[info]   (min, avg, max) = (648.366, 1164.118, 1303.007), stdev = 288.400
[info]   CI (99.9%): [53.590, 2274.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.043 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.027), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.085 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.054), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638204.507 ops/s
[info] # Warmup Iteration   2: 1283401.128 ops/s
[info] # Warmup Iteration   3: 1408043.574 ops/s
[info] Iteration   1: 1394864.731 ops/s
[info]                  ·gc.alloc.rate:               1066.830 MB/sec
[info]                  ·gc.alloc.rate.norm:          1203.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1113.552 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 1413966.563 ops/s
[info]                  ·gc.alloc.rate:                   1078.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1100.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.803 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1414575.970 ops/s
[info]                  ·gc.alloc.rate:                   1082.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              1204.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1097.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.297 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1373819.541 ops/s
[info]                  ·gc.alloc.rate:                   1065.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              1221.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1394972.104 ops/s
[info]                  ·gc.alloc.rate:                   1066.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              1202.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1107.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1398439.782 ±(99.9%) 64789.860 ops/s [Average]
[info]   (min, avg, max) = (1373819.541, 1398439.782, 1414575.970), stdev = 16825.721
[info]   CI (99.9%): [1333649.922, 1463229.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1072.071 ±(99.9%) 30.156 MB/sec [Average]
[info]   (min, avg, max) = (1065.907, 1072.071, 1082.661), stdev = 7.831
[info]   CI (99.9%): [1041.915, 1102.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1206.457 ±(99.9%) 32.297 B/op [Average]
[info]   (min, avg, max) = (1199.988, 1206.457, 1221.146), stdev = 8.388
[info]   CI (99.9%): [1174.159, 1238.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.047 ±(99.9%) 13.005 MB/sec [Average]
[info]   (min, avg, max) = (981.233, 985.047, 988.758), stdev = 3.377
[info]   CI (99.9%): [972.042, 998.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1108.562 ±(99.9%) 41.121 B/op [Average]
[info]   (min, avg, max) = (1097.643, 1108.562, 1124.140), stdev = 10.679
[info]   CI (99.9%): [1067.441, 1149.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.810 ±(99.9%) 4.691 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.810, 2.803), stdev = 1.218
[info]   CI (99.9%): [≈ 0, 5.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.902 ±(99.9%) 5.219 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.902, 3.119), stdev = 1.355
[info]   CI (99.9%): [≈ 0, 6.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.674
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 800588.938 ops/s
[info] # Warmup Iteration   2: 1288373.157 ops/s
[info] # Warmup Iteration   3: 1528448.586 ops/s
[info] Iteration   1: 1529018.055 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1528563.537 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1528777.785 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1528692.321 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1529947.630 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1528999.866 ±(99.9%) 2137.778 ops/s [Average]
[info]   (min, avg, max) = (1528563.537, 1528999.866, 1529947.630), stdev = 555.174
[info]   CI (99.9%): [1526862.087, 1531137.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59943.749 ops/s
[info] # Warmup Iteration   2: 498792.294 ops/s
[info] # Warmup Iteration   3: 555103.508 ops/s
[info] Iteration   1: 619145.168 ops/s
[info]                  ·gc.alloc.rate:                   1520.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              3866.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3329.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 614741.119 ops/s
[info]                  ·gc.alloc.rate:                   1503.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              3846.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4210.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.743 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 616059.791 ops/s
[info]                  ·gc.alloc.rate:                   1498.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              3827.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3369.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 614483.002 ops/s
[info]                  ·gc.alloc.rate:               1502.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          3845.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1655.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4236.729 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 621963.838 ops/s
[info]                  ·gc.alloc.rate:                   1532.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              3877.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3373.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   617278.584 ±(99.9%) 12354.388 ops/s [Average]
[info]   (min, avg, max) = (614483.002, 617278.584, 621963.838), stdev = 3208.395
[info]   CI (99.9%): [604924.196, 629632.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1511.402 ±(99.9%) 56.233 MB/sec [Average]
[info]   (min, avg, max) = (1498.242, 1511.402, 1532.361), stdev = 14.604
[info]   CI (99.9%): [1455.169, 1567.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3852.584 ±(99.9%) 74.911 B/op [Average]
[info]   (min, avg, max) = (3827.063, 3852.584, 3877.139), stdev = 19.454
[info]   CI (99.9%): [3777.673, 3927.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1452.528 ±(99.9%) 695.783 MB/sec [Average]
[info]   (min, avg, max) = (1309.693, 1452.528, 1655.113), stdev = 180.693
[info]   CI (99.9%): [756.745, 2148.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3703.994 ±(99.9%) 1828.722 B/op [Average]
[info]   (min, avg, max) = (3329.135, 3703.994, 4236.729), stdev = 474.913
[info]   CI (99.9%): [1875.271, 5532.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.391 ±(99.9%) 3.148 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 1.853), stdev = 0.817
[info]   CI (99.9%): [≈ 0, 3.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.002 ±(99.9%) 8.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.002, 4.743), stdev = 2.092
[info]   CI (99.9%): [≈ 0, 9.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.414
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133.488 ops/s
[info] # Warmup Iteration   2: 466.504 ops/s
[info] # Warmup Iteration   3: 815.699 ops/s
[info] Iteration   1: 921.576 ops/s
[info]                  ·gc.alloc.rate:                   1985.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              3389637.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1914.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3268554.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1812.547 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 921.555 ops/s
[info]                  ·gc.alloc.rate:                   1969.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              3361877.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3274241.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.128 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3631.792 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 921.549 ops/s
[info]                  ·gc.alloc.rate:                   1974.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              3371007.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3277652.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3606.508 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 942.260 ops/s
[info]                  ·gc.alloc.rate:                   2038.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              3403858.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1928.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3219117.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.749 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 892.739 ops/s
[info]                  ·gc.alloc.rate:                   2002.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528997.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3446327.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1637.680 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   919.936 ±(99.9%) 67.961 ops/s [Average]
[info]   (min, avg, max) = (892.739, 919.936, 942.260), stdev = 17.649
[info]   CI (99.9%): [851.975, 987.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1994.074 ±(99.9%) 108.113 MB/sec [Average]
[info]   (min, avg, max) = (1969.535, 1994.074, 2038.866), stdev = 28.077
[info]   CI (99.9%): [1885.961, 2102.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3411075.532 ±(99.9%) 261469.190 B/op [Average]
[info]   (min, avg, max) = (3361877.093, 3411075.532, 3528997.214), stdev = 67902.718
[info]   CI (99.9%): [3149606.343, 3672544.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1927.174 ±(99.9%) 63.996 MB/sec [Average]
[info]   (min, avg, max) = (1914.572, 1927.174, 1955.520), stdev = 16.620
[info]   CI (99.9%): [1863.178, 1991.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3297178.716 ±(99.9%) 333840.601 B/op [Average]
[info]   (min, avg, max) = (3219117.200, 3297178.716, 3446327.615), stdev = 86697.344
[info]   CI (99.9%): [2963338.114, 3631019.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.250 ±(99.9%) 3.424 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.250, 2.128), stdev = 0.889
[info]   CI (99.9%): [≈ 0, 4.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2144.655 ±(99.9%) 5829.503 B/op [Average]
[info]   (min, avg, max) = (34.749, 2144.655, 3631.792), stdev = 1513.903
[info]   CI (99.9%): [≈ 0, 7974.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.600, 24.000), stdev = 6.914
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159.876 ops/s
[info] # Warmup Iteration   2: 597.895 ops/s
[info] # Warmup Iteration   3: 911.108 ops/s
[info] Iteration   1: 952.330 ops/s
[info]                  ·gc.alloc.rate:                   2037.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364195.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2254.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3721621.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.624 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 952.888 ops/s
[info]                  ·gc.alloc.rate:                   2025.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              3342503.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3244650.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.436 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 960.494 ops/s
[info]                  ·gc.alloc.rate:                   2053.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              3363214.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3260296.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.098 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 949.456 ops/s
[info]                  ·gc.alloc.rate:               2050.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          3397397.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2771000.051 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 889.842 ops/s
[info]                  ·gc.alloc.rate:                   1945.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              3441121.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3566336.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2514.733 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   941.002 ±(99.9%) 111.243 ops/s [Average]
[info]   (min, avg, max) = (889.842, 941.002, 960.494), stdev = 28.889
[info]   CI (99.9%): [829.759, 1052.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2022.533 ±(99.9%) 170.600 MB/sec [Average]
[info]   (min, avg, max) = (1945.838, 2022.533, 2053.080), stdev = 44.304
[info]   CI (99.9%): [1851.933, 2193.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3381686.751 ±(99.9%) 148659.496 B/op [Average]
[info]   (min, avg, max) = (3342503.883, 3381686.751, 3441121.888), stdev = 38606.399
[info]   CI (99.9%): [3233027.256, 3530346.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1979.948 ±(99.9%) 796.899 MB/sec [Average]
[info]   (min, avg, max) = (1672.659, 1979.948, 2254.249), stdev = 206.952
[info]   CI (99.9%): [1183.049, 2776.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3312780.972 ±(99.9%) 1404777.802 B/op [Average]
[info]   (min, avg, max) = (2771000.051, 3312780.972, 3721621.311), stdev = 364816.334
[info]   CI (99.9%): [1908003.170, 4717558.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.326 ±(99.9%) 2.369 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.326, 1.422), stdev = 0.615
[info]   CI (99.9%): [≈ 0, 2.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   571.578 ±(99.9%) 4197.932 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 571.578, 2514.733), stdev = 1090.190
[info]   CI (99.9%): [≈ 0, 4769.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 11.000), stdev = 1.871
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:35:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10887.262 ops/s
[info] # Warmup Iteration   2: 34844.943 ops/s
[info] # Warmup Iteration   3: 48486.295 ops/s
[info] Iteration   1: 42835.806 ops/s
[info]                  ·gc.alloc.rate:                   1048.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              38518.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1260.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46283.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.614 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 45848.358 ops/s
[info]                  ·gc.alloc.rate:                   759.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              26051.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          633.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21724.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.982 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 46530.051 ops/s
[info]                  ·gc.alloc.rate:                   773.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              26164.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          634.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21450.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 165.203 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 45873.745 ops/s
[info]                  ·gc.alloc.rate:                   770.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              26436.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          949.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32556.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 46161.772 ops/s
[info]                  ·gc.alloc.rate:                   773.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              26379.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          628.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21440.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   45449.946 ±(99.9%) 5726.139 ops/s [Average]
[info]   (min, avg, max) = (42835.806, 45449.946, 46530.051), stdev = 1487.060
[info]   CI (99.9%): [39723.807, 51176.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   825.280 ±(99.9%) 481.473 MB/sec [Average]
[info]   (min, avg, max) = (759.288, 825.280, 1048.696), stdev = 125.037
[info]   CI (99.9%): [343.806, 1306.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   28710.280 ±(99.9%) 21121.401 B/op [Average]
[info]   (min, avg, max) = (26051.997, 28710.280, 38518.445), stdev = 5485.161
[info]   CI (99.9%): [7588.880, 49831.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   821.151 ±(99.9%) 1082.667 MB/sec [Average]
[info]   (min, avg, max) = (628.999, 821.151, 1260.093), stdev = 281.165
[info]   CI (99.9%): [≈ 0, 1903.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28690.866 ±(99.9%) 42091.960 B/op [Average]
[info]   (min, avg, max) = (21440.299, 28690.866, 46283.022), stdev = 10931.148
[info]   CI (99.9%): [≈ 0, 70782.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.057 ±(99.9%) 7.031 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 2.057, 4.886), stdev = 1.826
[info]   CI (99.9%): [≈ 0, 9.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   70.868 ±(99.9%) 236.939 B/op [Average]
[info]   (min, avg, max) = (4.259, 70.868, 165.203), stdev = 61.532
[info]   CI (99.9%): [≈ 0, 307.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.400, 23.000), stdev = 7.635
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105.718 ops/s
[info] # Warmup Iteration   2: 534.464 ops/s
[info] # Warmup Iteration   3: 838.004 ops/s
[info] Iteration   1: 891.794 ops/s
[info]                  ·gc.alloc.rate:                   1958.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              3454634.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3427540.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1577.854 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 842.014 ops/s
[info]                  ·gc.alloc.rate:                   1934.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              3612916.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3667528.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1828.157 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 904.804 ops/s
[info]                  ·gc.alloc.rate:                   1973.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              3432611.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2873445.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 543.116 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 880.779 ops/s
[info]                  ·gc.alloc.rate:                   1924.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              3438305.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3570633.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 185.970 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 845.283 ops/s
[info]                  ·gc.alloc.rate:                   1931.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              3593574.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3744383.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4065.853 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   872.935 ±(99.9%) 108.119 ops/s [Average]
[info]   (min, avg, max) = (842.014, 872.935, 904.804), stdev = 28.078
[info]   CI (99.9%): [764.816, 981.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1944.552 ±(99.9%) 79.760 MB/sec [Average]
[info]   (min, avg, max) = (1924.531, 1944.552, 1973.580), stdev = 20.713
[info]   CI (99.9%): [1864.792, 2024.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3506408.445 ±(99.9%) 342828.491 B/op [Average]
[info]   (min, avg, max) = (3432611.677, 3506408.445, 3612916.688), stdev = 89031.470
[info]   CI (99.9%): [3163579.954, 3849236.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1914.054 ±(99.9%) 573.685 MB/sec [Average]
[info]   (min, avg, max) = (1652.088, 1914.054, 2012.419), stdev = 148.984
[info]   CI (99.9%): [1340.369, 2487.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3456706.142 ±(99.9%) 1335605.513 B/op [Average]
[info]   (min, avg, max) = (2873445.834, 3456706.142, 3744383.092), stdev = 346852.510
[info]   CI (99.9%): [2121100.630, 4792311.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 3.126 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 0.895, 2.185), stdev = 0.812
[info]   CI (99.9%): [≈ 0, 4.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1640.190 ±(99.9%) 5852.911 B/op [Average]
[info]   (min, avg, max) = (185.970, 1640.190, 4065.853), stdev = 1519.982
[info]   CI (99.9%): [≈ 0, 7493.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 12.000), stdev = 1.871
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3666.408 ops/s
[info] # Warmup Iteration   2: 11407.657 ops/s
[info] # Warmup Iteration   3: 15008.184 ops/s
[info] Iteration   1: 16706.659 ops/s
[info]                  ·gc.alloc.rate:                   1263.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              119055.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1263.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119063.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 494.687 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 16914.436 ops/s
[info]                  ·gc.alloc.rate:                   1281.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              119176.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1267.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117793.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 16950.984 ops/s
[info]                  ·gc.alloc.rate:                   1270.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              117985.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88850.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.441 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.659 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 17108.880 ops/s
[info]                  ·gc.alloc.rate:                   1283.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              118080.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1277.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117529.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.496 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 15532.687 ops/s
[info]                  ·gc.alloc.rate:                   1626.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              164747.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1591.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161207.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.838 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   16642.729 ±(99.9%) 2452.367 ops/s [Average]
[info]   (min, avg, max) = (15532.687, 16642.729, 17108.880), stdev = 636.872
[info]   CI (99.9%): [14190.362, 19095.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1345.415 ±(99.9%) 606.332 MB/sec [Average]
[info]   (min, avg, max) = (1263.865, 1345.415, 1626.713), stdev = 157.462
[info]   CI (99.9%): [739.083, 1951.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   127808.877 ±(99.9%) 79539.832 B/op [Average]
[info]   (min, avg, max) = (117985.628, 127808.877, 164747.061), stdev = 20656.242
[info]   CI (99.9%): [48269.045, 207348.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1271.509 ±(99.9%) 864.481 MB/sec [Average]
[info]   (min, avg, max) = (956.984, 1271.509, 1591.766), stdev = 224.503
[info]   CI (99.9%): [407.028, 2135.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   120888.938 ±(99.9%) 99602.250 B/op [Average]
[info]   (min, avg, max) = (88850.317, 120888.938, 161207.761), stdev = 25866.388
[info]   CI (99.9%): [21286.688, 220491.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.331 ±(99.9%) 8.135 MB/sec [Average]
[info]   (min, avg, max) = (0.076, 2.331, 5.251), stdev = 2.113
[info]   CI (99.9%): [≈ 0, 10.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   218.147 ±(99.9%) 759.853 B/op [Average]
[info]   (min, avg, max) = (7.056, 218.147, 494.687), stdev = 197.331
[info]   CI (99.9%): [≈ 0, 978.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.000, 17.000), stdev = 3.391
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4611.671 ops/s
[info] # Warmup Iteration   2: 13848.927 ops/s
[info] # Warmup Iteration   3: 18415.979 ops/s
[info] Iteration   1: 19829.666 ops/s
[info]                  ·gc.alloc.rate:                   1143.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              90743.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99713.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.547 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 16866.166 ops/s
[info]                  ·gc.alloc.rate:                        1577.956 MB/sec
[info]                  ·gc.alloc.rate.norm:                   147246.840 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.020 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.843 B/op
[info]                  ·gc.churn.Metaspace:                   0.055 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              5.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1588.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          148223.793 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  6.874 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             641.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           9.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      878.251 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              91.000 ms
[info] Iteration   3: 19577.594 ops/s
[info]                  ·gc.alloc.rate:                   1112.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              89428.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          949.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76286.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426.274 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 19416.241 ops/s
[info]                  ·gc.alloc.rate:                   1323.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              107298.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1580.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128081.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 18507.264 ops/s
[info]                  ·gc.alloc.rate:                   1493.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              126978.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1262.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107350.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 424.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   18839.386 ±(99.9%) 4661.614 ops/s [Average]
[info]   (min, avg, max) = (16866.166, 18839.386, 19829.666), stdev = 1210.606
[info]   CI (99.9%): [14177.772, 23501.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1330.214 ±(99.9%) 794.269 MB/sec [Average]
[info]   (min, avg, max) = (1112.762, 1330.214, 1577.956), stdev = 206.269
[info]   CI (99.9%): [535.945, 2124.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   112338.946 ±(99.9%) 95289.913 B/op [Average]
[info]   (min, avg, max) = (89428.318, 112338.946, 147246.840), stdev = 24746.488
[info]   CI (99.9%): [17049.033, 207628.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.369 ±(99.9%) 3.175 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.369, 1.843), stdev = 0.824
[info]   CI (99.9%): [≈ 0, 3.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.011 ±(99.9%) 0.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.055), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.028 ±(99.9%) 8.849 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.028, 5.139), stdev = 2.298
[info]   CI (99.9%): [≈ 0, 9.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1327.327 ±(99.9%) 1026.586 MB/sec [Average]
[info]   (min, avg, max) = (949.242, 1327.327, 1588.426), stdev = 266.601
[info]   CI (99.9%): [300.741, 2353.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   111931.204 ±(99.9%) 105783.772 B/op [Average]
[info]   (min, avg, max) = (76286.849, 111931.204, 148223.793), stdev = 27471.710
[info]   CI (99.9%): [6147.433, 217714.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   1.375 ±(99.9%) 11.838 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.375, 6.874), stdev = 3.074
[info]   CI (99.9%): [≈ 0, 13.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   128.298 ±(99.9%) 1104.688 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 128.298, 641.492), stdev = 286.884
[info]   CI (99.9%): [≈ 0, 1232.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.441 ±(99.9%) 13.480 MB/sec [Average]
[info]   (min, avg, max) = (0.045, 4.441, 9.412), stdev = 3.501
[info]   CI (99.9%): [≈ 0, 17.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   386.309 ±(99.9%) 1257.540 B/op [Average]
[info]   (min, avg, max) = (3.547, 386.309, 878.251), stdev = 326.579
[info]   CI (99.9%): [≈ 0, 1643.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   156.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 31.200, 91.000), stdev = 34.135
[info]   CI (99.9%): [156.000, 156.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132105.992 ops/s
[info] # Warmup Iteration   2: 312268.353 ops/s
[info] # Warmup Iteration   3: 327297.083 ops/s
[info] Iteration   1: 321590.078 ops/s
[info]                  ·gc.alloc.rate:               1180.653 MB/sec
[info]                  ·gc.alloc.rate.norm:          5778.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6415.921 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Iteration   2: 329272.396 ops/s
[info]                  ·gc.alloc.rate:                   1190.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4699.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.676 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 333709.045 ops/s
[info]                  ·gc.alloc.rate:                   1209.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              5704.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6114.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.731 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 332300.291 ops/s
[info]                  ·gc.alloc.rate:                   1210.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              5733.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6108.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 335244.906 ops/s
[info]                  ·gc.alloc.rate:               1221.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          5733.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4558.088 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   330423.343 ±(99.9%) 20818.197 ops/s [Average]
[info]   (min, avg, max) = (321590.078, 330423.343, 335244.906), stdev = 5406.420
[info]   CI (99.9%): [309605.146, 351241.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1202.630 ±(99.9%) 64.135 MB/sec [Average]
[info]   (min, avg, max) = (1180.653, 1202.630, 1221.667), stdev = 16.656
[info]   CI (99.9%): [1138.495, 1266.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5727.647 ±(99.9%) 131.879 B/op [Average]
[info]   (min, avg, max) = (5688.327, 5727.647, 5778.177), stdev = 34.248
[info]   CI (99.9%): [5595.769, 5859.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1170.413 ±(99.9%) 679.392 MB/sec [Average]
[info]   (min, avg, max) = (971.230, 1170.413, 1310.963), stdev = 176.436
[info]   CI (99.9%): [491.020, 1849.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5579.226 ±(99.9%) 3380.264 B/op [Average]
[info]   (min, avg, max) = (4558.088, 5579.226, 6415.921), stdev = 877.844
[info]   CI (99.9%): [2198.962, 8959.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.195 ±(99.9%) 8.643 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.195, 5.164), stdev = 2.245
[info]   CI (99.9%): [≈ 0, 9.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.701 ±(99.9%) 41.309 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.701, 24.676), stdev = 10.728
[info]   CI (99.9%): [≈ 0, 47.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 17.000), stdev = 5.771
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:34:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 190199.240 ops/s
[info] # Warmup Iteration   2: 401244.001 ops/s
[info] # Warmup Iteration   3: 428064.560 ops/s
[info] Iteration   1: 443665.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 404237.878 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 404426.430 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 447925.852 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 446458.592 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   429342.894 ±(99.9%) 88113.906 ops/s [Average]
[info]   (min, avg, max) = (404237.878, 429342.894, 447925.852), stdev = 22882.902
[info]   CI (99.9%): [341228.988, 517456.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2002.037 ops/s
[info] # Warmup Iteration   2: 11803.352 ops/s
[info] # Warmup Iteration   3: 14481.893 ops/s
[info] Iteration   1: 15219.102 ops/s
[info]                  ·gc.alloc.rate:                   1641.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              169711.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1715.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177343.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 353.778 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         45.000 ms
[info] Iteration   2: 17973.633 ops/s
[info]                  ·gc.alloc.rate:                   1406.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              123090.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1414.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123809.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      20.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1755.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 19161.120 ops/s
[info]                  ·gc.alloc.rate:                   1179.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              96858.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1143.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93919.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 783.717 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 19452.047 ops/s
[info]                  ·gc.alloc.rate:                   1183.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              95743.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1160.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93889.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.711 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 18191.126 ops/s
[info]                  ·gc.alloc.rate:               1519.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          131473.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1485.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128457.043 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17999.406 ±(99.9%) 6451.195 ops/s [Average]
[info]   (min, avg, max) = (15219.102, 17999.406, 19452.047), stdev = 1675.355
[info]   CI (99.9%): [11548.210, 24450.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1386.091 ±(99.9%) 788.172 MB/sec [Average]
[info]   (min, avg, max) = (1179.201, 1386.091, 1641.757), stdev = 204.686
[info]   CI (99.9%): [597.920, 2174.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   123375.470 ±(99.9%) 116784.368 B/op [Average]
[info]   (min, avg, max) = (95743.690, 123375.470, 169711.043), stdev = 30328.530
[info]   CI (99.9%): [6591.102, 240159.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1383.788 ±(99.9%) 921.241 MB/sec [Average]
[info]   (min, avg, max) = (1143.419, 1383.788, 1715.590), stdev = 239.243
[info]   CI (99.9%): [462.547, 2305.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   123483.877 ±(99.9%) 131649.493 B/op [Average]
[info]   (min, avg, max) = (93889.457, 123483.877, 177343.332), stdev = 34188.955
[info]   CI (99.9%): [≈ 0, 255133.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   6.998 ±(99.9%) 31.279 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 6.998, 20.054), stdev = 8.123
[info]   CI (99.9%): [≈ 0, 38.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   610.520 ±(99.9%) 2710.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 610.520, 1755.392), stdev = 704.026
[info]   CI (99.9%): [≈ 0, 3321.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   100.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 20.000, 45.000), stdev = 14.967
[info]   CI (99.9%): [100.000, 100.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 757402.690 ops/s
[info] # Warmup Iteration   2: 1273883.775 ops/s
[info] # Warmup Iteration   3: 1355504.912 ops/s
[info] Iteration   1: 1403433.176 ops/s
[info]                  ·gc.alloc.rate:      57.082 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1400995.094 ops/s
[info]                  ·gc.alloc.rate:      58.310 MB/sec
[info]                  ·gc.alloc.rate.norm: 65.493 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1403152.379 ops/s
[info]                  ·gc.alloc.rate:      57.065 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1394793.135 ops/s
[info]                  ·gc.alloc.rate:                   59.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              67.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1402963.498 ops/s
[info]                  ·gc.alloc.rate:      57.070 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1401067.456 ±(99.9%) 14004.762 ops/s [Average]
[info]   (min, avg, max) = (1394793.135, 1401067.456, 1403433.176), stdev = 3636.992
[info]   CI (99.9%): [1387062.694, 1415072.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   57.851 ±(99.9%) 4.537 MB/sec [Average]
[info]   (min, avg, max) = (57.065, 57.851, 59.728), stdev = 1.178
[info]   CI (99.9%): [53.314, 62.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   64.979 ±(99.9%) 5.773 B/op [Average]
[info]   (min, avg, max) = (64.000, 64.979, 67.398), stdev = 1.499
[info]   CI (99.9%): [59.206, 70.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.513 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.806), stdev = 114.400
[info]   CI (99.9%): [≈ 0, 491.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   57.731 ±(99.9%) 497.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.731, 288.656), stdev = 129.091
[info]   CI (99.9%): [≈ 0, 554.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2602.991 ops/s
[info] # Warmup Iteration   2: 71146.175 ops/s
[info] # Warmup Iteration   3: 115341.243 ops/s
[info] Iteration   1: 119565.290 ops/s
[info]                  ·gc.alloc.rate:                   4332.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              57032.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4304.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56656.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.574 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 130850.599 ops/s
[info]                  ·gc.alloc.rate:                   4451.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              53530.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4348.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52289.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.057 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 130536.747 ops/s
[info]                  ·gc.alloc.rate:                   4475.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              53958.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4384.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52862.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.004 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 131530.124 ops/s
[info]                  ·gc.alloc.rate:                   4522.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              54116.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4069.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48694.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 131124.992 ops/s
[info]                  ·gc.alloc.rate:                   4523.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              54292.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4419.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53044.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   128721.550 ±(99.9%) 19759.612 ops/s [Average]
[info]   (min, avg, max) = (119565.290, 128721.550, 131530.124), stdev = 5131.508
[info]   CI (99.9%): [108961.939, 148481.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4461.127 ±(99.9%) 301.134 MB/sec [Average]
[info]   (min, avg, max) = (4332.687, 4461.127, 4523.631), stdev = 78.204
[info]   CI (99.9%): [4159.993, 4762.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54585.832 ±(99.9%) 5376.779 B/op [Average]
[info]   (min, avg, max) = (53530.036, 54585.832, 57032.070), stdev = 1396.332
[info]   CI (99.9%): [49209.053, 59962.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4305.195 ±(99.9%) 533.676 MB/sec [Average]
[info]   (min, avg, max) = (4069.412, 4305.195, 4419.641), stdev = 138.594
[info]   CI (99.9%): [3771.519, 4838.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   52709.494 ±(99.9%) 10892.503 B/op [Average]
[info]   (min, avg, max) = (48694.789, 52709.494, 56656.321), stdev = 2828.748
[info]   CI (99.9%): [41816.991, 63601.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 4.184 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.825, 2.247), stdev = 1.087
[info]   CI (99.9%): [≈ 0, 5.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10.427 ±(99.9%) 53.619 B/op [Average]
[info]   (min, avg, max) = (0.249, 10.427, 29.574), stdev = 13.925
[info]   CI (99.9%): [≈ 0, 64.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   64.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 13.000), stdev = 0.447
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 19.800, 24.000), stdev = 2.683
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 477082.246 ops/s
[info] # Warmup Iteration   2: 1908654.107 ops/s
[info] # Warmup Iteration   3: 2113832.627 ops/s
[info] Iteration   1: 2161645.620 ops/s
[info]                  ·gc.alloc.rate:                   589.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2169569.173 ops/s
[info]                  ·gc.alloc.rate:               612.448 MB/sec
[info]                  ·gc.alloc.rate.norm:          444.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 471.895 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 2208680.818 ops/s
[info]                  ·gc.alloc.rate:                   615.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     463.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2218244.865 ops/s
[info]                  ·gc.alloc.rate:               618.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          438.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 462.717 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 2209588.777 ops/s
[info]                  ·gc.alloc.rate:                   612.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.664 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   2193545.851 ±(99.9%) 99838.476 ops/s [Average]
[info]   (min, avg, max) = (2161645.620, 2193545.851, 2218244.865), stdev = 25927.735
[info]   CI (99.9%): [2093707.375, 2293384.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   609.554 ±(99.9%) 44.763 MB/sec [Average]
[info]   (min, avg, max) = (589.229, 609.554, 618.468), stdev = 11.625
[info]   CI (99.9%): [564.792, 654.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   437.288 ±(99.9%) 21.143 B/op [Average]
[info]   (min, avg, max) = (429.025, 437.288, 444.190), stdev = 5.491
[info]   CI (99.9%): [416.144, 458.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.563 ±(99.9%) 562.920 MB/sec [Average]
[info]   (min, avg, max) = (325.062, 586.563, 653.766), stdev = 146.189
[info]   CI (99.9%): [23.643, 1149.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   420.155 ±(99.9%) 395.176 B/op [Average]
[info]   (min, avg, max) = (236.681, 420.155, 471.895), stdev = 102.626
[info]   CI (99.9%): [24.980, 815.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.761 ±(99.9%) 6.415 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.761, 3.741), stdev = 1.666
[info]   CI (99.9%): [≈ 0, 7.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.542 ±(99.9%) 4.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.542, 2.664), stdev = 1.186
[info]   CI (99.9%): [≈ 0, 5.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 9.000), stdev = 1.732
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 857365.361 ops/s
[info] # Warmup Iteration   2: 1668942.817 ops/s
[info] # Warmup Iteration   3: 1893737.651 ops/s
[info] Iteration   1: 1949823.382 ops/s
[info]                  ·gc.alloc.rate:                   535.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1927835.940 ops/s
[info]                  ·gc.alloc.rate:                   537.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1952542.328 ops/s
[info]                  ·gc.alloc.rate:               536.823 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 264.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1922922.742 ops/s
[info]                  ·gc.alloc.rate:                   537.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1936728.455 ops/s
[info]                  ·gc.alloc.rate:               541.797 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 535.116 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1937970.570 ±(99.9%) 50335.883 ops/s [Average]
[info]   (min, avg, max) = (1922922.742, 1937970.570, 1952542.328), stdev = 13072.069
[info]   CI (99.9%): [1887634.686, 1988306.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   537.603 ±(99.9%) 9.463 MB/sec [Average]
[info]   (min, avg, max) = (535.292, 537.603, 541.797), stdev = 2.457
[info]   CI (99.9%): [528.141, 547.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   436.559 ±(99.9%) 14.914 B/op [Average]
[info]   (min, avg, max) = (432.081, 436.559, 440.102), stdev = 3.873
[info]   CI (99.9%): [421.645, 451.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.688 ±(99.9%) 695.152 MB/sec [Average]
[info]   (min, avg, max) = (327.415, 525.688, 658.766), stdev = 180.529
[info]   CI (99.9%): [≈ 0, 1220.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   427.599 ±(99.9%) 573.318 B/op [Average]
[info]   (min, avg, max) = (264.285, 427.599, 538.187), stdev = 148.889
[info]   CI (99.9%): [≈ 0, 1000.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.017), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1054833.773 ops/s
[info] # Warmup Iteration   2: 1769232.152 ops/s
[info] # Warmup Iteration   3: 1961411.937 ops/s
[info] Iteration   1: 1960775.325 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1960125.558 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1961170.313 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1960547.382 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1961543.516 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1960832.419 ±(99.9%) 2112.587 ops/s [Average]
[info]   (min, avg, max) = (1960125.558, 1960832.419, 1961543.516), stdev = 548.632
[info]   CI (99.9%): [1958719.832, 1962945.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6200.495 ops/s
[info] # Warmup Iteration   2: 38972.844 ops/s
[info] # Warmup Iteration   3: 54731.929 ops/s
[info] Iteration   1: 49872.208 ops/s
[info]                  ·gc.alloc.rate:                   2268.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              71550.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72387.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 126.700 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 58092.510 ops/s
[info]                  ·gc.alloc.rate:                   2140.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              58001.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53394.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.640 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.426 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 57052.026 ops/s
[info]                  ·gc.alloc.rate:                   1994.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              55008.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54600.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.169 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 56237.537 ops/s
[info]                  ·gc.alloc.rate:                   1977.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              55317.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55809.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.165 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 56237.912 ops/s
[info]                  ·gc.alloc.rate:                   1988.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              55649.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56200.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   55498.439 ±(99.9%) 12461.221 ops/s [Average]
[info]   (min, avg, max) = (49872.208, 55498.439, 58092.510), stdev = 3236.140
[info]   CI (99.9%): [43037.217, 67959.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2073.959 ±(99.9%) 491.704 MB/sec [Average]
[info]   (min, avg, max) = (1977.501, 2073.959, 2268.409), stdev = 127.694
[info]   CI (99.9%): [1582.255, 2565.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   59105.429 ±(99.9%) 27171.377 B/op [Average]
[info]   (min, avg, max) = (55008.678, 59105.429, 71550.199), stdev = 7056.320
[info]   CI (99.9%): [31934.052, 86276.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2049.755 ±(99.9%) 530.765 MB/sec [Average]
[info]   (min, avg, max) = (1970.887, 2049.755, 2294.961), stdev = 137.838
[info]   CI (99.9%): [1518.990, 2580.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58478.474 ±(99.9%) 30238.484 B/op [Average]
[info]   (min, avg, max) = (53394.356, 58478.474, 72387.712), stdev = 7852.838
[info]   CI (99.9%): [28239.990, 88716.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.181 ±(99.9%) 6.637 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.181, 4.017), stdev = 1.724
[info]   CI (99.9%): [≈ 0, 7.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   35.609 ±(99.9%) 208.390 B/op [Average]
[info]   (min, avg, max) = (0.583, 35.609, 126.700), stdev = 54.118
[info]   CI (99.9%): [≈ 0, 243.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 19.000), stdev = 4.604
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65458.436 ops/s
[info] # Warmup Iteration   2: 547327.226 ops/s
[info] # Warmup Iteration   3: 997321.216 ops/s
[info] Iteration   1: 1172907.514 ops/s
[info]                  ·gc.alloc.rate:                   3367.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              4518.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3546.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.642 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 1184474.710 ops/s
[info]                  ·gc.alloc.rate:                   3417.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              4539.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3280.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4357.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1177751.573 ops/s
[info]                  ·gc.alloc.rate:                   3425.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              4575.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3338.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4459.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1191665.450 ops/s
[info]                  ·gc.alloc.rate:                   3466.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              4577.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3373.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4455.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1206416.258 ops/s
[info]                  ·gc.alloc.rate:                   3494.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              4558.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3980.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   1186643.101 ±(99.9%) 50523.812 ops/s [Average]
[info]   (min, avg, max) = (1172907.514, 1186643.101, 1206416.258), stdev = 13120.873
[info]   CI (99.9%): [1136119.289, 1237166.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   3434.295 ±(99.9%) 187.168 MB/sec [Average]
[info]   (min, avg, max) = (3367.707, 3434.295, 3494.701), stdev = 48.607
[info]   CI (99.9%): [3247.127, 3621.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4554.039 ±(99.9%) 96.000 B/op [Average]
[info]   (min, avg, max) = (4518.794, 4554.039, 4577.395), stdev = 24.931
[info]   CI (99.9%): [4458.039, 4650.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3318.258 ±(99.9%) 689.772 MB/sec [Average]
[info]   (min, avg, max) = (3051.355, 3318.258, 3546.804), stdev = 179.132
[info]   CI (99.9%): [2628.485, 4008.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4402.517 ±(99.9%) 1077.962 B/op [Average]
[info]   (min, avg, max) = (3980.372, 4402.517, 4759.107), stdev = 279.943
[info]   CI (99.9%): [3324.555, 5480.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.765 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.479), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 0.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 1.027 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.167, 0.642), stdev = 0.267
[info]   CI (99.9%): [≈ 0, 1.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 0.707
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 16.000), stdev = 1.732
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:32:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.673 ops/s
[info] # Warmup Iteration   2: 4490663.908 ops/s
[info] # Warmup Iteration   3: 4797137.663 ops/s
[info] Iteration   1: 5317200.344 ops/s
[info]                  ·gc.alloc.rate:                   331.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              97.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5308539.880 ops/s
[info]                  ·gc.alloc.rate:               331.237 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5262923.016 ops/s
[info]                  ·gc.alloc.rate:                   329.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5278427.887 ops/s
[info]                  ·gc.alloc.rate:               330.701 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96.731 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 5325976.482 ops/s
[info]                  ·gc.alloc.rate:               336.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          99.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96.067 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5298613.522 ±(99.9%) 103216.045 ops/s [Average]
[info]   (min, avg, max) = (5262923.016, 5298613.522, 5325976.482), stdev = 26804.879
[info]   CI (99.9%): [5195397.477, 5401829.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   331.916 ±(99.9%) 10.180 MB/sec [Average]
[info]   (min, avg, max) = (329.961, 331.916, 336.560), stdev = 2.644
[info]   CI (99.9%): [321.735, 342.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   98.578 ±(99.9%) 2.151 B/op [Average]
[info]   (min, avg, max) = (97.997, 98.578, 99.441), stdev = 0.559
[info]   CI (99.9%): [96.427, 100.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   324.599 ±(99.9%) 1.166 MB/sec [Average]
[info]   (min, avg, max) = (324.422, 324.599, 325.138), stdev = 0.303
[info]   CI (99.9%): [323.433, 325.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   96.407 ±(99.9%) 1.700 B/op [Average]
[info]   (min, avg, max) = (96.033, 96.407, 97.016), stdev = 0.441
[info]   CI (99.9%): [94.707, 98.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.093 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33650.212 ops/s
[info] # Warmup Iteration   2: 649382.701 ops/s
[info] # Warmup Iteration   3: 1006442.307 ops/s
[info] Iteration   1: 1037364.808 ops/s
[info]                  ·gc.alloc.rate:                   1181.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1792.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1963.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1056691.975 ops/s
[info]                  ·gc.alloc.rate:                   1208.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1942.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1048991.858 ops/s
[info]                  ·gc.alloc.rate:                   1169.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              1754.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1477.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.312 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1065546.024 ops/s
[info]                  ·gc.alloc.rate:                   1192.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1946.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1065706.968 ops/s
[info]                  ·gc.alloc.rate:                   1190.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              1758.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1466.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1054860.326 ±(99.9%) 46196.526 ops/s [Average]
[info]   (min, avg, max) = (1037364.808, 1054860.326, 1065706.968), stdev = 11997.091
[info]   CI (99.9%): [1008663.800, 1101056.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1188.577 ±(99.9%) 56.507 MB/sec [Average]
[info]   (min, avg, max) = (1169.157, 1188.577, 1208.979), stdev = 14.675
[info]   CI (99.9%): [1132.070, 1245.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1773.268 ±(99.9%) 83.190 B/op [Average]
[info]   (min, avg, max) = (1754.099, 1773.268, 1800.537), stdev = 21.604
[info]   CI (99.9%): [1690.078, 1856.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.091 ±(99.9%) 668.457 MB/sec [Average]
[info]   (min, avg, max) = (984.950, 1179.091, 1318.317), stdev = 173.596
[info]   CI (99.9%): [510.635, 1847.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1759.551 ±(99.9%) 1010.378 B/op [Average]
[info]   (min, avg, max) = (1466.822, 1759.551, 1963.758), stdev = 262.392
[info]   CI (99.9%): [749.173, 2769.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.221 ±(99.9%) 1.421 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.221, 0.874), stdev = 0.369
[info]   CI (99.9%): [≈ 0, 1.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.330 ±(99.9%) 2.133 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.330, 1.312), stdev = 0.554
[info]   CI (99.9%): [≈ 0, 2.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2701256.037 ops/s
[info] # Warmup Iteration   2: 9145985.960 ops/s
[info] # Warmup Iteration   3: 9667003.291 ops/s
[info] Iteration   1: 10087289.608 ops/s
[info]                  ·gc.alloc.rate:               468.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 51.242 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 10031367.878 ops/s
[info]                  ·gc.alloc.rate:                   479.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 10195338.757 ops/s
[info]                  ·gc.alloc.rate:                   479.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              73.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 10117166.012 ops/s
[info]                  ·gc.alloc.rate:                   482.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 9882024.141 ops/s
[info]                  ·gc.alloc.rate:                   481.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              76.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   10062637.279 ±(99.9%) 450663.890 ops/s [Average]
[info]   (min, avg, max) = (9882024.141, 10062637.279, 10195338.757), stdev = 117035.981
[info]   CI (99.9%): [9611973.389, 10513301.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   478.171 ±(99.9%) 21.178 MB/sec [Average]
[info]   (min, avg, max) = (468.632, 478.171, 482.449), stdev = 5.500
[info]   CI (99.9%): [456.993, 499.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.789 ±(99.9%) 5.165 B/op [Average]
[info]   (min, avg, max) = (73.111, 74.789, 76.631), stdev = 1.341
[info]   CI (99.9%): [69.624, 79.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.664 ±(99.9%) 693.613 MB/sec [Average]
[info]   (min, avg, max) = (328.449, 460.664, 658.406), stdev = 180.129
[info]   CI (99.9%): [≈ 0, 1154.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   72.023 ±(99.9%) 108.134 B/op [Average]
[info]   (min, avg, max) = (50.803, 72.023, 103.165), stdev = 28.082
[info]   CI (99.9%): [≈ 0, 180.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.022 ±(99.9%) 0.074 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2042.243 ops/s
[info] # Warmup Iteration   2: 231929.896 ops/s
[info] # Warmup Iteration   3: 739423.453 ops/s
[info] Iteration   1: 738775.966 ops/s
[info]                  ·gc.alloc.rate:                   2747.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              5852.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2940.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6263.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.652 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 751573.554 ops/s
[info]                  ·gc.alloc.rate:                   2782.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              5825.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5499.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 751233.362 ops/s
[info]                  ·gc.alloc.rate:               2809.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          5884.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2659.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5568.542 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 748525.402 ops/s
[info]                  ·gc.alloc.rate:                   2801.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              5889.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5647.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 755352.120 ops/s
[info]                  ·gc.alloc.rate:               2781.527 MB/sec
[info]                  ·gc.alloc.rate.norm:          5794.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2703.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5631.073 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   749092.081 ±(99.9%) 24099.174 ops/s [Average]
[info]   (min, avg, max) = (738775.966, 749092.081, 755352.120), stdev = 6258.479
[info]   CI (99.9%): [724992.906, 773191.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2784.636 ±(99.9%) 93.715 MB/sec [Average]
[info]   (min, avg, max) = (2747.053, 2784.636, 2809.978), stdev = 24.337
[info]   CI (99.9%): [2690.921, 2878.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   5849.162 ±(99.9%) 154.776 B/op [Average]
[info]   (min, avg, max) = (5794.085, 5849.162, 5889.572), stdev = 40.195
[info]   CI (99.9%): [5694.386, 6003.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2723.179 ±(99.9%) 480.130 MB/sec [Average]
[info]   (min, avg, max) = (2626.695, 2723.179, 2940.100), stdev = 124.688
[info]   CI (99.9%): [2243.049, 3203.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5721.877 ±(99.9%) 1187.481 B/op [Average]
[info]   (min, avg, max) = (5499.122, 5721.877, 6263.572), stdev = 308.385
[info]   CI (99.9%): [4534.397, 6909.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 5.342 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 3.123), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 5.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.365 ±(99.9%) 11.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.365, 6.652), stdev = 2.956
[info]   CI (99.9%): [≈ 0, 12.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 17.000), stdev = 2.236
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 455.804 ops/s
[info] # Warmup Iteration   2: 2152.600 ops/s
[info] # Warmup Iteration   3: 4671.036 ops/s
[info] Iteration   1: 4842.242 ops/s
[info]                  ·gc.alloc.rate:                   2458.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              799029.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2608.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847651.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.908 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1594.861 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 5022.466 ops/s
[info]                  ·gc.alloc.rate:                   2476.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              776014.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     715573.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.393 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5058.358 ops/s
[info]                  ·gc.alloc.rate:                   2514.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              782296.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     716699.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.506 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.355 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4994.137 ops/s
[info]                  ·gc.alloc.rate:                   2490.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              784750.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2662.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839070.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.481 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 5047.994 ops/s
[info]                  ·gc.alloc.rate:                   2524.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              786746.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733006.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.390 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4993.039 ±(99.9%) 338.406 ops/s [Average]
[info]   (min, avg, max) = (4842.242, 4993.039, 5058.358), stdev = 87.883
[info]   CI (99.9%): [4654.633, 5331.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2492.876 ±(99.9%) 103.645 MB/sec [Average]
[info]   (min, avg, max) = (2458.689, 2492.876, 2524.179), stdev = 26.916
[info]   CI (99.9%): [2389.231, 2596.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   785767.557 ±(99.9%) 32505.514 B/op [Average]
[info]   (min, avg, max) = (776014.893, 785767.557, 799029.598), stdev = 8441.579
[info]   CI (99.9%): [753262.043, 818273.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2442.034 ±(99.9%) 690.190 MB/sec [Average]
[info]   (min, avg, max) = (2283.768, 2442.034, 2662.448), stdev = 179.240
[info]   CI (99.9%): [1751.845, 3132.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   770400.350 ±(99.9%) 258103.416 B/op [Average]
[info]   (min, avg, max) = (715573.809, 770400.350, 847651.257), stdev = 67028.638
[info]   CI (99.9%): [512296.934, 1028503.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.246 ±(99.9%) 7.899 MB/sec [Average]
[info]   (min, avg, max) = (0.167, 1.246, 4.908), stdev = 2.051
[info]   CI (99.9%): [≈ 0, 9.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   401.696 ±(99.9%) 2573.690 B/op [Average]
[info]   (min, avg, max) = (52.481, 401.696, 1594.861), stdev = 668.379
[info]   CI (99.9%): [≈ 0, 2975.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.600, 19.000), stdev = 3.715
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:31:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368.704 ops/s
[info] # Warmup Iteration   2: 4346.971 ops/s
[info] # Warmup Iteration   3: 7269.021 ops/s
[info] Iteration   1: 7615.268 ops/s
[info]                  ·gc.alloc.rate:                   3132.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              647180.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3277.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     677299.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.153 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 7656.907 ops/s
[info]                  ·gc.alloc.rate:                   3100.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              637259.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2983.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613221.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.558 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 7739.366 ops/s
[info]                  ·gc.alloc.rate:                   3189.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              648400.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3017.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613418.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.932 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 7725.315 ops/s
[info]                  ·gc.alloc.rate:                   3184.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              648473.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3040.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     619212.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.481 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 7556.620 ops/s
[info]                  ·gc.alloc.rate:                   3122.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              650304.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3052.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     635693.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.007 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   7658.695 ±(99.9%) 293.600 ops/s [Average]
[info]   (min, avg, max) = (7556.620, 7658.695, 7739.366), stdev = 76.247
[info]   CI (99.9%): [7365.095, 7952.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3145.828 ±(99.9%) 150.340 MB/sec [Average]
[info]   (min, avg, max) = (3100.912, 3145.828, 3189.401), stdev = 39.043
[info]   CI (99.9%): [2995.488, 3296.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   646323.719 ±(99.9%) 19978.118 B/op [Average]
[info]   (min, avg, max) = (637259.597, 646323.719, 650304.224), stdev = 5188.254
[info]   CI (99.9%): [626345.601, 666301.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3074.408 ±(99.9%) 449.565 MB/sec [Average]
[info]   (min, avg, max) = (2983.941, 3074.408, 3277.971), stdev = 116.751
[info]   CI (99.9%): [2624.843, 3523.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   631769.255 ±(99.9%) 104161.434 B/op [Average]
[info]   (min, avg, max) = (613221.156, 631769.255, 677299.976), stdev = 27050.394
[info]   CI (99.9%): [527607.821, 735930.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.158 ±(99.9%) 0.872 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.158, 0.562), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.626 ±(99.9%) 180.305 B/op [Average]
[info]   (min, avg, max) = (8.481, 32.626, 116.153), stdev = 46.825
[info]   CI (99.9%): [≈ 0, 212.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   72.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.400, 17.000), stdev = 1.517
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23701.165 ops/s
[info] # Warmup Iteration   2: 51330.017 ops/s
[info] # Warmup Iteration   3: 54188.469 ops/s
[info] Iteration   1: 55423.178 ops/s
[info]                  ·gc.alloc.rate:                   923.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              26233.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28036.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 56058.683 ops/s
[info]                  ·gc.alloc.rate:               936.131 MB/sec
[info]                  ·gc.alloc.rate.norm:          26278.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27736.345 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 56435.557 ops/s
[info]                  ·gc.alloc.rate:                   934.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              26056.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18392.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.844 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 55019.315 ops/s
[info]                  ·gc.alloc.rate:                   918.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              26261.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28145.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.843 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 56331.872 ops/s
[info]                  ·gc.alloc.rate:                   945.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              26413.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27416.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.745 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   55853.721 ±(99.9%) 2350.763 ops/s [Average]
[info]   (min, avg, max) = (55019.315, 55853.721, 56435.557), stdev = 610.486
[info]   CI (99.9%): [53502.958, 58204.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   931.711 ±(99.9%) 40.955 MB/sec [Average]
[info]   (min, avg, max) = (918.511, 931.711, 945.522), stdev = 10.636
[info]   CI (99.9%): [890.756, 972.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26248.814 ±(99.9%) 492.203 B/op [Average]
[info]   (min, avg, max) = (26056.500, 26248.814, 26413.448), stdev = 127.824
[info]   CI (99.9%): [25756.611, 26741.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.185 ±(99.9%) 561.015 MB/sec [Average]
[info]   (min, avg, max) = (659.603, 920.185, 988.072), stdev = 145.694
[info]   CI (99.9%): [359.170, 1481.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25945.511 ±(99.9%) 16295.153 B/op [Average]
[info]   (min, avg, max) = (18392.485, 25945.511, 28145.727), stdev = 4231.800
[info]   CI (99.9%): [9650.357, 42240.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.867 ±(99.9%) 5.115 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.867, 3.186), stdev = 1.328
[info]   CI (99.9%): [≈ 0, 5.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.311 ±(99.9%) 142.500 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.311, 88.844), stdev = 37.007
[info]   CI (99.9%): [≈ 0, 166.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 13.000), stdev = 4.382
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1118.265 ops/s
[info] # Warmup Iteration   2: 3902.370 ops/s
[info] # Warmup Iteration   3: 4938.130 ops/s
[info] Iteration   1: 5325.476 ops/s
[info]                  ·gc.alloc.rate:                   962.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              284461.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286896.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.987 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 5359.290 ops/s
[info]                  ·gc.alloc.rate:                   969.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              284765.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285913.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.611 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1060.393 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 5185.262 ops/s
[info]                  ·gc.alloc.rate:                        933.774 MB/sec
[info]                  ·gc.alloc.rate.norm:                   283350.183 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.020 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 5.944 B/op
[info]                  ·gc.churn.Metaspace:                   0.059 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              17.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:               976.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          296286.485 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.306 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             699.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           2.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      883.162 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Iteration   4: 5386.795 ops/s
[info]                  ·gc.alloc.rate:               953.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          278460.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188385.592 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 5437.395 ops/s
[info]                  ·gc.alloc.rate:                   966.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              279823.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278868.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   5338.844 ±(99.9%) 366.295 ops/s [Average]
[info]   (min, avg, max) = (5185.262, 5338.844, 5437.395), stdev = 95.126
[info]   CI (99.9%): [4972.548, 5705.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   957.256 ±(99.9%) 56.045 MB/sec [Average]
[info]   (min, avg, max) = (933.774, 957.256, 969.846), stdev = 14.555
[info]   CI (99.9%): [901.211, 1013.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   282172.217 ±(99.9%) 11000.706 B/op [Average]
[info]   (min, avg, max) = (278460.399, 282172.217, 284765.028), stdev = 2856.848
[info]   CI (99.9%): [271171.510, 293172.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.Compressed_Class_Space.norm":
[info]   1.189 ±(99.9%) 10.236 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.189, 5.944), stdev = 2.658
[info]   CI (99.9%): [≈ 0, 11.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.101 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.059), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.Metaspace.norm":
[info]   3.563 ±(99.9%) 30.676 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.563, 17.814), stdev = 7.967
[info]   CI (99.9%): [≈ 0, 34.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   905.884 ±(99.9%) 562.145 MB/sec [Average]
[info]   (min, avg, max) = (644.874, 905.884, 976.405), stdev = 145.987
[info]   CI (99.9%): [343.739, 1468.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   267270.069 ±(99.9%) 171472.645 B/op [Average]
[info]   (min, avg, max) = (188385.592, 267270.069, 296286.485), stdev = 44530.901
[info]   CI (99.9%): [95797.424, 438742.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Old_Gen":
[info]   0.461 ±(99.9%) 3.971 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.461, 2.306), stdev = 1.031
[info]   CI (99.9%): [≈ 0, 4.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Old_Gen.norm":
[info]   139.943 ±(99.9%) 1204.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 139.943, 699.715), stdev = 312.922
[info]   CI (99.9%): [≈ 0, 1344.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.329 ±(99.9%) 6.858 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.329, 3.611), stdev = 1.781
[info]   CI (99.9%): [≈ 0, 8.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   395.923 ±(99.9%) 2038.735 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 395.923, 1060.393), stdev = 529.453
[info]   CI (99.9%): [≈ 0, 2434.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 16.200, 44.000), stdev = 16.589
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 825.653 ops/s
[info] # Warmup Iteration   2: 4423.428 ops/s
[info] # Warmup Iteration   3: 5119.408 ops/s
[info] Iteration   1: 5363.497 ops/s
[info]                  ·gc.alloc.rate:                   581.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              170746.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94498.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.215 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5364.507 ops/s
[info]                  ·gc.alloc.rate:               585.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          171845.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 189548.774 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 5347.061 ops/s
[info]                  ·gc.alloc.rate:                   588.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              173336.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190774.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5368.225 ops/s
[info]                  ·gc.alloc.rate:               582.194 MB/sec
[info]                  ·gc.alloc.rate.norm:          170683.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190809.974 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 5386.499 ops/s
[info]                  ·gc.alloc.rate:                   579.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              169226.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95457.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.082 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5365.958 ±(99.9%) 54.196 ops/s [Average]
[info]   (min, avg, max) = (5347.061, 5365.958, 5386.499), stdev = 14.074
[info]   CI (99.9%): [5311.762, 5420.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   583.635 ±(99.9%) 14.533 MB/sec [Average]
[info]   (min, avg, max) = (579.251, 583.635, 588.910), stdev = 3.774
[info]   CI (99.9%): [569.102, 598.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   171167.685 ±(99.9%) 5886.024 B/op [Average]
[info]   (min, avg, max) = (169226.013, 171167.685, 173336.996), stdev = 1528.582
[info]   CI (99.9%): [165281.661, 177053.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   518.810 ±(99.9%) 683.401 MB/sec [Average]
[info]   (min, avg, max) = (322.075, 518.810, 650.845), stdev = 177.477
[info]   CI (99.9%): [≈ 0, 1202.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   152218.073 ±(99.9%) 201219.495 B/op [Average]
[info]   (min, avg, max) = (94498.881, 152218.073, 190809.974), stdev = 52256.064
[info]   CI (99.9%): [≈ 0, 353437.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.885 ±(99.9%) 19.676 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.885, 12.215), stdev = 5.110
[info]   CI (99.9%): [≈ 0, 24.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3265.645 ops/s
[info] # Warmup Iteration   2: 5960.080 ops/s
[info] # Warmup Iteration   3: 6801.659 ops/s
[info] Iteration   1: 6873.077 ops/s
[info]                  ·gc.alloc.rate:               227.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          52176.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58567.736 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 6868.878 ops/s
[info]                  ·gc.alloc.rate:      221.602 MB/sec
[info]                  ·gc.alloc.rate.norm: 50752.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6884.008 ops/s
[info]                  ·gc.alloc.rate:               230.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          52611.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74615.486 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 6882.213 ops/s
[info]                  ·gc.alloc.rate:                   231.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              52991.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74637.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6883.552 ops/s
[info]                  ·gc.alloc.rate:               230.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          52771.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74626.324 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6878.346 ±(99.9%) 26.644 ops/s [Average]
[info]   (min, avg, max) = (6868.878, 6878.346, 6884.008), stdev = 6.919
[info]   CI (99.9%): [6851.702, 6904.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   228.475 ±(99.9%) 15.777 MB/sec [Average]
[info]   (min, avg, max) = (221.602, 228.475, 231.773), stdev = 4.097
[info]   CI (99.9%): [212.697, 244.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   52260.812 ±(99.9%) 3445.158 B/op [Average]
[info]   (min, avg, max) = (50752.068, 52260.812, 52991.698), stdev = 894.697
[info]   CI (99.9%): [48815.654, 55705.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   247.049 ±(99.9%) 544.673 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.049, 326.511), stdev = 141.450
[info]   CI (99.9%): [≈ 0, 791.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   56489.342 ±(99.9%) 124510.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 56489.342, 74637.164), stdev = 32335.028
[info]   CI (99.9%): [≈ 0, 181000.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.070), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.213 ±(99.9%) 27.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.213, 16.063), stdev = 7.183
[info]   CI (99.9%): [≈ 0, 30.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 4.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3165.531 ops/s
[info] # Warmup Iteration   2: 6072.547 ops/s
[info] # Warmup Iteration   3: 6977.650 ops/s
[info] Iteration   1: 6952.251 ops/s
[info]                  ·gc.alloc.rate:      173.514 MB/sec
[info]                  ·gc.alloc.rate.norm: 39276.778 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6978.122 ops/s
[info]                  ·gc.alloc.rate:               178.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          40299.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57694.968 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 6970.731 ops/s
[info]                  ·gc.alloc.rate:               180.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          40761.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73995.897 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 7000.870 ops/s
[info]                  ·gc.alloc.rate:      174.588 MB/sec
[info]                  ·gc.alloc.rate.norm: 39248.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6949.706 ops/s
[info]                  ·gc.alloc.rate:                   180.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              40808.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74219.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6970.336 ±(99.9%) 80.445 ops/s [Average]
[info]   (min, avg, max) = (6949.706, 6970.336, 7000.870), stdev = 20.891
[info]   CI (99.9%): [6889.892, 7050.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   177.510 ±(99.9%) 12.536 MB/sec [Average]
[info]   (min, avg, max) = (173.514, 177.510, 180.553), stdev = 3.256
[info]   CI (99.9%): [164.974, 190.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   40079.105 ±(99.9%) 2971.395 B/op [Average]
[info]   (min, avg, max) = (39248.062, 40079.105, 40808.943), stdev = 771.662
[info]   CI (99.9%): [37107.710, 43050.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   182.264 ±(99.9%) 650.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 182.264, 327.762), stdev = 168.954
[info]   CI (99.9%): [≈ 0, 832.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   41182.063 ±(99.9%) 147042.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41182.063, 74219.449), stdev = 38186.441
[info]   CI (99.9%): [≈ 0, 188224.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.475 ±(99.9%) 21.314 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.475, 12.377), stdev = 5.535
[info]   CI (99.9%): [≈ 0, 23.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 4.000), stdev = 2.049
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 687.913 ops/s
[info] # Warmup Iteration   2: 4441.228 ops/s
[info] # Warmup Iteration   3: 6867.627 ops/s
[info] Iteration   1: 9057.672 ops/s
[info]                  ·gc.alloc.rate:                   1898.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              329806.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278030.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 743.785 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 9178.535 ops/s
[info]                  ·gc.alloc.rate:                   1928.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              330722.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     329079.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.529 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 9214.900 ops/s
[info]                  ·gc.alloc.rate:                   1933.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              330191.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328895.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 508.514 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 9258.893 ops/s
[info]                  ·gc.alloc.rate:                   1960.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              333254.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328635.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.615 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 9028.025 ops/s
[info]                  ·gc.alloc.rate:                   1895.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              330524.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     341048.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.670 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   9147.605 ±(99.9%) 386.302 ops/s [Average]
[info]   (min, avg, max) = (9028.025, 9147.605, 9258.893), stdev = 100.321
[info]   CI (99.9%): [8761.303, 9533.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1923.505 ±(99.9%) 103.656 MB/sec [Average]
[info]   (min, avg, max) = (1895.990, 1923.505, 1960.879), stdev = 26.919
[info]   CI (99.9%): [1819.849, 2027.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   330899.951 ±(99.9%) 5242.908 B/op [Average]
[info]   (min, avg, max) = (329806.632, 330899.951, 333254.822), stdev = 1361.567
[info]   CI (99.9%): [325657.043, 336142.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1867.098 ±(99.9%) 576.364 MB/sec [Average]
[info]   (min, avg, max) = (1600.519, 1867.098, 1956.358), stdev = 149.680
[info]   CI (99.9%): [1290.733, 2443.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   321137.912 ±(99.9%) 94989.413 B/op [Average]
[info]   (min, avg, max) = (278030.638, 321137.912, 341048.473), stdev = 24668.449
[info]   CI (99.9%): [226148.499, 416127.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.575 ±(99.9%) 7.461 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.575, 4.282), stdev = 1.938
[info]   CI (99.9%): [≈ 0, 9.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   271.623 ±(99.9%) 1290.779 B/op [Average]
[info]   (min, avg, max) = (10.615, 271.623, 743.785), stdev = 335.211
[info]   CI (99.9%): [≈ 0, 1562.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.600, 29.000), stdev = 8.503
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.795 ops/s
[info] # Warmup Iteration   2: 13076.654 ops/s
[info] # Warmup Iteration   3: 17208.440 ops/s
[info] Iteration   1: 17158.760 ops/s
[info]                  ·gc.alloc.rate:                   435.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              39904.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59269.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.975 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 17252.258 ops/s
[info]                  ·gc.alloc.rate:               432.247 MB/sec
[info]                  ·gc.alloc.rate.norm:          39420.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29473.159 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 17325.478 ops/s
[info]                  ·gc.alloc.rate:                   438.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              39787.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29347.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.962 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 17869.437 ops/s
[info]                  ·gc.alloc.rate:                   455.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              40099.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57028.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.833 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 15982.622 ops/s
[info]                  ·gc.alloc.rate:                   620.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              61121.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63826.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.492 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.930 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   17117.711 ±(99.9%) 2665.353 ops/s [Average]
[info]   (min, avg, max) = (15982.622, 17117.711, 17869.437), stdev = 692.184
[info]   CI (99.9%): [14452.358, 19783.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   476.326 ±(99.9%) 312.722 MB/sec [Average]
[info]   (min, avg, max) = (432.247, 476.326, 620.717), stdev = 81.213
[info]   CI (99.9%): [163.604, 789.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   44066.951 ±(99.9%) 36724.088 B/op [Average]
[info]   (min, avg, max) = (39420.585, 44066.951, 61121.741), stdev = 9537.129
[info]   CI (99.9%): [7342.862, 80791.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   517.685 ±(99.9%) 683.679 MB/sec [Average]
[info]   (min, avg, max) = (323.174, 517.685, 648.183), stdev = 177.549
[info]   CI (99.9%): [≈ 0, 1201.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   47788.933 ±(99.9%) 65288.839 B/op [Average]
[info]   (min, avg, max) = (29347.300, 47788.933, 63826.365), stdev = 16955.304
[info]   CI (99.9%): [≈ 0, 113077.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.313 ±(99.9%) 2.538 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.313, 1.492), stdev = 0.659
[info]   CI (99.9%): [≈ 0, 2.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   30.740 ±(99.9%) 250.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 30.740, 146.930), stdev = 64.961
[info]   CI (99.9%): [≈ 0, 280.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1703.038 ops/s
[info] # Warmup Iteration   2: 8707.237 ops/s
[info] # Warmup Iteration   3: 14877.108 ops/s
[info] Iteration   1: 15147.508 ops/s
[info]                  ·gc.alloc.rate:                   410.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              42601.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33256.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.333 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 15111.867 ops/s
[info]                  ·gc.alloc.rate:                   408.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              42554.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33336.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.193 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15066.218 ops/s
[info]                  ·gc.alloc.rate:               421.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          43998.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:      639.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66806.010 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 14560.262 ops/s
[info]                  ·gc.alloc.rate:               396.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          42833.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34525.317 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 14587.487 ops/s
[info]                  ·gc.alloc.rate:               400.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          43185.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34461.425 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14894.668 ±(99.9%) 1133.687 ops/s [Average]
[info]   (min, avg, max) = (14560.262, 14894.668, 15147.508), stdev = 294.415
[info]   CI (99.9%): [13760.982, 16028.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   407.393 ±(99.9%) 37.134 MB/sec [Average]
[info]   (min, avg, max) = (396.377, 407.393, 421.279), stdev = 9.644
[info]   CI (99.9%): [370.258, 444.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43034.800 ±(99.9%) 2287.472 B/op [Average]
[info]   (min, avg, max) = (42554.598, 43034.800, 43998.946), stdev = 594.049
[info]   CI (99.9%): [40747.328, 45322.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   383.810 ±(99.9%) 550.719 MB/sec [Average]
[info]   (min, avg, max) = (319.496, 383.810, 639.652), stdev = 143.020
[info]   CI (99.9%): [≈ 0, 934.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   40477.120 ±(99.9%) 56721.924 B/op [Average]
[info]   (min, avg, max) = (33256.816, 40477.120, 66806.010), stdev = 14730.504
[info]   CI (99.9%): [≈ 0, 97199.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.617 ±(99.9%) 4.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.617, 2.689), stdev = 1.171
[info]   CI (99.9%): [≈ 0, 5.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   64.105 ±(99.9%) 468.357 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 64.105, 279.333), stdev = 121.631
[info]   CI (99.9%): [≈ 0, 532.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8382.227 ops/s
[info] # Warmup Iteration   2: 20942.550 ops/s
[info] # Warmup Iteration   3: 23655.629 ops/s
[info] Iteration   1: 22023.855 ops/s
[info]                  ·gc.alloc.rate:               646.383 MB/sec
[info]                  ·gc.alloc.rate.norm:          46176.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46558.945 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 22553.066 ops/s
[info]                  ·gc.alloc.rate:                   428.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              29878.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45462.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.353 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 21049.123 ops/s
[info]                  ·gc.alloc.rate:               595.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          44527.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24356.530 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 23393.174 ops/s
[info]                  ·gc.alloc.rate:                   446.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              30040.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43875.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.086 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 23345.072 ops/s
[info]                  ·gc.alloc.rate:               438.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          29537.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22006.263 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22472.858 ±(99.9%) 3774.219 ops/s [Average]
[info]   (min, avg, max) = (21049.123, 22472.858, 23393.174), stdev = 980.153
[info]   CI (99.9%): [18698.639, 26247.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   511.019 ±(99.9%) 393.428 MB/sec [Average]
[info]   (min, avg, max) = (428.337, 511.019, 646.383), stdev = 102.172
[info]   CI (99.9%): [117.591, 904.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   36031.926 ±(99.9%) 32844.350 B/op [Average]
[info]   (min, avg, max) = (29537.248, 36031.926, 46176.123), stdev = 8529.573
[info]   CI (99.9%): [3187.577, 68876.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   521.606 ±(99.9%) 687.121 MB/sec [Average]
[info]   (min, avg, max) = (325.774, 521.606, 652.279), stdev = 178.443
[info]   CI (99.9%): [≈ 0, 1208.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   36452.041 ±(99.9%) 46901.878 B/op [Average]
[info]   (min, avg, max) = (22006.263, 36452.041, 46558.945), stdev = 12180.269
[info]   CI (99.9%): [≈ 0, 83353.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.554 ±(99.9%) 3.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 1.682), stdev = 0.787
[info]   CI (99.9%): [≈ 0, 3.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.076 ±(99.9%) 209.636 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.076, 117.353), stdev = 54.442
[info]   CI (99.9%): [≈ 0, 247.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94.782 ops/s
[info] # Warmup Iteration   2: 2073.636 ops/s
[info] # Warmup Iteration   3: 7270.936 ops/s
[info] Iteration   1: 8444.005 ops/s
[info]                  ·gc.alloc.rate:                   2648.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              493587.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487973.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 725.814 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 8498.834 ops/s
[info]                  ·gc.alloc.rate:                   2653.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              491308.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2621.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485371.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.801 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 8534.398 ops/s
[info]                  ·gc.alloc.rate:                   2663.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              491168.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2646.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     488053.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.515 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 8556.332 ops/s
[info]                  ·gc.alloc.rate:               2700.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          496538.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2339.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 430126.904 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 8527.356 ops/s
[info]                  ·gc.alloc.rate:                   2652.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              489490.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497302.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.736 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   8512.185 ±(99.9%) 166.730 ops/s [Average]
[info]   (min, avg, max) = (8444.005, 8512.185, 8556.332), stdev = 43.299
[info]   CI (99.9%): [8345.455, 8678.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2663.757 ±(99.9%) 81.531 MB/sec [Average]
[info]   (min, avg, max) = (2648.682, 2663.757, 2700.329), stdev = 21.173
[info]   CI (99.9%): [2582.226, 2745.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   492418.812 ±(99.9%) 10493.898 B/op [Average]
[info]   (min, avg, max) = (489490.724, 492418.812, 496538.720), stdev = 2725.232
[info]   CI (99.9%): [481924.914, 502912.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2584.173 ±(99.9%) 540.274 MB/sec [Average]
[info]   (min, avg, max) = (2339.162, 2584.173, 2694.666), stdev = 140.307
[info]   CI (99.9%): [2043.899, 3124.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   477765.773 ±(99.9%) 104021.537 B/op [Average]
[info]   (min, avg, max) = (430126.904, 477765.773, 497302.136), stdev = 27014.063
[info]   CI (99.9%): [373744.236, 581787.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.916 ±(99.9%) 6.447 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.916, 3.895), stdev = 1.674
[info]   CI (99.9%): [≈ 0, 7.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   170.573 ±(99.9%) 1201.744 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 170.573, 725.814), stdev = 312.089
[info]   CI (99.9%): [≈ 0, 1372.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.800, 18.000), stdev = 2.588
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1180.430 ops/s
[info] # Warmup Iteration   2: 9005.919 ops/s
[info] # Warmup Iteration   3: 10365.177 ops/s
[info] Iteration   1: 11978.601 ops/s
[info]                  ·gc.alloc.rate:                   2240.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              294331.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2239.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294241.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.641 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 609.699 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 12016.858 ops/s
[info]                  ·gc.alloc.rate:                   2251.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              294836.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2235.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292788.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.348 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 12033.833 ops/s
[info]                  ·gc.alloc.rate:                   2245.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              293680.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253410.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.722 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 11773.375 ops/s
[info]                  ·gc.alloc.rate:                   2220.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              296700.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307181.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.360 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 11682.113 ops/s
[info]                  ·gc.alloc.rate:                   2195.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              295777.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1996.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268897.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.414 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   11896.956 ±(99.9%) 612.506 ops/s [Average]
[info]   (min, avg, max) = (11682.113, 11896.956, 12033.833), stdev = 159.066
[info]   CI (99.9%): [11284.451, 12509.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2230.588 ±(99.9%) 87.433 MB/sec [Average]
[info]   (min, avg, max) = (2195.798, 2230.588, 2251.108), stdev = 22.706
[info]   CI (99.9%): [2143.156, 2318.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   295065.184 ±(99.9%) 4592.334 B/op [Average]
[info]   (min, avg, max) = (293680.216, 295065.184, 296700.042), stdev = 1192.614
[info]   CI (99.9%): [290472.851, 299657.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2141.516 ±(99.9%) 626.092 MB/sec [Average]
[info]   (min, avg, max) = (1937.707, 2141.516, 2298.525), stdev = 162.594
[info]   CI (99.9%): [1515.425, 2767.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   283304.094 ±(99.9%) 83499.001 B/op [Average]
[info]   (min, avg, max) = (253410.948, 283304.094, 307181.564), stdev = 21684.425
[info]   CI (99.9%): [199805.093, 366803.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.033 ±(99.9%) 7.783 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.033, 4.641), stdev = 2.021
[info]   CI (99.9%): [≈ 0, 8.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   135.709 ±(99.9%) 1022.425 B/op [Average]
[info]   (min, avg, max) = (2.722, 135.709, 609.699), stdev = 265.520
[info]   CI (99.9%): [≈ 0, 1158.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.800, 21.000), stdev = 5.215
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.691 ops/s
[info] # Warmup Iteration   2: 50487.439 ops/s
[info] # Warmup Iteration   3: 63334.363 ops/s
[info] Iteration   1: 63162.587 ops/s
[info]                  ·gc.alloc.rate:                   749.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              18678.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16133.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.474 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 65865.874 ops/s
[info]                  ·gc.alloc.rate:                   641.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              15322.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15471.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.896 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 65436.558 ops/s
[info]                  ·gc.alloc.rate:                   631.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              15187.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15604.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 64941.761 ops/s
[info]                  ·gc.alloc.rate:                   627.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              15203.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15723.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 64739.323 ops/s
[info]                  ·gc.alloc.rate:                   623.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              15152.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15806.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.937 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   64829.221 ±(99.9%) 3965.380 ops/s [Average]
[info]   (min, avg, max) = (63162.587, 64829.221, 65865.874), stdev = 1029.797
[info]   CI (99.9%): [60863.840, 68794.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   654.666 ±(99.9%) 206.182 MB/sec [Average]
[info]   (min, avg, max) = (623.298, 654.666, 749.688), stdev = 53.545
[info]   CI (99.9%): [448.484, 860.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15909.062 ±(99.9%) 5967.036 B/op [Average]
[info]   (min, avg, max) = (15152.173, 15909.062, 18678.750), stdev = 1549.620
[info]   CI (99.9%): [9942.026, 21876.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   648.623 ±(99.9%) 4.117 MB/sec [Average]
[info]   (min, avg, max) = (647.551, 648.623, 650.195), stdev = 1.069
[info]   CI (99.9%): [644.505, 652.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   15748.025 ±(99.9%) 962.502 B/op [Average]
[info]   (min, avg, max) = (15471.498, 15748.025, 16133.981), stdev = 249.959
[info]   CI (99.9%): [14785.523, 16710.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.112 ±(99.9%) 6.640 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 1.112, 4.070), stdev = 1.724
[info]   CI (99.9%): [≈ 0, 7.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   26.960 ±(99.9%) 161.323 B/op [Average]
[info]   (min, avg, max) = (0.316, 26.960, 98.937), stdev = 41.895
[info]   CI (99.9%): [≈ 0, 188.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4179.126 ops/s
[info] # Warmup Iteration   2: 36868.872 ops/s
[info] # Warmup Iteration   3: 47031.705 ops/s
[info] Iteration   1: 43223.371 ops/s
[info]                  ·gc.alloc.rate:               883.634 MB/sec
[info]                  ·gc.alloc.rate.norm:          32169.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:      966.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35171.649 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 46881.952 ops/s
[info]                  ·gc.alloc.rate:                   724.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              24306.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21736.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 46740.300 ops/s
[info]                  ·gc.alloc.rate:               723.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          24366.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21881.784 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 47118.891 ops/s
[info]                  ·gc.alloc.rate:                   724.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              24193.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21783.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.695 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 47152.358 ops/s
[info]                  ·gc.alloc.rate:                   729.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              24345.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21845.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.167 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   46223.374 ±(99.9%) 6490.910 ops/s [Average]
[info]   (min, avg, max) = (43223.371, 46223.374, 47152.358), stdev = 1685.669
[info]   CI (99.9%): [39732.465, 52714.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   757.083 ±(99.9%) 272.559 MB/sec [Average]
[info]   (min, avg, max) = (723.786, 757.083, 883.634), stdev = 70.783
[info]   CI (99.9%): [484.524, 1029.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   25876.228 ±(99.9%) 13548.756 B/op [Average]
[info]   (min, avg, max) = (24193.392, 25876.228, 32169.301), stdev = 3518.569
[info]   CI (99.9%): [12327.472, 39424.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   714.094 ±(99.9%) 542.563 MB/sec [Average]
[info]   (min, avg, max) = (647.502, 714.094, 966.103), stdev = 140.902
[info]   CI (99.9%): [171.532, 1256.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24483.938 ±(99.9%) 23007.108 B/op [Average]
[info]   (min, avg, max) = (21736.780, 24483.938, 35171.649), stdev = 5974.873
[info]   CI (99.9%): [1476.830, 47491.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 3.854 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 2.032), stdev = 1.001
[info]   CI (99.9%): [≈ 0, 4.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.413 ±(99.9%) 129.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.413, 68.201), stdev = 33.536
[info]   CI (99.9%): [≈ 0, 153.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:28:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36281.565 ops/s
[info] # Warmup Iteration   2: 91586.397 ops/s
[info] # Warmup Iteration   3: 99495.810 ops/s
[info] Iteration   1: 105155.136 ops/s
[info]                  ·gc.alloc.rate:                   808.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              12105.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9825.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.521 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 102313.083 ops/s
[info]                  ·gc.alloc.rate:                   803.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              12354.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15155.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 103756.065 ops/s
[info]                  ·gc.alloc.rate:                   800.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              12145.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9982.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 104222.216 ops/s
[info]                  ·gc.alloc.rate:                   808.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              12210.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14888.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.841 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 104292.323 ops/s
[info]                  ·gc.alloc.rate:                   804.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              12135.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9872.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.257 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   103947.765 ±(99.9%) 4020.523 ops/s [Average]
[info]   (min, avg, max) = (102313.083, 103947.765, 105155.136), stdev = 1044.117
[info]   CI (99.9%): [99927.242, 107968.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   805.220 ±(99.9%) 13.565 MB/sec [Average]
[info]   (min, avg, max) = (800.936, 805.220, 808.991), stdev = 3.523
[info]   CI (99.9%): [791.655, 818.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12190.294 ±(99.9%) 382.074 B/op [Average]
[info]   (min, avg, max) = (12105.762, 12190.294, 12354.032), stdev = 99.224
[info]   CI (99.9%): [11808.219, 12572.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   788.115 ±(99.9%) 694.290 MB/sec [Average]
[info]   (min, avg, max) = (654.361, 788.115, 986.035), stdev = 180.305
[info]   CI (99.9%): [93.825, 1482.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11945.013 ±(99.9%) 10824.623 B/op [Average]
[info]   (min, avg, max) = (9825.820, 11945.013, 15155.320), stdev = 2811.120
[info]   CI (99.9%): [1120.389, 22769.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.863 ±(99.9%) 7.101 MB/sec [Average]
[info]   (min, avg, max) = (0.018, 0.863, 4.162), stdev = 1.844
[info]   CI (99.9%): [≈ 0, 7.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.033 ±(99.9%) 107.227 B/op [Average]
[info]   (min, avg, max) = (0.267, 13.033, 62.841), stdev = 27.846
[info]   CI (99.9%): [≈ 0, 120.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35087.655 ops/s
[info] # Warmup Iteration   2: 121146.289 ops/s
[info] # Warmup Iteration   3: 125626.488 ops/s
[info] Iteration   1: 137803.539 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 137836.844 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 132132.658 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 137575.166 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 129542.190 ops/s
[info]                  ·gc.alloc.rate:      0.812 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.863 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   134978.079 ±(99.9%) 14981.175 ops/s [Average]
[info]   (min, avg, max) = (129542.190, 134978.079, 137836.844), stdev = 3890.564
[info]   CI (99.9%): [119996.905, 149959.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.163 ±(99.9%) 1.398 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.163, 0.812), stdev = 0.363
[info]   CI (99.9%): [≈ 0, 1.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.976 ±(99.9%) 16.978 B/op [Average]
[info]   (min, avg, max) = (0.003, 1.976, 9.863), stdev = 4.409
[info]   CI (99.9%): [≈ 0, 18.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 306.832 ops/s
[info] # Warmup Iteration   2: 7031.232 ops/s
[info] # Warmup Iteration   3: 8848.243 ops/s
[info] Iteration   1: 8978.915 ops/s
[info]                  ·gc.alloc.rate:                   2365.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              414628.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402162.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 197.024 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 9142.819 ops/s
[info]                  ·gc.alloc.rate:                   2394.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              412093.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     396440.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.958 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 9230.340 ops/s
[info]                  ·gc.alloc.rate:               2462.972 MB/sec
[info]                  ·gc.alloc.rate.norm:          419961.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2657.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 453072.971 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 9086.145 ops/s
[info]                  ·gc.alloc.rate:                   2415.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              418377.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406484.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.211 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 9142.138 ops/s
[info]                  ·gc.alloc.rate:                   2394.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              412188.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348263.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.167 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   9116.071 ±(99.9%) 355.844 ops/s [Average]
[info]   (min, avg, max) = (8978.915, 9116.071, 9230.340), stdev = 92.412
[info]   CI (99.9%): [8760.228, 9471.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2406.586 ±(99.9%) 138.955 MB/sec [Average]
[info]   (min, avg, max) = (2365.994, 2406.586, 2462.972), stdev = 36.086
[info]   CI (99.9%): [2267.630, 2545.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   415449.945 ±(99.9%) 13817.176 B/op [Average]
[info]   (min, avg, max) = (412093.173, 415449.945, 419961.800), stdev = 3588.277
[info]   CI (99.9%): [401632.769, 429267.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2325.009 ±(99.9%) 868.199 MB/sec [Average]
[info]   (min, avg, max) = (2023.082, 2325.009, 2657.161), stdev = 225.469
[info]   CI (99.9%): [1456.810, 3193.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   401284.963 ±(99.9%) 143362.185 B/op [Average]
[info]   (min, avg, max) = (348263.923, 401284.963, 453072.971), stdev = 37230.704
[info]   CI (99.9%): [257922.779, 544647.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.302 ±(99.9%) 1.829 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.302, 1.124), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   52.672 ±(99.9%) 320.725 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.672, 197.024), stdev = 83.291
[info]   CI (99.9%): [≈ 0, 373.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.600, 13.000), stdev = 1.517
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 704587.829 ops/s
[info] # Warmup Iteration   2: 10758657.753 ops/s
[info] # Warmup Iteration   3: 10516745.795 ops/s
[info] Iteration   1: 11974455.647 ops/s
[info]                  ·gc.alloc.rate:                   5279.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              693.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5010.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     658.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        15.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 12000980.139 ops/s
[info]                  ·gc.alloc.rate:                   5345.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              700.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5415.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     709.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        16.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 11684463.271 ops/s
[info]                  ·gc.alloc.rate:                   5179.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              697.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4757.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 11970230.031 ops/s
[info]                  ·gc.alloc.rate:                   5324.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              700.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5106.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     671.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        15.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 11726993.079 ops/s
[info]                  ·gc.alloc.rate:                   5223.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              700.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5103.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        15.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   11871424.433 ±(99.9%) 587073.416 ops/s [Average]
[info]   (min, avg, max) = (11684463.271, 11871424.433, 12000980.139), stdev = 152461.102
[info]   CI (99.9%): [11284351.017, 12458497.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   5270.529 ±(99.9%) 265.825 MB/sec [Average]
[info]   (min, avg, max) = (5179.457, 5270.529, 5345.045), stdev = 69.034
[info]   CI (99.9%): [5004.703, 5536.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   698.580 ±(99.9%) 11.388 B/op [Average]
[info]   (min, avg, max) = (693.859, 698.580, 700.838), stdev = 2.957
[info]   CI (99.9%): [687.192, 709.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   5078.840 ±(99.9%) 909.122 MB/sec [Average]
[info]   (min, avg, max) = (4757.214, 5078.840, 5415.792), stdev = 236.096
[info]   CI (99.9%): [4169.718, 5987.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   673.041 ±(99.9%) 101.133 B/op [Average]
[info]   (min, avg, max) = (640.640, 673.041, 709.912), stdev = 26.264
[info]   CI (99.9%): [571.909, 774.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.238 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.112, 0.187), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.015, 0.025), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   75.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (14.000, 15.000, 16.000), stdev = 0.707
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 19.400, 21.000), stdev = 1.140
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.569 ops/s
[info] # Warmup Iteration   2: 37428504.585 ops/s
[info] # Warmup Iteration   3: 41610113.855 ops/s
[info] Iteration   1: 43415304.887 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 43402248.140 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 43409623.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 43226523.103 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 42886015.828 ops/s
[info]                  ·gc.alloc.rate:      1.518 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.056 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   43267943.135 ±(99.9%) 876837.353 ops/s [Average]
[info]   (min, avg, max) = (42886015.828, 43267943.135, 43415304.887), stdev = 227711.876
[info]   CI (99.9%): [42391105.782, 44144780.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   0.304 ±(99.9%) 2.613 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.304, 1.518), stdev = 0.679
[info]   CI (99.9%): [≈ 0, 2.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   0.011 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.011, 0.056), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 264061.155 ops/s
[info] # Warmup Iteration   2: 17776213.785 ops/s
[info] # Warmup Iteration   3: 21093314.217 ops/s
[info] Iteration   1: 24387825.585 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 25242529.576 ops/s
[info]                  ·gc.alloc.rate:      0.080 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 25293373.531 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 25207570.339 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 25227013.527 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   25071662.512 ±(99.9%) 1477098.613 ops/s [Average]
[info]   (min, avg, max) = (24387825.585, 25071662.512, 25293373.531), stdev = 383597.819
[info]   CI (99.9%): [23594563.899, 26548761.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   0.016 ±(99.9%) 0.138 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.080), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7904306.032 ops/s
[info] # Warmup Iteration   2: 44244622.120 ops/s
[info] # Warmup Iteration   3: 48184056.077 ops/s
[info] Iteration   1: 48113880.050 ops/s
[info]                  ·gc.alloc.rate:      0.385 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 47610917.336 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48038082.651 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 47848404.012 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48261776.535 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   47974612.117 ±(99.9%) 970503.313 ops/s [Average]
[info]   (min, avg, max) = (47610917.336, 47974612.117, 48261776.535), stdev = 252036.628
[info]   CI (99.9%): [47004108.804, 48945115.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.077 ±(99.9%) 0.662 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.077, 0.385), stdev = 0.172
[info]   CI (99.9%): [≈ 0, 0.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5192170.174 ops/s
[info] # Warmup Iteration   2: 28593918.357 ops/s
[info] # Warmup Iteration   3: 31334733.744 ops/s
[info] Iteration   1: 31222558.238 ops/s
[info]                  ·gc.alloc.rate:                   820.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 31332086.011 ops/s
[info]                  ·gc.alloc.rate:               817.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          41.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.143 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 30950783.898 ops/s
[info]                  ·gc.alloc.rate:                   832.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              42.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 31086738.022 ops/s
[info]                  ·gc.alloc.rate:                   816.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 31233322.715 ops/s
[info]                  ·gc.alloc.rate:                   808.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31165097.777 ±(99.9%) 570857.498 ops/s [Average]
[info]   (min, avg, max) = (30950783.898, 31165097.777, 31332086.011), stdev = 148249.879
[info]   CI (99.9%): [30594240.279, 31735955.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   818.963 ±(99.9%) 33.591 MB/sec [Average]
[info]   (min, avg, max) = (808.553, 818.963, 832.538), stdev = 8.724
[info]   CI (99.9%): [785.372, 852.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.357 ±(99.9%) 2.314 B/op [Average]
[info]   (min, avg, max) = (40.735, 41.357, 42.336), stdev = 0.601
[info]   CI (99.9%): [39.043, 43.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   791.721 ±(99.9%) 696.862 MB/sec [Average]
[info]   (min, avg, max) = (658.328, 791.721, 991.983), stdev = 180.973
[info]   CI (99.9%): [94.859, 1488.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   39.983 ±(99.9%) 35.257 B/op [Average]
[info]   (min, avg, max) = (33.143, 39.983, 50.220), stdev = 9.156
[info]   CI (99.9%): [4.726, 75.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.781 ±(99.9%) 6.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.781, 3.594), stdev = 1.576
[info]   CI (99.9%): [≈ 0, 6.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.182), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.236
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638507.810 ops/s
[info] # Warmup Iteration   2: 20516916.522 ops/s
[info] # Warmup Iteration   3: 25540793.344 ops/s
[info] Iteration   1: 25498003.611 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 24569701.170 ops/s
[info]                  ·gc.alloc.rate:      1.045 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.067 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 25401792.822 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 25536854.150 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 25544755.313 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   25310221.413 ±(99.9%) 1608982.080 ops/s [Average]
[info]   (min, avg, max) = (24569701.170, 25310221.413, 25544755.313), stdev = 417847.537
[info]   CI (99.9%): [23701239.333, 26919203.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   0.209 ±(99.9%) 1.799 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.209, 1.045), stdev = 0.467
[info]   CI (99.9%): [≈ 0, 2.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   0.013 ±(99.9%) 0.115 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.013, 0.067), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1079413.271 ops/s
[info] # Warmup Iteration   2: 18275625.091 ops/s
[info] # Warmup Iteration   3: 20681108.594 ops/s
[info] Iteration   1: 20689745.619 ops/s
[info]                  ·gc.alloc.rate:                   1622.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 20797223.992 ops/s
[info]                  ·gc.alloc.rate:                   1623.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              122.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 20838111.292 ops/s
[info]                  ·gc.alloc.rate:                   1633.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 20665167.603 ops/s
[info]                  ·gc.alloc.rate:                   1631.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 20857399.268 ops/s
[info]                  ·gc.alloc.rate:                   1626.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              122.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   20769529.555 ±(99.9%) 335958.567 ops/s [Average]
[info]   (min, avg, max) = (20665167.603, 20769529.555, 20857399.268), stdev = 87247.373
[info]   CI (99.9%): [20433570.987, 21105488.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1627.552 ±(99.9%) 19.294 MB/sec [Average]
[info]   (min, avg, max) = (1622.162, 1627.552, 1633.917), stdev = 5.011
[info]   CI (99.9%): [1608.258, 1646.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   123.313 ±(99.9%) 2.284 B/op [Average]
[info]   (min, avg, max) = (122.693, 123.313, 124.208), stdev = 0.593
[info]   CI (99.9%): [121.029, 125.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1574.775 ±(99.9%) 580.097 MB/sec [Average]
[info]   (min, avg, max) = (1305.750, 1574.775, 1655.126), stdev = 150.649
[info]   CI (99.9%): [994.678, 2154.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   119.320 ±(99.9%) 44.246 B/op [Average]
[info]   (min, avg, max) = (98.810, 119.320, 124.942), stdev = 11.491
[info]   CI (99.9%): [75.074, 163.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.914 ±(99.9%) 6.634 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.914, 3.989), stdev = 1.723
[info]   CI (99.9%): [≈ 0, 7.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.070 ±(99.9%) 0.505 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.070, 0.303), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 17.000), stdev = 4.722
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.645 ops/s
[info] # Warmup Iteration   2: 49538649.298 ops/s
[info] # Warmup Iteration   3: 57463129.190 ops/s
[info] Iteration   1: 54583263.636 ops/s
[info]                  ·gc.alloc.rate:                   1171.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 58010037.909 ops/s
[info]                  ·gc.alloc.rate:                   1218.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 57349126.926 ops/s
[info]                  ·gc.alloc.rate:                   1218.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 57835523.454 ops/s
[info]                  ·gc.alloc.rate:                   1215.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 58111582.326 ops/s
[info]                  ·gc.alloc.rate:                   1209.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   57177906.850 ±(99.9%) 5697828.058 ops/s [Average]
[info]   (min, avg, max) = (54583263.636, 57177906.850, 58111582.326), stdev = 1479707.852
[info]   CI (99.9%): [51480078.792, 62875734.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1206.794 ±(99.9%) 77.925 MB/sec [Average]
[info]   (min, avg, max) = (1171.156, 1206.794, 1218.924), stdev = 20.237
[info]   CI (99.9%): [1128.869, 1284.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.222 ±(99.9%) 1.503 B/op [Average]
[info]   (min, avg, max) = (32.764, 33.222, 33.766), stdev = 0.390
[info]   CI (99.9%): [31.719, 34.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1168.333 ±(99.9%) 688.705 MB/sec [Average]
[info]   (min, avg, max) = (969.569, 1168.333, 1303.695), stdev = 178.855
[info]   CI (99.9%): [479.627, 1857.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   32.112 ±(99.9%) 17.277 B/op [Average]
[info]   (min, avg, max) = (26.376, 32.112, 35.611), stdev = 4.487
[info]   CI (99.9%): [14.835, 49.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.989 ±(99.9%) 6.859 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.989, 4.136), stdev = 1.781
[info]   CI (99.9%): [≈ 0, 7.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.027, 0.112), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.147
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 857239.791 ops/s
[info] # Warmup Iteration   2: 23554590.428 ops/s
[info] # Warmup Iteration   3: 27011143.184 ops/s
[info] Iteration   1: 27103278.114 ops/s
[info]                  ·gc.alloc.rate:                   566.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 26380981.529 ops/s
[info]                  ·gc.alloc.rate:                   590.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              35.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27717563.087 ops/s
[info]                  ·gc.alloc.rate:               571.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 27072287.742 ops/s
[info]                  ·gc.alloc.rate:                   570.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 26896256.630 ops/s
[info]                  ·gc.alloc.rate:               564.578 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.007 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   27034073.420 ±(99.9%) 1845629.978 ops/s [Average]
[info]   (min, avg, max) = (26380981.529, 27034073.420, 27717563.087), stdev = 479304.244
[info]   CI (99.9%): [25188443.442, 28879703.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   572.658 ±(99.9%) 40.632 MB/sec [Average]
[info]   (min, avg, max) = (564.578, 572.658, 590.823), stdev = 10.552
[info]   CI (99.9%): [532.027, 613.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33.348 ±(99.9%) 4.201 B/op [Average]
[info]   (min, avg, max) = (32.441, 33.348, 35.239), stdev = 1.091
[info]   CI (99.9%): [29.147, 37.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.233 ±(99.9%) 557.916 MB/sec [Average]
[info]   (min, avg, max) = (322.083, 581.233, 649.542), stdev = 144.889
[info]   CI (99.9%): [23.317, 1139.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   33.936 ±(99.9%) 33.716 B/op [Average]
[info]   (min, avg, max) = (18.288, 33.936, 38.410), stdev = 8.756
[info]   CI (99.9%): [0.219, 67.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9812746.886 ops/s
[info] # Warmup Iteration   2: 44835314.879 ops/s
[info] # Warmup Iteration   3: 47789462.349 ops/s
[info] Iteration   1: 48242647.846 ops/s
[info]                  ·gc.alloc.rate:                   1005.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 48715685.490 ops/s
[info]                  ·gc.alloc.rate:                   1017.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 49135948.332 ops/s
[info]                  ·gc.alloc.rate:                   1032.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 49598424.055 ops/s
[info]                  ·gc.alloc.rate:                   1040.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 50500566.700 ops/s
[info]                  ·gc.alloc.rate:                   1066.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   49238654.485 ±(99.9%) 3333605.290 ops/s [Average]
[info]   (min, avg, max) = (48242647.846, 49238654.485, 50500566.700), stdev = 865726.708
[info]   CI (99.9%): [45905049.194, 52572259.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1032.340 ±(99.9%) 90.013 MB/sec [Average]
[info]   (min, avg, max) = (1005.337, 1032.340, 1066.221), stdev = 23.376
[info]   CI (99.9%): [942.327, 1122.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.991 ±(99.9%) 0.641 B/op [Average]
[info]   (min, avg, max) = (32.798, 32.991, 33.212), stdev = 0.166
[info]   CI (99.9%): [32.350, 33.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1049.497 ±(99.9%) 552.866 MB/sec [Average]
[info]   (min, avg, max) = (982.045, 1049.497, 1306.306), stdev = 143.578
[info]   CI (99.9%): [496.631, 1602.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   33.498 ±(99.9%) 15.544 B/op [Average]
[info]   (min, avg, max) = (31.159, 33.498, 40.691), stdev = 4.037
[info]   CI (99.9%): [17.954, 49.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.877 ±(99.9%) 6.554 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.877, 3.916), stdev = 1.702
[info]   CI (99.9%): [≈ 0, 7.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.210 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.028, 0.125), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16746063.808 ops/s
[info] # Warmup Iteration   2: 62969333.225 ops/s
[info] # Warmup Iteration   3: 65412614.408 ops/s
[info] Iteration   1: 65346085.480 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 64848953.381 ops/s
[info]                  ·gc.alloc.rate:      0.066 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 65589828.137 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 65600777.884 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 65550287.756 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   65387186.528 ±(99.9%) 1224769.800 ops/s [Average]
[info]   (min, avg, max) = (64848953.381, 65387186.528, 65600777.884), stdev = 318068.828
[info]   CI (99.9%): [64162416.727, 66611956.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.014 ±(99.9%) 0.114 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.014, 0.066), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5131285.037 ops/s
[info] # Warmup Iteration   2: 23805594.969 ops/s
[info] # Warmup Iteration   3: 25699891.859 ops/s
[info] Iteration   1: 26266215.008 ops/s
[info]                  ·gc.alloc.rate:                   2063.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 25760827.956 ops/s
[info]                  ·gc.alloc.rate:                   2037.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 26422756.879 ops/s
[info]                  ·gc.alloc.rate:                   2074.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 26183211.399 ops/s
[info]                  ·gc.alloc.rate:                   2069.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 26101444.161 ops/s
[info]                  ·gc.alloc.rate:                   2070.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   26146891.081 ±(99.9%) 948637.729 ops/s [Average]
[info]   (min, avg, max) = (25760827.956, 26146891.081, 26422756.879), stdev = 246358.206
[info]   CI (99.9%): [25198253.352, 27095528.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2063.216 ±(99.9%) 57.312 MB/sec [Average]
[info]   (min, avg, max) = (2037.457, 2063.216, 2074.407), stdev = 14.884
[info]   CI (99.9%): [2005.904, 2120.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   124.185 ±(99.9%) 2.119 B/op [Average]
[info]   (min, avg, max) = (123.568, 124.185, 124.850), stdev = 0.550
[info]   CI (99.9%): [122.066, 126.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1996.931 ±(99.9%) 57.024 MB/sec [Average]
[info]   (min, avg, max) = (1981.700, 1996.931, 2018.051), stdev = 14.809
[info]   CI (99.9%): [1939.907, 2053.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   120.200 ±(99.9%) 4.990 B/op [Average]
[info]   (min, avg, max) = (118.641, 120.200, 121.675), stdev = 1.296
[info]   CI (99.9%): [115.210, 125.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.652 ±(99.9%) 5.303 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.652, 3.115), stdev = 1.377
[info]   CI (99.9%): [≈ 0, 5.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.318 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.039, 0.187), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 10.000), stdev = 0.894
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274778.888 ops/s
[info] # Warmup Iteration   2: 1739182.656 ops/s
[info] # Warmup Iteration   3: 2786769.051 ops/s
[info] Iteration   1: 3577324.934 ops/s
[info]                  ·gc.alloc.rate:                   1478.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              650.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     571.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.160 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 3642613.749 ops/s
[info]                  ·gc.alloc.rate:                   1510.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              652.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     698.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3657585.364 ops/s
[info]                  ·gc.alloc.rate:                   1503.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              646.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3675153.023 ops/s
[info]                  ·gc.alloc.rate:                   1508.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              645.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.749 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 3684384.319 ops/s
[info]                  ·gc.alloc.rate:                   1544.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              659.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   3647412.278 ±(99.9%) 163087.773 ops/s [Average]
[info]   (min, avg, max) = (3577324.934, 3647412.278, 3684384.319), stdev = 42353.377
[info]   CI (99.9%): [3484324.505, 3810500.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1509.077 ±(99.9%) 90.883 MB/sec [Average]
[info]   (min, avg, max) = (1478.603, 1509.077, 1544.674), stdev = 23.602
[info]   CI (99.9%): [1418.194, 1599.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   651.101 ±(99.9%) 20.767 B/op [Average]
[info]   (min, avg, max) = (645.994, 651.101, 659.525), stdev = 5.393
[info]   CI (99.9%): [630.334, 671.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1490.059 ±(99.9%) 683.675 MB/sec [Average]
[info]   (min, avg, max) = (1292.269, 1490.059, 1624.229), stdev = 177.548
[info]   CI (99.9%): [806.384, 2173.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   642.509 ±(99.9%) 277.634 B/op [Average]
[info]   (min, avg, max) = (556.059, 642.509, 698.255), stdev = 72.101
[info]   CI (99.9%): [364.875, 920.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.444 ±(99.9%) 4.666 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.444, 3.160), stdev = 1.212
[info]   CI (99.9%): [≈ 0, 6.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.627 ±(99.9%) 2.050 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.627, 1.390), stdev = 0.532
[info]   CI (99.9%): [≈ 0, 2.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.600, 24.000), stdev = 6.731
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40293.429 ops/s
[info] # Warmup Iteration   2: 160464.029 ops/s
[info] # Warmup Iteration   3: 180559.646 ops/s
[info] Iteration   1: 203711.027 ops/s
[info]                  ·gc.alloc.rate:                   3826.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              29561.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3612.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27906.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 202280.226 ops/s
[info]                  ·gc.alloc.rate:                   3837.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              29852.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3672.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28571.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 200906.619 ops/s
[info]                  ·gc.alloc.rate:                   3841.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              30095.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3712.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29082.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 202157.942 ops/s
[info]                  ·gc.alloc.rate:                   3856.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              30016.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3731.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29048.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.324 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 200571.211 ops/s
[info]                  ·gc.alloc.rate:                   3829.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              30044.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29335.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   201925.405 ±(99.9%) 4809.524 ops/s [Average]
[info]   (min, avg, max) = (200571.211, 201925.405, 203711.027), stdev = 1249.018
[info]   CI (99.9%): [197115.881, 206734.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3838.253 ±(99.9%) 45.170 MB/sec [Average]
[info]   (min, avg, max) = (3826.699, 3838.253, 3856.064), stdev = 11.731
[info]   CI (99.9%): [3793.083, 3883.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29914.062 ±(99.9%) 836.261 B/op [Average]
[info]   (min, avg, max) = (29561.235, 29914.062, 30095.431), stdev = 217.174
[info]   CI (99.9%): [29077.801, 30750.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3693.658 ±(99.9%) 200.587 MB/sec [Average]
[info]   (min, avg, max) = (3612.446, 3693.658, 3738.656), stdev = 52.092
[info]   CI (99.9%): [3493.070, 3894.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28788.809 ±(99.9%) 2177.077 B/op [Average]
[info]   (min, avg, max) = (27906.137, 28788.809, 29335.330), stdev = 565.380
[info]   CI (99.9%): [26611.732, 30965.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.356 ±(99.9%) 0.516 B/op [Average]
[info]   (min, avg, max) = (0.163, 0.356, 0.486), stdev = 0.134
[info]   CI (99.9%): [≈ 0, 0.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.000, 11.000), stdev = 0.001
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 14.000), stdev = 0.447
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1386.316 ops/s
[info] # Warmup Iteration   2: 23610.112 ops/s
[info] # Warmup Iteration   3: 44407.261 ops/s
[info] Iteration   1: 43490.878 ops/s
[info]                  ·gc.alloc.rate:                   2822.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              102120.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2625.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94990.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.863 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.217 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 41445.919 ops/s
[info]                  ·gc.alloc.rate:                   2792.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              106028.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2979.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113134.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.649 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.570 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 44855.186 ops/s
[info]                  ·gc.alloc.rate:                   2785.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              97698.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93680.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.652 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 45147.470 ops/s
[info]                  ·gc.alloc.rate:                   2799.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              97597.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2689.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93750.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.903 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 45705.769 ops/s
[info]                  ·gc.alloc.rate:                   2828.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              97403.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93087.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.434 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   44129.044 ±(99.9%) 6573.489 ops/s [Average]
[info]   (min, avg, max) = (41445.919, 44129.044, 45705.769), stdev = 1707.114
[info]   CI (99.9%): [37555.556, 50702.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2805.819 ±(99.9%) 72.602 MB/sec [Average]
[info]   (min, avg, max) = (2785.585, 2805.819, 2828.967), stdev = 18.854
[info]   CI (99.9%): [2733.217, 2878.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   100169.645 ±(99.9%) 14727.337 B/op [Average]
[info]   (min, avg, max) = (97403.674, 100169.645, 106028.877), stdev = 3824.643
[info]   CI (99.9%): [85442.308, 114896.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2733.789 ±(99.9%) 541.595 MB/sec [Average]
[info]   (min, avg, max) = (2625.110, 2733.789, 2979.761), stdev = 140.650
[info]   CI (99.9%): [2192.194, 3275.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   97728.657 ±(99.9%) 33268.880 B/op [Average]
[info]   (min, avg, max) = (93087.471, 97728.657, 113134.301), stdev = 8639.823
[info]   CI (99.9%): [64459.777, 130997.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.748 ±(99.9%) 4.297 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.748, 2.649), stdev = 1.116
[info]   CI (99.9%): [≈ 0, 5.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.955 ±(99.9%) 163.427 B/op [Average]
[info]   (min, avg, max) = (1.434, 27.955, 100.570), stdev = 42.442
[info]   CI (99.9%): [≈ 0, 191.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 15.000), stdev = 1.517
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27936.723 ops/s
[info] # Warmup Iteration   2: 171541.888 ops/s
[info] # Warmup Iteration   3: 215112.084 ops/s
[info] Iteration   1: 227259.999 ops/s
[info]                  ·gc.alloc.rate:                   843.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              5840.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6696.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 229149.209 ops/s
[info]                  ·gc.alloc.rate:                   834.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              5727.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4442.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 230732.734 ops/s
[info]                  ·gc.alloc.rate:                   846.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              5770.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6654.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 231202.451 ops/s
[info]                  ·gc.alloc.rate:                   841.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              5727.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4448.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.535 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 228033.654 ops/s
[info]                  ·gc.alloc.rate:                   836.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              5774.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6793.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   229275.609 ±(99.9%) 6516.879 ops/s [Average]
[info]   (min, avg, max) = (227259.999, 229275.609, 231202.451), stdev = 1692.413
[info]   CI (99.9%): [222758.730, 235792.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   840.424 ±(99.9%) 19.023 MB/sec [Average]
[info]   (min, avg, max) = (834.113, 840.424, 846.306), stdev = 4.940
[info]   CI (99.9%): [821.401, 859.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5768.222 ±(99.9%) 178.962 B/op [Average]
[info]   (min, avg, max) = (5727.191, 5768.222, 5840.933), stdev = 46.476
[info]   CI (99.9%): [5589.260, 5947.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   845.605 ±(99.9%) 687.231 MB/sec [Average]
[info]   (min, avg, max) = (646.948, 845.605, 984.429), stdev = 178.472
[info]   CI (99.9%): [158.374, 1532.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5807.188 ±(99.9%) 4789.871 B/op [Average]
[info]   (min, avg, max) = (4442.673, 5807.188, 6793.350), stdev = 1243.914
[info]   CI (99.9%): [1017.316, 10597.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.183 ±(99.9%) 1.056 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.183, 0.666), stdev = 0.274
[info]   CI (99.9%): [≈ 0, 1.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.251 ±(99.9%) 7.187 B/op [Average]
[info]   (min, avg, max) = (0.143, 1.251, 4.535), stdev = 1.866
[info]   CI (99.9%): [≈ 0, 8.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168994.762 ops/s
[info] # Warmup Iteration   2: 433824.885 ops/s
[info] # Warmup Iteration   3: 503502.419 ops/s
[info] Iteration   1: 507467.022 ops/s
[info]                  ·gc.alloc.rate:                   936.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              2904.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3042.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 503287.393 ops/s
[info]                  ·gc.alloc.rate:                   928.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              2903.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3075.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 512531.208 ops/s
[info]                  ·gc.alloc.rate:                   941.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              2889.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3010.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.685 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 519954.319 ops/s
[info]                  ·gc.alloc.rate:                   942.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              2851.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1974.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.197 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 516058.448 ops/s
[info]                  ·gc.alloc.rate:                   941.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              2871.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2980.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.955 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   511859.678 ±(99.9%) 25570.083 ops/s [Average]
[info]   (min, avg, max) = (503287.393, 511859.678, 519954.319), stdev = 6640.469
[info]   CI (99.9%): [486289.595, 537429.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   938.200 ±(99.9%) 22.381 MB/sec [Average]
[info]   (min, avg, max) = (928.708, 938.200, 942.467), stdev = 5.812
[info]   CI (99.9%): [915.819, 960.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2884.207 ±(99.9%) 86.923 B/op [Average]
[info]   (min, avg, max) = (2851.738, 2884.207, 2904.572), stdev = 22.574
[info]   CI (99.9%): [2797.284, 2971.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   915.133 ±(99.9%) 565.622 MB/sec [Average]
[info]   (min, avg, max) = (652.399, 915.133, 983.886), stdev = 146.890
[info]   CI (99.9%): [349.512, 1480.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2816.701 ±(99.9%) 1819.043 B/op [Average]
[info]   (min, avg, max) = (1974.043, 2816.701, 3075.935), stdev = 472.400
[info]   CI (99.9%): [997.658, 4635.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.025 ±(99.9%) 4.175 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.025, 2.845), stdev = 1.084
[info]   CI (99.9%): [≈ 0, 5.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.172 ±(99.9%) 13.085 B/op [Average]
[info]   (min, avg, max) = (0.129, 3.172, 8.895), stdev = 3.398
[info]   CI (99.9%): [≈ 0, 16.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 15.000), stdev = 4.879
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 184537.819 ops/s
[info] # Warmup Iteration   2: 439872.381 ops/s
[info] # Warmup Iteration   3: 561892.163 ops/s
[info] Iteration   1: 572291.360 ops/s
[info]                  ·gc.alloc.rate:               404.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          1112.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 903.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 571294.550 ops/s
[info]                  ·gc.alloc.rate:               404.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          1113.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 904.817 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 559623.593 ops/s
[info]                  ·gc.alloc.rate:                   402.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              1132.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1847.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 574743.922 ops/s
[info]                  ·gc.alloc.rate:                   409.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              1119.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 569226.210 ops/s
[info]                  ·gc.alloc.rate:                   409.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              1132.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     909.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   569435.927 ±(99.9%) 22461.887 ops/s [Average]
[info]   (min, avg, max) = (559623.593, 569435.927, 574743.922), stdev = 5833.281
[info]   CI (99.9%): [546974.040, 591897.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   406.025 ±(99.9%) 11.791 MB/sec [Average]
[info]   (min, avg, max) = (402.807, 406.025, 409.549), stdev = 3.062
[info]   CI (99.9%): [394.233, 417.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1122.054 ±(99.9%) 38.060 B/op [Average]
[info]   (min, avg, max) = (1112.556, 1122.054, 1132.664), stdev = 9.884
[info]   CI (99.9%): [1083.994, 1160.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   394.303 ±(99.9%) 565.261 MB/sec [Average]
[info]   (min, avg, max) = (328.483, 394.303, 656.900), stdev = 146.797
[info]   CI (99.9%): [≈ 0, 959.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1092.872 ±(99.9%) 1623.713 B/op [Average]
[info]   (min, avg, max) = (899.314, 1092.872, 1847.153), stdev = 421.673
[info]   CI (99.9%): [≈ 0, 2716.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.059), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 8.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5447.483 ops/s
[info] # Warmup Iteration   2: 53936.866 ops/s
[info] # Warmup Iteration   3: 69941.559 ops/s
[info] Iteration   1: 73802.666 ops/s
[info]                  ·gc.alloc.rate:                   1538.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              32796.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27650.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.975 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 82028.352 ops/s
[info]                  ·gc.alloc.rate:                   1436.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              27557.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31077.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.570 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 85040.949 ops/s
[info]                  ·gc.alloc.rate:                   1398.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              25875.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24053.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.484 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 87602.224 ops/s
[info]                  ·gc.alloc.rate:                   1447.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              26004.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23421.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 88066.455 ops/s
[info]                  ·gc.alloc.rate:                   1435.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              25648.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23191.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   83308.129 ±(99.9%) 22459.130 ops/s [Average]
[info]   (min, avg, max) = (73802.666, 83308.129, 88066.455), stdev = 5832.565
[info]   CI (99.9%): [60848.999, 105767.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1451.416 ±(99.9%) 199.982 MB/sec [Average]
[info]   (min, avg, max) = (1398.632, 1451.416, 1538.198), stdev = 51.935
[info]   CI (99.9%): [1251.434, 1651.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   27576.447 ±(99.9%) 11605.935 B/op [Average]
[info]   (min, avg, max) = (25648.039, 27576.447, 32796.820), stdev = 3014.024
[info]   CI (99.9%): [15970.512, 39182.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1363.889 ±(99.9%) 552.127 MB/sec [Average]
[info]   (min, avg, max) = (1296.834, 1363.889, 1620.342), stdev = 143.386
[info]   CI (99.9%): [811.762, 1916.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   25878.862 ±(99.9%) 13164.891 B/op [Average]
[info]   (min, avg, max) = (23191.367, 25878.862, 31077.297), stdev = 3418.880
[info]   CI (99.9%): [12713.971, 39043.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.820 ±(99.9%) 3.415 MB/sec [Average]
[info]   (min, avg, max) = (0.729, 1.820, 3.084), stdev = 0.887
[info]   CI (99.9%): [≈ 0, 5.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.369 ±(99.9%) 62.023 B/op [Average]
[info]   (min, avg, max) = (13.484, 34.369, 55.392), stdev = 16.107
[info]   CI (99.9%): [≈ 0, 96.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.800, 21.000), stdev = 5.263
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70039.973 ops/s
[info] # Warmup Iteration   2: 335682.176 ops/s
[info] # Warmup Iteration   3: 403355.740 ops/s
[info] Iteration   1: 413939.837 ops/s
[info]                  ·gc.alloc.rate:                   2991.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              11368.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2928.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11129.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 410125.787 ops/s
[info]                  ·gc.alloc.rate:                   2993.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              11485.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2967.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11386.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 414328.714 ops/s
[info]                  ·gc.alloc.rate:                   3043.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              11560.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3009.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11431.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 410704.102 ops/s
[info]                  ·gc.alloc.rate:                   2999.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              11492.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10336.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 401401.569 ops/s
[info]                  ·gc.alloc.rate:                   3054.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              11974.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3025.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11862.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   410100.002 ±(99.9%) 20069.085 ops/s [Average]
[info]   (min, avg, max) = (401401.569, 410100.002, 414328.714), stdev = 5211.878
[info]   CI (99.9%): [390030.917, 430169.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   3016.491 ±(99.9%) 115.533 MB/sec [Average]
[info]   (min, avg, max) = (2991.346, 3016.491, 3054.105), stdev = 30.004
[info]   CI (99.9%): [2900.958, 3132.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11576.404 ±(99.9%) 898.169 B/op [Average]
[info]   (min, avg, max) = (11368.613, 11576.404, 11974.994), stdev = 233.252
[info]   CI (99.9%): [10678.235, 12474.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2925.805 ±(99.9%) 511.687 MB/sec [Average]
[info]   (min, avg, max) = (2697.932, 2925.805, 3025.288), stdev = 132.884
[info]   CI (99.9%): [2414.118, 3437.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11229.029 ±(99.9%) 2171.983 B/op [Average]
[info]   (min, avg, max) = (10336.621, 11229.029, 11862.003), stdev = 564.057
[info]   CI (99.9%): [9057.046, 13401.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.287 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.096, 0.208), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.367 ±(99.9%) 1.095 B/op [Average]
[info]   (min, avg, max) = (0.080, 0.367, 0.791), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.000, 20.000), stdev = 4.000
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65638.471 ops/s
[info] # Warmup Iteration   2: 616051.068 ops/s
[info] # Warmup Iteration   3: 781684.334 ops/s
[info] Iteration   1: 842745.849 ops/s
[info]                  ·gc.alloc.rate:                   1853.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              3461.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3040.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.855 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 840636.739 ops/s
[info]                  ·gc.alloc.rate:                   1839.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              3441.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3687.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 842505.777 ops/s
[info]                  ·gc.alloc.rate:               1838.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          3434.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1655.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3093.205 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 838353.009 ops/s
[info]                  ·gc.alloc.rate:                   1856.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              3484.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3133.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 820173.636 ops/s
[info]                  ·gc.alloc.rate:                   1832.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              3513.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3865.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   836883.002 ±(99.9%) 36603.554 ops/s [Average]
[info]   (min, avg, max) = (820173.636, 836883.002, 842745.849), stdev = 9505.827
[info]   CI (99.9%): [800279.448, 873486.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1843.969 ±(99.9%) 40.748 MB/sec [Average]
[info]   (min, avg, max) = (1832.021, 1843.969, 1856.622), stdev = 10.582
[info]   CI (99.9%): [1803.221, 1884.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3467.230 ±(99.9%) 125.619 B/op [Average]
[info]   (min, avg, max) = (3434.131, 3467.230, 3513.887), stdev = 32.623
[info]   CI (99.9%): [3341.612, 3592.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1787.880 ±(99.9%) 726.146 MB/sec [Average]
[info]   (min, avg, max) = (1627.878, 1787.880, 2015.512), stdev = 188.578
[info]   CI (99.9%): [1061.735, 2514.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3364.076 ±(99.9%) 1476.637 B/op [Average]
[info]   (min, avg, max) = (3040.034, 3364.076, 3865.831), stdev = 383.478
[info]   CI (99.9%): [1887.438, 4840.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.749 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.458), stdev = 0.195
[info]   CI (99.9%): [≈ 0, 0.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.210 ±(99.9%) 1.398 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.210, 0.855), stdev = 0.363
[info]   CI (99.9%): [≈ 0, 1.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 656840.863 ops/s
[info] # Warmup Iteration   2: 1480418.682 ops/s
[info] # Warmup Iteration   3: 1615901.458 ops/s
[info] Iteration   1: 1630017.784 ops/s
[info]                  ·gc.alloc.rate:                   3299.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              3185.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3296.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3183.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1637639.088 ops/s
[info]                  ·gc.alloc.rate:                   3330.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              3199.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3340.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3208.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1630283.364 ops/s
[info]                  ·gc.alloc.rate:                   3309.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              3194.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3033.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2928.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1571092.441 ops/s
[info]                  ·gc.alloc.rate:                   3225.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              3230.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3054.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1603411.301 ops/s
[info]                  ·gc.alloc.rate:                   3241.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              3181.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3057.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3000.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1614488.796 ±(99.9%) 106024.046 ops/s [Average]
[info]   (min, avg, max) = (1571092.441, 1614488.796, 1637639.088), stdev = 27534.108
[info]   CI (99.9%): [1508464.750, 1720512.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3281.408 ±(99.9%) 175.167 MB/sec [Average]
[info]   (min, avg, max) = (3225.823, 3281.408, 3330.900), stdev = 45.490
[info]   CI (99.9%): [3106.242, 3456.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3198.387 ±(99.9%) 74.941 B/op [Average]
[info]   (min, avg, max) = (3181.008, 3198.387, 3230.652), stdev = 19.462
[info]   CI (99.9%): [3123.446, 3273.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3155.532 ±(99.9%) 577.207 MB/sec [Average]
[info]   (min, avg, max) = (3033.263, 3155.532, 3340.295), stdev = 149.899
[info]   CI (99.9%): [2578.325, 3732.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3075.000 ±(99.9%) 460.052 B/op [Average]
[info]   (min, avg, max) = (2928.119, 3075.000, 3208.632), stdev = 119.474
[info]   CI (99.9%): [2614.948, 3535.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.167), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.081 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.081, 0.160), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 12.000), stdev = 0.447
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7216.660 ops/s
[info] # Warmup Iteration   2: 122094.821 ops/s
[info] # Warmup Iteration   3: 182824.682 ops/s
[info] Iteration   1: 181343.975 ops/s
[info]                  ·gc.alloc.rate:                   4712.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              40884.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4643.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40287.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.626 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 185573.643 ops/s
[info]                  ·gc.alloc.rate:                   4835.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              40995.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4716.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39991.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 183721.213 ops/s
[info]                  ·gc.alloc.rate:                   4783.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              40975.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4748.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40677.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.892 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 184950.844 ops/s
[info]                  ·gc.alloc.rate:                   4801.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              40857.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4419.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37612.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.063 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 182791.924 ops/s
[info]                  ·gc.alloc.rate:                   4761.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              40990.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4766.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41032.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.538 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   183676.320 ±(99.9%) 6514.377 ops/s [Average]
[info]   (min, avg, max) = (181343.975, 183676.320, 185573.643), stdev = 1691.763
[info]   CI (99.9%): [177161.943, 190190.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4778.801 ±(99.9%) 176.167 MB/sec [Average]
[info]   (min, avg, max) = (4712.726, 4778.801, 4835.308), stdev = 45.750
[info]   CI (99.9%): [4602.635, 4954.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   40940.629 ±(99.9%) 249.381 B/op [Average]
[info]   (min, avg, max) = (40857.377, 40940.629, 40995.386), stdev = 64.763
[info]   CI (99.9%): [40691.248, 41190.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4659.110 ±(99.9%) 545.767 MB/sec [Average]
[info]   (min, avg, max) = (4419.813, 4659.110, 4766.576), stdev = 141.734
[info]   CI (99.9%): [4113.343, 5204.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39920.241 ±(99.9%) 5194.251 B/op [Average]
[info]   (min, avg, max) = (37612.119, 39920.241, 41032.681), stdev = 1348.931
[info]   CI (99.9%): [34725.990, 45114.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.220 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.104, 0.187), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.894 ±(99.9%) 1.910 B/op [Average]
[info]   (min, avg, max) = (0.353, 0.894, 1.626), stdev = 0.496
[info]   CI (99.9%): [≈ 0, 2.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   69.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 14.000), stdev = 0.447
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   92.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 18.400, 20.000), stdev = 1.517
[info]   CI (99.9%): [92.000, 92.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82306.068 ops/s
[info] # Warmup Iteration   2: 387884.239 ops/s
[info] # Warmup Iteration   3: 435328.134 ops/s
[info] Iteration   1: 444992.985 ops/s
[info]                  ·gc.alloc.rate:                   1457.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              5155.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4632.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 444483.121 ops/s
[info]                  ·gc.alloc.rate:                   1446.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4623.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 442188.825 ops/s
[info]                  ·gc.alloc.rate:                   1454.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              5175.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5787.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 450265.035 ops/s
[info]                  ·gc.alloc.rate:               1480.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          5174.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4566.326 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 447965.578 ops/s
[info]                  ·gc.alloc.rate:                   1493.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              5245.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5782.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   445979.109 ±(99.9%) 12160.340 ops/s [Average]
[info]   (min, avg, max) = (442188.825, 445979.109, 450265.035), stdev = 3158.002
[info]   CI (99.9%): [433818.769, 458139.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1466.415 ±(99.9%) 76.123 MB/sec [Average]
[info]   (min, avg, max) = (1446.113, 1466.415, 1493.437), stdev = 19.769
[info]   CI (99.9%): [1390.292, 1542.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5174.309 ±(99.9%) 175.996 B/op [Average]
[info]   (min, avg, max) = (5120.438, 5174.309, 5245.670), stdev = 45.706
[info]   CI (99.9%): [4998.313, 5350.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1438.888 ±(99.9%) 694.498 MB/sec [Average]
[info]   (min, avg, max) = (1305.667, 1438.888, 1646.224), stdev = 180.359
[info]   CI (99.9%): [744.391, 2133.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5078.294 ±(99.9%) 2485.875 B/op [Average]
[info]   (min, avg, max) = (4566.326, 5078.294, 5787.552), stdev = 645.574
[info]   CI (99.9%): [2592.418, 7564.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 5.224 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.866, 3.123), stdev = 1.357
[info]   CI (99.9%): [≈ 0, 6.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.064 ±(99.9%) 18.476 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.064, 11.044), stdev = 4.798
[info]   CI (99.9%): [≈ 0, 21.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.701
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 294812.761 ops/s
[info] # Warmup Iteration   2: 857565.462 ops/s
[info] # Warmup Iteration   3: 963850.030 ops/s
[info] Iteration   1: 980272.870 ops/s
[info]                  ·gc.alloc.rate:               460.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          739.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 513.383 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 974370.383 ops/s
[info]                  ·gc.alloc.rate:               458.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          740.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 518.121 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 996444.209 ops/s
[info]                  ·gc.alloc.rate:                   482.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1015.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 996997.700 ops/s
[info]                  ·gc.alloc.rate:               472.967 MB/sec
[info]                  ·gc.alloc.rate.norm:          746.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 508.465 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 986581.136 ops/s
[info]                  ·gc.alloc.rate:               475.750 MB/sec
[info]                  ·gc.alloc.rate.norm:          758.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1031.921 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   986933.260 ±(99.9%) 38219.546 ops/s [Average]
[info]   (min, avg, max) = (974370.383, 986933.260, 996997.700), stdev = 9925.495
[info]   CI (99.9%): [948713.714, 1025152.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   470.049 ±(99.9%) 38.999 MB/sec [Average]
[info]   (min, avg, max) = (458.315, 470.049, 482.253), stdev = 10.128
[info]   CI (99.9%): [431.050, 509.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   749.341 ±(99.9%) 39.500 B/op [Average]
[info]   (min, avg, max) = (739.742, 749.341, 761.484), stdev = 10.258
[info]   CI (99.9%): [709.840, 788.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   450.586 ±(99.9%) 683.534 MB/sec [Average]
[info]   (min, avg, max) = (319.906, 450.586, 647.012), stdev = 177.511
[info]   CI (99.9%): [≈ 0, 1134.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   717.456 ±(99.9%) 1076.648 B/op [Average]
[info]   (min, avg, max) = (508.465, 717.456, 1031.921), stdev = 279.602
[info]   CI (99.9%): [≈ 0, 1794.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.066), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:22:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1097002.138 ops/s
[info] # Warmup Iteration   2: 2481370.138 ops/s
[info] # Warmup Iteration   3: 2621614.274 ops/s
[info] Iteration   1: 2574175.116 ops/s
[info]                  ·gc.alloc.rate:                   1248.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     604.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2651076.068 ops/s
[info]                  ·gc.alloc.rate:                   1266.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.183 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2713610.507 ops/s
[info]                  ·gc.alloc.rate:                   1290.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2730729.632 ops/s
[info]                  ·gc.alloc.rate:               1302.333 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 754.452 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2664168.950 ops/s
[info]                  ·gc.alloc.rate:                   1288.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     776.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2666752.055 ±(99.9%) 236679.505 ops/s [Average]
[info]   (min, avg, max) = (2574175.116, 2666752.055, 2730729.632), stdev = 61464.916
[info]   CI (99.9%): [2430072.550, 2903431.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1279.291 ±(99.9%) 82.354 MB/sec [Average]
[info]   (min, avg, max) = (1248.797, 1279.291, 1302.333), stdev = 21.387
[info]   CI (99.9%): [1196.937, 1361.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   755.054 ±(99.9%) 26.129 B/op [Average]
[info]   (min, avg, max) = (748.198, 755.054, 763.375), stdev = 6.786
[info]   CI (99.9%): [728.924, 781.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1247.859 ±(99.9%) 559.353 MB/sec [Average]
[info]   (min, avg, max) = (988.084, 1247.859, 1317.695), stdev = 145.262
[info]   CI (99.9%): [688.506, 1807.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   735.382 ±(99.9%) 286.263 B/op [Average]
[info]   (min, avg, max) = (604.004, 735.382, 782.245), stdev = 74.342
[info]   CI (99.9%): [449.119, 1021.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 6.165 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.823, 3.677), stdev = 1.601
[info]   CI (99.9%): [≈ 0, 6.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.488 ±(99.9%) 3.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.488, 2.183), stdev = 0.951
[info]   CI (99.9%): [≈ 0, 4.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 11.000), stdev = 2.588
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1279059.476 ops/s
[info] # Warmup Iteration   2: 2614022.573 ops/s
[info] # Warmup Iteration   3: 2950278.756 ops/s
[info] Iteration   1: 2950233.624 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2947806.415 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2936434.778 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2948007.418 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2951011.383 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2946698.724 ±(99.9%) 22730.445 ops/s [Average]
[info]   (min, avg, max) = (2936434.778, 2946698.724, 2951011.383), stdev = 5903.024
[info]   CI (99.9%): [2923968.278, 2969429.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42484.948 ops/s
[info] # Warmup Iteration   2: 430598.112 ops/s
[info] # Warmup Iteration   3: 433764.723 ops/s
[info] Iteration   1: 583748.272 ops/s
[info]                  ·gc.alloc.rate:                   1397.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              3766.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1602.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4319.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.221 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 689819.327 ops/s
[info]                  ·gc.alloc.rate:                   1059.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              2416.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2173.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 700984.134 ops/s
[info]                  ·gc.alloc.rate:                   981.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              2204.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2138.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.654 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 703946.821 ops/s
[info]                  ·gc.alloc.rate:                   982.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              2196.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2137.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.293 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.892 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 707986.618 ops/s
[info]                  ·gc.alloc.rate:                   989.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2125.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   677297.034 ±(99.9%) 203039.959 ops/s [Average]
[info]   (min, avg, max) = (583748.272, 677297.034, 707986.618), stdev = 52728.833
[info]   CI (99.9%): [474257.075, 880336.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1082.187 ±(99.9%) 690.042 MB/sec [Average]
[info]   (min, avg, max) = (981.974, 1082.187, 1397.455), stdev = 179.202
[info]   CI (99.9%): [392.145, 1772.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2556.540 ±(99.9%) 2628.396 B/op [Average]
[info]   (min, avg, max) = (2196.410, 2556.540, 3766.056), stdev = 682.586
[info]   CI (99.9%): [≈ 0, 5184.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1084.112 ±(99.9%) 1116.558 MB/sec [Average]
[info]   (min, avg, max) = (952.789, 1084.112, 1602.812), stdev = 289.967
[info]   CI (99.9%): [≈ 0, 2200.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2578.779 ±(99.9%) 3747.634 B/op [Average]
[info]   (min, avg, max) = (2125.070, 2578.779, 4319.481), stdev = 973.249
[info]   CI (99.9%): [≈ 0, 6326.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.641 ±(99.9%) 7.176 MB/sec [Average]
[info]   (min, avg, max) = (0.292, 2.641, 5.020), stdev = 1.864
[info]   CI (99.9%): [≈ 0, 9.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.234 ±(99.9%) 16.838 B/op [Average]
[info]   (min, avg, max) = (0.654, 6.234, 11.156), stdev = 4.373
[info]   CI (99.9%): [≈ 0, 23.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 18.000, 35.000), stdev = 10.124
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6765.280 ops/s
[info] # Warmup Iteration   2: 56706.740 ops/s
[info] # Warmup Iteration   3: 69708.189 ops/s
[info] Iteration   1: 72011.460 ops/s
[info]                  ·gc.alloc.rate:                   2268.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              49575.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2276.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49735.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.987 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 76974.165 ops/s
[info]                  ·gc.alloc.rate:                   2237.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              45748.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2268.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46371.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.053 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 76833.922 ops/s
[info]                  ·gc.alloc.rate:                   2220.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              45477.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39956.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.730 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 76021.071 ops/s
[info]                  ·gc.alloc.rate:                   2242.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              46416.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2290.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47419.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.862 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 77605.746 ops/s
[info]                  ·gc.alloc.rate:               2275.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          46135.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1987.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40288.275 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   75889.273 ±(99.9%) 8625.450 ops/s [Average]
[info]   (min, avg, max) = (72011.460, 75889.273, 77605.746), stdev = 2240.002
[info]   CI (99.9%): [67263.822, 84514.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2249.032 ±(99.9%) 87.483 MB/sec [Average]
[info]   (min, avg, max) = (2220.586, 2249.032, 2275.546), stdev = 22.719
[info]   CI (99.9%): [2161.549, 2336.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46670.576 ±(99.9%) 6403.408 B/op [Average]
[info]   (min, avg, max) = (45477.730, 46670.576, 49575.197), stdev = 1662.945
[info]   CI (99.9%): [40267.168, 53073.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2154.700 ±(99.9%) 655.148 MB/sec [Average]
[info]   (min, avg, max) = (1950.978, 2154.700, 2290.889), stdev = 170.140
[info]   CI (99.9%): [1499.551, 2809.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44754.406 ±(99.9%) 16950.092 B/op [Average]
[info]   (min, avg, max) = (39956.150, 44754.406, 49735.981), stdev = 4401.885
[info]   CI (99.9%): [27804.315, 61704.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.609 ±(99.9%) 9.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.609, 5.720), stdev = 2.375
[info]   CI (99.9%): [≈ 0, 10.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   34.526 ±(99.9%) 200.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.526, 124.987), stdev = 52.050
[info]   CI (99.9%): [≈ 0, 234.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.600, 22.000), stdev = 5.941
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9349.557 ops/s
[info] # Warmup Iteration   2: 64403.436 ops/s
[info] # Warmup Iteration   3: 91129.916 ops/s
[info] Iteration   1: 106952.342 ops/s
[info]                  ·gc.alloc.rate:                   1946.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              28640.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28829.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.181 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 107669.324 ops/s
[info]                  ·gc.alloc.rate:                   1958.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              28621.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28812.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.912 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 105944.948 ops/s
[info]                  ·gc.alloc.rate:                   1921.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              28537.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29489.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 107189.295 ops/s
[info]                  ·gc.alloc.rate:                   1949.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              28621.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24472.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 105419.923 ops/s
[info]                  ·gc.alloc.rate:                   1946.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              29056.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30044.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   106635.167 ±(99.9%) 3565.933 ops/s [Average]
[info]   (min, avg, max) = (105419.923, 106635.167, 107669.324), stdev = 926.062
[info]   CI (99.9%): [103069.233, 110201.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1944.333 ±(99.9%) 53.486 MB/sec [Average]
[info]   (min, avg, max) = (1921.061, 1944.333, 1958.178), stdev = 13.890
[info]   CI (99.9%): [1890.847, 1997.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28695.378 ±(99.9%) 791.596 B/op [Average]
[info]   (min, avg, max) = (28537.671, 28695.378, 29056.182), stdev = 205.575
[info]   CI (99.9%): [27903.782, 29486.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1919.056 ±(99.9%) 547.326 MB/sec [Average]
[info]   (min, avg, max) = (1667.291, 1919.056, 2012.522), stdev = 142.139
[info]   CI (99.9%): [1371.729, 2466.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28329.875 ±(99.9%) 8533.436 B/op [Average]
[info]   (min, avg, max) = (24472.838, 28329.875, 30044.559), stdev = 2216.106
[info]   CI (99.9%): [19796.440, 36863.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 2.935 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.477, 1.779), stdev = 0.762
[info]   CI (99.9%): [≈ 0, 3.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.004 ±(99.9%) 43.184 B/op [Average]
[info]   (min, avg, max) = (0.306, 7.004, 26.181), stdev = 11.215
[info]   CI (99.9%): [≈ 0, 50.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 12.000), stdev = 1.949
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21192.665 ops/s
[info] # Warmup Iteration   2: 117102.179 ops/s
[info] # Warmup Iteration   3: 144330.996 ops/s
[info] Iteration   1: 155727.568 ops/s
[info]                  ·gc.alloc.rate:                   2445.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              24716.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2248.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22728.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.836 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 157241.824 ops/s
[info]                  ·gc.alloc.rate:                   2481.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              24831.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2586.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25884.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.049 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 157440.273 ops/s
[info]                  ·gc.alloc.rate:                   2502.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              25018.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2265.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22648.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 157442.228 ops/s
[info]                  ·gc.alloc.rate:                   2517.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              25162.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2625.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26236.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 157664.396 ops/s
[info]                  ·gc.alloc.rate:                   2517.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              25131.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23231.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   157103.258 ±(99.9%) 3016.727 ops/s [Average]
[info]   (min, avg, max) = (155727.568, 157103.258, 157664.396), stdev = 783.434
[info]   CI (99.9%): [154086.531, 160119.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2493.068 ±(99.9%) 116.787 MB/sec [Average]
[info]   (min, avg, max) = (2445.721, 2493.068, 2517.792), stdev = 30.329
[info]   CI (99.9%): [2376.281, 2609.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24972.034 ±(99.9%) 742.552 B/op [Average]
[info]   (min, avg, max) = (24716.690, 24972.034, 25162.264), stdev = 192.838
[info]   CI (99.9%): [24229.482, 25714.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2410.791 ±(99.9%) 696.997 MB/sec [Average]
[info]   (min, avg, max) = (2248.993, 2410.791, 2625.029), stdev = 181.008
[info]   CI (99.9%): [1713.794, 3107.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24146.000 ±(99.9%) 6802.532 B/op [Average]
[info]   (min, avg, max) = (22648.048, 24146.000, 26236.874), stdev = 1766.596
[info]   CI (99.9%): [17343.468, 30948.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.996 ±(99.9%) 6.621 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.996, 4.002), stdev = 1.719
[info]   CI (99.9%): [≈ 0, 7.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.985 ±(99.9%) 66.246 B/op [Average]
[info]   (min, avg, max) = (0.208, 9.985, 40.049), stdev = 17.204
[info]   CI (99.9%): [≈ 0, 76.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 15.000, 25.000), stdev = 6.745
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1541.963 ops/s
[info] # Warmup Iteration   2: 18516.840 ops/s
[info] # Warmup Iteration   3: 37656.504 ops/s
[info] Iteration   1: 44173.876 ops/s
[info]                  ·gc.alloc.rate:                   2584.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              92092.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93204.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.353 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 44366.207 ops/s
[info]                  ·gc.alloc.rate:                   2584.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              91662.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93153.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.429 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 45036.860 ops/s
[info]                  ·gc.alloc.rate:                   2523.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              88188.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81057.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.182 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 44138.065 ops/s
[info]                  ·gc.alloc.rate:                   2508.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              89410.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83468.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.227 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 45248.223 ops/s
[info]                  ·gc.alloc.rate:               2556.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          88886.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2695.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 93724.228 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   44592.646 ±(99.9%) 1982.609 ops/s [Average]
[info]   (min, avg, max) = (44138.065, 44592.646, 45248.223), stdev = 514.877
[info]   CI (99.9%): [42610.038, 46575.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2551.659 ±(99.9%) 134.370 MB/sec [Average]
[info]   (min, avg, max) = (2508.529, 2551.659, 2584.913), stdev = 34.896
[info]   CI (99.9%): [2417.289, 2686.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90048.022 ±(99.9%) 6669.417 B/op [Average]
[info]   (min, avg, max) = (88188.550, 90048.022, 92092.740), stdev = 1732.026
[info]   CI (99.9%): [83378.605, 96717.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2519.973 ±(99.9%) 676.066 MB/sec [Average]
[info]   (min, avg, max) = (2319.662, 2519.973, 2695.335), stdev = 175.572
[info]   CI (99.9%): [1843.907, 3196.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   88921.358 ±(99.9%) 23651.028 B/op [Average]
[info]   (min, avg, max) = (81057.225, 88921.358, 93724.228), stdev = 6142.097
[info]   CI (99.9%): [65270.330, 112572.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 4.296 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 2.592), stdev = 1.116
[info]   CI (99.9%): [≈ 0, 5.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.638 ±(99.9%) 153.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.638, 92.353), stdev = 39.742
[info]   CI (99.9%): [≈ 0, 179.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.800, 18.000), stdev = 3.114
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25153.534 ops/s
[info] # Warmup Iteration   2: 165150.210 ops/s
[info] # Warmup Iteration   3: 208561.343 ops/s
[info] Iteration   1: 228960.270 ops/s
[info]                  ·gc.alloc.rate:                   1043.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              7173.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6669.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 229158.468 ops/s
[info]                  ·gc.alloc.rate:                   1042.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              7160.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6700.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 228770.188 ops/s
[info]                  ·gc.alloc.rate:                   1036.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              7129.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6743.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 227454.206 ops/s
[info]                  ·gc.alloc.rate:                   1025.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              7097.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6810.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 226732.947 ops/s
[info]                  ·gc.alloc.rate:                   1022.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              7091.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6855.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   228215.216 ±(99.9%) 4097.400 ops/s [Average]
[info]   (min, avg, max) = (226732.947, 228215.216, 229158.468), stdev = 1064.082
[info]   CI (99.9%): [224117.816, 232312.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1034.256 ±(99.9%) 38.190 MB/sec [Average]
[info]   (min, avg, max) = (1022.017, 1034.256, 1043.962), stdev = 9.918
[info]   CI (99.9%): [996.066, 1072.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7130.412 ±(99.9%) 140.749 B/op [Average]
[info]   (min, avg, max) = (7091.258, 7130.412, 7173.310), stdev = 36.552
[info]   CI (99.9%): [6989.663, 7271.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   979.898 ±(99.9%) 26.298 MB/sec [Average]
[info]   (min, avg, max) = (970.710, 979.898, 988.010), stdev = 6.829
[info]   CI (99.9%): [953.601, 1006.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6756.051 ±(99.9%) 294.852 B/op [Average]
[info]   (min, avg, max) = (6669.975, 6756.051, 6855.297), stdev = 76.572
[info]   CI (99.9%): [6461.200, 7050.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.704 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.229, 1.020), stdev = 0.442
[info]   CI (99.9%): [≈ 0, 1.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.576 ±(99.9%) 11.717 B/op [Average]
[info]   (min, avg, max) = (0.143, 1.576, 7.018), stdev = 3.043
[info]   CI (99.9%): [≈ 0, 13.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183936.172 ops/s
[info] # Warmup Iteration   2: 458644.490 ops/s
[info] # Warmup Iteration   3: 581593.551 ops/s
[info] Iteration   1: 571336.849 ops/s
[info]                  ·gc.alloc.rate:                   675.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              1859.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2677.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 565301.818 ops/s
[info]                  ·gc.alloc.rate:               672.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          1873.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1808.312 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 579331.307 ops/s
[info]                  ·gc.alloc.rate:               660.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          1794.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1766.209 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 583078.209 ops/s
[info]                  ·gc.alloc.rate:                   663.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              1789.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1755.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 585581.471 ops/s
[info]                  ·gc.alloc.rate:                   662.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              1779.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1741.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.782 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   576925.931 ±(99.9%) 32498.189 ops/s [Average]
[info]   (min, avg, max) = (565301.818, 576925.931, 585581.471), stdev = 8439.677
[info]   CI (99.9%): [544427.741, 609424.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   666.902 ±(99.9%) 25.810 MB/sec [Average]
[info]   (min, avg, max) = (660.612, 666.902, 675.264), stdev = 6.703
[info]   CI (99.9%): [641.092, 692.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1819.264 ±(99.9%) 168.503 B/op [Average]
[info]   (min, avg, max) = (1779.247, 1819.264, 1873.106), stdev = 43.760
[info]   CI (99.9%): [1650.760, 1987.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   714.131 ±(99.9%) 555.071 MB/sec [Average]
[info]   (min, avg, max) = (648.152, 714.131, 971.990), stdev = 144.150
[info]   CI (99.9%): [159.060, 1269.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1949.637 ±(99.9%) 1569.307 B/op [Average]
[info]   (min, avg, max) = (1741.090, 1949.637, 2677.293), stdev = 407.544
[info]   CI (99.9%): [380.330, 3518.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.814 ±(99.9%) 6.015 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.814, 3.600), stdev = 1.562
[info]   CI (99.9%): [≈ 0, 6.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.197 ±(99.9%) 16.223 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.197, 9.710), stdev = 4.213
[info]   CI (99.9%): [≈ 0, 18.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 2.950
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207779.873 ops/s
[info] # Warmup Iteration   2: 463262.149 ops/s
[info] # Warmup Iteration   3: 623256.926 ops/s
[info] Iteration   1: 623801.097 ops/s
[info]                  ·gc.alloc.rate:      6.342 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 621706.453 ops/s
[info]                  ·gc.alloc.rate:      6.323 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 623023.851 ops/s
[info]                  ·gc.alloc.rate:      6.334 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 623453.204 ops/s
[info]                  ·gc.alloc.rate:      6.340 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 624542.299 ops/s
[info]                  ·gc.alloc.rate:      6.351 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   623305.381 ±(99.9%) 4053.881 ops/s [Average]
[info]   (min, avg, max) = (621706.453, 623305.381, 624542.299), stdev = 1052.780
[info]   CI (99.9%): [619251.500, 627359.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.338 ±(99.9%) 0.039 MB/sec [Average]
[info]   (min, avg, max) = (6.323, 6.338, 6.351), stdev = 0.010
[info]   CI (99.9%): [6.299, 6.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5637.808 ops/s
[info] # Warmup Iteration   2: 55698.711 ops/s
[info] # Warmup Iteration   3: 75170.547 ops/s
[info] Iteration   1: 83718.517 ops/s
[info]                  ·gc.alloc.rate:                   1642.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              30870.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30750.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.331 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 89235.144 ops/s
[info]                  ·gc.alloc.rate:                   1406.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              24802.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22969.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 90530.841 ops/s
[info]                  ·gc.alloc.rate:                   1430.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              24849.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22756.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.876 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 89121.945 ops/s
[info]                  ·gc.alloc.rate:                   1442.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              25482.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29022.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.590 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 90565.008 ops/s
[info]                  ·gc.alloc.rate:                   1421.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              24701.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22851.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   88634.291 ±(99.9%) 10906.271 ops/s [Average]
[info]   (min, avg, max) = (83718.517, 88634.291, 90565.008), stdev = 2832.324
[info]   CI (99.9%): [77728.020, 99540.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1468.710 ±(99.9%) 377.076 MB/sec [Average]
[info]   (min, avg, max) = (1406.352, 1468.710, 1642.264), stdev = 97.925
[info]   CI (99.9%): [1091.634, 1845.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   26141.209 ±(99.9%) 10247.766 B/op [Average]
[info]   (min, avg, max) = (24701.634, 26141.209, 30870.182), stdev = 2661.312
[info]   CI (99.9%): [15893.444, 36388.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1441.351 ±(99.9%) 697.493 MB/sec [Average]
[info]   (min, avg, max) = (1302.410, 1441.351, 1643.478), stdev = 181.137
[info]   CI (99.9%): [743.858, 2138.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   25670.013 ±(99.9%) 15010.145 B/op [Average]
[info]   (min, avg, max) = (22756.108, 25670.013, 30750.599), stdev = 3898.087
[info]   CI (99.9%): [10659.868, 40680.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.655 ±(99.9%) 3.915 MB/sec [Average]
[info]   (min, avg, max) = (0.396, 1.655, 2.666), stdev = 1.017
[info]   CI (99.9%): [≈ 0, 5.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   29.410 ±(99.9%) 68.506 B/op [Average]
[info]   (min, avg, max) = (6.876, 29.410, 47.017), stdev = 17.791
[info]   CI (99.9%): [≈ 0, 97.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.400, 20.000), stdev = 4.669
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150931.140 ops/s
[info] # Warmup Iteration   2: 2525684.971 ops/s
[info] # Warmup Iteration   3: 8011178.816 ops/s
[info] Iteration   1: 8130606.604 ops/s
[info]                  ·gc.alloc.rate:                   7183.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              1389.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6684.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1293.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 8213496.011 ops/s
[info]                  ·gc.alloc.rate:                   7256.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7123.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1364.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 8234243.055 ops/s
[info]                  ·gc.alloc.rate:                   7264.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              1387.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6808.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1300.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 8027120.102 ops/s
[info]                  ·gc.alloc.rate:                   7046.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              1380.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6811.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1334.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 8253165.166 ops/s
[info]                  ·gc.alloc.rate:                   7291.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7148.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1363.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   8171726.187 ±(99.9%) 359613.470 ops/s [Average]
[info]   (min, avg, max) = (8027120.102, 8171726.187, 8253165.166), stdev = 93390.476
[info]   CI (99.9%): [7812112.717, 8531339.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   7208.256 ±(99.9%) 380.460 MB/sec [Average]
[info]   (min, avg, max) = (7046.532, 7208.256, 7291.213), stdev = 98.804
[info]   CI (99.9%): [6827.796, 7588.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1387.893 ±(99.9%) 15.464 B/op [Average]
[info]   (min, avg, max) = (1380.957, 1387.893, 1390.421), stdev = 4.016
[info]   CI (99.9%): [1372.429, 1403.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   6915.327 ±(99.9%) 800.657 MB/sec [Average]
[info]   (min, avg, max) = (6684.865, 6915.327, 7148.691), stdev = 207.928
[info]   CI (99.9%): [6114.670, 7715.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1331.448 ±(99.9%) 129.432 B/op [Average]
[info]   (min, avg, max) = (1293.464, 1331.448, 1364.839), stdev = 33.613
[info]   CI (99.9%): [1202.016, 1460.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.389 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.167, 0.333), stdev = 0.101
[info]   CI (99.9%): [≈ 0, 0.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.032, 0.065), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   102.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (20.000, 20.400, 21.000), stdev = 0.548
[info]   CI (99.9%): [102.000, 102.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (24.000, 26.000, 27.000), stdev = 1.414
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.686 ops/s
[info] # Warmup Iteration   2: 800426.803 ops/s
[info] # Warmup Iteration   3: 859086.300 ops/s
[info] Iteration   1: 951349.478 ops/s
[info]                  ·gc.alloc.rate:                   600.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              993.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1072.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 952680.533 ops/s
[info]                  ·gc.alloc.rate:                   609.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              1006.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1072.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 902842.201 ops/s
[info]                  ·gc.alloc.rate:               571.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          995.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 566.672 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 914124.679 ops/s
[info]                  ·gc.alloc.rate:               590.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1120.565 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 917543.517 ops/s
[info]                  ·gc.alloc.rate:                   591.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              1015.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1118.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.079 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   927708.081 ±(99.9%) 87991.177 ops/s [Average]
[info]   (min, avg, max) = (902842.201, 927708.081, 952680.533), stdev = 22851.029
[info]   CI (99.9%): [839716.904, 1015699.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   592.838 ±(99.9%) 55.194 MB/sec [Average]
[info]   (min, avg, max) = (571.279, 592.838, 609.727), stdev = 14.334
[info]   CI (99.9%): [537.644, 648.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1005.488 ±(99.9%) 41.143 B/op [Average]
[info]   (min, avg, max) = (993.232, 1005.488, 1016.512), stdev = 10.685
[info]   CI (99.9%): [964.345, 1046.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.266 ±(99.9%) 560.115 MB/sec [Average]
[info]   (min, avg, max) = (325.069, 585.266, 652.039), stdev = 145.460
[info]   CI (99.9%): [25.151, 1145.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   990.087 ±(99.9%) 915.889 B/op [Average]
[info]   (min, avg, max) = (566.672, 990.087, 1120.565), stdev = 237.853
[info]   CI (99.9%): [74.198, 1905.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.079), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.218 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.135), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19216.722 ops/s
[info] # Warmup Iteration   2: 146601.022 ops/s
[info] # Warmup Iteration   3: 340728.653 ops/s
[info] Iteration   1: 439633.878 ops/s
[info]                  ·gc.alloc.rate:                   970.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              3475.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3451.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 432720.225 ops/s
[info]                  ·gc.alloc.rate:                   953.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              3469.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3524.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 438462.918 ops/s
[info]                  ·gc.alloc.rate:                   977.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              3508.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3500.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 436114.621 ops/s
[info]                  ·gc.alloc.rate:                   962.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              3471.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3531.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 436791.301 ops/s
[info]                  ·gc.alloc.rate:                   962.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              3468.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3525.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.589 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   436744.589 ±(99.9%) 10168.762 ops/s [Average]
[info]   (min, avg, max) = (432720.225, 436744.589, 439633.878), stdev = 2640.795
[info]   CI (99.9%): [426575.827, 446913.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   965.400 ±(99.9%) 34.880 MB/sec [Average]
[info]   (min, avg, max) = (953.951, 965.400, 977.601), stdev = 9.058
[info]   CI (99.9%): [930.521, 1000.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3478.460 ±(99.9%) 64.819 B/op [Average]
[info]   (min, avg, max) = (3468.159, 3478.460, 3508.167), stdev = 16.833
[info]   CI (99.9%): [3413.641, 3543.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   973.241 ±(99.9%) 24.543 MB/sec [Average]
[info]   (min, avg, max) = (964.257, 973.241, 978.682), stdev = 6.374
[info]   CI (99.9%): [948.698, 997.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3506.865 ±(99.9%) 126.674 B/op [Average]
[info]   (min, avg, max) = (3451.922, 3506.865, 3531.490), stdev = 32.897
[info]   CI (99.9%): [3380.191, 3633.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.003 ±(99.9%) 5.524 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.003, 3.494), stdev = 1.435
[info]   CI (99.9%): [≈ 0, 6.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.611 ±(99.9%) 19.901 B/op [Average]
[info]   (min, avg, max) = (0.151, 3.611, 12.589), stdev = 5.168
[info]   CI (99.9%): [≈ 0, 23.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 11.000), stdev = 1.789
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309788.411 ops/s
[info] # Warmup Iteration   2: 690380.033 ops/s
[info] # Warmup Iteration   3: 725216.824 ops/s
[info] Iteration   1: 828632.232 ops/s
[info]                  ·gc.alloc.rate:                   753.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              1430.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1252.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 744264.017 ops/s
[info]                  ·gc.alloc.rate:                   682.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              1442.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1396.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 808820.550 ops/s
[info]                  ·gc.alloc.rate:                   734.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              1428.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 818297.253 ops/s
[info]                  ·gc.alloc.rate:               747.526 MB/sec
[info]                  ·gc.alloc.rate.norm:          1437.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1273.531 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 822530.719 ops/s
[info]                  ·gc.alloc.rate:                   749.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              1434.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.677 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   804508.954 ±(99.9%) 132622.069 ops/s [Average]
[info]   (min, avg, max) = (744264.017, 804508.954, 828632.232), stdev = 34441.530
[info]   CI (99.9%): [671886.885, 937131.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   733.508 ±(99.9%) 113.681 MB/sec [Average]
[info]   (min, avg, max) = (682.313, 733.508, 753.639), stdev = 29.522
[info]   CI (99.9%): [619.828, 847.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1434.681 ±(99.9%) 21.413 B/op [Average]
[info]   (min, avg, max) = (1428.279, 1434.681, 1442.532), stdev = 5.561
[info]   CI (99.9%): [1413.267, 1456.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.158 ±(99.9%) 4.395 MB/sec [Average]
[info]   (min, avg, max) = (659.763, 661.158, 662.373), stdev = 1.141
[info]   CI (99.9%): [656.763, 665.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1295.021 ±(99.9%) 222.273 B/op [Average]
[info]   (min, avg, max) = (1252.650, 1295.021, 1396.026), stdev = 57.724
[info]   CI (99.9%): [1072.748, 1517.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.719 ±(99.9%) 5.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.719, 3.490), stdev = 1.549
[info]   CI (99.9%): [≈ 0, 6.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.377 ±(99.9%) 11.409 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.377, 6.677), stdev = 2.963
[info]   CI (99.9%): [≈ 0, 12.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 564188.672 ops/s
[info] # Warmup Iteration   2: 3962129.930 ops/s
[info] # Warmup Iteration   3: 4180383.061 ops/s
[info] Iteration   1: 4358005.067 ops/s
[info]                  ·gc.alloc.rate:                   2622.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2631.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     950.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4355293.092 ops/s
[info]                  ·gc.alloc.rate:                   2631.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2642.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     954.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4369498.931 ops/s
[info]                  ·gc.alloc.rate:                   2646.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              953.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     841.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4331304.131 ops/s
[info]                  ·gc.alloc.rate:                   2639.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              958.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 4326953.726 ops/s
[info]                  ·gc.alloc.rate:                   2631.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     984.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   4348210.989 ±(99.9%) 70398.620 ops/s [Average]
[info]   (min, avg, max) = (4326953.726, 4348210.989, 4369498.931), stdev = 18282.298
[info]   CI (99.9%): [4277812.369, 4418609.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2634.186 ±(99.9%) 35.956 MB/sec [Average]
[info]   (min, avg, max) = (2622.049, 2634.186, 2646.603), stdev = 9.338
[info]   CI (99.9%): [2598.230, 2670.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   953.343 ±(99.9%) 18.415 B/op [Average]
[info]   (min, avg, max) = (946.875, 953.343, 958.895), stdev = 4.782
[info]   CI (99.9%): [934.928, 971.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2601.489 ±(99.9%) 585.329 MB/sec [Average]
[info]   (min, avg, max) = (2335.556, 2601.489, 2706.316), stdev = 152.008
[info]   CI (99.9%): [2016.161, 3186.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   941.654 ±(99.9%) 223.225 B/op [Average]
[info]   (min, avg, max) = (841.237, 941.654, 984.129), stdev = 57.971
[info]   CI (99.9%): [718.429, 1164.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.154 ±(99.9%) 0.881 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.154, 0.562), stdev = 0.229
[info]   CI (99.9%): [≈ 0, 1.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.318 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.056, 0.203), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 12.000), stdev = 1.140
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1940786.403 ops/s
[info] # Warmup Iteration   2: 7447866.596 ops/s
[info] # Warmup Iteration   3: 29235078.403 ops/s
[info] Iteration   1: 29325918.910 ops/s
[info]                  ·gc.alloc.rate:                   2612.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.507 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 29474087.463 ops/s
[info]                  ·gc.alloc.rate:                   2639.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2631.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 29134737.033 ops/s
[info]                  ·gc.alloc.rate:                   2580.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              139.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2320.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 29455008.227 ops/s
[info]                  ·gc.alloc.rate:                   2605.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              139.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2345.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 29562477.639 ops/s
[info]                  ·gc.alloc.rate:                   2636.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   29390445.855 ±(99.9%) 639455.865 ops/s [Average]
[info]   (min, avg, max) = (29134737.033, 29390445.855, 29562477.639), stdev = 166064.657
[info]   CI (99.9%): [28750989.990, 30029901.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   2614.926 ±(99.9%) 92.921 MB/sec [Average]
[info]   (min, avg, max) = (2580.465, 2614.926, 2639.562), stdev = 24.131
[info]   CI (99.9%): [2522.005, 2707.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   140.033 ±(99.9%) 2.822 B/op [Average]
[info]   (min, avg, max) = (139.162, 140.033, 140.927), stdev = 0.733
[info]   CI (99.9%): [137.211, 142.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   2526.692 ±(99.9%) 689.436 MB/sec [Average]
[info]   (min, avg, max) = (2320.552, 2526.692, 2697.714), stdev = 179.044
[info]   CI (99.9%): [1837.257, 3216.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   135.288 ±(99.9%) 35.365 B/op [Average]
[info]   (min, avg, max) = (125.243, 135.288, 143.596), stdev = 9.184
[info]   CI (99.9%): [99.923, 170.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.735 ±(99.9%) 5.968 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.735, 3.507), stdev = 1.550
[info]   CI (99.9%): [≈ 0, 6.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.321 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.039, 0.188), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.400, 18.000), stdev = 3.715
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 553.711 ops/s
[info] # Warmup Iteration   2: 50426.542 ops/s
[info] # Warmup Iteration   3: 284908.795 ops/s
[info] Iteration   1: 346991.098 ops/s
[info]                  ·gc.alloc.rate:                   2530.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              11475.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2288.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10377.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.362 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 405596.512 ops/s
[info]                  ·gc.alloc.rate:                   2788.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              10817.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2951.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11450.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.616 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 410855.308 ops/s
[info]                  ·gc.alloc.rate:                   2818.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              10797.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2650.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10153.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 405112.306 ops/s
[info]                  ·gc.alloc.rate:                   2828.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              10982.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2680.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10407.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 402709.100 ops/s
[info]                  ·gc.alloc.rate:               2793.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          10914.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2698.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10544.856 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   394252.865 ±(99.9%) 102376.258 ops/s [Average]
[info]   (min, avg, max) = (346991.098, 394252.865, 410855.308), stdev = 26586.789
[info]   CI (99.9%): [291876.607, 496629.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2751.856 ±(99.9%) 480.985 MB/sec [Average]
[info]   (min, avg, max) = (2530.391, 2751.856, 2828.139), stdev = 124.910
[info]   CI (99.9%): [2270.871, 3232.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10997.451 ±(99.9%) 1068.823 B/op [Average]
[info]   (min, avg, max) = (10797.081, 10997.451, 11475.430), stdev = 277.570
[info]   CI (99.9%): [9928.628, 12066.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2653.952 ±(99.9%) 913.647 MB/sec [Average]
[info]   (min, avg, max) = (2288.298, 2653.952, 2951.920), stdev = 237.271
[info]   CI (99.9%): [1740.305, 3567.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10586.875 ±(99.9%) 1935.787 B/op [Average]
[info]   (min, avg, max) = (10153.741, 10586.875, 11450.390), stdev = 502.718
[info]   CI (99.9%): [8651.087, 12522.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.698 ±(99.9%) 4.882 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.698, 2.946), stdev = 1.268
[info]   CI (99.9%): [≈ 0, 5.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.092 ±(99.9%) 22.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.092, 13.362), stdev = 5.777
[info]   CI (99.9%): [≈ 0, 25.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.400, 17.000), stdev = 2.302
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 783044.155 ops/s
[info] # Warmup Iteration   2: 1417238.466 ops/s
[info] # Warmup Iteration   3: 1438500.084 ops/s
[info] Iteration   1: 1462010.677 ops/s
[info]                  ·gc.alloc.rate:      44.601 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1467562.163 ops/s
[info]                  ·gc.alloc.rate:      45.616 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.911 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1470671.570 ops/s
[info]                  ·gc.alloc.rate:      44.857 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1473165.800 ops/s
[info]                  ·gc.alloc.rate:      44.937 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1470390.405 ops/s
[info]                  ·gc.alloc.rate:      44.854 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1468760.123 ±(99.9%) 16417.428 ops/s [Average]
[info]   (min, avg, max) = (1462010.677, 1468760.123, 1473165.800), stdev = 4263.554
[info]   CI (99.9%): [1452342.695, 1485177.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   44.973 ±(99.9%) 1.467 MB/sec [Average]
[info]   (min, avg, max) = (44.601, 44.973, 45.616), stdev = 0.381
[info]   CI (99.9%): [43.507, 46.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   48.182 ±(99.9%) 1.568 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.182, 48.911), stdev = 0.407
[info]   CI (99.9%): [46.614, 49.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1384.242 ops/s
[info] # Warmup Iteration   2: 62195.610 ops/s
[info] # Warmup Iteration   3: 103858.423 ops/s
[info] Iteration   1: 117742.493 ops/s
[info]                  ·gc.alloc.rate:                   4175.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              55805.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3960.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52938.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.142 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 117752.573 ops/s
[info]                  ·gc.alloc.rate:                   4172.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              55756.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4007.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53557.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 115968.437 ops/s
[info]                  ·gc.alloc.rate:                   4161.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              56477.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4049.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54958.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.848 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 117018.689 ops/s
[info]                  ·gc.alloc.rate:                   4199.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              56472.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4072.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54762.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 114719.368 ops/s
[info]                  ·gc.alloc.rate:                   4123.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              56517.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4077.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55891.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.855 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   116640.312 ±(99.9%) 4997.144 ops/s [Average]
[info]   (min, avg, max) = (114719.368, 116640.312, 117752.573), stdev = 1297.742
[info]   CI (99.9%): [111643.168, 121637.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4166.441 ±(99.9%) 106.866 MB/sec [Average]
[info]   (min, avg, max) = (4123.399, 4166.441, 4199.542), stdev = 27.753
[info]   CI (99.9%): [4059.574, 4273.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56205.761 ±(99.9%) 1495.817 B/op [Average]
[info]   (min, avg, max) = (55756.875, 56205.761, 56517.382), stdev = 388.459
[info]   CI (99.9%): [54709.945, 57701.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4033.687 ±(99.9%) 189.609 MB/sec [Average]
[info]   (min, avg, max) = (3960.763, 4033.687, 4077.723), stdev = 49.241
[info]   CI (99.9%): [3844.078, 4223.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54421.707 ±(99.9%) 4519.738 B/op [Average]
[info]   (min, avg, max) = (52938.596, 54421.707, 55891.325), stdev = 1173.762
[info]   CI (99.9%): [49901.970, 58941.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.572 ±(99.9%) 4.429 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.572, 2.629), stdev = 1.150
[info]   CI (99.9%): [≈ 0, 5.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.648 ±(99.9%) 59.185 B/op [Average]
[info]   (min, avg, max) = (0.560, 7.648, 35.142), stdev = 15.370
[info]   CI (99.9%): [≈ 0, 66.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   60.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.000, 12.000), stdev = 0.001
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 17.600, 18.000), stdev = 0.548
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 432934.238 ops/s
[info] # Warmup Iteration   2: 2057630.473 ops/s
[info] # Warmup Iteration   3: 2157578.432 ops/s
[info] Iteration   1: 2167600.166 ops/s
[info]                  ·gc.alloc.rate:                   601.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2163815.405 ops/s
[info]                  ·gc.alloc.rate:               602.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          438.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 471.941 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 2166709.626 ops/s
[info]                  ·gc.alloc.rate:                   603.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2128851.632 ops/s
[info]                  ·gc.alloc.rate:               591.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          437.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 481.410 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 2177166.021 ops/s
[info]                  ·gc.alloc.rate:                   594.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   2160828.570 ±(99.9%) 71491.417 ops/s [Average]
[info]   (min, avg, max) = (2128851.632, 2160828.570, 2177166.021), stdev = 18566.094
[info]   CI (99.9%): [2089337.153, 2232319.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   598.878 ±(99.9%) 21.309 MB/sec [Average]
[info]   (min, avg, max) = (591.370, 598.878, 603.949), stdev = 5.534
[info]   CI (99.9%): [577.569, 620.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   436.117 ±(99.9%) 13.944 B/op [Average]
[info]   (min, avg, max) = (429.826, 436.117, 438.665), stdev = 3.621
[info]   CI (99.9%): [422.173, 450.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   584.879 ±(99.9%) 557.692 MB/sec [Average]
[info]   (min, avg, max) = (325.807, 584.879, 651.273), stdev = 144.831
[info]   CI (99.9%): [27.187, 1142.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   426.297 ±(99.9%) 411.083 B/op [Average]
[info]   (min, avg, max) = (235.482, 426.297, 481.410), stdev = 106.757
[info]   CI (99.9%): [15.214, 837.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.040 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.021), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 797225.094 ops/s
[info] # Warmup Iteration   2: 1889255.859 ops/s
[info] # Warmup Iteration   3: 1991212.476 ops/s
[info] Iteration   1: 1989524.172 ops/s
[info]                  ·gc.alloc.rate:                   558.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     518.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1931637.006 ops/s
[info]                  ·gc.alloc.rate:               548.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          446.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.335 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1936584.493 ops/s
[info]                  ·gc.alloc.rate:                   540.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2003486.565 ops/s
[info]                  ·gc.alloc.rate:               551.253 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 258.260 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1929437.844 ops/s
[info]                  ·gc.alloc.rate:               543.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          443.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 536.599 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1958134.016 ±(99.9%) 136577.669 ops/s [Average]
[info]   (min, avg, max) = (1929437.844, 1958134.016, 2003486.565), stdev = 35468.787
[info]   CI (99.9%): [1821556.346, 2094711.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   548.404 ±(99.9%) 27.535 MB/sec [Average]
[info]   (min, avg, max) = (540.054, 548.404, 558.601), stdev = 7.151
[info]   CI (99.9%): [520.870, 575.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.751 ±(99.9%) 19.864 B/op [Average]
[info]   (min, avg, max) = (433.026, 440.751, 446.675), stdev = 5.159
[info]   CI (99.9%): [420.888, 460.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.562 ±(99.9%) 692.647 MB/sec [Average]
[info]   (min, avg, max) = (328.262, 525.562, 657.965), stdev = 179.878
[info]   CI (99.9%): [≈ 0, 1218.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   422.961 ±(99.9%) 563.735 B/op [Average]
[info]   (min, avg, max) = (258.260, 422.961, 536.599), stdev = 146.400
[info]   CI (99.9%): [≈ 0, 986.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.023 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.051), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 8.000), stdev = 2.302
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 958461.119 ops/s
[info] # Warmup Iteration   2: 1910302.333 ops/s
[info] # Warmup Iteration   3: 1943623.600 ops/s
[info] Iteration   1: 2045537.356 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2044219.915 ops/s
[info]                  ·gc.alloc.rate:      0.838 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.645 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2044602.918 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2045467.164 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2046730.669 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2045311.604 ±(99.9%) 3744.705 ops/s [Average]
[info]   (min, avg, max) = (2044219.915, 2045311.604, 2046730.669), stdev = 972.488
[info]   CI (99.9%): [2041566.900, 2049056.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.168 ±(99.9%) 1.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.168, 0.838), stdev = 0.374
[info]   CI (99.9%): [≈ 0, 1.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.129 ±(99.9%) 1.110 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.129, 0.645), stdev = 0.288
[info]   CI (99.9%): [≈ 0, 1.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6854.493 ops/s
[info] # Warmup Iteration   2: 40672.715 ops/s
[info] # Warmup Iteration   3: 55070.235 ops/s
[info] Iteration   1: 51438.038 ops/s
[info]                  ·gc.alloc.rate:                   2040.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              62443.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59539.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.588 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.786 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 54995.781 ops/s
[info]                  ·gc.alloc.rate:                   1930.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              55243.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55780.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.149 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 55290.830 ops/s
[info]                  ·gc.alloc.rate:                   1930.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              54949.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56048.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.701 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 54813.289 ops/s
[info]                  ·gc.alloc.rate:                   1907.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              54761.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47320.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.577 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.997 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 55209.392 ops/s
[info]                  ·gc.alloc.rate:                   1939.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              55300.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56305.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.593 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   54349.466 ±(99.9%) 6308.158 ops/s [Average]
[info]   (min, avg, max) = (51438.038, 54349.466, 55290.830), stdev = 1638.209
[info]   CI (99.9%): [48041.308, 60657.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1949.876 ±(99.9%) 201.043 MB/sec [Average]
[info]   (min, avg, max) = (1907.312, 1949.876, 2040.742), stdev = 52.210
[info]   CI (99.9%): [1748.833, 2150.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   56539.773 ±(99.9%) 12736.258 B/op [Average]
[info]   (min, avg, max) = (54761.619, 56539.773, 62443.468), stdev = 3307.566
[info]   CI (99.9%): [43803.515, 69276.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1897.581 ±(99.9%) 539.176 MB/sec [Average]
[info]   (min, avg, max) = (1648.125, 1897.581, 1975.209), stdev = 140.022
[info]   CI (99.9%): [1358.405, 2436.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54998.750 ±(99.9%) 17540.732 B/op [Average]
[info]   (min, avg, max) = (47320.000, 54998.750, 59539.500), stdev = 4555.273
[info]   CI (99.9%): [37458.018, 72539.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.454 ±(99.9%) 5.998 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.454, 3.588), stdev = 1.558
[info]   CI (99.9%): [≈ 0, 7.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   43.045 ±(99.9%) 181.402 B/op [Average]
[info]   (min, avg, max) = (0.593, 43.045, 109.786), stdev = 47.109
[info]   CI (99.9%): [≈ 0, 224.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.000, 18.000), stdev = 4.183
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98228.147 ops/s
[info] # Warmup Iteration   2: 244795.868 ops/s
[info] # Warmup Iteration   3: 269864.801 ops/s
[info] Iteration   1: 265245.925 ops/s
[info]                  ·gc.alloc.rate:                   1127.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              6687.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7802.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 268714.591 ops/s
[info]                  ·gc.alloc.rate:                   1087.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              6366.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5786.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.277 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 266080.341 ops/s
[info]                  ·gc.alloc.rate:                   1070.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              6334.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5835.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.881 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 271611.873 ops/s
[info]                  ·gc.alloc.rate:                   1090.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              6318.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5681.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.603 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 272984.685 ops/s
[info]                  ·gc.alloc.rate:                   1095.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              6314.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7541.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   268927.483 ±(99.9%) 12968.763 ops/s [Average]
[info]   (min, avg, max) = (265245.925, 268927.483, 272984.685), stdev = 3367.946
[info]   CI (99.9%): [255958.720, 281896.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1094.258 ±(99.9%) 79.173 MB/sec [Average]
[info]   (min, avg, max) = (1070.997, 1094.258, 1127.176), stdev = 20.561
[info]   CI (99.9%): [1015.085, 1173.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6404.155 ±(99.9%) 615.277 B/op [Average]
[info]   (min, avg, max) = (6314.002, 6404.155, 6687.645), stdev = 159.786
[info]   CI (99.9%): [5788.878, 7019.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1115.774 ±(99.9%) 689.002 MB/sec [Average]
[info]   (min, avg, max) = (980.677, 1115.774, 1315.132), stdev = 178.932
[info]   CI (99.9%): [426.773, 1804.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6529.512 ±(99.9%) 4037.509 B/op [Average]
[info]   (min, avg, max) = (5681.749, 6529.512, 7802.805), stdev = 1048.528
[info]   CI (99.9%): [2492.003, 10567.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.855 ±(99.9%) 4.659 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.855, 2.779), stdev = 1.210
[info]   CI (99.9%): [≈ 0, 5.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.022 ±(99.9%) 27.320 B/op [Average]
[info]   (min, avg, max) = (0.120, 5.022, 16.277), stdev = 7.095
[info]   CI (99.9%): [≈ 0, 32.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 16.000), stdev = 4.980
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1051.297 ops/s
[info] # Warmup Iteration   2: 29443.436 ops/s
[info] # Warmup Iteration   3: 50713.331 ops/s
[info] Iteration   1: 49098.547 ops/s
[info]                  ·gc.alloc.rate:                   2218.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              71109.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73243.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.378 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 49900.003 ops/s
[info]                  ·gc.alloc.rate:                   2004.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              63217.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61950.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.211 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 50999.621 ops/s
[info]                  ·gc.alloc.rate:                   2036.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              62857.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60975.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.927 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 50794.575 ops/s
[info]                  ·gc.alloc.rate:                   2024.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              62691.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61758.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.580 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 50563.612 ops/s
[info]                  ·gc.alloc.rate:                   2047.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              63713.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62506.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.648 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   50271.272 ±(99.9%) 2984.514 ops/s [Average]
[info]   (min, avg, max) = (49098.547, 50271.272, 50999.621), stdev = 775.069
[info]   CI (99.9%): [47286.758, 53255.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2066.271 ±(99.9%) 333.322 MB/sec [Average]
[info]   (min, avg, max) = (2004.549, 2066.271, 2218.492), stdev = 86.563
[info]   CI (99.9%): [1732.949, 2399.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64717.733 ±(99.9%) 13840.735 B/op [Average]
[info]   (min, avg, max) = (62691.059, 64717.733, 71109.243), stdev = 3594.395
[info]   CI (99.9%): [50876.999, 78558.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2045.581 ±(99.9%) 519.583 MB/sec [Average]
[info]   (min, avg, max) = (1964.397, 2045.581, 2285.074), stdev = 134.934
[info]   CI (99.9%): [1525.999, 2565.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64087.001 ±(99.9%) 19822.499 B/op [Average]
[info]   (min, avg, max) = (60975.912, 64087.001, 73243.370), stdev = 5147.840
[info]   CI (99.9%): [44264.502, 83909.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.097 ±(99.9%) 6.133 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.097, 3.662), stdev = 1.593
[info]   CI (99.9%): [≈ 0, 7.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.949 ±(99.9%) 196.413 B/op [Average]
[info]   (min, avg, max) = (0.648, 34.949, 117.378), stdev = 51.008
[info]   CI (99.9%): [≈ 0, 231.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.800, 18.000), stdev = 4.025
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37785.044 ops/s
[info] # Warmup Iteration   2: 158938.783 ops/s
[info] # Warmup Iteration   3: 173007.444 ops/s
[info] Iteration   1: 158897.059 ops/s
[info]                  ·gc.alloc.rate:                   1598.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              15833.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16057.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 158402.158 ops/s
[info]                  ·gc.alloc.rate:                   1592.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              15818.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16239.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.757 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 159031.751 ops/s
[info]                  ·gc.alloc.rate:                   1581.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              15645.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13040.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 158746.747 ops/s
[info]                  ·gc.alloc.rate:                   1597.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              15835.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16450.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 158524.398 ops/s
[info]                  ·gc.alloc.rate:                   1615.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              16037.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16587.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   158720.423 ±(99.9%) 997.713 ops/s [Average]
[info]   (min, avg, max) = (158402.158, 158720.423, 159031.751), stdev = 259.103
[info]   CI (99.9%): [157722.710, 159718.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1597.123 ±(99.9%) 47.851 MB/sec [Average]
[info]   (min, avg, max) = (1581.339, 1597.123, 1615.665), stdev = 12.427
[info]   CI (99.9%): [1549.272, 1644.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15833.919 ±(99.9%) 535.228 B/op [Average]
[info]   (min, avg, max) = (15645.004, 15833.919, 16037.274), stdev = 138.997
[info]   CI (99.9%): [15298.690, 16369.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1580.974 ±(99.9%) 570.931 MB/sec [Average]
[info]   (min, avg, max) = (1318.064, 1580.974, 1671.138), stdev = 148.269
[info]   CI (99.9%): [1010.043, 2151.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15675.149 ±(99.9%) 5724.982 B/op [Average]
[info]   (min, avg, max) = (13040.284, 15675.149, 16587.897), stdev = 1486.760
[info]   CI (99.9%): [9950.167, 21400.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.763 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.479), stdev = 0.198
[info]   CI (99.9%): [≈ 0, 0.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.240 ±(99.9%) 7.578 B/op [Average]
[info]   (min, avg, max) = (0.206, 1.240, 4.757), stdev = 1.968
[info]   CI (99.9%): [≈ 0, 8.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132409.243 ops/s
[info] # Warmup Iteration   2: 466260.083 ops/s
[info] # Warmup Iteration   3: 519240.968 ops/s
[info] Iteration   1: 526450.420 ops/s
[info]                  ·gc.alloc.rate:                   728.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              2178.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1959.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 524977.459 ops/s
[info]                  ·gc.alloc.rate:               721.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          2162.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1969.232 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 507505.478 ops/s
[info]                  ·gc.alloc.rate:                   732.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2039.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 510649.957 ops/s
[info]                  ·gc.alloc.rate:                   706.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              2176.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2028.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 518967.729 ops/s
[info]                  ·gc.alloc.rate:                   711.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              2158.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1998.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   517710.209 ±(99.9%) 32490.015 ops/s [Average]
[info]   (min, avg, max) = (507505.478, 517710.209, 526450.420), stdev = 8437.554
[info]   CI (99.9%): [485220.194, 550200.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   720.201 ±(99.9%) 43.263 MB/sec [Average]
[info]   (min, avg, max) = (706.115, 720.201, 732.850), stdev = 11.235
[info]   CI (99.9%): [676.939, 763.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2189.662 ±(99.9%) 181.724 B/op [Average]
[info]   (min, avg, max) = (2158.723, 2189.662, 2272.670), stdev = 47.193
[info]   CI (99.9%): [2007.938, 2371.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.445 ±(99.9%) 4.636 MB/sec [Average]
[info]   (min, avg, max) = (655.672, 657.445, 658.839), stdev = 1.204
[info]   CI (99.9%): [652.809, 662.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1998.932 ±(99.9%) 134.884 B/op [Average]
[info]   (min, avg, max) = (1959.732, 1998.932, 2039.058), stdev = 35.029
[info]   CI (99.9%): [1864.049, 2133.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.773 ±(99.9%) 6.431 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.773, 3.760), stdev = 1.670
[info]   CI (99.9%): [≈ 0, 7.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.344 ±(99.9%) 19.504 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.344, 11.404), stdev = 5.065
[info]   CI (99.9%): [≈ 0, 21.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 8.000), stdev = 0.837
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:16:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201846.407 ops/s
[info] # Warmup Iteration   2: 544655.374 ops/s
[info] # Warmup Iteration   3: 586688.107 ops/s
[info] Iteration   1: 585445.913 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 585588.273 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 587155.060 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 587120.943 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 586729.675 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   586407.973 ±(99.9%) 3202.885 ops/s [Average]
[info]   (min, avg, max) = (585445.913, 586407.973, 587155.060), stdev = 831.779
[info]   CI (99.9%): [583205.088, 589610.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4979.704 ops/s
[info] # Warmup Iteration   2: 41645.600 ops/s
[info] # Warmup Iteration   3: 72943.347 ops/s
[info] Iteration   1: 75349.020 ops/s
[info]                  ·gc.alloc.rate:                   1734.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              36225.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40558.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.967 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 85255.538 ops/s
[info]                  ·gc.alloc.rate:                   1568.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              28953.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23857.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.701 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 85250.281 ops/s
[info]                  ·gc.alloc.rate:                   1581.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              29182.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29884.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.525 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 85392.969 ops/s
[info]                  ·gc.alloc.rate:                   1573.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              28989.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29922.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.322 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 84824.468 ops/s
[info]                  ·gc.alloc.rate:                   1577.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              29266.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30190.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   83214.455 ±(99.9%) 16950.898 ops/s [Average]
[info]   (min, avg, max) = (75349.020, 83214.455, 85392.969), stdev = 4402.094
[info]   CI (99.9%): [66263.557, 100165.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1606.897 ±(99.9%) 275.186 MB/sec [Average]
[info]   (min, avg, max) = (1568.401, 1606.897, 1734.457), stdev = 71.465
[info]   CI (99.9%): [1331.710, 1882.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30523.400 ±(99.9%) 12283.807 B/op [Average]
[info]   (min, avg, max) = (28953.125, 30523.400, 36225.169), stdev = 3190.066
[info]   CI (99.9%): [18239.592, 42807.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1620.866 ±(99.9%) 884.533 MB/sec [Average]
[info]   (min, avg, max) = (1292.356, 1620.866, 1941.956), stdev = 229.710
[info]   CI (99.9%): [736.332, 2505.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30882.501 ±(99.9%) 23214.699 B/op [Average]
[info]   (min, avg, max) = (23857.265, 30882.501, 40558.890), stdev = 6028.784
[info]   CI (99.9%): [7667.801, 54097.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.880 ±(99.9%) 5.479 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.880, 3.559), stdev = 1.423
[info]   CI (99.9%): [≈ 0, 7.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.058 ±(99.9%) 106.072 B/op [Average]
[info]   (min, avg, max) = (0.773, 36.058, 65.701), stdev = 27.547
[info]   CI (99.9%): [≈ 0, 142.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.400, 32.000), stdev = 9.581
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3948.213 ops/s
[info] # Warmup Iteration   2: 75458.202 ops/s
[info] # Warmup Iteration   3: 94043.545 ops/s
[info] Iteration   1: 101449.265 ops/s
[info]                  ·gc.alloc.rate:                   1598.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              24787.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25330.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 98811.357 ops/s
[info]                  ·gc.alloc.rate:                   1547.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              24646.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20626.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.631 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 104534.317 ops/s
[info]                  ·gc.alloc.rate:                   1640.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              24690.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24362.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.821 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 104539.798 ops/s
[info]                  ·gc.alloc.rate:               1642.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          24719.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1629.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24520.762 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 103745.567 ops/s
[info]                  ·gc.alloc.rate:               1649.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          25027.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24967.780 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   102616.061 ±(99.9%) 9528.581 ops/s [Average]
[info]   (min, avg, max) = (98811.357, 102616.061, 104539.798), stdev = 2474.542
[info]   CI (99.9%): [93087.480, 112144.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1615.634 ±(99.9%) 166.035 MB/sec [Average]
[info]   (min, avg, max) = (1547.359, 1615.634, 1649.949), stdev = 43.119
[info]   CI (99.9%): [1449.599, 1781.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24774.354 ±(99.9%) 580.685 B/op [Average]
[info]   (min, avg, max) = (24646.039, 24774.354, 25027.955), stdev = 150.802
[info]   CI (99.9%): [24193.669, 25355.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1564.363 ±(99.9%) 581.089 MB/sec [Average]
[info]   (min, avg, max) = (1294.997, 1564.363, 1645.982), stdev = 150.907
[info]   CI (99.9%): [983.273, 2145.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   23961.489 ±(99.9%) 7326.816 B/op [Average]
[info]   (min, avg, max) = (20626.472, 23961.489, 25330.269), stdev = 1902.751
[info]   CI (99.9%): [16634.673, 31288.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.321 ±(99.9%) 10.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.321, 5.999), stdev = 2.621
[info]   CI (99.9%): [≈ 0, 11.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.495 ±(99.9%) 156.476 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.495, 93.025), stdev = 40.636
[info]   CI (99.9%): [≈ 0, 176.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 18.000), stdev = 5.273
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5239.972 ops/s
[info] # Warmup Iteration   2: 83257.367 ops/s
[info] # Warmup Iteration   3: 133073.757 ops/s
[info] Iteration   1: 151265.298 ops/s
[info]                  ·gc.alloc.rate:                   712.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              7407.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6723.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 154197.761 ops/s
[info]                  ·gc.alloc.rate:               729.319 MB/sec
[info]                  ·gc.alloc.rate.norm:          7442.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6595.245 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 154386.912 ops/s
[info]                  ·gc.alloc.rate:                   739.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              7537.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9918.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.424 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 153688.541 ops/s
[info]                  ·gc.alloc.rate:                   728.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              7458.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6665.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.475 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 154542.609 ops/s
[info]                  ·gc.alloc.rate:                   735.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              7488.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6648.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   153616.224 ±(99.9%) 5209.914 ops/s [Average]
[info]   (min, avg, max) = (151265.298, 153616.224, 154542.609), stdev = 1352.998
[info]   CI (99.9%): [148406.310, 158826.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   729.066 ±(99.9%) 40.269 MB/sec [Average]
[info]   (min, avg, max) = (712.208, 729.066, 739.497), stdev = 10.458
[info]   CI (99.9%): [688.797, 769.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7467.070 ±(99.9%) 188.305 B/op [Average]
[info]   (min, avg, max) = (7407.929, 7467.070, 7537.174), stdev = 48.902
[info]   CI (99.9%): [7278.765, 7655.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   713.995 ±(99.9%) 557.858 MB/sec [Average]
[info]   (min, avg, max) = (646.304, 713.995, 973.099), stdev = 144.874
[info]   CI (99.9%): [156.138, 1271.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7310.028 ±(99.9%) 5616.839 B/op [Average]
[info]   (min, avg, max) = (6595.245, 7310.028, 9918.109), stdev = 1458.675
[info]   CI (99.9%): [1693.189, 12926.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.306 ±(99.9%) 2.002 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.306, 1.219), stdev = 0.520
[info]   CI (99.9%): [≈ 0, 2.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.132 ±(99.9%) 20.491 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.132, 12.475), stdev = 5.322
[info]   CI (99.9%): [≈ 0, 23.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20118.760 ops/s
[info] # Warmup Iteration   2: 289346.405 ops/s
[info] # Warmup Iteration   3: 323821.009 ops/s
[info] Iteration   1: 341510.192 ops/s
[info]                  ·gc.alloc.rate:                   1454.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              6703.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6063.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 343213.993 ops/s
[info]                  ·gc.alloc.rate:                   1448.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              6641.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6024.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 330448.781 ops/s
[info]                  ·gc.alloc.rate:                   1407.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              6702.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7773.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.595 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 342563.095 ops/s
[info]                  ·gc.alloc.rate:               1443.019 MB/sec
[info]                  ·gc.alloc.rate.norm:          6628.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6007.848 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 345235.973 ops/s
[info]                  ·gc.alloc.rate:                   1474.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              6717.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5996.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   340594.407 ±(99.9%) 22457.417 ops/s [Average]
[info]   (min, avg, max) = (330448.781, 340594.407, 345235.973), stdev = 5832.120
[info]   CI (99.9%): [318136.989, 363051.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1445.585 ±(99.9%) 93.805 MB/sec [Average]
[info]   (min, avg, max) = (1407.395, 1445.585, 1474.112), stdev = 24.361
[info]   CI (99.9%): [1351.780, 1539.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6678.642 ±(99.9%) 155.885 B/op [Average]
[info]   (min, avg, max) = (6628.897, 6678.642, 6717.441), stdev = 40.483
[info]   CI (99.9%): [6522.757, 6834.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1377.173 ±(99.9%) 549.186 MB/sec [Average]
[info]   (min, avg, max) = (1307.825, 1377.173, 1632.234), stdev = 142.622
[info]   CI (99.9%): [827.988, 1926.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6372.980 ±(99.9%) 3015.622 B/op [Average]
[info]   (min, avg, max) = (5996.227, 6372.980, 7773.176), stdev = 783.147
[info]   CI (99.9%): [3357.359, 9388.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.869 ±(99.9%) 7.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.869, 4.177), stdev = 1.850
[info]   CI (99.9%): [≈ 0, 7.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.988 ±(99.9%) 32.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.988, 19.152), stdev = 8.480
[info]   CI (99.9%): [≈ 0, 36.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 17.000), stdev = 5.020
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391.733 ops/s
[info] # Warmup Iteration   2: 20808.786 ops/s
[info] # Warmup Iteration   3: 51308.395 ops/s
[info] Iteration   1: 51278.335 ops/s
[info]                  ·gc.alloc.rate:                   2218.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              68075.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70331.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.281 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 53118.298 ops/s
[info]                  ·gc.alloc.rate:                   2165.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              64133.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58404.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.709 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 53151.319 ops/s
[info]                  ·gc.alloc.rate:                   2160.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              63976.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68583.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.233 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 53641.063 ops/s
[info]                  ·gc.alloc.rate:                   2192.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              64320.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58742.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.611 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 53975.635 ops/s
[info]                  ·gc.alloc.rate:                   2199.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              64121.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58740.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.821 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   53032.930 ±(99.9%) 4019.464 ops/s [Average]
[info]   (min, avg, max) = (51278.335, 53032.930, 53975.635), stdev = 1043.842
[info]   CI (99.9%): [49013.466, 57052.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2187.219 ±(99.9%) 93.200 MB/sec [Average]
[info]   (min, avg, max) = (2160.722, 2187.219, 2218.463), stdev = 24.204
[info]   CI (99.9%): [2094.019, 2280.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64925.315 ±(99.9%) 6797.341 B/op [Average]
[info]   (min, avg, max) = (63976.049, 64925.315, 68075.491), stdev = 1765.248
[info]   CI (99.9%): [58127.973, 71722.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2119.432 ±(99.9%) 652.996 MB/sec [Average]
[info]   (min, avg, max) = (1971.704, 2119.432, 2316.333), stdev = 169.581
[info]   CI (99.9%): [1466.436, 2772.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   62960.683 ±(99.9%) 22967.368 B/op [Average]
[info]   (min, avg, max) = (58404.450, 62960.683, 70331.691), stdev = 5964.553
[info]   CI (99.9%): [39993.314, 85928.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.908 ±(99.9%) 5.099 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.908, 3.040), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 6.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.531 ±(99.9%) 156.107 B/op [Average]
[info]   (min, avg, max) = (0.611, 27.531, 93.281), stdev = 40.540
[info]   CI (99.9%): [≈ 0, 183.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 17.000), stdev = 3.391
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28842.504 ops/s
[info] # Warmup Iteration   2: 207982.288 ops/s
[info] # Warmup Iteration   3: 229080.768 ops/s
[info] Iteration   1: 253987.145 ops/s
[info]                  ·gc.alloc.rate:                   901.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              5585.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6010.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 253152.851 ops/s
[info]                  ·gc.alloc.rate:                   901.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              5606.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6050.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 251176.708 ops/s
[info]                  ·gc.alloc.rate:                   887.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              5560.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4086.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.652 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 250751.297 ops/s
[info]                  ·gc.alloc.rate:                   887.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              5571.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6159.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.176 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 250907.445 ops/s
[info]                  ·gc.alloc.rate:                   886.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              5561.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6180.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   251995.089 ±(99.9%) 5681.636 ops/s [Average]
[info]   (min, avg, max) = (250751.297, 251995.089, 253987.145), stdev = 1475.503
[info]   CI (99.9%): [246313.453, 257676.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   893.099 ±(99.9%) 30.262 MB/sec [Average]
[info]   (min, avg, max) = (886.592, 893.099, 901.763), stdev = 7.859
[info]   CI (99.9%): [862.837, 923.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5577.077 ±(99.9%) 74.223 B/op [Average]
[info]   (min, avg, max) = (5560.596, 5577.077, 5606.353), stdev = 19.276
[info]   CI (99.9%): [5502.854, 5651.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   912.492 ±(99.9%) 560.557 MB/sec [Average]
[info]   (min, avg, max) = (652.308, 912.492, 985.263), stdev = 145.575
[info]   CI (99.9%): [351.935, 1473.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5697.299 ±(99.9%) 3478.718 B/op [Average]
[info]   (min, avg, max) = (4086.283, 5697.299, 6180.138), stdev = 903.412
[info]   CI (99.9%): [2218.581, 9176.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.179 ±(99.9%) 0.905 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.179, 0.583), stdev = 0.235
[info]   CI (99.9%): [≈ 0, 1.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.121 ±(99.9%) 5.670 B/op [Average]
[info]   (min, avg, max) = (0.129, 1.121, 3.652), stdev = 1.472
[info]   CI (99.9%): [≈ 0, 6.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 174831.657 ops/s
[info] # Warmup Iteration   2: 590823.142 ops/s
[info] # Warmup Iteration   3: 654355.524 ops/s
[info] Iteration   1: 654390.708 ops/s
[info]                  ·gc.alloc.rate:                   733.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              1764.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1579.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 652290.620 ops/s
[info]                  ·gc.alloc.rate:                   733.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              1769.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1586.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 651257.479 ops/s
[info]                  ·gc.alloc.rate:                   733.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              1770.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1590.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 632727.684 ops/s
[info]                  ·gc.alloc.rate:                   720.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1791.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2459.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.851 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 666382.243 ops/s
[info]                  ·gc.alloc.rate:                   748.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              1766.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1552.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.803 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   651409.747 ±(99.9%) 46482.884 ops/s [Average]
[info]   (min, avg, max) = (632727.684, 651409.747, 666382.243), stdev = 12071.457
[info]   CI (99.9%): [604926.862, 697892.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   733.774 ±(99.9%) 38.160 MB/sec [Average]
[info]   (min, avg, max) = (720.225, 733.774, 748.219), stdev = 9.910
[info]   CI (99.9%): [695.615, 771.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1772.641 ±(99.9%) 41.089 B/op [Average]
[info]   (min, avg, max) = (1764.815, 1772.641, 1791.207), stdev = 10.671
[info]   CI (99.9%): [1731.553, 1813.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.861 ±(99.9%) 570.182 MB/sec [Average]
[info]   (min, avg, max) = (656.836, 723.861, 988.743), stdev = 148.074
[info]   CI (99.9%): [153.679, 1294.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1753.725 ±(99.9%) 1519.233 B/op [Average]
[info]   (min, avg, max) = (1552.956, 1753.725, 2459.015), stdev = 394.540
[info]   CI (99.9%): [234.492, 3272.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 5.272 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.881, 3.157), stdev = 1.369
[info]   CI (99.9%): [≈ 0, 6.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.160 ±(99.9%) 13.085 B/op [Average]
[info]   (min, avg, max) = (0.019, 2.160, 7.851), stdev = 3.398
[info]   CI (99.9%): [≈ 0, 15.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 14.000), stdev = 3.578
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180166.703 ops/s
[info] # Warmup Iteration   2: 628367.901 ops/s
[info] # Warmup Iteration   3: 740849.765 ops/s
[info] Iteration   1: 731355.502 ops/s
[info]                  ·gc.alloc.rate:      1.492 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.209 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 735846.159 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 733968.033 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 737517.761 ops/s
[info]                  ·gc.alloc.rate:      0.072 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.153 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 739992.886 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   735736.068 ±(99.9%) 12716.217 ops/s [Average]
[info]   (min, avg, max) = (731355.502, 735736.068, 739992.886), stdev = 3302.361
[info]   CI (99.9%): [723019.852, 748452.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.313 ±(99.9%) 2.541 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.313, 1.492), stdev = 0.660
[info]   CI (99.9%): [≈ 0, 2.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.673 ±(99.9%) 5.466 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.673, 3.209), stdev = 1.419
[info]   CI (99.9%): [≈ 0, 6.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5262.784 ops/s
[info] # Warmup Iteration   2: 51818.067 ops/s
[info] # Warmup Iteration   3: 76227.274 ops/s
[info] Iteration   1: 81740.086 ops/s
[info]                  ·gc.alloc.rate:                   1792.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              34502.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31508.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.874 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 85837.120 ops/s
[info]                  ·gc.alloc.rate:                   1796.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              32925.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30088.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.919 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 83127.663 ops/s
[info]                  ·gc.alloc.rate:                   1739.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              32936.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37446.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.856 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 93511.400 ops/s
[info]                  ·gc.alloc.rate:                   1464.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              24637.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22244.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.372 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 94835.279 ops/s
[info]                  ·gc.alloc.rate:                   1492.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              24758.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21934.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   87810.309 ±(99.9%) 23145.614 ops/s [Average]
[info]   (min, avg, max) = (81740.086, 87810.309, 94835.279), stdev = 6010.842
[info]   CI (99.9%): [64664.696, 110955.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1656.941 ±(99.9%) 635.376 MB/sec [Average]
[info]   (min, avg, max) = (1464.119, 1656.941, 1796.001), stdev = 165.005
[info]   CI (99.9%): [1021.565, 2292.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   29951.971 ±(99.9%) 18634.627 B/op [Average]
[info]   (min, avg, max) = (24637.186, 29951.971, 34502.391), stdev = 4839.354
[info]   CI (99.9%): [11317.343, 48586.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1580.048 ±(99.9%) 1051.915 MB/sec [Average]
[info]   (min, avg, max) = (1321.930, 1580.048, 1977.941), stdev = 273.179
[info]   CI (99.9%): [528.133, 2631.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   28644.539 ±(99.9%) 25378.671 B/op [Average]
[info]   (min, avg, max) = (21934.470, 28644.539, 37446.891), stdev = 6590.760
[info]   CI (99.9%): [3265.868, 54023.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.722 ±(99.9%) 4.586 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.722, 3.291), stdev = 1.191
[info]   CI (99.9%): [≈ 0, 6.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   31.011 ±(99.9%) 77.910 B/op [Average]
[info]   (min, avg, max) = (1.036, 31.011, 55.372), stdev = 20.233
[info]   CI (99.9%): [≈ 0, 108.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 18.000), stdev = 5.450
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16537.017 ops/s
[info] # Warmup Iteration   2: 66649.073 ops/s
[info] # Warmup Iteration   3: 116479.116 ops/s
[info] Iteration   1: 119605.161 ops/s
[info]                  ·gc.alloc.rate:                   2386.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              31394.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2259.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29724.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.182 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.004 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 117686.400 ops/s
[info]                  ·gc.alloc.rate:                   2343.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              31333.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2256.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30166.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.057 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 124834.722 ops/s
[info]                  ·gc.alloc.rate:                   2033.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              25637.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24343.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.768 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 121594.857 ops/s
[info]                  ·gc.alloc.rate:                   1969.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              25497.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25220.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.808 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 121931.406 ops/s
[info]                  ·gc.alloc.rate:                   1974.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              25491.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25459.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.806 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   121130.509 ±(99.9%) 10326.408 ops/s [Average]
[info]   (min, avg, max) = (117686.400, 121130.509, 124834.722), stdev = 2681.735
[info]   CI (99.9%): [110804.101, 131456.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2141.834 ±(99.9%) 793.839 MB/sec [Average]
[info]   (min, avg, max) = (1969.896, 2141.834, 2386.784), stdev = 206.158
[info]   CI (99.9%): [1347.995, 2935.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   27870.782 ±(99.9%) 12280.144 B/op [Average]
[info]   (min, avg, max) = (25491.176, 27870.782, 31394.168), stdev = 3189.114
[info]   CI (99.9%): [15590.639, 40150.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2073.681 ±(99.9%) 651.328 MB/sec [Average]
[info]   (min, avg, max) = (1930.933, 2073.681, 2259.837), stdev = 169.148
[info]   CI (99.9%): [1422.353, 2725.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   26982.840 ±(99.9%) 10553.022 B/op [Average]
[info]   (min, avg, max) = (24343.203, 26982.840, 30166.260), stdev = 2740.586
[info]   CI (99.9%): [16429.818, 37535.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.554 ±(99.9%) 11.101 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.554, 6.737), stdev = 2.883
[info]   CI (99.9%): [≈ 0, 13.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   33.689 ±(99.9%) 148.339 B/op [Average]
[info]   (min, avg, max) = (0.806, 33.689, 90.057), stdev = 38.523
[info]   CI (99.9%): [≈ 0, 182.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.000, 23.000), stdev = 6.782
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15237.087 ops/s
[info] # Warmup Iteration   2: 113119.596 ops/s
[info] # Warmup Iteration   3: 197749.296 ops/s
[info] Iteration   1: 201376.943 ops/s
[info]                  ·gc.alloc.rate:               845.836 MB/sec
[info]                  ·gc.alloc.rate.norm:          6609.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:      964.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7533.562 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 200113.478 ops/s
[info]                  ·gc.alloc.rate:                   836.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              6578.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5068.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 208402.752 ops/s
[info]                  ·gc.alloc.rate:                   879.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              6639.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7332.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 209008.882 ops/s
[info]                  ·gc.alloc.rate:                   868.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              6540.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4900.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 205787.755 ops/s
[info]                  ·gc.alloc.rate:                   860.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              6580.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7492.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.751 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   204937.962 ±(99.9%) 15552.956 ops/s [Average]
[info]   (min, avg, max) = (200113.478, 204937.962, 209008.882), stdev = 4039.053
[info]   CI (99.9%): [189385.006, 220490.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   858.197 ±(99.9%) 66.202 MB/sec [Average]
[info]   (min, avg, max) = (836.578, 858.197, 879.313), stdev = 17.193
[info]   CI (99.9%): [791.995, 924.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6589.482 ±(99.9%) 142.747 B/op [Average]
[info]   (min, avg, max) = (6540.347, 6589.482, 6639.383), stdev = 37.071
[info]   CI (99.9%): [6446.735, 6732.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   842.149 ±(99.9%) 683.570 MB/sec [Average]
[info]   (min, avg, max) = (644.614, 842.149, 979.839), stdev = 177.521
[info]   CI (99.9%): [158.579, 1525.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6465.763 ±(99.9%) 5218.313 B/op [Average]
[info]   (min, avg, max) = (4900.990, 6465.763, 7533.562), stdev = 1355.179
[info]   CI (99.9%): [1247.450, 11684.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.187 ±(99.9%) 1.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.187, 0.666), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.418 ±(99.9%) 8.221 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.418, 5.016), stdev = 2.135
[info]   CI (99.9%): [≈ 0, 9.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72272.763 ops/s
[info] # Warmup Iteration   2: 177350.036 ops/s
[info] # Warmup Iteration   3: 247455.051 ops/s
[info] Iteration   1: 281108.309 ops/s
[info]                  ·gc.alloc.rate:                   1027.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              5751.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5516.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 281124.739 ops/s
[info]                  ·gc.alloc.rate:                   1035.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              5796.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5515.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.739 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 277074.675 ops/s
[info]                  ·gc.alloc.rate:                   1021.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              5799.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5566.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.494 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 282621.523 ops/s
[info]                  ·gc.alloc.rate:                   1030.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5434.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.507 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 284639.246 ops/s
[info]                  ·gc.alloc.rate:                   1035.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              5721.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5401.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   281313.699 ±(99.9%) 10688.031 ops/s [Average]
[info]   (min, avg, max) = (277074.675, 281313.699, 284639.246), stdev = 2775.648
[info]   CI (99.9%): [270625.667, 292001.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1029.929 ±(99.9%) 22.792 MB/sec [Average]
[info]   (min, avg, max) = (1021.285, 1029.929, 1035.506), stdev = 5.919
[info]   CI (99.9%): [1007.137, 1052.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5761.001 ±(99.9%) 137.245 B/op [Average]
[info]   (min, avg, max) = (5721.342, 5761.001, 5799.811), stdev = 35.642
[info]   CI (99.9%): [5623.755, 5898.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   980.903 ±(99.9%) 16.835 MB/sec [Average]
[info]   (min, avg, max) = (976.117, 980.903, 985.488), stdev = 4.372
[info]   CI (99.9%): [964.068, 997.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5487.042 ±(99.9%) 258.079 B/op [Average]
[info]   (min, avg, max) = (5401.803, 5487.042, 5566.301), stdev = 67.022
[info]   CI (99.9%): [5228.963, 5745.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.835 ±(99.9%) 4.779 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.835, 2.990), stdev = 1.241
[info]   CI (99.9%): [≈ 0, 5.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.686 ±(99.9%) 26.761 B/op [Average]
[info]   (min, avg, max) = (0.117, 4.686, 16.739), stdev = 6.950
[info]   CI (99.9%): [≈ 0, 31.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 13.000), stdev = 3.962
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5117.638 ops/s
[info] # Warmup Iteration   2: 42207.045 ops/s
[info] # Warmup Iteration   3: 87650.057 ops/s
[info] Iteration   1: 83426.494 ops/s
[info]                  ·gc.alloc.rate:                   2924.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              55159.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2899.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54693.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.076 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 99148.863 ops/s
[info]                  ·gc.alloc.rate:                   3214.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              51011.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3211.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50954.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.337 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 99906.858 ops/s
[info]                  ·gc.alloc.rate:                   3230.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              50884.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3230.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50874.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.608 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.327 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 99359.065 ops/s
[info]                  ·gc.alloc.rate:                   3245.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              51391.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2950.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46730.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.319 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 100674.589 ops/s
[info]                  ·gc.alloc.rate:                   3298.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              51543.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3333.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52092.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.953 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   96503.174 ±(99.9%) 28240.025 ops/s [Average]
[info]   (min, avg, max) = (83426.494, 96503.174, 100674.589), stdev = 7333.845
[info]   CI (99.9%): [68263.149, 124743.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3182.685 ±(99.9%) 569.036 MB/sec [Average]
[info]   (min, avg, max) = (2924.370, 3182.685, 3298.319), stdev = 147.777
[info]   CI (99.9%): [2613.649, 3751.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51998.184 ±(99.9%) 6882.731 B/op [Average]
[info]   (min, avg, max) = (50884.738, 51998.184, 55159.259), stdev = 1787.423
[info]   CI (99.9%): [45115.453, 58880.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3125.059 ±(99.9%) 728.122 MB/sec [Average]
[info]   (min, avg, max) = (2899.674, 3125.059, 3333.464), stdev = 189.091
[info]   CI (99.9%): [2396.937, 3853.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   51069.185 ±(99.9%) 11069.618 B/op [Average]
[info]   (min, avg, max) = (46730.591, 51069.185, 54693.451), stdev = 2874.745
[info]   CI (99.9%): [39999.567, 62138.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.372 ±(99.9%) 11.038 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.372, 7.016), stdev = 2.866
[info]   CI (99.9%): [≈ 0, 13.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   39.402 ±(99.9%) 177.901 B/op [Average]
[info]   (min, avg, max) = (1.319, 39.402, 111.337), stdev = 46.200
[info]   CI (99.9%): [≈ 0, 217.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   104.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 20.800, 33.000), stdev = 9.176
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43344.277 ops/s
[info] # Warmup Iteration   2: 192376.408 ops/s
[info] # Warmup Iteration   3: 238928.546 ops/s
[info] Iteration   1: 248739.251 ops/s
[info]                  ·gc.alloc.rate:                   1692.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              10706.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10343.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.821 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 249680.162 ops/s
[info]                  ·gc.alloc.rate:                   1697.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              10694.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10232.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.575 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 250449.131 ops/s
[info]                  ·gc.alloc.rate:                   1692.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              10634.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10216.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 249394.447 ops/s
[info]                  ·gc.alloc.rate:                   1703.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              10753.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10339.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 248646.116 ops/s
[info]                  ·gc.alloc.rate:                   1713.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              10843.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10471.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   249381.822 ±(99.9%) 2844.317 ops/s [Average]
[info]   (min, avg, max) = (248646.116, 249381.822, 250449.131), stdev = 738.660
[info]   CI (99.9%): [246537.505, 252226.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1699.993 ±(99.9%) 34.139 MB/sec [Average]
[info]   (min, avg, max) = (1692.421, 1699.993, 1713.508), stdev = 8.866
[info]   CI (99.9%): [1665.854, 1734.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10726.214 ±(99.9%) 299.939 B/op [Average]
[info]   (min, avg, max) = (10634.048, 10726.214, 10843.047), stdev = 77.893
[info]   CI (99.9%): [10426.275, 11026.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1635.721 ±(99.9%) 47.108 MB/sec [Average]
[info]   (min, avg, max) = (1624.059, 1635.721, 1654.854), stdev = 12.234
[info]   CI (99.9%): [1588.613, 1682.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10320.761 ±(99.9%) 396.178 B/op [Average]
[info]   (min, avg, max) = (10216.175, 10320.761, 10471.887), stdev = 102.886
[info]   CI (99.9%): [9924.583, 10716.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.919 ±(99.9%) 7.158 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.919, 4.240), stdev = 1.859
[info]   CI (99.9%): [≈ 0, 8.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.811 ±(99.9%) 45.284 B/op [Average]
[info]   (min, avg, max) = (0.131, 5.811, 26.821), stdev = 11.760
[info]   CI (99.9%): [≈ 0, 51.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 18.000), stdev = 5.050
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118946.857 ops/s
[info] # Warmup Iteration   2: 610251.037 ops/s
[info] # Warmup Iteration   3: 771886.768 ops/s
[info] Iteration   1: 814881.296 ops/s
[info]                  ·gc.alloc.rate:                   434.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              839.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 842459.389 ops/s
[info]                  ·gc.alloc.rate:                   461.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              861.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 843068.236 ops/s
[info]                  ·gc.alloc.rate:               453.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          847.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 601.277 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 813802.935 ops/s
[info]                  ·gc.alloc.rate:               440.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          850.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 622.907 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 805697.424 ops/s
[info]                  ·gc.alloc.rate:               450.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          879.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1263.555 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   823981.856 ±(99.9%) 67426.420 ops/s [Average]
[info]   (min, avg, max) = (805697.424, 823981.856, 843068.236), stdev = 17510.427
[info]   CI (99.9%): [756555.436, 891408.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   448.179 ±(99.9%) 41.281 MB/sec [Average]
[info]   (min, avg, max) = (434.946, 448.179, 461.608), stdev = 10.720
[info]   CI (99.9%): [406.898, 489.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   855.904 ±(99.9%) 58.936 B/op [Average]
[info]   (min, avg, max) = (839.954, 855.904, 879.322), stdev = 15.306
[info]   CI (99.9%): [796.968, 914.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   450.792 ±(99.9%) 681.862 MB/sec [Average]
[info]   (min, avg, max) = (320.144, 450.792, 647.052), stdev = 177.077
[info]   CI (99.9%): [≈ 0, 1132.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   861.141 ±(99.9%) 1305.601 B/op [Average]
[info]   (min, avg, max) = (601.277, 861.141, 1263.555), stdev = 339.061
[info]   CI (99.9%): [≈ 0, 2166.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.202 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.121), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 315790.867 ops/s
[info] # Warmup Iteration   2: 834883.453 ops/s
[info] # Warmup Iteration   3: 874131.453 ops/s
[info] Iteration   1: 885882.206 ops/s
[info]                  ·gc.alloc.rate:               488.198 MB/sec
[info]                  ·gc.alloc.rate.norm:          866.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1163.421 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 884582.233 ops/s
[info]                  ·gc.alloc.rate:               478.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          850.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 583.749 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 862503.005 ops/s
[info]                  ·gc.alloc.rate:                   479.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 861488.538 ops/s
[info]                  ·gc.alloc.rate:               463.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          846.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 599.996 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 864621.672 ops/s
[info]                  ·gc.alloc.rate:               468.563 MB/sec
[info]                  ·gc.alloc.rate.norm:          852.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 599.015 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   871815.531 ±(99.9%) 47395.059 ops/s [Average]
[info]   (min, avg, max) = (861488.538, 871815.531, 885882.206), stdev = 12308.346
[info]   CI (99.9%): [824420.472, 919210.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   475.617 ±(99.9%) 37.897 MB/sec [Average]
[info]   (min, avg, max) = (463.178, 475.617, 488.198), stdev = 9.842
[info]   CI (99.9%): [437.720, 513.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   858.375 ±(99.9%) 46.829 B/op [Average]
[info]   (min, avg, max) = (846.050, 858.375, 875.090), stdev = 12.161
[info]   CI (99.9%): [811.547, 905.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.523 ±(99.9%) 690.321 MB/sec [Average]
[info]   (min, avg, max) = (328.246, 459.523, 656.684), stdev = 179.274
[info]   CI (99.9%): [≈ 0, 1149.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   828.826 ±(99.9%) 1237.976 B/op [Average]
[info]   (min, avg, max) = (583.749, 828.826, 1197.950), stdev = 321.499
[info]   CI (99.9%): [≈ 0, 2066.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.130 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.075), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.138), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386960.675 ops/s
[info] # Warmup Iteration   2: 806975.090 ops/s
[info] # Warmup Iteration   3: 911753.449 ops/s
[info] Iteration   1: 914724.519 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 906255.342 ops/s
[info]                  ·gc.alloc.rate:      0.007 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 897532.294 ops/s
[info]                  ·gc.alloc.rate:      6.061 MB/sec
[info]                  ·gc.alloc.rate.norm: 10.628 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 909215.580 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 913687.403 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   908283.028 ±(99.9%) 26626.551 ops/s [Average]
[info]   (min, avg, max) = (897532.294, 908283.028, 914724.519), stdev = 6914.831
[info]   CI (99.9%): [881656.477, 934909.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.214 ±(99.9%) 10.434 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.214, 6.061), stdev = 2.710
[info]   CI (99.9%): [≈ 0, 11.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.128 ±(99.9%) 18.296 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 2.128, 10.628), stdev = 4.751
[info]   CI (99.9%): [≈ 0, 20.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4204.880 ops/s
[info] # Warmup Iteration   2: 24907.124 ops/s
[info] # Warmup Iteration   3: 39361.396 ops/s
[info] Iteration   1: 38499.504 ops/s
[info]                  ·gc.alloc.rate:                   1932.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              79006.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66199.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.433 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 37194.309 ops/s
[info]                  ·gc.alloc.rate:                   1930.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              81683.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82450.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183.348 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 37714.722 ops/s
[info]                  ·gc.alloc.rate:                   1889.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              78801.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81063.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188.491 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 39215.341 ops/s
[info]                  ·gc.alloc.rate:                   1855.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              74467.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78255.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 39313.580 ops/s
[info]                  ·gc.alloc.rate:                   1835.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              73452.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65621.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.833 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   38387.491 ±(99.9%) 3566.695 ops/s [Average]
[info]   (min, avg, max) = (37194.309, 38387.491, 39313.580), stdev = 926.259
[info]   CI (99.9%): [34820.797, 41954.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1888.639 ±(99.9%) 168.414 MB/sec [Average]
[info]   (min, avg, max) = (1835.001, 1888.639, 1932.687), stdev = 43.736
[info]   CI (99.9%): [1720.226, 2057.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77482.128 ±(99.9%) 13204.923 B/op [Average]
[info]   (min, avg, max) = (73452.100, 77482.128, 81683.010), stdev = 3429.277
[info]   CI (99.9%): [64277.205, 90687.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1820.212 ±(99.9%) 671.414 MB/sec [Average]
[info]   (min, avg, max) = (1619.402, 1820.212, 1950.204), stdev = 174.364
[info]   CI (99.9%): [1148.798, 2491.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   74718.180 ±(99.9%) 31512.686 B/op [Average]
[info]   (min, avg, max) = (65621.010, 74718.180, 82450.733), stdev = 8183.744
[info]   CI (99.9%): [43205.494, 106230.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.930 ±(99.9%) 8.832 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.930, 4.519), stdev = 2.294
[info]   CI (99.9%): [≈ 0, 10.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   80.857 ±(99.9%) 371.478 B/op [Average]
[info]   (min, avg, max) = (0.833, 80.857, 188.491), stdev = 96.472
[info]   CI (99.9%): [≈ 0, 452.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.200, 21.000), stdev = 6.834
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45030.478 ops/s
[info] # Warmup Iteration   2: 473474.998 ops/s
[info] # Warmup Iteration   3: 1021256.347 ops/s
[info] Iteration   1: 1086249.164 ops/s
[info]                  ·gc.alloc.rate:                   2487.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              3603.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2597.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3762.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.875 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 1081711.150 ops/s
[info]                  ·gc.alloc.rate:                   2473.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              3597.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2260.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3288.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.960 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1090791.893 ops/s
[info]                  ·gc.alloc.rate:                   2519.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              3634.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2275.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3283.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1093205.109 ops/s
[info]                  ·gc.alloc.rate:                   2546.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              3664.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2641.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3801.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 1104437.667 ops/s
[info]                  ·gc.alloc.rate:                   2552.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              3637.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2339.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3332.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   1091278.997 ±(99.9%) 33009.065 ops/s [Average]
[info]   (min, avg, max) = (1081711.150, 1091278.997, 1104437.667), stdev = 8572.349
[info]   CI (99.9%): [1058269.932, 1124288.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2515.638 ±(99.9%) 135.552 MB/sec [Average]
[info]   (min, avg, max) = (2473.001, 2515.638, 2552.722), stdev = 35.202
[info]   CI (99.9%): [2380.085, 2651.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3627.503 ±(99.9%) 105.502 B/op [Average]
[info]   (min, avg, max) = (3597.607, 3627.503, 3664.720), stdev = 27.399
[info]   CI (99.9%): [3522.001, 3733.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2422.853 ±(99.9%) 702.263 MB/sec [Average]
[info]   (min, avg, max) = (2260.711, 2422.853, 2641.425), stdev = 182.375
[info]   CI (99.9%): [1720.591, 3125.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3493.967 ±(99.9%) 1017.989 B/op [Average]
[info]   (min, avg, max) = (3283.309, 3493.967, 3801.843), stdev = 264.368
[info]   CI (99.9%): [2475.978, 4511.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.101 ±(99.9%) 6.724 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.101, 4.055), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.597 ±(99.9%) 9.744 B/op [Average]
[info]   (min, avg, max) = (0.030, 1.597, 5.875), stdev = 2.530
[info]   CI (99.9%): [≈ 0, 11.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.000, 25.000), stdev = 6.782
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49286.234 ops/s
[info] # Warmup Iteration   2: 1291848.070 ops/s
[info] # Warmup Iteration   3: 1722786.646 ops/s
[info] Iteration   1: 1840914.457 ops/s
[info]                  ·gc.alloc.rate:                   1153.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              986.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1106.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1822534.475 ops/s
[info]                  ·gc.alloc.rate:                   1130.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1859837.756 ops/s
[info]                  ·gc.alloc.rate:                   1155.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1861306.475 ops/s
[info]                  ·gc.alloc.rate:                   1165.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              985.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1828814.471 ops/s
[info]                  ·gc.alloc.rate:                   1132.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              974.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     852.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1842681.527 ±(99.9%) 67867.159 ops/s [Average]
[info]   (min, avg, max) = (1822534.475, 1842681.527, 1861306.475), stdev = 17624.886
[info]   CI (99.9%): [1774814.368, 1910548.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1147.581 ±(99.9%) 58.522 MB/sec [Average]
[info]   (min, avg, max) = (1130.622, 1147.581, 1165.445), stdev = 15.198
[info]   CI (99.9%): [1089.059, 1206.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   979.925 ±(99.9%) 20.715 B/op [Average]
[info]   (min, avg, max) = (974.611, 979.925, 986.298), stdev = 5.380
[info]   CI (99.9%): [959.210, 1000.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1112.112 ±(99.9%) 669.159 MB/sec [Average]
[info]   (min, avg, max) = (977.815, 1112.112, 1309.998), stdev = 173.778
[info]   CI (99.9%): [442.953, 1781.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   949.260 ±(99.9%) 557.009 B/op [Average]
[info]   (min, avg, max) = (834.223, 949.260, 1108.565), stdev = 144.653
[info]   CI (99.9%): [392.251, 1506.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.250 ±(99.9%) 1.838 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.250, 1.103), stdev = 0.477
[info]   CI (99.9%): [≈ 0, 2.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 1.555 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.212, 0.934), stdev = 0.404
[info]   CI (99.9%): [≈ 0, 1.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.581
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2667031.707 ops/s
[info] # Warmup Iteration   2: 7362118.864 ops/s
[info] # Warmup Iteration   3: 9699712.666 ops/s
[info] Iteration   1: 9778430.964 ops/s
[info]                  ·gc.alloc.rate:               305.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41.173 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 9756460.169 ops/s
[info]                  ·gc.alloc.rate:               307.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53.090 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 9600156.751 ops/s
[info]                  ·gc.alloc.rate:                   300.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 9774476.941 ops/s
[info]                  ·gc.alloc.rate:               307.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53.094 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 9780429.692 ops/s
[info]                  ·gc.alloc.rate:      298.412 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.015 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   9737990.904 ±(99.9%) 298934.045 ops/s [Average]
[info]   (min, avg, max) = (9600156.751, 9737990.904, 9780429.692), stdev = 77632.222
[info]   CI (99.9%): [9439056.858, 10036924.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   303.768 ±(99.9%) 16.364 MB/sec [Average]
[info]   (min, avg, max) = (298.412, 303.768, 307.415), stdev = 4.250
[info]   CI (99.9%): [287.404, 320.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.091 ±(99.9%) 2.421 B/op [Average]
[info]   (min, avg, max) = (48.015, 49.091, 49.584), stdev = 0.629
[info]   CI (99.9%): [46.670, 51.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   248.777 ±(99.9%) 549.369 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.777, 329.759), stdev = 142.669
[info]   CI (99.9%): [≈ 0, 798.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.262 ±(99.9%) 89.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.262, 53.954), stdev = 23.122
[info]   CI (99.9%): [≈ 0, 129.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 4.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2690.022 ops/s
[info] # Warmup Iteration   2: 195422.862 ops/s
[info] # Warmup Iteration   3: 505937.841 ops/s
[info] Iteration   1: 533530.956 ops/s
[info]                  ·gc.alloc.rate:                   2613.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              7708.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2623.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7737.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.089 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 549004.015 ops/s
[info]                  ·gc.alloc.rate:                   2615.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              7497.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7528.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.477 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 554007.773 ops/s
[info]                  ·gc.alloc.rate:                   2658.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              7552.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2653.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7538.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 549936.399 ops/s
[info]                  ·gc.alloc.rate:                   2653.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              7594.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6707.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 548515.310 ops/s
[info]                  ·gc.alloc.rate:                   2678.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              7681.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7743.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   546998.891 ±(99.9%) 30164.254 ops/s [Average]
[info]   (min, avg, max) = (533530.956, 546998.891, 554007.773), stdev = 7833.561
[info]   CI (99.9%): [516834.637, 577163.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2644.005 ±(99.9%) 109.214 MB/sec [Average]
[info]   (min, avg, max) = (2613.504, 2644.005, 2678.269), stdev = 28.363
[info]   CI (99.9%): [2534.790, 2753.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7606.974 ±(99.9%) 338.083 B/op [Average]
[info]   (min, avg, max) = (7497.536, 7606.974, 7708.010), stdev = 87.799
[info]   CI (99.9%): [7268.891, 7945.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2589.486 ±(99.9%) 541.293 MB/sec [Average]
[info]   (min, avg, max) = (2344.046, 2589.486, 2699.763), stdev = 140.572
[info]   CI (99.9%): [2048.192, 3130.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7451.190 ±(99.9%) 1648.703 B/op [Average]
[info]   (min, avg, max) = (6707.990, 7451.190, 7743.329), stdev = 428.163
[info]   CI (99.9%): [5802.487, 9099.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.204 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.666, 3.082), stdev = 1.352
[info]   CI (99.9%): [≈ 0, 5.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.961 ±(99.9%) 15.358 B/op [Average]
[info]   (min, avg, max) = (0.060, 1.961, 9.089), stdev = 3.988
[info]   CI (99.9%): [≈ 0, 17.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.000, 19.000), stdev = 3.464
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23846.524 ops/s
[info] # Warmup Iteration   2: 935643.550 ops/s
[info] # Warmup Iteration   3: 1567535.907 ops/s
[info] Iteration   1: 1965086.329 ops/s
[info]                  ·gc.alloc.rate:                   1969.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              1577.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1922.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1539.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.067 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 1903543.409 ops/s
[info]                  ·gc.alloc.rate:                   1960.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              1620.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1927.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1593.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.889 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.388 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 1999993.537 ops/s
[info]                  ·gc.alloc.rate:                   1995.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              1570.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1931.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1519.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.672 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1998294.802 ops/s
[info]                  ·gc.alloc.rate:                   2002.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              1576.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1531.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1972770.301 ops/s
[info]                  ·gc.alloc.rate:                   2004.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              1598.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1570.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1967937.675 ±(99.9%) 150707.820 ops/s [Average]
[info]   (min, avg, max) = (1903543.409, 1967937.675, 1999993.537), stdev = 39138.342
[info]   CI (99.9%): [1817229.855, 2118645.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1986.514 ±(99.9%) 76.572 MB/sec [Average]
[info]   (min, avg, max) = (1960.773, 1986.514, 2004.272), stdev = 19.885
[info]   CI (99.9%): [1909.942, 2063.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1588.819 ±(99.9%) 80.299 B/op [Average]
[info]   (min, avg, max) = (1570.233, 1588.819, 1620.897), stdev = 20.853
[info]   CI (99.9%): [1508.519, 1669.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1939.066 ±(99.9%) 71.820 MB/sec [Average]
[info]   (min, avg, max) = (1922.563, 1939.066, 1969.065), stdev = 18.651
[info]   CI (99.9%): [1867.246, 2010.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1551.004 ±(99.9%) 116.558 B/op [Average]
[info]   (min, avg, max) = (1519.753, 1551.004, 1593.477), stdev = 30.270
[info]   CI (99.9%): [1434.446, 1667.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.032 ±(99.9%) 4.528 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.032, 2.889), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.838 ±(99.9%) 3.743 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.838, 2.388), stdev = 0.972
[info]   CI (99.9%): [≈ 0, 4.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.400, 20.000), stdev = 5.320
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133185.061 ops/s
[info] # Warmup Iteration   2: 2299398.098 ops/s
[info] # Warmup Iteration   3: 2798400.640 ops/s
[info] Iteration   1: 3050449.081 ops/s
[info]                  ·gc.alloc.rate:                   1203.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              621.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3078447.766 ops/s
[info]                  ·gc.alloc.rate:                   1210.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              618.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     661.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3092680.700 ops/s
[info]                  ·gc.alloc.rate:                   1208.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              614.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2987169.669 ops/s
[info]                  ·gc.alloc.rate:                   1178.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              621.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2886340.942 ops/s
[info]                  ·gc.alloc.rate:                   1126.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              614.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   3019017.632 ±(99.9%) 325393.774 ops/s [Average]
[info]   (min, avg, max) = (2886340.942, 3019017.632, 3092680.700), stdev = 84503.730
[info]   CI (99.9%): [2693623.858, 3344411.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1185.668 ±(99.9%) 136.281 MB/sec [Average]
[info]   (min, avg, max) = (1126.620, 1185.668, 1210.778), stdev = 35.392
[info]   CI (99.9%): [1049.387, 1321.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   618.047 ±(99.9%) 12.639 B/op [Average]
[info]   (min, avg, max) = (614.316, 618.047, 621.126), stdev = 3.282
[info]   CI (99.9%): [605.408, 630.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1172.119 ±(99.9%) 665.919 MB/sec [Average]
[info]   (min, avg, max) = (976.952, 1172.119, 1310.978), stdev = 172.937
[info]   CI (99.9%): [506.200, 1838.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   610.784 ±(99.9%) 333.295 B/op [Average]
[info]   (min, avg, max) = (497.157, 610.784, 690.719), stdev = 86.556
[info]   CI (99.9%): [277.489, 944.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.292 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.096, 0.187), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.151 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.050, 0.095), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 769796.355 ops/s
[info] # Warmup Iteration   2: 7778390.598 ops/s
[info] # Warmup Iteration   3: 8133714.820 ops/s
[info] Iteration   1: 9016054.592 ops/s
[info]                  ·gc.alloc.rate:                   787.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              137.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 8985511.592 ops/s
[info]                  ·gc.alloc.rate:                   748.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 8988247.346 ops/s
[info]                  ·gc.alloc.rate:                   753.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 9032548.966 ops/s
[info]                  ·gc.alloc.rate:                   763.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              133.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 9066534.641 ops/s
[info]                  ·gc.alloc.rate:                   759.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   9017779.427 ±(99.9%) 129320.055 ops/s [Average]
[info]   (min, avg, max) = (8985511.592, 9017779.427, 9066534.641), stdev = 33584.008
[info]   CI (99.9%): [8888459.372, 9147099.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   762.647 ±(99.9%) 57.869 MB/sec [Average]
[info]   (min, avg, max) = (748.405, 762.647, 787.425), stdev = 15.028
[info]   CI (99.9%): [704.778, 820.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   133.070 ±(99.9%) 9.683 B/op [Average]
[info]   (min, avg, max) = (131.053, 133.070, 137.386), stdev = 2.515
[info]   CI (99.9%): [123.387, 142.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   787.239 ±(99.9%) 689.252 MB/sec [Average]
[info]   (min, avg, max) = (655.682, 787.239, 985.387), stdev = 178.997
[info]   CI (99.9%): [97.987, 1476.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   137.302 ±(99.9%) 118.859 B/op [Average]
[info]   (min, avg, max) = (114.449, 137.302, 171.202), stdev = 30.867
[info]   CI (99.9%): [18.443, 256.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.868 ±(99.9%) 7.252 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.868, 4.237), stdev = 1.883
[info]   CI (99.9%): [≈ 0, 8.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 1.259 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.151, 0.735), stdev = 0.327
[info]   CI (99.9%): [≈ 0, 1.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 11.000), stdev = 1.643
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849977.222 ops/s
[info] # Warmup Iteration   2: 7280341.554 ops/s
[info] # Warmup Iteration   3: 8807956.424 ops/s
[info] Iteration   1: 8977589.989 ops/s
[info]                  ·gc.alloc.rate:                   280.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8630544.295 ops/s
[info]                  ·gc.alloc.rate:               271.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.227 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 8994376.603 ops/s
[info]                  ·gc.alloc.rate:      274.361 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 9005194.769 ops/s
[info]                  ·gc.alloc.rate:               282.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 8717185.944 ops/s
[info]                  ·gc.alloc.rate:               275.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.932 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   8864978.320 ±(99.9%) 683117.296 ops/s [Average]
[info]   (min, avg, max) = (8630544.295, 8864978.320, 9005194.769), stdev = 177403.393
[info]   CI (99.9%): [8181861.024, 9548095.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   276.841 ±(99.9%) 16.633 MB/sec [Average]
[info]   (min, avg, max) = (271.935, 276.841, 282.452), stdev = 4.320
[info]   CI (99.9%): [260.207, 293.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   49.141 ±(99.9%) 2.605 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.141, 49.711), stdev = 0.677
[info]   CI (99.9%): [46.536, 51.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   246.637 ±(99.9%) 543.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.637, 326.418), stdev = 141.163
[info]   CI (99.9%): [≈ 0, 790.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   43.987 ±(99.9%) 97.390 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43.987, 59.227), stdev = 25.292
[info]   CI (99.9%): [≈ 0, 141.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 4.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6647.350 ops/s
[info] # Warmup Iteration   2: 199772.866 ops/s
[info] # Warmup Iteration   3: 454158.916 ops/s
[info] Iteration   1: 494093.700 ops/s
[info]                  ·gc.alloc.rate:                   2427.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              7730.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2612.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8320.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.629 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 501467.190 ops/s
[info]                  ·gc.alloc.rate:                   2440.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              7659.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7193.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.588 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 511301.191 ops/s
[info]                  ·gc.alloc.rate:                   2512.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              7734.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7126.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 506411.759 ops/s
[info]                  ·gc.alloc.rate:                   2497.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              7760.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2338.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7267.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 499224.733 ops/s
[info]                  ·gc.alloc.rate:                   2478.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              7814.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8492.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   502499.715 ±(99.9%) 25485.821 ops/s [Average]
[info]   (min, avg, max) = (494093.700, 502499.715, 511301.191), stdev = 6618.587
[info]   CI (99.9%): [477013.894, 527985.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2471.348 ±(99.9%) 140.637 MB/sec [Average]
[info]   (min, avg, max) = (2427.388, 2471.348, 2512.923), stdev = 36.523
[info]   CI (99.9%): [2330.710, 2611.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   7739.643 ±(99.9%) 216.395 B/op [Average]
[info]   (min, avg, max) = (7659.111, 7739.643, 7814.338), stdev = 56.197
[info]   CI (99.9%): [7523.248, 7956.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2450.638 ±(99.9%) 723.652 MB/sec [Average]
[info]   (min, avg, max) = (2292.285, 2450.638, 2693.866), stdev = 187.930
[info]   CI (99.9%): [1726.987, 3174.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7680.335 ±(99.9%) 2570.192 B/op [Average]
[info]   (min, avg, max) = (7126.969, 7680.335, 8492.585), stdev = 667.471
[info]   CI (99.9%): [5110.143, 10250.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.600 ±(99.9%) 4.548 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.600, 2.710), stdev = 1.181
[info]   CI (99.9%): [≈ 0, 5.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.908 ±(99.9%) 14.489 B/op [Average]
[info]   (min, avg, max) = (0.064, 1.908, 8.629), stdev = 3.763
[info]   CI (99.9%): [≈ 0, 16.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 18.000), stdev = 3.347
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16813.493 ops/s
[info] # Warmup Iteration   2: 66471.279 ops/s
[info] # Warmup Iteration   3: 90099.785 ops/s
[info] Iteration   1: 87245.128 ops/s
[info]                  ·gc.alloc.rate:                   2766.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              49914.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2779.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50147.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150.546 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         65.000 ms
[info] Iteration   2: 97022.062 ops/s
[info]                  ·gc.alloc.rate:                   2691.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              43652.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2458.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39871.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173.607 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 96690.440 ops/s
[info]                  ·gc.alloc.rate:                   2699.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              43935.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2808.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45704.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.017 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 95956.228 ops/s
[info]                  ·gc.alloc.rate:                   2655.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              43551.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2580.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42321.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.024 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 97423.706 ops/s
[info]                  ·gc.alloc.rate:                   2729.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              44077.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2642.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42668.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.673 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   94867.513 ±(99.9%) 16538.204 ops/s [Average]
[info]   (min, avg, max) = (87245.128, 94867.513, 97423.706), stdev = 4294.919
[info]   CI (99.9%): [78329.309, 111405.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2708.672 ±(99.9%) 161.157 MB/sec [Average]
[info]   (min, avg, max) = (2655.682, 2708.672, 2766.842), stdev = 41.852
[info]   CI (99.9%): [2547.515, 2869.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   45026.360 ±(99.9%) 10554.462 B/op [Average]
[info]   (min, avg, max) = (43551.415, 45026.360, 49914.940), stdev = 2740.960
[info]   CI (99.9%): [34471.897, 55580.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2653.918 ±(99.9%) 556.340 MB/sec [Average]
[info]   (min, avg, max) = (2458.274, 2653.918, 2808.495), stdev = 144.480
[info]   CI (99.9%): [2097.578, 3210.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44142.727 ±(99.9%) 15188.639 B/op [Average]
[info]   (min, avg, max) = (39871.042, 44142.727, 50147.724), stdev = 3944.441
[info]   CI (99.9%): [28954.089, 59331.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.843 ±(99.9%) 20.227 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.843, 10.704), stdev = 5.253
[info]   CI (99.9%): [≈ 0, 24.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   65.373 ±(99.9%) 341.373 B/op [Average]
[info]   (min, avg, max) = (0.673, 65.373, 173.607), stdev = 88.654
[info]   CI (99.9%): [≈ 0, 406.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   112.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 22.400, 65.000), stdev = 23.839
[info]   CI (99.9%): [112.000, 112.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18263.677 ops/s
[info] # Warmup Iteration   2: 86535.163 ops/s
[info] # Warmup Iteration   3: 139083.973 ops/s
[info] Iteration   1: 142271.124 ops/s
[info]                  ·gc.alloc.rate:                   2237.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              24746.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25225.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.653 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 141691.273 ops/s
[info]                  ·gc.alloc.rate:                   2207.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              24510.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21799.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.156 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 143644.204 ops/s
[info]                  ·gc.alloc.rate:                   2266.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              24829.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25322.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 142076.164 ops/s
[info]                  ·gc.alloc.rate:                   2241.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              24831.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22160.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 141384.856 ops/s
[info]                  ·gc.alloc.rate:                   2252.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              25068.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26173.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   142213.524 ±(99.9%) 3350.540 ops/s [Average]
[info]   (min, avg, max) = (141384.856, 142213.524, 143644.204), stdev = 870.125
[info]   CI (99.9%): [138862.984, 145564.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2241.057 ±(99.9%) 83.797 MB/sec [Average]
[info]   (min, avg, max) = (2207.636, 2241.057, 2266.116), stdev = 21.762
[info]   CI (99.9%): [2157.260, 2324.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24797.206 ±(99.9%) 770.832 B/op [Average]
[info]   (min, avg, max) = (24510.529, 24797.206, 25068.106), stdev = 200.183
[info]   CI (99.9%): [24026.373, 25568.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2181.514 ±(99.9%) 709.589 MB/sec [Average]
[info]   (min, avg, max) = (1963.433, 2181.514, 2351.911), stdev = 184.278
[info]   CI (99.9%): [1471.924, 2891.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24136.262 ±(99.9%) 7727.872 B/op [Average]
[info]   (min, avg, max) = (21799.240, 24136.262, 26173.614), stdev = 2006.904
[info]   CI (99.9%): [16408.389, 31864.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.483 ±(99.9%) 3.759 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.483, 2.229), stdev = 0.976
[info]   CI (99.9%): [≈ 0, 4.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.346 ±(99.9%) 41.585 B/op [Average]
[info]   (min, avg, max) = (0.228, 5.346, 24.653), stdev = 10.799
[info]   CI (99.9%): [≈ 0, 46.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 13.000), stdev = 1.924
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26791.443 ops/s
[info] # Warmup Iteration   2: 132118.579 ops/s
[info] # Warmup Iteration   3: 170668.598 ops/s
[info] Iteration   1: 173818.700 ops/s
[info]                  ·gc.alloc.rate:                   2625.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              23768.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2546.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23059.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.533 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 175942.192 ops/s
[info]                  ·gc.alloc.rate:                   2657.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              23764.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2865.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25627.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.785 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 175082.626 ops/s
[info]                  ·gc.alloc.rate:                   2674.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              24035.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2574.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23134.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.123 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 175958.662 ops/s
[info]                  ·gc.alloc.rate:                   2677.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              23938.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20528.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 170864.871 ops/s
[info]                  ·gc.alloc.rate:               2623.234 MB/sec
[info]                  ·gc.alloc.rate.norm:          24157.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2663.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24531.897 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   174333.410 ±(99.9%) 8188.084 ops/s [Average]
[info]   (min, avg, max) = (170864.871, 174333.410, 175958.662), stdev = 2126.419
[info]   CI (99.9%): [166145.326, 182521.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2651.609 ±(99.9%) 101.013 MB/sec [Average]
[info]   (min, avg, max) = (2623.234, 2651.609, 2677.286), stdev = 26.233
[info]   CI (99.9%): [2550.596, 2752.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23932.946 ±(99.9%) 657.271 B/op [Average]
[info]   (min, avg, max) = (23764.963, 23932.946, 24157.897), stdev = 170.691
[info]   CI (99.9%): [23275.675, 24590.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2589.418 ±(99.9%) 794.098 MB/sec [Average]
[info]   (min, avg, max) = (2295.932, 2589.418, 2865.835), stdev = 206.225
[info]   CI (99.9%): [1795.320, 3383.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23376.450 ±(99.9%) 7374.895 B/op [Average]
[info]   (min, avg, max) = (20528.299, 23376.450, 25627.422), stdev = 1915.237
[info]   CI (99.9%): [16001.556, 30751.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.079 ±(99.9%) 12.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.079, 7.790), stdev = 3.355
[info]   CI (99.9%): [≈ 0, 14.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   18.763 ±(99.9%) 116.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.763, 70.533), stdev = 30.376
[info]   CI (99.9%): [≈ 0, 135.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 16.000, 33.000), stdev = 10.000
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4094.485 ops/s
[info] # Warmup Iteration   2: 48046.215 ops/s
[info] # Warmup Iteration   3: 78442.248 ops/s
[info] Iteration   1: 82706.323 ops/s
[info]                  ·gc.alloc.rate:                   3693.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              70262.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3577.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68053.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.867 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.558 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 87521.928 ops/s
[info]                  ·gc.alloc.rate:                   3841.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              69081.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3639.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65448.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.123 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 87136.437 ops/s
[info]                  ·gc.alloc.rate:                   3880.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              70024.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4028.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72698.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.126 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 85943.064 ops/s
[info]                  ·gc.alloc.rate:                   3800.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              69597.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3385.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61998.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.287 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 88220.333 ops/s
[info]                  ·gc.alloc.rate:                   3913.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              69785.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3737.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66647.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   86305.617 ±(99.9%) 8375.079 ops/s [Average]
[info]   (min, avg, max) = (82706.323, 86305.617, 88220.333), stdev = 2174.981
[info]   CI (99.9%): [77930.538, 94680.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3825.995 ±(99.9%) 327.791 MB/sec [Average]
[info]   (min, avg, max) = (3693.665, 3825.995, 3913.626), stdev = 85.126
[info]   CI (99.9%): [3498.204, 4153.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69750.128 ±(99.9%) 1732.261 B/op [Average]
[info]   (min, avg, max) = (69081.152, 69750.128, 70262.208), stdev = 449.863
[info]   CI (99.9%): [68017.868, 71482.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3673.792 ±(99.9%) 909.144 MB/sec [Average]
[info]   (min, avg, max) = (3385.897, 3673.792, 4028.182), stdev = 236.102
[info]   CI (99.9%): [2764.648, 4582.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66969.017 ±(99.9%) 15052.723 B/op [Average]
[info]   (min, avg, max) = (61998.130, 66969.017, 72698.322), stdev = 3909.144
[info]   CI (99.9%): [51916.295, 82021.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.828 ±(99.9%) 6.544 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.828, 3.867), stdev = 1.699
[info]   CI (99.9%): [≈ 0, 7.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.693 ±(99.9%) 124.586 B/op [Average]
[info]   (min, avg, max) = (0.371, 15.693, 73.558), stdev = 32.355
[info]   CI (99.9%): [≈ 0, 140.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.800, 19.000), stdev = 1.789
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66765.794 ops/s
[info] # Warmup Iteration   2: 225895.876 ops/s
[info] # Warmup Iteration   3: 241814.633 ops/s
[info] Iteration   1: 251629.032 ops/s
[info]                  ·gc.alloc.rate:                   1728.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              10811.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10230.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.082 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 253169.826 ops/s
[info]                  ·gc.alloc.rate:                   1729.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              10753.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10104.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.906 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 250888.992 ops/s
[info]                  ·gc.alloc.rate:                   1720.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              10789.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10225.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 253696.366 ops/s
[info]                  ·gc.alloc.rate:                   1771.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              10987.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12241.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 252965.828 ops/s
[info]                  ·gc.alloc.rate:                   1754.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              10915.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10334.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   252470.009 ±(99.9%) 4493.220 ops/s [Average]
[info]   (min, avg, max) = (250888.992, 252470.009, 253696.366), stdev = 1166.875
[info]   CI (99.9%): [247976.789, 256963.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1741.060 ±(99.9%) 81.550 MB/sec [Average]
[info]   (min, avg, max) = (1720.648, 1741.060, 1771.129), stdev = 21.178
[info]   CI (99.9%): [1659.510, 1822.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10851.415 ±(99.9%) 372.943 B/op [Average]
[info]   (min, avg, max) = (10753.863, 10851.415, 10987.277), stdev = 96.852
[info]   CI (99.9%): [10478.472, 11224.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1705.386 ±(99.9%) 579.066 MB/sec [Average]
[info]   (min, avg, max) = (1625.466, 1705.386, 1973.248), stdev = 150.382
[info]   CI (99.9%): [1126.320, 2284.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10627.397 ±(99.9%) 3487.820 B/op [Average]
[info]   (min, avg, max) = (10104.601, 10627.397, 12241.136), stdev = 905.776
[info]   CI (99.9%): [7139.577, 14115.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.361 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.912, 4.330), stdev = 1.912
[info]   CI (99.9%): [≈ 0, 8.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.702 ±(99.9%) 46.040 B/op [Average]
[info]   (min, avg, max) = (0.129, 5.702, 27.082), stdev = 11.956
[info]   CI (99.9%): [≈ 0, 51.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135888.603 ops/s
[info] # Warmup Iteration   2: 665348.684 ops/s
[info] # Warmup Iteration   3: 802669.831 ops/s
[info] Iteration   1: 807384.636 ops/s
[info]                  ·gc.alloc.rate:                   475.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              926.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          318.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 774889.159 ops/s
[info]                  ·gc.alloc.rate:               455.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          925.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 648.776 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 794491.908 ops/s
[info]                  ·gc.alloc.rate:                   481.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1268.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 801127.939 ops/s
[info]                  ·gc.alloc.rate:               477.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          937.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 630.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 778563.833 ops/s
[info]                  ·gc.alloc.rate:               470.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          951.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1302.204 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   791291.495 ±(99.9%) 54354.723 ops/s [Average]
[info]   (min, avg, max) = (774889.159, 791291.495, 807384.636), stdev = 14115.749
[info]   CI (99.9%): [736936.772, 845646.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   472.153 ±(99.9%) 38.185 MB/sec [Average]
[info]   (min, avg, max) = (455.818, 472.153, 481.675), stdev = 9.916
[info]   CI (99.9%): [433.969, 510.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   939.054 ±(99.9%) 52.385 B/op [Average]
[info]   (min, avg, max) = (925.709, 939.054, 954.151), stdev = 13.604
[info]   CI (99.9%): [886.669, 991.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   448.634 ±(99.9%) 680.654 MB/sec [Average]
[info]   (min, avg, max) = (318.431, 448.634, 644.352), stdev = 176.764
[info]   CI (99.9%): [≈ 0, 1129.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   893.992 ±(99.9%) 1376.331 B/op [Average]
[info]   (min, avg, max) = (620.718, 893.992, 1302.204), stdev = 357.429
[info]   CI (99.9%): [≈ 0, 2270.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.259 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.124), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282246.401 ops/s
[info] # Warmup Iteration   2: 692172.079 ops/s
[info] # Warmup Iteration   3: 820580.171 ops/s
[info] Iteration   1: 815131.257 ops/s
[info]                  ·gc.alloc.rate:                   454.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1260.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 809635.897 ops/s
[info]                  ·gc.alloc.rate:               446.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          867.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 634.527 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 809075.450 ops/s
[info]                  ·gc.alloc.rate:                   449.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 794101.935 ops/s
[info]                  ·gc.alloc.rate:               447.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          887.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1294.484 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 812681.648 ops/s
[info]                  ·gc.alloc.rate:                   460.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              891.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   808125.237 ±(99.9%) 31617.701 ops/s [Average]
[info]   (min, avg, max) = (794101.935, 808125.237, 815131.257), stdev = 8211.017
[info]   CI (99.9%): [776507.536, 839742.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   451.728 ±(99.9%) 22.070 MB/sec [Average]
[info]   (min, avg, max) = (446.202, 451.728, 460.259), stdev = 5.731
[info]   CI (99.9%): [429.658, 473.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   879.680 ±(99.9%) 36.953 B/op [Average]
[info]   (min, avg, max) = (867.267, 879.680, 891.165), stdev = 9.597
[info]   CI (99.9%): [842.727, 916.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   457.144 ±(99.9%) 688.388 MB/sec [Average]
[info]   (min, avg, max) = (326.459, 457.144, 653.141), stdev = 178.772
[info]   CI (99.9%): [≈ 0, 1145.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   891.444 ±(99.9%) 1357.781 B/op [Average]
[info]   (min, avg, max) = (632.782, 891.444, 1294.484), stdev = 352.611
[info]   CI (99.9%): [≈ 0, 2249.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.066), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 2.408
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 359645.438 ops/s
[info] # Warmup Iteration   2: 705798.074 ops/s
[info] # Warmup Iteration   3: 835668.247 ops/s
[info] Iteration   1: 836414.177 ops/s
[info]                  ·gc.alloc.rate:      8.505 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 808520.668 ops/s
[info]                  ·gc.alloc.rate:                   68.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              133.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.768 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 832774.012 ops/s
[info]                  ·gc.alloc.rate:      8.469 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 838658.780 ops/s
[info]                  ·gc.alloc.rate:      8.636 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.200 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 843935.293 ops/s
[info]                  ·gc.alloc.rate:      8.582 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   832060.586 ±(99.9%) 53012.310 ops/s [Average]
[info]   (min, avg, max) = (808520.668, 832060.586, 843935.293), stdev = 13767.129
[info]   CI (99.9%): [779048.276, 885072.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   20.551 ±(99.9%) 103.353 MB/sec [Average]
[info]   (min, avg, max) = (8.469, 20.551, 68.565), stdev = 26.840
[info]   CI (99.9%): [≈ 0, 123.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   39.533 ±(99.9%) 202.192 B/op [Average]
[info]   (min, avg, max) = (16.001, 39.533, 133.463), stdev = 52.509
[info]   CI (99.9%): [≈ 0, 241.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.165 ±(99.9%) 440.545 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.165, 255.824), stdev = 114.408
[info]   CI (99.9%): [≈ 0, 491.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   99.593 ±(99.9%) 857.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 99.593, 497.967), stdev = 222.698
[info]   CI (99.9%): [≈ 0, 957.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.680 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.395), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 1.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.154, 0.768), stdev = 0.344
[info]   CI (99.9%): [≈ 0, 1.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 5.000), stdev = 2.236
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3508.271 ops/s
[info] # Warmup Iteration   2: 26885.388 ops/s
[info] # Warmup Iteration   3: 34833.075 ops/s
[info] Iteration   1: 36968.741 ops/s
[info]                  ·gc.alloc.rate:                   1834.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              78091.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1881.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80061.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.465 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.353 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   2: 36887.386 ops/s
[info]                  ·gc.alloc.rate:                   1895.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              80893.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1893.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80806.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.605 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.145 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   3: 36725.817 ops/s
[info]                  ·gc.alloc.rate:                   1950.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              83549.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1877.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80440.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 198.710 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 39232.650 ops/s
[info]                  ·gc.alloc.rate:                   1792.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              71919.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1881.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75467.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.617 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 38302.087 ops/s
[info]                  ·gc.alloc.rate:                   1743.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              71639.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1593.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65476.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.422 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   37623.336 ±(99.9%) 4229.689 ops/s [Average]
[info]   (min, avg, max) = (36725.817, 37623.336, 39232.650), stdev = 1098.437
[info]   CI (99.9%): [33393.648, 41853.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1843.525 ±(99.9%) 315.442 MB/sec [Average]
[info]   (min, avg, max) = (1743.469, 1843.525, 1950.469), stdev = 81.919
[info]   CI (99.9%): [1528.083, 2158.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77218.769 ±(99.9%) 20516.393 B/op [Average]
[info]   (min, avg, max) = (71639.332, 77218.769, 83549.575), stdev = 5328.042
[info]   CI (99.9%): [56702.376, 97735.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1825.544 ±(99.9%) 500.103 MB/sec [Average]
[info]   (min, avg, max) = (1593.476, 1825.544, 1893.935), stdev = 129.875
[info]   CI (99.9%): [1325.441, 2325.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76450.294 ±(99.9%) 25054.016 B/op [Average]
[info]   (min, avg, max) = (65476.122, 76450.294, 80806.179), stdev = 6506.448
[info]   CI (99.9%): [51396.278, 101504.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.141 ±(99.9%) 13.508 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 3.141, 8.605), stdev = 3.508
[info]   CI (99.9%): [≈ 0, 16.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   133.649 ±(99.9%) 578.273 B/op [Average]
[info]   (min, avg, max) = (3.422, 133.649, 367.145), stdev = 150.176
[info]   CI (99.9%): [≈ 0, 711.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 19.800, 39.000), stdev = 14.653
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 784845.915 ops/s
[info] # Warmup Iteration   2: 3899104.455 ops/s
[info] # Warmup Iteration   3: 4111173.669 ops/s
[info] Iteration   1: 4121044.107 ops/s
[info]                  ·gc.alloc.rate:                   3211.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3267.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1247.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4058507.927 ops/s
[info]                  ·gc.alloc.rate:                   3172.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              1230.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2989.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4107322.814 ops/s
[info]                  ·gc.alloc.rate:                   3225.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              1236.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3022.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4116945.889 ops/s
[info]                  ·gc.alloc.rate:                   3180.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              1215.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3043.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1163.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 4133059.185 ops/s
[info]                  ·gc.alloc.rate:                   3211.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1222.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3055.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1163.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   4107375.984 ±(99.9%) 111038.132 ops/s [Average]
[info]   (min, avg, max) = (4058507.927, 4107375.984, 4133059.185), stdev = 28836.250
[info]   CI (99.9%): [3996337.853, 4218414.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3200.528 ±(99.9%) 87.126 MB/sec [Average]
[info]   (min, avg, max) = (3172.904, 3200.528, 3225.980), stdev = 22.626
[info]   CI (99.9%): [3113.403, 3287.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1226.139 ±(99.9%) 29.387 B/op [Average]
[info]   (min, avg, max) = (1215.844, 1226.139, 1236.133), stdev = 7.632
[info]   CI (99.9%): [1196.752, 1255.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3075.578 ±(99.9%) 424.559 MB/sec [Average]
[info]   (min, avg, max) = (2989.003, 3075.578, 3267.616), stdev = 110.257
[info]   CI (99.9%): [2651.019, 3500.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1178.182 ±(99.9%) 149.353 B/op [Average]
[info]   (min, avg, max) = (1158.234, 1178.182, 1247.435), stdev = 38.786
[info]   CI (99.9%): [1028.829, 1327.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.021, 0.032), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 13.000), stdev = 0.894
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.680 ops/s
[info] # Warmup Iteration   2: 5314572.327 ops/s
[info] # Warmup Iteration   3: 6089817.777 ops/s
[info] Iteration   1: 6345273.558 ops/s
[info]                  ·gc.alloc.rate:                   1224.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 6262119.457 ops/s
[info]                  ·gc.alloc.rate:                   1212.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.923 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 6393470.419 ops/s
[info]                  ·gc.alloc.rate:                   1248.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6241828.003 ops/s
[info]                  ·gc.alloc.rate:                   1218.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6493683.339 ops/s
[info]                  ·gc.alloc.rate:                   1250.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   6347274.955 ±(99.9%) 394310.262 ops/s [Average]
[info]   (min, avg, max) = (6241828.003, 6347274.955, 6493683.339), stdev = 102401.123
[info]   CI (99.9%): [5952964.693, 6741585.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1231.004 ±(99.9%) 67.181 MB/sec [Average]
[info]   (min, avg, max) = (1212.435, 1231.004, 1250.796), stdev = 17.447
[info]   CI (99.9%): [1163.823, 1298.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.182 ±(99.9%) 7.598 B/op [Average]
[info]   (min, avg, max) = (303.006, 305.182, 307.244), stdev = 1.973
[info]   CI (99.9%): [297.583, 312.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1169.368 ±(99.9%) 689.173 MB/sec [Average]
[info]   (min, avg, max) = (969.649, 1169.368, 1305.058), stdev = 178.976
[info]   CI (99.9%): [480.196, 1858.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   289.685 ±(99.9%) 164.002 B/op [Average]
[info]   (min, avg, max) = (242.316, 289.685, 327.988), stdev = 42.591
[info]   CI (99.9%): [125.683, 453.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.029 ±(99.9%) 6.117 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.029, 3.674), stdev = 1.589
[info]   CI (99.9%): [≈ 0, 7.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 1.536 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.257, 0.923), stdev = 0.399
[info]   CI (99.9%): [≈ 0, 1.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 16.000), stdev = 4.712
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 693953.495 ops/s
[info] # Warmup Iteration   2: 4773968.816 ops/s
[info] # Warmup Iteration   3: 5001429.561 ops/s
[info] Iteration   1: 5128639.365 ops/s
[info]                  ·gc.alloc.rate:                   1053.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              323.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     296.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5096638.292 ops/s
[info]                  ·gc.alloc.rate:                   1068.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              329.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 5077001.021 ops/s
[info]                  ·gc.alloc.rate:                   1034.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5108523.893 ops/s
[info]                  ·gc.alloc.rate:                   1033.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.537 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5047540.213 ops/s
[info]                  ·gc.alloc.rate:                   1026.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   5091668.557 ±(99.9%) 119278.142 ops/s [Average]
[info]   (min, avg, max) = (5047540.213, 5091668.557, 5128639.365), stdev = 30976.155
[info]   CI (99.9%): [4972390.415, 5210946.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1043.384 ±(99.9%) 66.244 MB/sec [Average]
[info]   (min, avg, max) = (1026.852, 1043.384, 1068.658), stdev = 17.203
[info]   CI (99.9%): [977.141, 1109.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   322.466 ±(99.9%) 17.450 B/op [Average]
[info]   (min, avg, max) = (318.336, 322.466, 329.944), stdev = 4.532
[info]   CI (99.9%): [305.016, 339.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1040.106 ±(99.9%) 542.934 MB/sec [Average]
[info]   (min, avg, max) = (965.252, 1040.106, 1291.935), stdev = 140.998
[info]   CI (99.9%): [497.173, 1583.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   321.456 ±(99.9%) 167.376 B/op [Average]
[info]   (min, avg, max) = (296.207, 321.456, 398.879), stdev = 43.467
[info]   CI (99.9%): [154.080, 488.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.192 ±(99.9%) 0.880 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.192, 0.537), stdev = 0.229
[info]   CI (99.9%): [≈ 0, 1.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.059, 0.165), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3416217.778 ops/s
[info] # Warmup Iteration   2: 5759751.258 ops/s
[info] # Warmup Iteration   3: 6554909.960 ops/s
[info] Iteration   1: 6451897.121 ops/s
[info]                  ·gc.alloc.rate:               1267.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 322.073 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   2: 6530325.378 ops/s
[info]                  ·gc.alloc.rate:                   1253.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              301.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.811 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6335251.170 ops/s
[info]                  ·gc.alloc.rate:                   1240.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              308.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6634395.658 ops/s
[info]                  ·gc.alloc.rate:                   1282.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6642903.701 ops/s
[info]                  ·gc.alloc.rate:                   1282.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6518954.605 ±(99.9%) 498591.360 ops/s [Average]
[info]   (min, avg, max) = (6335251.170, 6518954.605, 6642903.701), stdev = 129482.593
[info]   CI (99.9%): [6020363.245, 7017545.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1265.278 ±(99.9%) 70.466 MB/sec [Average]
[info]   (min, avg, max) = (1240.587, 1265.278, 1282.792), stdev = 18.300
[info]   CI (99.9%): [1194.812, 1335.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   305.396 ±(99.9%) 11.696 B/op [Average]
[info]   (min, avg, max) = (301.966, 305.396, 309.053), stdev = 3.038
[info]   CI (99.9%): [293.700, 317.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1250.887 ±(99.9%) 560.782 MB/sec [Average]
[info]   (min, avg, max) = (990.440, 1250.887, 1320.831), stdev = 145.633
[info]   CI (99.9%): [690.105, 1811.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   302.021 ±(99.9%) 138.842 B/op [Average]
[info]   (min, avg, max) = (238.587, 302.021, 326.372), stdev = 36.057
[info]   CI (99.9%): [163.179, 440.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 5.606 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 3.366), stdev = 1.456
[info]   CI (99.9%): [≈ 0, 6.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.194 ±(99.9%) 1.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.194, 0.811), stdev = 0.351
[info]   CI (99.9%): [≈ 0, 1.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 15.000), stdev = 4.336
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 902973.003 ops/s
[info] # Warmup Iteration   2: 5535723.398 ops/s
[info] # Warmup Iteration   3: 5392239.537 ops/s
[info] Iteration   1: 5323703.709 ops/s
[info]                  ·gc.alloc.rate:                   1028.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 5376173.930 ops/s
[info]                  ·gc.alloc.rate:                   1043.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.158 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.924 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5471027.026 ops/s
[info]                  ·gc.alloc.rate:                   1063.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5407521.623 ops/s
[info]                  ·gc.alloc.rate:                   1064.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5411785.513 ops/s
[info]                  ·gc.alloc.rate:                   1038.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5398042.360 ±(99.9%) 207452.484 ops/s [Average]
[info]   (min, avg, max) = (5323703.709, 5398042.360, 5471027.026), stdev = 53874.751
[info]   CI (99.9%): [5190589.876, 5605494.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1047.644 ±(99.9%) 60.445 MB/sec [Average]
[info]   (min, avg, max) = (1028.323, 1047.644, 1064.008), stdev = 15.697
[info]   CI (99.9%): [987.199, 1108.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   305.398 ±(99.9%) 10.735 B/op [Average]
[info]   (min, avg, max) = (302.099, 305.398, 309.627), stdev = 2.788
[info]   CI (99.9%): [294.662, 316.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1043.906 ±(99.9%) 563.883 MB/sec [Average]
[info]   (min, avg, max) = (974.074, 1043.906, 1305.762), stdev = 146.439
[info]   CI (99.9%): [480.023, 1607.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   304.087 ±(99.9%) 154.334 B/op [Average]
[info]   (min, avg, max) = (283.456, 304.087, 375.607), stdev = 40.080
[info]   CI (99.9%): [149.753, 458.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.949 ±(99.9%) 5.370 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.949, 3.158), stdev = 1.395
[info]   CI (99.9%): [≈ 0, 6.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.276 ±(99.9%) 1.569 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.276, 0.924), stdev = 0.407
[info]   CI (99.9%): [≈ 0, 1.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 4.025
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 914504.649 ops/s
[info] # Warmup Iteration   2: 2970660.917 ops/s
[info] # Warmup Iteration   3: 3564245.455 ops/s
[info] Iteration   1: 3445723.339 ops/s
[info]                  ·gc.alloc.rate:                   1927.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     898.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.874 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3575088.947 ops/s
[info]                  ·gc.alloc.rate:                   1963.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              863.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3587884.392 ops/s
[info]                  ·gc.alloc.rate:                   2002.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     864.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3579483.534 ops/s
[info]                  ·gc.alloc.rate:                   2009.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              883.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     874.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3608148.458 ops/s
[info]                  ·gc.alloc.rate:                   1963.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     728.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   3559265.734 ±(99.9%) 249249.695 ops/s [Average]
[info]   (min, avg, max) = (3445723.339, 3559265.734, 3608148.458), stdev = 64729.354
[info]   CI (99.9%): [3310016.039, 3808515.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1973.369 ±(99.9%) 127.787 MB/sec [Average]
[info]   (min, avg, max) = (1927.997, 1973.369, 2009.533), stdev = 33.186
[info]   CI (99.9%): [1845.582, 2101.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   872.456 ±(99.9%) 45.164 B/op [Average]
[info]   (min, avg, max) = (856.226, 872.456, 883.244), stdev = 11.729
[info]   CI (99.9%): [827.292, 917.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1911.728 ±(99.9%) 519.005 MB/sec [Average]
[info]   (min, avg, max) = (1671.426, 1911.728, 1989.573), stdev = 134.784
[info]   CI (99.9%): [1392.724, 2430.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   845.712 ±(99.9%) 257.899 B/op [Average]
[info]   (min, avg, max) = (728.763, 845.712, 898.838), stdev = 66.976
[info]   CI (99.9%): [587.813, 1103.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 6.997 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.854, 4.104), stdev = 1.817
[info]   CI (99.9%): [≈ 0, 7.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 3.196 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.389, 1.874), stdev = 0.830
[info]   CI (99.9%): [≈ 0, 3.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 13.000), stdev = 2.345
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.639 ops/s
[info] # Warmup Iteration   2: 6078748.295 ops/s
[info] # Warmup Iteration   3: 6747640.546 ops/s
[info] Iteration   1: 6616962.723 ops/s
[info]                  ·gc.alloc.rate:                   657.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6546345.302 ops/s
[info]                  ·gc.alloc.rate:               652.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.479 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 6728527.228 ops/s
[info]                  ·gc.alloc.rate:                   680.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              159.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 6782516.449 ops/s
[info]                  ·gc.alloc.rate:                   670.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6802222.612 ops/s
[info]                  ·gc.alloc.rate:                   672.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   6695314.863 ±(99.9%) 423865.796 ops/s [Average]
[info]   (min, avg, max) = (6546345.302, 6695314.863, 6802222.612), stdev = 110076.601
[info]   CI (99.9%): [6271449.067, 7119180.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   666.727 ±(99.9%) 43.680 MB/sec [Average]
[info]   (min, avg, max) = (652.367, 666.727, 680.300), stdev = 11.344
[info]   CI (99.9%): [623.047, 710.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   156.705 ±(99.9%) 5.639 B/op [Average]
[info]   (min, avg, max) = (155.503, 156.705, 159.133), stdev = 1.464
[info]   CI (99.9%): [151.066, 162.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   651.883 ±(99.9%) 5.284 MB/sec [Average]
[info]   (min, avg, max) = (650.385, 651.883, 653.653), stdev = 1.372
[info]   CI (99.9%): [646.599, 657.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   153.242 ±(99.9%) 8.700 B/op [Average]
[info]   (min, avg, max) = (151.200, 153.242, 156.479), stdev = 2.259
[info]   CI (99.9%): [144.542, 161.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.563 ±(99.9%) 4.588 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.563, 2.694), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 1.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.130, 0.623), stdev = 0.276
[info]   CI (99.9%): [≈ 0, 1.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1242351.792 ops/s
[info] # Warmup Iteration   2: 5654477.643 ops/s
[info] # Warmup Iteration   3: 6186087.466 ops/s
[info] Iteration   1: 6185842.383 ops/s
[info]                  ·gc.alloc.rate:                   619.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6267286.715 ops/s
[info]                  ·gc.alloc.rate:                   629.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              158.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6341373.346 ops/s
[info]                  ·gc.alloc.rate:               630.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 161.864 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 6308963.475 ops/s
[info]                  ·gc.alloc.rate:                   627.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 5840125.061 ops/s
[info]                  ·gc.alloc.rate:                        610.468 MB/sec
[info]                  ·gc.alloc.rate.norm:                   164.481 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.028 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.008 B/op
[info]                  ·gc.churn.Metaspace:                   0.076 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:               457.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          123.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1.403 B/op
[info]                  ·gc.count:                             3.000 counts
[info]                  ·gc.time:                              38.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   6188718.196 ±(99.9%) 783161.192 ops/s [Average]
[info]   (min, avg, max) = (5840125.061, 6188718.196, 6341373.346), stdev = 203384.475
[info]   CI (99.9%): [5405557.004, 6971879.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   623.695 ±(99.9%) 33.319 MB/sec [Average]
[info]   (min, avg, max) = (610.468, 623.695, 630.834), stdev = 8.653
[info]   CI (99.9%): [590.376, 657.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   158.671 ±(99.9%) 12.777 B/op [Average]
[info]   (min, avg, max) = (156.544, 158.671, 164.481), stdev = 3.318
[info]   CI (99.9%): [145.895, 171.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.006 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.002 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.004 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   612.860 ±(99.9%) 333.759 MB/sec [Average]
[info]   (min, avg, max) = (457.824, 612.860, 653.183), stdev = 86.676
[info]   CI (99.9%): [279.101, 946.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   155.390 ±(99.9%) 69.131 B/op [Average]
[info]   (min, avg, max) = (123.353, 155.390, 165.344), stdev = 17.953
[info]   CI (99.9%): [86.258, 224.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.065 ±(99.9%) 8.919 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.065, 5.208), stdev = 2.316
[info]   CI (99.9%): [≈ 0, 9.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.287 ±(99.9%) 2.404 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.287, 1.403), stdev = 0.624
[info]   CI (99.9%): [≈ 0, 2.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.800, 38.000), stdev = 13.535
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2781669.090 ops/s
[info] # Warmup Iteration   2: 6636944.854 ops/s
[info] # Warmup Iteration   3: 6914880.824 ops/s
[info] Iteration   1: 7061457.249 ops/s
[info]                  ·gc.alloc.rate:                   701.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 7061268.521 ops/s
[info]                  ·gc.alloc.rate:               698.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146.410 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 7106503.658 ops/s
[info]                  ·gc.alloc.rate:                   706.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6995440.198 ops/s
[info]                  ·gc.alloc.rate:               697.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148.231 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 6977322.349 ops/s
[info]                  ·gc.alloc.rate:                   694.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.850 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   7040398.395 ±(99.9%) 204200.072 ops/s [Average]
[info]   (min, avg, max) = (6977322.349, 7040398.395, 7106503.658), stdev = 53030.110
[info]   CI (99.9%): [6836198.323, 7244598.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   699.354 ±(99.9%) 17.151 MB/sec [Average]
[info]   (min, avg, max) = (694.285, 699.354, 706.053), stdev = 4.454
[info]   CI (99.9%): [682.203, 716.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   156.301 ±(99.9%) 1.826 B/op [Average]
[info]   (min, avg, max) = (155.560, 156.301, 156.825), stdev = 0.474
[info]   CI (99.9%): [154.475, 158.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.215 ±(99.9%) 4.452 MB/sec [Average]
[info]   (min, avg, max) = (656.989, 658.215, 659.722), stdev = 1.156
[info]   CI (99.9%): [653.763, 662.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   147.113 ±(99.9%) 5.023 B/op [Average]
[info]   (min, avg, max) = (145.760, 147.113, 148.765), stdev = 1.305
[info]   CI (99.9%): [142.090, 152.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.775 ±(99.9%) 6.447 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.775, 3.769), stdev = 1.674
[info]   CI (99.9%): [≈ 0, 7.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 1.454 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.850), stdev = 0.378
[info]   CI (99.9%): [≈ 0, 1.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3740372.319 ops/s
[info] # Warmup Iteration   2: 6675462.543 ops/s
[info] # Warmup Iteration   3: 7380916.945 ops/s
[info] Iteration   1: 7377734.781 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7373303.569 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 7377137.106 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7381631.091 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 7384804.364 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7378922.182 ±(99.9%) 17015.259 ops/s [Average]
[info]   (min, avg, max) = (7373303.569, 7378922.182, 7384804.364), stdev = 4418.809
[info]   CI (99.9%): [7361906.923, 7395937.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1573607.764 ops/s
[info] # Warmup Iteration   2: 4404402.103 ops/s
[info] # Warmup Iteration   3: 6078964.288 ops/s
[info] Iteration   1: 6105555.588 ops/s
[info]                  ·gc.alloc.rate:                   609.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6227052.309 ops/s
[info]                  ·gc.alloc.rate:               620.919 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 165.594 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 6291418.340 ops/s
[info]                  ·gc.alloc.rate:                   625.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.845 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 6305773.351 ops/s
[info]                  ·gc.alloc.rate:                   624.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6331177.326 ops/s
[info]                  ·gc.alloc.rate:                   637.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              158.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   6252195.383 ±(99.9%) 348598.085 ops/s [Average]
[info]   (min, avg, max) = (6105555.588, 6252195.383, 6331177.326), stdev = 90529.816
[info]   CI (99.9%): [5903597.298, 6600793.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   623.640 ±(99.9%) 38.612 MB/sec [Average]
[info]   (min, avg, max) = (609.661, 623.640, 637.629), stdev = 10.027
[info]   CI (99.9%): [585.029, 662.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   156.921 ±(99.9%) 3.890 B/op [Average]
[info]   (min, avg, max) = (155.963, 156.921, 158.479), stdev = 1.010
[info]   CI (99.9%): [153.030, 160.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   589.104 ±(99.9%) 561.089 MB/sec [Average]
[info]   (min, avg, max) = (328.449, 589.104, 655.238), stdev = 145.713
[info]   CI (99.9%): [28.015, 1150.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   148.394 ±(99.9%) 143.294 B/op [Average]
[info]   (min, avg, max) = (81.970, 148.394, 168.712), stdev = 37.213
[info]   CI (99.9%): [5.100, 291.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.897 ±(99.9%) 5.542 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.897, 3.384), stdev = 1.439
[info]   CI (99.9%): [≈ 0, 6.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 0.845), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 9.000), stdev = 3.033
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 286993.077 ops/s
[info] # Warmup Iteration   2: 1401596.280 ops/s
[info] # Warmup Iteration   3: 1708079.198 ops/s
[info] Iteration   1: 1740120.908 ops/s
[info]                  ·gc.alloc.rate:                   2245.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              2030.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1775.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.751 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1718551.688 ops/s
[info]                  ·gc.alloc.rate:                   2221.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2033.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2092.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1752736.595 ops/s
[info]                  ·gc.alloc.rate:                   2262.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              2030.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2071.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1739577.347 ops/s
[info]                  ·gc.alloc.rate:                   2263.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              2047.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1807.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1755472.795 ops/s
[info]                  ·gc.alloc.rate:                   2295.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              2058.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2348.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2105.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1741291.867 ±(99.9%) 56247.976 ops/s [Average]
[info]   (min, avg, max) = (1718551.688, 1741291.867, 1755472.795), stdev = 14607.421
[info]   CI (99.9%): [1685043.890, 1797539.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2257.669 ±(99.9%) 105.377 MB/sec [Average]
[info]   (min, avg, max) = (2221.027, 2257.669, 2295.726), stdev = 27.366
[info]   CI (99.9%): [2152.292, 2363.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2040.146 ±(99.9%) 47.771 B/op [Average]
[info]   (min, avg, max) = (2030.386, 2040.146, 2058.223), stdev = 12.406
[info]   CI (99.9%): [1992.375, 2087.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2180.897 ±(99.9%) 709.650 MB/sec [Average]
[info]   (min, avg, max) = (1963.438, 2180.897, 2348.837), stdev = 184.294
[info]   CI (99.9%): [1471.247, 2890.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1970.706 ±(99.9%) 632.370 B/op [Average]
[info]   (min, avg, max) = (1775.568, 1970.706, 2105.839), stdev = 164.224
[info]   CI (99.9%): [1338.336, 2603.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.466 ±(99.9%) 3.194 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.466, 1.936), stdev = 0.829
[info]   CI (99.9%): [≈ 0, 3.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.422 ±(99.9%) 2.888 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.422, 1.751), stdev = 0.750
[info]   CI (99.9%): [≈ 0, 3.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 13.000), stdev = 2.280
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.542 ops/s
[info] # Warmup Iteration   2: 2553692.627 ops/s
[info] # Warmup Iteration   3: 2873952.198 ops/s
[info] Iteration   1: 2995042.210 ops/s
[info]                  ·gc.alloc.rate:                   580.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     341.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2942024.319 ops/s
[info]                  ·gc.alloc.rate:                   568.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2974089.616 ops/s
[info]                  ·gc.alloc.rate:               565.807 MB/sec
[info]                  ·gc.alloc.rate.norm:          299.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 172.387 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2981414.710 ops/s
[info]                  ·gc.alloc.rate:                   581.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2988526.470 ops/s
[info]                  ·gc.alloc.rate:               583.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          307.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 343.808 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2976219.465 ±(99.9%) 79536.842 ops/s [Average]
[info]   (min, avg, max) = (2942024.319, 2976219.465, 2995042.210), stdev = 20655.465
[info]   CI (99.9%): [2896682.623, 3055756.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   575.951 ±(99.9%) 32.063 MB/sec [Average]
[info]   (min, avg, max) = (565.807, 575.951, 583.050), stdev = 8.327
[info]   CI (99.9%): [543.888, 608.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   304.507 ±(99.9%) 12.315 B/op [Average]
[info]   (min, avg, max) = (299.370, 304.507, 307.171), stdev = 3.198
[info]   CI (99.9%): [292.193, 316.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   586.467 ±(99.9%) 561.100 MB/sec [Average]
[info]   (min, avg, max) = (325.810, 586.467, 652.954), stdev = 145.716
[info]   CI (99.9%): [25.367, 1147.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   310.061 ±(99.9%) 296.492 B/op [Average]
[info]   (min, avg, max) = (172.387, 310.061, 348.177), stdev = 76.998
[info]   CI (99.9%): [13.569, 606.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.022), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142849.819 ops/s
[info] # Warmup Iteration   2: 1718231.228 ops/s
[info] # Warmup Iteration   3: 1684388.494 ops/s
[info] Iteration   1: 1871615.923 ops/s
[info]                  ·gc.alloc.rate:                   384.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              323.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     545.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1864222.894 ops/s
[info]                  ·gc.alloc.rate:               377.331 MB/sec
[info]                  ·gc.alloc.rate.norm:          318.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 271.645 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1864712.507 ops/s
[info]                  ·gc.alloc.rate:                   377.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     271.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1833666.451 ops/s
[info]                  ·gc.alloc.rate:               382.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          327.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 275.604 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1857115.866 ops/s
[info]                  ·gc.alloc.rate:               382.597 MB/sec
[info]                  ·gc.alloc.rate.norm:          324.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 272.116 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1858266.728 ±(99.9%) 56518.058 ops/s [Average]
[info]   (min, avg, max) = (1833666.451, 1858266.728, 1871615.923), stdev = 14677.560
[info]   CI (99.9%): [1801748.670, 1914784.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   380.867 ±(99.9%) 13.001 MB/sec [Average]
[info]   (min, avg, max) = (377.331, 380.867, 384.977), stdev = 3.376
[info]   CI (99.9%): [367.866, 393.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   322.510 ±(99.9%) 15.734 B/op [Average]
[info]   (min, avg, max) = (318.390, 322.510, 327.871), stdev = 4.086
[info]   CI (99.9%): [306.776, 338.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   386.998 ±(99.9%) 563.779 MB/sec [Average]
[info]   (min, avg, max) = (321.113, 386.998, 648.907), stdev = 146.412
[info]   CI (99.9%): [≈ 0, 950.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   327.309 ±(99.9%) 469.967 B/op [Average]
[info]   (min, avg, max) = (271.564, 327.309, 545.617), stdev = 122.049
[info]   CI (99.9%): [≈ 0, 797.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 954759.762 ops/s
[info] # Warmup Iteration   2: 2131621.256 ops/s
[info] # Warmup Iteration   3: 2221221.902 ops/s
[info] Iteration   1: 2307732.661 ops/s
[info]                  ·gc.alloc.rate:               441.890 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.211 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2301027.545 ops/s
[info]                  ·gc.alloc.rate:                   439.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              300.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2280987.289 ops/s
[info]                  ·gc.alloc.rate:                   449.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2291346.791 ops/s
[info]                  ·gc.alloc.rate:               438.068 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2296427.390 ops/s
[info]                  ·gc.alloc.rate:               442.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2295504.335 ±(99.9%) 38933.401 ops/s [Average]
[info]   (min, avg, max) = (2280987.289, 2295504.335, 2307732.661), stdev = 10110.881
[info]   CI (99.9%): [2256570.934, 2334437.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   442.395 ±(99.9%) 17.220 MB/sec [Average]
[info]   (min, avg, max) = (438.068, 442.395, 449.595), stdev = 4.472
[info]   CI (99.9%): [425.175, 459.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   303.316 ±(99.9%) 15.547 B/op [Average]
[info]   (min, avg, max) = (300.514, 303.316, 310.210), stdev = 4.038
[info]   CI (99.9%): [287.768, 318.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   395.054 ±(99.9%) 566.404 MB/sec [Average]
[info]   (min, avg, max) = (328.748, 395.054, 658.182), stdev = 147.093
[info]   CI (99.9%): [≈ 0, 961.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   271.140 ±(99.9%) 393.914 B/op [Average]
[info]   (min, avg, max) = (224.211, 271.140, 454.130), stdev = 102.298
[info]   CI (99.9%): [≈ 0, 665.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.097 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.049), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.034), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 243111.891 ops/s
[info] # Warmup Iteration   2: 1729598.793 ops/s
[info] # Warmup Iteration   3: 1920964.543 ops/s
[info] Iteration   1: 1917217.035 ops/s
[info]                  ·gc.alloc.rate:                   374.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1919216.372 ops/s
[info]                  ·gc.alloc.rate:               367.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.144 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1900380.547 ops/s
[info]                  ·gc.alloc.rate:               368.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 270.060 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1895465.007 ops/s
[info]                  ·gc.alloc.rate:                   374.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1907495.037 ops/s
[info]                  ·gc.alloc.rate:               368.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 269.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1907954.800 ±(99.9%) 39746.948 ops/s [Average]
[info]   (min, avg, max) = (1895465.007, 1907954.800, 1919216.372), stdev = 10322.156
[info]   CI (99.9%): [1868207.852, 1947701.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   370.705 ±(99.9%) 14.349 MB/sec [Average]
[info]   (min, avg, max) = (367.304, 370.705, 374.965), stdev = 3.726
[info]   CI (99.9%): [356.356, 385.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   305.730 ±(99.9%) 14.748 B/op [Average]
[info]   (min, avg, max) = (301.098, 305.730, 311.234), stdev = 3.830
[info]   CI (99.9%): [290.982, 320.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   391.404 ±(99.9%) 562.503 MB/sec [Average]
[info]   (min, avg, max) = (325.769, 391.404, 652.720), stdev = 146.080
[info]   CI (99.9%): [≈ 0, 953.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   323.146 ±(99.9%) 470.654 B/op [Average]
[info]   (min, avg, max) = (267.144, 323.146, 541.782), stdev = 122.227
[info]   CI (99.9%): [≈ 0, 793.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.017), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 8.000), stdev = 1.732
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282665.133 ops/s
[info] # Warmup Iteration   2: 2212594.415 ops/s
[info] # Warmup Iteration   3: 2429971.731 ops/s
[info] Iteration   1: 2431962.373 ops/s
[info]                  ·gc.alloc.rate:                   1772.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              1147.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1060.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.656 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2488978.883 ops/s
[info]                  ·gc.alloc.rate:                   1777.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              1123.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1030.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2487539.995 ops/s
[info]                  ·gc.alloc.rate:                   1784.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1240.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2507340.820 ops/s
[info]                  ·gc.alloc.rate:                   1805.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              1133.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1034.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2483132.906 ops/s
[info]                  ·gc.alloc.rate:               1796.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          1138.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1052.853 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   2479790.995 ±(99.9%) 108950.133 ops/s [Average]
[info]   (min, avg, max) = (2431962.373, 2479790.995, 2507340.820), stdev = 28294.004
[info]   CI (99.9%): [2370840.862, 2588741.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1787.272 ±(99.9%) 50.915 MB/sec [Average]
[info]   (min, avg, max) = (1772.874, 1787.272, 1805.103), stdev = 13.222
[info]   CI (99.9%): [1736.357, 1838.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1134.248 ±(99.9%) 34.288 B/op [Average]
[info]   (min, avg, max) = (1123.892, 1134.248, 1147.111), stdev = 8.904
[info]   CI (99.9%): [1099.960, 1168.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1708.022 ±(99.9%) 543.612 MB/sec [Average]
[info]   (min, avg, max) = (1630.659, 1708.022, 1959.742), stdev = 141.174
[info]   CI (99.9%): [1164.409, 2251.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1083.873 ±(99.9%) 339.506 B/op [Average]
[info]   (min, avg, max) = (1030.779, 1083.873, 1240.003), stdev = 88.169
[info]   CI (99.9%): [744.368, 1423.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.842 ±(99.9%) 7.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.842, 4.104), stdev = 1.824
[info]   CI (99.9%): [≈ 0, 7.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.544 ±(99.9%) 4.545 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.544, 2.656), stdev = 1.180
[info]   CI (99.9%): [≈ 0, 5.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.596 ops/s
[info] # Warmup Iteration   2: 2926086.965 ops/s
[info] # Warmup Iteration   3: 3323804.569 ops/s
[info] Iteration   1: 3527788.717 ops/s
[info]                  ·gc.alloc.rate:                   960.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              428.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     434.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3514928.013 ops/s
[info]                  ·gc.alloc.rate:                   929.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3558490.432 ops/s
[info]                  ·gc.alloc.rate:                   952.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3522230.266 ops/s
[info]                  ·gc.alloc.rate:                   941.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     437.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3538237.066 ops/s
[info]                  ·gc.alloc.rate:                   937.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     433.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3532334.899 ±(99.9%) 65140.745 ops/s [Average]
[info]   (min, avg, max) = (3514928.013, 3532334.899, 3558490.432), stdev = 16916.845
[info]   CI (99.9%): [3467194.154, 3597475.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   943.923 ±(99.9%) 47.061 MB/sec [Average]
[info]   (min, avg, max) = (929.134, 943.923, 960.102), stdev = 12.222
[info]   CI (99.9%): [896.863, 990.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   420.454 ±(99.9%) 18.924 B/op [Average]
[info]   (min, avg, max) = (415.831, 420.454, 428.322), stdev = 4.915
[info]   CI (99.9%): [401.530, 439.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   911.568 ±(99.9%) 560.620 MB/sec [Average]
[info]   (min, avg, max) = (651.167, 911.568, 979.710), stdev = 145.591
[info]   CI (99.9%): [350.947, 1472.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   405.913 ±(99.9%) 246.542 B/op [Average]
[info]   (min, avg, max) = (291.428, 405.913, 437.572), stdev = 64.026
[info]   CI (99.9%): [159.370, 652.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.948 ±(99.9%) 7.918 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.948, 4.626), stdev = 2.056
[info]   CI (99.9%): [≈ 0, 8.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.423 ±(99.9%) 3.536 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.423, 2.066), stdev = 0.918
[info]   CI (99.9%): [≈ 0, 3.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 369610.457 ops/s
[info] # Warmup Iteration   2: 2931261.251 ops/s
[info] # Warmup Iteration   3: 3238526.120 ops/s
[info] Iteration   1: 3345911.950 ops/s
[info]                  ·gc.alloc.rate:                   898.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3332514.678 ops/s
[info]                  ·gc.alloc.rate:                   900.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     308.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3324008.676 ops/s
[info]                  ·gc.alloc.rate:                   886.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.483 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3339933.003 ops/s
[info]                  ·gc.alloc.rate:                   887.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3365062.998 ops/s
[info]                  ·gc.alloc.rate:                   891.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   3341486.261 ±(99.9%) 59772.399 ops/s [Average]
[info]   (min, avg, max) = (3324008.676, 3341486.261, 3365062.998), stdev = 15522.702
[info]   CI (99.9%): [3281713.862, 3401258.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   892.793 ±(99.9%) 23.918 MB/sec [Average]
[info]   (min, avg, max) = (886.082, 892.793, 900.159), stdev = 6.211
[info]   CI (99.9%): [868.876, 916.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   420.447 ±(99.9%) 12.524 B/op [Average]
[info]   (min, avg, max) = (417.014, 420.447, 424.982), stdev = 3.253
[info]   CI (99.9%): [407.923, 432.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   849.365 ±(99.9%) 692.785 MB/sec [Average]
[info]   (min, avg, max) = (650.198, 849.365, 982.909), stdev = 179.914
[info]   CI (99.9%): [156.580, 1542.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   400.135 ±(99.9%) 329.191 B/op [Average]
[info]   (min, avg, max) = (304.099, 400.135, 465.252), stdev = 85.490
[info]   CI (99.9%): [70.944, 729.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.900 ±(99.9%) 5.201 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.900, 3.134), stdev = 1.351
[info]   CI (99.9%): [≈ 0, 6.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.425 ±(99.9%) 2.461 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.425, 1.483), stdev = 0.639
[info]   CI (99.9%): [≈ 0, 2.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 12.000), stdev = 4.062
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1071512.898 ops/s
[info] # Warmup Iteration   2: 3251793.338 ops/s
[info] # Warmup Iteration   3: 3440982.323 ops/s
[info] Iteration   1: 3564585.679 ops/s
[info]                  ·gc.alloc.rate:                   950.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     434.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3560757.574 ops/s
[info]                  ·gc.alloc.rate:                   953.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     436.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3565965.859 ops/s
[info]                  ·gc.alloc.rate:                   939.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              414.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     290.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.374 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3475072.268 ops/s
[info]                  ·gc.alloc.rate:                   966.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              437.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.434 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3517463.364 ops/s
[info]                  ·gc.alloc.rate:                   940.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3536768.949 ±(99.9%) 153795.392 ops/s [Average]
[info]   (min, avg, max) = (3475072.268, 3536768.949, 3565965.859), stdev = 39940.175
[info]   CI (99.9%): [3382973.557, 3690564.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   950.087 ±(99.9%) 43.120 MB/sec [Average]
[info]   (min, avg, max) = (939.136, 950.087, 966.610), stdev = 11.198
[info]   CI (99.9%): [906.967, 993.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   422.770 ±(99.9%) 33.666 B/op [Average]
[info]   (min, avg, max) = (414.424, 422.770, 437.620), stdev = 8.743
[info]   CI (99.9%): [389.104, 456.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.097 ±(99.9%) 561.490 MB/sec [Average]
[info]   (min, avg, max) = (659.289, 920.097, 987.943), stdev = 145.817
[info]   CI (99.9%): [358.607, 1481.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   409.637 ±(99.9%) 256.128 B/op [Average]
[info]   (min, avg, max) = (290.933, 409.637, 446.805), stdev = 66.516
[info]   CI (99.9%): [153.509, 665.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.850 ±(99.9%) 5.098 MB/sec [Average]
[info]   (min, avg, max) = (0.031, 0.850, 3.113), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 5.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.377 ±(99.9%) 2.250 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.377, 1.374), stdev = 0.584
[info]   CI (99.9%): [≈ 0, 2.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.286
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 861562.577 ops/s
[info] # Warmup Iteration   2: 3536700.093 ops/s
[info] # Warmup Iteration   3: 3897071.618 ops/s
[info] Iteration   1: 3896197.425 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3742931.681 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3898309.604 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3897259.192 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3860362.669 ops/s
[info]                  ·gc.alloc.rate:      3.689 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.504 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3859012.114 ±(99.9%) 257348.432 ops/s [Average]
[info]   (min, avg, max) = (3742931.681, 3859012.114, 3898309.604), stdev = 66832.571
[info]   CI (99.9%): [3601663.682, 4116360.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.738 ±(99.9%) 6.352 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.738, 3.689), stdev = 1.650
[info]   CI (99.9%): [≈ 0, 7.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.301 ±(99.9%) 2.589 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.301, 1.504), stdev = 0.672
[info]   CI (99.9%): [≈ 0, 2.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 474861.823 ops/s
[info] # Warmup Iteration   2: 2676832.933 ops/s
[info] # Warmup Iteration   3: 3362065.241 ops/s
[info] Iteration   1: 3305570.472 ops/s
[info]                  ·gc.alloc.rate:                   889.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3291880.743 ops/s
[info]                  ·gc.alloc.rate:               875.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          418.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 314.039 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 3282187.381 ops/s
[info]                  ·gc.alloc.rate:                   898.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              430.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.452 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3386892.805 ops/s
[info]                  ·gc.alloc.rate:                   896.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.580 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3391160.152 ops/s
[info]                  ·gc.alloc.rate:                   903.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     455.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   3331538.310 ±(99.9%) 204677.659 ops/s [Average]
[info]   (min, avg, max) = (3282187.381, 3331538.310, 3391160.152), stdev = 53154.138
[info]   CI (99.9%): [3126860.651, 3536215.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   892.775 ±(99.9%) 42.448 MB/sec [Average]
[info]   (min, avg, max) = (875.417, 892.775, 903.884), stdev = 11.024
[info]   CI (99.9%): [850.327, 935.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   421.721 ±(99.9%) 21.206 B/op [Average]
[info]   (min, avg, max) = (416.777, 421.721, 430.607), stdev = 5.507
[info]   CI (99.9%): [400.515, 442.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   852.995 ±(99.9%) 689.448 MB/sec [Average]
[info]   (min, avg, max) = (656.855, 852.995, 986.985), stdev = 179.047
[info]   CI (99.9%): [163.547, 1542.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   403.114 ±(99.9%) 329.800 B/op [Average]
[info]   (min, avg, max) = (305.221, 403.114, 473.067), stdev = 85.648
[info]   CI (99.9%): [73.315, 732.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.892 ±(99.9%) 5.015 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.892, 3.030), stdev = 1.302
[info]   CI (99.9%): [≈ 0, 5.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.423 ±(99.9%) 2.400 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.423, 1.452), stdev = 0.623
[info]   CI (99.9%): [≈ 0, 2.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.507
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1141.388 ops/s
[info] # Warmup Iteration   2: 4729.060 ops/s
[info] # Warmup Iteration   3: 11118.182 ops/s
[info] Iteration   1: 11701.708 ops/s
[info]                  ·gc.alloc.rate:                        1475.994 MB/sec
[info]                  ·gc.alloc.rate.norm:                   198493.894 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.324 B/op
[info]                  ·gc.churn.Metaspace:                   0.048 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              6.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1471.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          197953.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      709.692 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              50.000 ms
[info] Iteration   2: 12583.555 ops/s
[info]                  ·gc.alloc.rate:                   1592.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              199176.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1601.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200200.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.207 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 12581.709 ops/s
[info]                  ·gc.alloc.rate:                   1584.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              198142.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201706.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11539.658 ops/s
[info]                  ·gc.alloc.rate:                   1782.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              243136.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222280.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.679 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 12434.497 ops/s
[info]                  ·gc.alloc.rate:                   1574.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              199220.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207531.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.941 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.278 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   12168.225 ±(99.9%) 1951.239 ops/s [Average]
[info]   (min, avg, max) = (11539.658, 12168.225, 12583.555), stdev = 506.730
[info]   CI (99.9%): [10216.987, 14119.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1601.999 ±(99.9%) 429.639 MB/sec [Average]
[info]   (min, avg, max) = (1475.994, 1601.999, 1782.934), stdev = 111.576
[info]   CI (99.9%): [1172.360, 2031.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   207633.953 ±(99.9%) 76442.509 B/op [Average]
[info]   (min, avg, max) = (198142.218, 207633.953, 243136.629), stdev = 19851.877
[info]   CI (99.9%): [131191.444, 284076.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm":
[info]   0.465 ±(99.9%) 4.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.465, 2.324), stdev = 1.039
[info]   CI (99.9%): [≈ 0, 4.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.083 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.Metaspace.norm":
[info]   1.289 ±(99.9%) 11.097 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.289, 6.444), stdev = 2.882
[info]   CI (99.9%): [≈ 0, 12.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1591.079 ±(99.9%) 262.817 MB/sec [Average]
[info]   (min, avg, max) = (1471.976, 1591.079, 1639.760), stdev = 68.253
[info]   CI (99.9%): [1328.262, 1853.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   205934.703 ±(99.9%) 37737.828 B/op [Average]
[info]   (min, avg, max) = (197953.510, 205934.703, 222280.668), stdev = 9800.394
[info]   CI (99.9%): [168196.875, 243672.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.669 ±(99.9%) 9.150 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.669, 5.277), stdev = 2.376
[info]   CI (99.9%): [≈ 0, 10.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   219.613 ±(99.9%) 1219.493 B/op [Average]
[info]   (min, avg, max) = (5.207, 219.613, 709.692), stdev = 316.698
[info]   CI (99.9%): [≈ 0, 1439.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 16.000, 50.000), stdev = 19.066
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1470.373 ops/s
[info] # Warmup Iteration   2: 17017.830 ops/s
[info] # Warmup Iteration   3: 22888.717 ops/s
[info] Iteration   1: 22336.987 ops/s
[info]                  ·gc.alloc.rate:               342.734 MB/sec
[info]                  ·gc.alloc.rate.norm:          24137.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22551.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 23127.266 ops/s
[info]                  ·gc.alloc.rate:                   338.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              22998.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21782.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.709 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 22174.142 ops/s
[info]                  ·gc.alloc.rate:                   439.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              31155.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45625.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.478 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 22048.997 ops/s
[info]                  ·gc.alloc.rate:                   389.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              27824.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23060.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.431 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 22659.503 ops/s
[info]                  ·gc.alloc.rate:               392.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          27287.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22440.072 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   22469.379 ±(99.9%) 1667.796 ops/s [Average]
[info]   (min, avg, max) = (22048.997, 22469.379, 23127.266), stdev = 433.121
[info]   CI (99.9%): [20801.583, 24137.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   380.541 ±(99.9%) 159.886 MB/sec [Average]
[info]   (min, avg, max) = (338.047, 380.541, 439.007), stdev = 41.522
[info]   CI (99.9%): [220.655, 540.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   26680.678 ±(99.9%) 12436.254 B/op [Average]
[info]   (min, avg, max) = (22998.425, 26680.678, 31155.249), stdev = 3229.656
[info]   CI (99.9%): [14244.424, 39116.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   385.925 ±(99.9%) 553.191 MB/sec [Average]
[info]   (min, avg, max) = (320.168, 385.925, 642.902), stdev = 143.662
[info]   CI (99.9%): [≈ 0, 939.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27091.880 ±(99.9%) 39932.892 B/op [Average]
[info]   (min, avg, max) = (21782.057, 27091.880, 45625.207), stdev = 10370.445
[info]   CI (99.9%): [≈ 0, 67024.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.156 ±(99.9%) 1.277 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.156, 0.749), stdev = 0.332
[info]   CI (99.9%): [≈ 0, 1.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.124 ±(99.9%) 91.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.124, 53.431), stdev = 23.659
[info]   CI (99.9%): [≈ 0, 102.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7288.914 ops/s
[info] # Warmup Iteration   2: 17449.062 ops/s
[info] # Warmup Iteration   3: 21351.273 ops/s
[info] Iteration   1: 21627.930 ops/s
[info]                  ·gc.alloc.rate:      232.426 MB/sec
[info]                  ·gc.alloc.rate.norm: 16912.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 21593.837 ops/s
[info]                  ·gc.alloc.rate:               237.399 MB/sec
[info]                  ·gc.alloc.rate.norm:          17297.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23838.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 21255.009 ops/s
[info]                  ·gc.alloc.rate:               377.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          27929.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24218.017 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 21605.464 ops/s
[info]                  ·gc.alloc.rate:                   242.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              17644.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23824.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.628 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 21599.256 ops/s
[info]                  ·gc.alloc.rate:                   238.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              17379.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23832.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   21536.299 ±(99.9%) 607.556 ops/s [Average]
[info]   (min, avg, max) = (21255.009, 21536.299, 21627.930), stdev = 157.780
[info]   CI (99.9%): [20928.744, 22143.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   265.557 ±(99.9%) 240.668 MB/sec [Average]
[info]   (min, avg, max) = (232.426, 265.557, 377.185), stdev = 62.501
[info]   CI (99.9%): [24.889, 506.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19432.733 ±(99.9%) 18317.824 B/op [Average]
[info]   (min, avg, max) = (16912.021, 19432.733, 27929.501), stdev = 4757.081
[info]   CI (99.9%): [1114.909, 37750.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   261.683 ±(99.9%) 563.292 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 261.683, 327.171), stdev = 146.285
[info]   CI (99.9%): [≈ 0, 824.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19142.809 ±(99.9%) 41211.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19142.809, 24218.017), stdev = 10702.462
[info]   CI (99.9%): [≈ 0, 60354.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.057 ±(99.9%) 0.405 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.057, 0.242), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.132 ±(99.9%) 29.488 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.132, 17.628), stdev = 7.658
[info]   CI (99.9%): [≈ 0, 33.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 5.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113.857 ops/s
[info] # Warmup Iteration   2: 1227.333 ops/s
[info] # Warmup Iteration   3: 4979.501 ops/s
[info] Iteration   1: 8121.003 ops/s
[info]                  ·gc.alloc.rate:                   1989.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              385576.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     377128.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 599.928 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 8791.535 ops/s
[info]                  ·gc.alloc.rate:                   1970.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              352695.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348750.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 544.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 8948.130 ops/s
[info]                  ·gc.alloc.rate:                   1994.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              350788.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343159.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.902 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 8889.553 ops/s
[info]                  ·gc.alloc.rate:                   1984.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              351250.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348464.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.685 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 8835.667 ops/s
[info]                  ·gc.alloc.rate:                   2006.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              357265.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354192.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.416 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   8717.178 ±(99.9%) 1303.039 ops/s [Average]
[info]   (min, avg, max) = (8121.003, 8717.178, 8948.130), stdev = 338.395
[info]   CI (99.9%): [7414.139, 10020.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1989.077 ±(99.9%) 50.539 MB/sec [Average]
[info]   (min, avg, max) = (1970.518, 1989.077, 2006.088), stdev = 13.125
[info]   CI (99.9%): [1938.538, 2039.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   359515.376 ±(99.9%) 56959.428 B/op [Average]
[info]   (min, avg, max) = (350788.763, 359515.376, 385576.716), stdev = 14792.183
[info]   CI (99.9%): [302555.949, 416474.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1960.674 ±(99.9%) 69.476 MB/sec [Average]
[info]   (min, avg, max) = (1946.132, 1960.674, 1988.830), stdev = 18.043
[info]   CI (99.9%): [1891.197, 2030.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   354338.985 ±(99.9%) 51305.765 B/op [Average]
[info]   (min, avg, max) = (343159.676, 354338.985, 377128.497), stdev = 13323.944
[info]   CI (99.9%): [303033.219, 405644.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.315 ±(99.9%) 6.187 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.315, 3.096), stdev = 1.607
[info]   CI (99.9%): [≈ 0, 7.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   244.203 ±(99.9%) 1158.681 B/op [Average]
[info]   (min, avg, max) = (3.685, 244.203, 599.928), stdev = 300.906
[info]   CI (99.9%): [≈ 0, 1402.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.400, 25.000), stdev = 6.804
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2787.076 ops/s
[info] # Warmup Iteration   2: 42546.200 ops/s
[info] # Warmup Iteration   3: 61568.527 ops/s
[info] Iteration   1: 61740.491 ops/s
[info]                  ·gc.alloc.rate:                   1004.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              25598.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24732.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.588 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 63138.654 ops/s
[info]                  ·gc.alloc.rate:                   975.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              24312.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24336.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 59865.915 ops/s
[info]                  ·gc.alloc.rate:                   948.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              24935.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25804.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.359 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 64420.186 ops/s
[info]                  ·gc.alloc.rate:                   849.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              20749.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16022.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.646 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 64653.376 ops/s
[info]                  ·gc.alloc.rate:                   865.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              21060.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23935.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.547 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   62763.725 ±(99.9%) 7677.069 ops/s [Average]
[info]   (min, avg, max) = (59865.915, 62763.725, 64653.376), stdev = 1993.711
[info]   CI (99.9%): [55086.655, 70440.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   928.587 ±(99.9%) 262.568 MB/sec [Average]
[info]   (min, avg, max) = (849.389, 928.587, 1004.213), stdev = 68.188
[info]   CI (99.9%): [666.020, 1191.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23331.283 ±(99.9%) 8716.949 B/op [Average]
[info]   (min, avg, max) = (20749.562, 23331.283, 25598.551), stdev = 2263.764
[info]   CI (99.9%): [14614.334, 32048.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   913.531 ±(99.9%) 554.937 MB/sec [Average]
[info]   (min, avg, max) = (655.891, 913.531, 983.443), stdev = 144.115
[info]   CI (99.9%): [358.594, 1468.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22966.529 ±(99.9%) 15185.519 B/op [Average]
[info]   (min, avg, max) = (16022.646, 22966.529, 25804.608), stdev = 3943.631
[info]   CI (99.9%): [7781.010, 38152.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 4.039 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.881, 2.486), stdev = 1.049
[info]   CI (99.9%): [≈ 0, 4.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   22.732 ±(99.9%) 106.193 B/op [Average]
[info]   (min, avg, max) = (0.519, 22.732, 65.359), stdev = 27.578
[info]   CI (99.9%): [≈ 0, 128.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26408.875 ops/s
[info] # Warmup Iteration   2: 89455.108 ops/s
[info] # Warmup Iteration   3: 105150.917 ops/s
[info] Iteration   1: 105775.553 ops/s
[info]                  ·gc.alloc.rate:                   694.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              10325.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9773.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 105258.508 ops/s
[info]                  ·gc.alloc.rate:                   713.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              10663.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9821.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.502 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 106835.769 ops/s
[info]                  ·gc.alloc.rate:                   717.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              10574.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14544.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 107696.788 ops/s
[info]                  ·gc.alloc.rate:                   710.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              10387.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9628.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.925 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 108501.383 ops/s
[info]                  ·gc.alloc.rate:                   711.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9538.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.288 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   106813.600 ±(99.9%) 5139.194 ops/s [Average]
[info]   (min, avg, max) = (105258.508, 106813.600, 108501.383), stdev = 1334.632
[info]   CI (99.9%): [101674.406, 111952.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   709.512 ±(99.9%) 34.994 MB/sec [Average]
[info]   (min, avg, max) = (694.011, 709.512, 717.881), stdev = 9.088
[info]   CI (99.9%): [674.518, 744.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10454.222 ±(99.9%) 599.571 B/op [Average]
[info]   (min, avg, max) = (10320.472, 10454.222, 10663.083), stdev = 155.707
[info]   CI (99.9%): [9854.651, 11053.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.542 ±(99.9%) 567.935 MB/sec [Average]
[info]   (min, avg, max) = (656.911, 723.542, 987.379), stdev = 147.491
[info]   CI (99.9%): [155.607, 1291.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10660.972 ±(99.9%) 8369.985 B/op [Average]
[info]   (min, avg, max) = (9538.044, 10660.972, 14544.064), stdev = 2173.658
[info]   CI (99.9%): [2290.987, 19030.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 5.060 MB/sec [Average]
[info]   (min, avg, max) = (0.029, 0.823, 3.074), stdev = 1.314
[info]   CI (99.9%): [≈ 0, 5.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.014 ±(99.9%) 73.929 B/op [Average]
[info]   (min, avg, max) = (0.425, 12.014, 44.925), stdev = 19.199
[info]   CI (99.9%): [≈ 0, 85.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 13.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33340.673 ops/s
[info] # Warmup Iteration   2: 110338.532 ops/s
[info] # Warmup Iteration   3: 116618.478 ops/s
[info] Iteration   1: 117698.883 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 117666.911 ops/s
[info]                  ·gc.alloc.rate:      0.930 MB/sec
[info]                  ·gc.alloc.rate.norm: 12.434 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 116890.250 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 117264.525 ops/s
[info]                  ·gc.alloc.rate:      0.106 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.425 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 117610.747 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   117426.263 ±(99.9%) 1333.536 ops/s [Average]
[info]   (min, avg, max) = (116890.250, 117426.263, 117698.883), stdev = 346.315
[info]   CI (99.9%): [116092.727, 118759.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.207 ±(99.9%) 1.565 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.207, 0.930), stdev = 0.406
[info]   CI (99.9%): [≈ 0, 1.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.775 ±(99.9%) 20.927 B/op [Average]
[info]   (min, avg, max) = (0.004, 2.775, 12.434), stdev = 5.435
[info]   CI (99.9%): [≈ 0, 23.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42872.471 ops/s
[info] # Warmup Iteration   2: 360804.952 ops/s
[info] # Warmup Iteration   3: 382057.865 ops/s
[info] Iteration   1: 364678.808 ops/s
[info]                  ·gc.alloc.rate:                   2103.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              9078.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8346.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 369744.485 ops/s
[info]                  ·gc.alloc.rate:                   2122.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              9034.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2252.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9586.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.393 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 371424.393 ops/s
[info]                  ·gc.alloc.rate:                   2118.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              8977.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8239.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 373176.651 ops/s
[info]                  ·gc.alloc.rate:                   2161.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              9114.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8301.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 369188.110 ops/s
[info]                  ·gc.alloc.rate:                   2153.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              9177.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9917.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   369642.490 ±(99.9%) 12255.771 ops/s [Average]
[info]   (min, avg, max) = (364678.808, 369642.490, 373176.651), stdev = 3182.785
[info]   CI (99.9%): [357386.718, 381898.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2131.890 ±(99.9%) 93.987 MB/sec [Average]
[info]   (min, avg, max) = (2103.590, 2131.890, 2161.175), stdev = 24.408
[info]   CI (99.9%): [2037.904, 2225.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9076.520 ±(99.9%) 293.907 B/op [Average]
[info]   (min, avg, max) = (8977.278, 9076.520, 9177.648), stdev = 76.327
[info]   CI (99.9%): [8782.614, 9370.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2085.292 ±(99.9%) 727.626 MB/sec [Average]
[info]   (min, avg, max) = (1933.888, 2085.292, 2327.090), stdev = 188.962
[info]   CI (99.9%): [1357.666, 2812.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8878.510 ±(99.9%) 3108.214 B/op [Average]
[info]   (min, avg, max) = (8239.434, 8878.510, 9917.865), stdev = 807.193
[info]   CI (99.9%): [5770.296, 11986.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.931 ±(99.9%) 4.992 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.931, 2.835), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.996 ±(99.9%) 21.489 B/op [Average]
[info]   (min, avg, max) = (0.088, 3.996, 12.236), stdev = 5.581
[info]   CI (99.9%): [≈ 0, 25.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.400, 18.000), stdev = 4.159
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45001.997 ops/s
[info] # Warmup Iteration   2: 607536.584 ops/s
[info] # Warmup Iteration   3: 745774.221 ops/s
[info] Iteration   1: 962617.843 ops/s
[info]                  ·gc.alloc.rate:                   676.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              1106.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 988226.658 ops/s
[info]                  ·gc.alloc.rate:                   696.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              1108.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1023.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 984541.006 ops/s
[info]                  ·gc.alloc.rate:               708.392 MB/sec
[info]                  ·gc.alloc.rate.norm:          1132.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:      967.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1545.679 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 988504.827 ops/s
[info]                  ·gc.alloc.rate:                   697.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              1110.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1031.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 985383.991 ops/s
[info]                  ·gc.alloc.rate:                   694.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              1108.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1039.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.731 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   981854.865 ±(99.9%) 41941.752 ops/s [Average]
[info]   (min, avg, max) = (962617.843, 981854.865, 988504.827), stdev = 10892.140
[info]   CI (99.9%): [939913.113, 1023796.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   694.526 ±(99.9%) 43.636 MB/sec [Average]
[info]   (min, avg, max) = (676.881, 694.526, 708.392), stdev = 11.332
[info]   CI (99.9%): [650.891, 738.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1113.123 ±(99.9%) 41.180 B/op [Average]
[info]   (min, avg, max) = (1106.531, 1113.123, 1132.122), stdev = 10.694
[info]   CI (99.9%): [1071.944, 1154.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   710.011 ±(99.9%) 553.747 MB/sec [Average]
[info]   (min, avg, max) = (641.263, 710.011, 967.164), stdev = 143.806
[info]   CI (99.9%): [156.265, 1263.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1137.740 ±(99.9%) 878.842 B/op [Average]
[info]   (min, avg, max) = (1023.231, 1137.740, 1545.679), stdev = 228.232
[info]   CI (99.9%): [258.898, 2016.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.344 ±(99.9%) 1.938 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 1.180), stdev = 0.503
[info]   CI (99.9%): [≈ 0, 2.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.559 ±(99.9%) 3.167 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.559, 1.929), stdev = 0.822
[info]   CI (99.9%): [≈ 0, 3.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 637443.646 ops/s
[info] # Warmup Iteration   2: 1825653.840 ops/s
[info] # Warmup Iteration   3: 1868953.524 ops/s
[info] Iteration   1: 1876681.996 ops/s
[info]                  ·gc.alloc.rate:                   947.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              794.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1811047.868 ops/s
[info]                  ·gc.alloc.rate:                   920.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              799.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1844078.029 ops/s
[info]                  ·gc.alloc.rate:                   943.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              804.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.756 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1839632.201 ops/s
[info]                  ·gc.alloc.rate:                   934.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              799.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     841.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1846612.954 ops/s
[info]                  ·gc.alloc.rate:                   936.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              797.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1843610.610 ±(99.9%) 89875.816 ops/s [Average]
[info]   (min, avg, max) = (1811047.868, 1843610.610, 1876681.996), stdev = 23340.464
[info]   CI (99.9%): [1753734.794, 1933486.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   936.264 ±(99.9%) 39.118 MB/sec [Average]
[info]   (min, avg, max) = (920.731, 936.264, 947.245), stdev = 10.159
[info]   CI (99.9%): [897.146, 975.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   799.109 ±(99.9%) 14.759 B/op [Average]
[info]   (min, avg, max) = (794.222, 799.109, 804.725), stdev = 3.833
[info]   CI (99.9%): [784.350, 813.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.653 ±(99.9%) 565.500 MB/sec [Average]
[info]   (min, avg, max) = (656.990, 919.653, 988.796), stdev = 146.859
[info]   CI (99.9%): [354.153, 1485.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   786.012 ±(99.9%) 507.071 B/op [Average]
[info]   (min, avg, max) = (550.856, 786.012, 857.374), stdev = 131.685
[info]   CI (99.9%): [278.941, 1293.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.810 ±(99.9%) 5.289 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.810, 3.230), stdev = 1.373
[info]   CI (99.9%): [≈ 0, 6.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.692 ±(99.9%) 4.512 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.692, 2.756), stdev = 1.172
[info]   CI (99.9%): [≈ 0, 5.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9665.000 ops/s
[info] # Warmup Iteration   2: 119664.934 ops/s
[info] # Warmup Iteration   3: 163808.191 ops/s
[info] Iteration   1: 184022.596 ops/s
[info]                  ·gc.alloc.rate:                   4496.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              38456.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4270.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36521.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.780 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 185295.943 ops/s
[info]                  ·gc.alloc.rate:                   4578.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              38885.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4688.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39816.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.530 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 186041.857 ops/s
[info]                  ·gc.alloc.rate:                   4589.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              38825.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4399.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37215.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.528 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 185848.177 ops/s
[info]                  ·gc.alloc.rate:                   4585.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              38834.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4415.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37395.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 186283.610 ops/s
[info]                  ·gc.alloc.rate:                   4596.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              38834.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37387.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.528 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   185498.437 ±(99.9%) 3472.649 ops/s [Average]
[info]   (min, avg, max) = (184022.596, 185498.437, 186283.610), stdev = 901.836
[info]   CI (99.9%): [182025.788, 188971.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4569.382 ±(99.9%) 158.913 MB/sec [Average]
[info]   (min, avg, max) = (4496.476, 4569.382, 4596.582), stdev = 41.269
[info]   CI (99.9%): [4410.469, 4728.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   38767.364 ±(99.9%) 674.972 B/op [Average]
[info]   (min, avg, max) = (38456.668, 38767.364, 38885.558), stdev = 175.288
[info]   CI (99.9%): [38092.392, 39442.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4439.746 ±(99.9%) 586.944 MB/sec [Average]
[info]   (min, avg, max) = (4270.181, 4439.746, 4688.248), stdev = 152.427
[info]   CI (99.9%): [3852.802, 5026.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37667.283 ±(99.9%) 4828.589 B/op [Average]
[info]   (min, avg, max) = (36521.257, 37667.283, 39816.692), stdev = 1253.969
[info]   CI (99.9%): [32838.694, 42495.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.244 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.208), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.814 ±(99.9%) 2.100 B/op [Average]
[info]   (min, avg, max) = (0.528, 0.814, 1.780), stdev = 0.545
[info]   CI (99.9%): [≈ 0, 2.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   66.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.200, 14.000), stdev = 0.447
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   92.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 18.400, 19.000), stdev = 0.548
[info]   CI (99.9%): [92.000, 92.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105188.941 ops/s
[info] # Warmup Iteration   2: 349165.821 ops/s
[info] # Warmup Iteration   3: 469439.896 ops/s
[info] Iteration   1: 468471.399 ops/s
[info]                  ·gc.alloc.rate:                   1537.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              5161.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4364.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 464044.727 ops/s
[info]                  ·gc.alloc.rate:                   1521.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              5157.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5543.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 466417.763 ops/s
[info]                  ·gc.alloc.rate:               1519.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          5126.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4446.271 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 467754.276 ops/s
[info]                  ·gc.alloc.rate:                   1549.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              5215.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5586.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 463464.010 ops/s
[info]                  ·gc.alloc.rate:                   1531.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              5197.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4540.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   466030.435 ±(99.9%) 8525.836 ops/s [Average]
[info]   (min, avg, max) = (463464.010, 466030.435, 468471.399), stdev = 2214.133
[info]   CI (99.9%): [457504.599, 474556.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1531.716 ±(99.9%) 48.044 MB/sec [Average]
[info]   (min, avg, max) = (1519.394, 1531.716, 1549.846), stdev = 12.477
[info]   CI (99.9%): [1483.672, 1579.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5171.768 ±(99.9%) 134.575 B/op [Average]
[info]   (min, avg, max) = (5126.576, 5171.768, 5215.334), stdev = 34.949
[info]   CI (99.9%): [5037.193, 5306.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1450.012 ±(99.9%) 697.140 MB/sec [Average]
[info]   (min, avg, max) = (1299.608, 1450.012, 1660.284), stdev = 181.045
[info]   CI (99.9%): [752.873, 2147.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4896.246 ±(99.9%) 2364.320 B/op [Average]
[info]   (min, avg, max) = (4364.450, 4896.246, 5586.963), stdev = 614.006
[info]   CI (99.9%): [2531.926, 7260.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.183, 0.353), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 203570.196 ops/s
[info] # Warmup Iteration   2: 916986.582 ops/s
[info] # Warmup Iteration   3: 890130.138 ops/s
[info] Iteration   1: 873873.262 ops/s
[info]                  ·gc.alloc.rate:                   413.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     576.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 891192.885 ops/s
[info]                  ·gc.alloc.rate:                   432.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1132.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 897657.995 ops/s
[info]                  ·gc.alloc.rate:               422.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          741.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 564.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 898026.652 ops/s
[info]                  ·gc.alloc.rate:               426.724 MB/sec
[info]                  ·gc.alloc.rate.norm:          747.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 564.484 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 894030.662 ops/s
[info]                  ·gc.alloc.rate:               431.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          760.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1138.746 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   890956.291 ±(99.9%) 38325.055 ops/s [Average]
[info]   (min, avg, max) = (873873.262, 890956.291, 898026.652), stdev = 9952.895
[info]   CI (99.9%): [852631.237, 929281.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   425.433 ±(99.9%) 30.152 MB/sec [Average]
[info]   (min, avg, max) = (413.258, 425.433, 432.401), stdev = 7.830
[info]   CI (99.9%): [395.281, 455.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   751.329 ±(99.9%) 37.884 B/op [Average]
[info]   (min, avg, max) = (741.424, 751.329, 763.402), stdev = 9.838
[info]   CI (99.9%): [713.444, 789.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   450.632 ±(99.9%) 680.876 MB/sec [Average]
[info]   (min, avg, max) = (320.168, 450.632, 646.916), stdev = 176.821
[info]   CI (99.9%): [≈ 0, 1131.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   795.476 ±(99.9%) 1196.632 B/op [Average]
[info]   (min, avg, max) = (564.484, 795.476, 1138.746), stdev = 310.761
[info]   CI (99.9%): [≈ 0, 1992.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.184), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.342
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520902.646 ops/s
[info] # Warmup Iteration   2: 1554508.457 ops/s
[info] # Warmup Iteration   3: 1568010.987 ops/s
[info] Iteration   1: 1567312.075 ops/s
[info]                  ·gc.alloc.rate:                   743.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     658.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1549195.858 ops/s
[info]                  ·gc.alloc.rate:               737.363 MB/sec
[info]                  ·gc.alloc.rate.norm:          749.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 667.300 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1588758.201 ops/s
[info]                  ·gc.alloc.rate:                   767.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     976.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1026926.183 ops/s
[info]                  ·gc.alloc.rate:               483.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          740.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 504.359 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1230195.704 ops/s
[info]                  ·gc.alloc.rate:                   589.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1392477.604 ±(99.9%) 969599.927 ops/s [Average]
[info]   (min, avg, max) = (1026926.183, 1392477.604, 1588758.201), stdev = 251802.022
[info]   CI (99.9%): [422877.677, 2362077.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   664.290 ±(99.9%) 474.313 MB/sec [Average]
[info]   (min, avg, max) = (483.281, 664.290, 767.609), stdev = 123.178
[info]   CI (99.9%): [189.977, 1138.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.133 ±(99.9%) 28.701 B/op [Average]
[info]   (min, avg, max) = (740.439, 750.133, 760.184), stdev = 7.454
[info]   CI (99.9%): [721.432, 778.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.335 ±(99.9%) 894.548 MB/sec [Average]
[info]   (min, avg, max) = (329.192, 657.335, 986.259), stdev = 232.311
[info]   CI (99.9%): [≈ 0, 1551.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   729.904 ±(99.9%) 703.750 B/op [Average]
[info]   (min, avg, max) = (504.359, 729.904, 976.719), stdev = 182.762
[info]   CI (99.9%): [26.154, 1433.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.767 ±(99.9%) 6.349 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.767, 3.716), stdev = 1.649
[info]   CI (99.9%): [≈ 0, 7.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.975 ±(99.9%) 8.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.975, 4.754), stdev = 2.113
[info]   CI (99.9%): [≈ 0, 9.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 2.966
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 803996.788 ops/s
[info] # Warmup Iteration   2: 1554492.747 ops/s
[info] # Warmup Iteration   3: 1698418.231 ops/s
[info] Iteration   1: 1694799.313 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1697462.470 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1677723.585 ops/s
[info]                  ·gc.alloc.rate:      14.528 MB/sec
[info]                  ·gc.alloc.rate.norm: 13.629 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1690384.419 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1692694.138 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1690612.785 ±(99.9%) 29512.169 ops/s [Average]
[info]   (min, avg, max) = (1677723.585, 1690612.785, 1697462.470), stdev = 7664.217
[info]   CI (99.9%): [1661100.616, 1720124.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.906 ±(99.9%) 25.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.906, 14.528), stdev = 6.497
[info]   CI (99.9%): [≈ 0, 27.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.726 ±(99.9%) 23.469 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.726, 13.629), stdev = 6.095
[info]   CI (99.9%): [≈ 0, 26.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61736.910 ops/s
[info] # Warmup Iteration   2: 523175.387 ops/s
[info] # Warmup Iteration   3: 540725.160 ops/s
[info] Iteration   1: 583812.074 ops/s
[info]                  ·gc.alloc.rate:                   1174.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              3166.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3487.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.792 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 653006.867 ops/s
[info]                  ·gc.alloc.rate:                   903.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              2177.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.565 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 642292.612 ops/s
[info]                  ·gc.alloc.rate:                   898.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2388.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 659546.038 ops/s
[info]                  ·gc.alloc.rate:                   926.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              2210.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2331.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 652216.803 ops/s
[info]                  ·gc.alloc.rate:                   905.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              2183.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   638174.879 ±(99.9%) 119403.499 ops/s [Average]
[info]   (min, avg, max) = (583812.074, 638174.879, 659546.038), stdev = 31008.709
[info]   CI (99.9%): [518771.380, 757578.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   961.686 ±(99.9%) 460.797 MB/sec [Average]
[info]   (min, avg, max) = (898.035, 961.686, 1174.859), stdev = 119.668
[info]   CI (99.9%): [500.889, 1422.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2387.997 ±(99.9%) 1676.999 B/op [Average]
[info]   (min, avg, max) = (2177.989, 2387.997, 3166.707), stdev = 435.511
[info]   CI (99.9%): [710.998, 4064.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   909.684 ±(99.9%) 1036.848 MB/sec [Average]
[info]   (min, avg, max) = (648.904, 909.684, 1293.930), stdev = 269.266
[info]   CI (99.9%): [≈ 0, 1946.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2269.707 ±(99.9%) 3031.600 B/op [Average]
[info]   (min, avg, max) = (1563.869, 2269.707, 3487.651), stdev = 787.297
[info]   CI (99.9%): [≈ 0, 5301.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.931 ±(99.9%) 4.503 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.931, 2.565), stdev = 1.169
[info]   CI (99.9%): [≈ 0, 5.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.344 ±(99.9%) 11.237 B/op [Average]
[info]   (min, avg, max) = (0.050, 2.344, 6.182), stdev = 2.918
[info]   CI (99.9%): [≈ 0, 13.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 9.000), stdev = 2.490
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:50
[info] Benchmark                                                                                (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                      N/A  thrpt    5    947450.467 ±   79995.123   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      2155.907 ±     194.365  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      3580.264 ±      81.751    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2090.166 ±     680.586  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      3470.170 ±    1028.556    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.990 ±       7.442  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.700 ±      12.864    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        32.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5        50.000                    ms
[info] AdtBenchmark.readJacksonScala                                                               N/A  thrpt    5   1946157.450 ±   79498.366   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1264.051 ±      24.817  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5      1022.162 ±      26.753    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1245.297 ±     552.490  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      1006.970 ±     445.810    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.192 ±       0.997  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.155 ±       0.809    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                      N/A  thrpt    5        31.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                              N/A  thrpt    5   5205640.949 ±  181915.390   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       356.878 ±      29.945  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       107.888 ±       6.667    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       379.854 ±     609.861  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       114.724 ±     181.972    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.003 ±       0.013    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                     N/A  thrpt    5        20.000                    ms
[info] AdtBenchmark.readPlayJson                                                                   N/A  thrpt    5    443739.072 ±   14795.065   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2366.050 ±      85.816  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      8390.460 ±     237.136    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2317.935 ±      99.957  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      8220.509 ±     547.086    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.602 ±       4.485  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         2.140 ±      15.951    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                          N/A  thrpt    5        57.000                    ms
[info] AdtBenchmark.writeCirce                                                                     N/A  thrpt    5   1079446.427 ±   79280.177   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2820.203 ±     294.198  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4110.903 ±     164.743    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2776.549 ±     678.260  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4046.812 ±     863.844    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.657 ±       4.200  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.980 ±       6.315    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        42.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        67.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                              N/A  thrpt    5   3043894.964 ±  312316.776   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1211.369 ±      87.967  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       626.441 ±      20.490    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1177.054 ±     701.521  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       608.378 ±     351.848    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.481 ±       3.829  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.246 ±       1.952    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        32.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  20755758.737 ±  315606.611   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1084.654 ±      20.049  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        82.241 ±       1.161    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1049.140 ±     572.555  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        79.552 ±      43.517    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.873 ±       7.267  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.067 ±       0.554    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        39.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  19420820.148 ±  510666.940   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5         1.716 ±      13.824  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5         0.140 ±       1.123    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                  N/A  thrpt    5   1031840.849 ±   39446.773   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      2296.659 ±     121.133  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5      3502.420 ±     100.309    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2186.265 ±     684.138  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      3332.217 ±     919.316    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.487 ±       3.796  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.739 ±       5.749    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        33.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        55.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                  N/A  thrpt    5   3885384.203 ±   68919.597   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3550.342 ±      94.053  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      1438.038 ±      32.033    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3391.150 ±     536.119  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1373.505 ±     209.190    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.146 ±       0.816  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.059 ±       0.330    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        51.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        65.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                            N/A  thrpt    5  11475850.855 ± 2693787.274   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5      1438.176 ±     357.279  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       197.173 ±       3.897    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1363.830 ±     543.083  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       187.212 ±      67.726    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.994 ±       8.316  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.135 ±       1.133    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5        21.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        43.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                           N/A  thrpt    5   3677225.032 ±  172053.225   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      2246.404 ±      87.369  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5       961.273 ±      30.895    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2200.404 ±     683.432  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5       941.444 ±     282.231    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.150 ±       0.893  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.064 ±       0.386    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        33.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        51.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                          N/A  thrpt    5  15071112.798 ±  617028.376   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5      1978.941 ±      78.143  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5       206.642 ±       6.320    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      1919.309 ±     587.616  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       200.530 ±      67.127    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.765 ±       6.270  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.079 ±       0.650    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        29.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        55.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                               N/A  thrpt    5   1828526.730 ±  113016.175   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      3008.376 ±     138.832  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      2588.925 ±      97.021    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2869.286 ±     722.236  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      2469.575 ±     646.705    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.229 ±       1.617  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.197 ±       1.392    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        43.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        65.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                 N/A  thrpt    5   5030357.743 ±  176706.149   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      2541.478 ±      71.191  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5       795.033 ±      23.461    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2475.146 ±     610.721  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5       774.492 ±     206.444    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.922 ±       7.584  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.289 ±       2.379    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        38.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        63.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                           N/A  thrpt    5  23436142.692 ± 1953282.038   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       748.468 ±      83.255  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5        50.282 ±       9.436    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       716.396 ±     554.131  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5        48.262 ±      41.936    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         1.044 ±       7.882  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.069 ±       0.520    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5        11.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5        38.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                          N/A  thrpt    5  11143160.122 ±  425911.103   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       354.083 ±      29.651  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        49.994 ±       3.416    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       321.656 ±       3.680  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        45.421 ±       1.829    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.001 ±       0.005    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        11.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                         N/A  thrpt    5  34114678.557 ± 2005784.432   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5      1072.324 ±      44.197  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5        49.472 ±       2.167    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      1048.929 ±     572.086  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5        48.415 ±      27.262    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.854 ±       6.906  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         0.040 ±       0.321    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5        16.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        48.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5  37742924.601 ±  336949.365   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5         1.478 ±      12.721  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.062 ±       0.530    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                              N/A  thrpt    5   2442224.179 ±   69388.247   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      3405.922 ±     150.361  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5      2194.619 ±      57.930    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      3275.731 ±     530.691  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      2110.437 ±     299.124    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.167 ±       0.912  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.107 ±       0.586    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        49.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        74.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                    128  thrpt    5    430201.879 ±   26730.416   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2584.936 ±     140.977  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      9457.761 ±     934.127    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2506.632 ±     717.309  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      9173.504 ±    2878.759    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.015 ±       4.769  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.735 ±      17.485    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                          128  thrpt    5        38.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                           128  thrpt    5        59.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                             128  thrpt    5    895549.156 ±   57262.118   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       776.079 ±      58.714  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5      1363.684 ±      46.753    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       777.284 ±     686.876  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1365.593 ±    1197.536    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.843 ±       4.422  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         1.493 ±       7.791    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        12.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        26.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                            128  thrpt    5   1655403.059 ±  201215.676   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      1138.163 ±      69.203  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1082.440 ±      83.392    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1117.074 ±     698.096  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1065.427 ±     758.532    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.808 ±       5.177  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.798 ±       5.204    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        42.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                 128  thrpt    5    222715.909 ±    4994.791   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      4113.018 ±      72.243  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5     29058.526 ±     547.143    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      3958.965 ±     531.544  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     27972.203 ±    4039.798    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.087 ±       0.337  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.618 ±       2.379    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        59.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        81.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                   128  thrpt    5    469221.618 ±   23247.351   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1542.283 ±     129.364  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      5171.834 ±     182.554    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1504.728 ±     696.862  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5042.508 ±    2170.264    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.914 ±       5.615  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.063 ±      18.800    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                         128  thrpt    5        23.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                          128  thrpt    5        42.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                            128  thrpt    5   1027345.287 ±   61735.748   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       487.463 ±      18.711  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       746.682 ±      23.553    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       449.742 ±     676.593  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       690.146 ±    1054.251    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.019 ±       0.109    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        12.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                           128  thrpt    5   2697431.567 ±  202920.007   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1291.454 ±     114.410  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       753.418 ±      35.301    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1246.020 ±     564.323  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       727.623 ±     350.214    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.836 ±       6.812  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.483 ±       3.930    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        19.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        39.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   2804269.750 ±   41984.051   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                128  thrpt    5    664321.583 ±   93792.137   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1139.100 ±     665.631  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5      2711.578 ±    1911.377    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1162.583 ±    1124.867  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2767.078 ±    2909.384    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         2.437 ±       9.275  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         5.719 ±      21.438    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        66.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                       128  thrpt    5     21215.492 ±    2681.859   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1768.069 ±     421.956  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    131448.978 ±   47571.101    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1773.007 ±    1009.932  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    132118.367 ±   93002.843    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         5.392 ±      20.127  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       400.508 ±    1468.981    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                              128  thrpt    5        58.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                128  thrpt    5     41329.069 ±    4977.778   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1248.159 ±     587.426  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47555.428 ±   22807.317    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1172.197 ±     664.136  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     44725.221 ±   27794.820    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.246 ±       6.399  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        48.743 ±     250.225    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        35.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                               128  thrpt    5     51074.023 ±    8220.758   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       806.474 ±     279.576  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5     24919.501 ±   11097.965    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       814.723 ±     658.562  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     25199.479 ±   22055.929    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.942 ±       7.731  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        61.524 ±     256.226    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        41.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                    128  thrpt    5     38655.034 ±    3810.116   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1718.809 ±     163.443  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     70040.084 ±   13770.215    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1643.536 ±      57.790  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     66935.677 ±    6353.526    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.590 ±       4.610  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        25.043 ±     196.645    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        25.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                      128  thrpt    5     34216.094 ±    4410.325   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      2331.929 ±     169.848  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5    107393.049 ±   21368.671    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2280.280 ±     835.647  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    105083.354 ±   46207.759    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         3.150 ±      18.246  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       146.587 ±     858.056    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        35.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        62.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                               128  thrpt    5     32001.788 ±    6851.352   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1905.768 ±     229.482  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     94010.074 ±   27856.008    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1845.370 ±     565.570  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     91133.744 ±   41282.674    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         3.027 ±      11.052  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       150.402 ±     561.907    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5       106.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                              128  thrpt    5     39167.342 ±    7241.920   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2107.709 ±     139.122  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     84849.301 ±   18322.519    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2080.972 ±     690.163  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     83659.504 ±   26744.518    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         4.030 ±      30.522  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5       171.151 ±    1299.756    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        33.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        95.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5     38776.360 ±    7821.150   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      2028.902 ±     164.767  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5     82542.210 ±   20342.781    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      1968.509 ±     573.374  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5     80172.951 ±   34436.427    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         3.768 ±      24.075  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5       160.392 ±    1046.364    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        31.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5       115.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                   128  thrpt    5      9418.222 ±     468.583   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1279.597 ±      83.259  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5    213754.481 ±    4313.133    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1235.039 ±     552.857  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    206100.824 ±   83807.728    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.017 ±       6.724  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       172.839 ±    1150.549    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        48.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                           128  thrpt    5     21867.274 ±    1923.541   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1868.093 ±     452.174  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    134589.047 ±   41793.412    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1848.773 ±     380.017  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    133155.511 ±   34928.282    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         4.482 ±      31.977  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       319.798 ±    2269.997    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        31.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        60.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                    128  thrpt    5     48555.751 ±    9940.461   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1524.907 ±     810.551  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     49409.621 ±   24341.379    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1454.223 ±    1146.936  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     46936.807 ±   29817.103    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         3.528 ±       7.656  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       114.217 ±     248.278    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       111.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                   128  thrpt    5     66001.041 ±    4967.071   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       757.344 ±      66.541  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     18055.141 ±     597.191    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       709.634 ±     553.249  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     16935.687 ±   13614.121    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.154 ±       7.367  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        28.156 ±     181.632    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                        128  thrpt    5     41526.759 ±    1700.436   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2461.568 ±     388.660  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     93278.569 ±   15528.640    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2391.136 ±     508.065  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     90603.949 ±   19340.815    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.143 ±       5.667  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        43.510 ±     215.847    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        36.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        57.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                   128  thrpt    5     41105.244 ±    8913.759   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1922.394 ±     398.763  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     73953.329 ±   32099.531    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1913.093 ±    1023.228  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     73624.044 ±   50306.333    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.912 ±       9.616  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        77.749 ±     394.334    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        29.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        46.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5     55667.119 ±    4037.842   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1764.235 ±      59.883  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     49884.746 ±    3883.570    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1708.989 ±     550.214  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     48316.845 ±   15553.363    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.998 ±       8.190  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        29.099 ±     239.231    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        26.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        40.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     55101.932 ±    7887.279   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5      1652.450 ±      79.190  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     47226.353 ±    5349.274    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5      1628.907 ±      31.726  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     46567.963 ±    7007.588    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.329 ±       6.710  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        39.141 ±     197.349    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5        25.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        55.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                          128  thrpt    5    402685.538 ±   23562.385   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2196.434 ±     166.608  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      8583.623 ±     329.634    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2149.463 ±     718.209  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      8401.064 ±    2809.262    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.956 ±       7.652  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.813 ±      30.565    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        33.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        51.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                    128  thrpt    5   1788784.412 ±  150657.502   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       583.012 ±      45.407  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       512.905 ±      23.564    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       585.138 ±     559.560  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       516.932 ±     518.772    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.011 ±       0.059  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.010 ±       0.053    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5        32.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    794975.914 ±   16894.364   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       327.368 ±       6.635  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       647.970 ±      20.625    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       323.834 ±       0.149  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       640.971 ±      13.622    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.016 ±       0.059  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.032 ±       0.116    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        27.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   2192067.022 ±   67584.523   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       433.790 ±      23.680  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       311.357 ±      11.590    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       393.686 ±     563.887  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       282.582 ±     404.650    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.009 ±       0.051    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        21.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    153844.662 ±    7331.138   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4083.402 ±     236.990  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     41767.080 ±     610.625    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      3955.899 ±     532.346  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     40474.473 ±    6396.722    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.100 ±       0.222  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.028 ±       2.334    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        59.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        80.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    440205.142 ±   26010.057   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1443.603 ±      87.777  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5159.885 ±     169.419    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1439.964 ±     695.076  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5151.236 ±    2643.563    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.912 ±       5.890  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.322 ±      21.551    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5        43.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                   128  thrpt    5   2620638.903 ±  282767.191   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5      1258.470 ±      39.966  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       756.094 ±      70.592    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5      1234.510 ±     557.546  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       739.794 ±     266.276    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.074 ±       6.922  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.640 ±       4.093    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        45.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5   1181173.799 ±   37160.377   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       561.151 ±      10.712  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       747.643 ±      28.913    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       517.539 ±     681.462  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       690.984 ±     925.859    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.017 ±       0.060  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.022 ±       0.081    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5        13.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   2966023.319 ±   61643.100   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1416.465 ±      52.522  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       751.452 ±      24.763    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1379.781 ±     568.389  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       731.919 ±     297.449    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.851 ±       7.117  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.450 ±       3.766    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        40.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3212521.174 ±   13963.857   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5         0.960 ±       8.264  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.471 ±       4.054    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5    919601.391 ±   19523.996   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5       984.482 ±      20.963  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      1684.779 ±      34.405    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5       970.132 ±       8.628  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1660.241 ±      36.878    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.194 ±       5.986  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         2.032 ±      10.155    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        15.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5        59.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                             128  thrpt    5    220586.124 ±    7163.355   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2759.849 ±     152.310  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     19684.799 ±     538.641    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2714.734 ±     443.172  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     19360.977 ±    2756.919    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.142 ±       0.908  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.005 ±       6.430    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                   128  thrpt    5        41.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                    128  thrpt    5        55.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                      128  thrpt    5    425174.259 ±    7758.740   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       279.770 ±      10.778  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      1035.506 ±      48.743    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       258.247 ±     555.898  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       957.269 ±    2060.670    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.638 ±       5.474  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         2.360 ±      20.235    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        18.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                     128  thrpt    5   1315081.659 ±   69114.116   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       261.092 ±      14.843  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       312.431 ±      19.808    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       247.939 ±     547.103  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       297.497 ±     657.822    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.014 ±       0.105  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.017 ±       0.125    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        14.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                          128  thrpt    5    124851.174 ±    4191.847   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4125.269 ±      71.154  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51988.847 ±    1188.280    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3965.333 ±     578.458  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     49971.602 ±    7159.551    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.100 ±       0.337  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.253 ±       4.174    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        59.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        81.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                            128  thrpt    5    341019.800 ±    4686.482   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1865.312 ±      42.314  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5      8607.302 ±     251.646    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1787.450 ±     653.179  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8249.319 ±    3084.326    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.087 ±       0.483  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.399 ±       2.212    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        27.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        39.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                     128  thrpt    5   2296674.246 ±   55261.878   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       642.915 ±      38.378  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       440.546 ±      35.560    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       645.610 ±      10.010  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       442.366 ±      13.517    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.012 ±       0.052  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.008 ±       0.036    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        16.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                    128  thrpt    5   3427154.436 ±  365893.153   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       960.963 ±      58.785  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       441.435 ±      45.262    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       919.684 ±     561.395  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       422.361 ±     258.630    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.825 ±       5.192  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.385 ±       2.401    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        36.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   3356947.515 ±  193496.824   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.346 ±       2.977  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.161 ±       1.381    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                         128  thrpt    5     55424.812 ±    5675.334   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2124.986 ±     524.752  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     60444.443 ±   20921.884    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2072.069 ±     649.316  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     58889.955 ±   20922.884    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         3.577 ±      12.604  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       103.542 ±     370.786    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        32.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        70.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                             128  thrpt    5    301726.082 ±   28402.966   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3300.930 ±     775.420  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     17202.179 ±    2386.254    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3190.047 ±     990.400  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     16623.460 ±    4024.297    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.052 ±       6.414  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         5.350 ±      32.142    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        48.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        66.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                      128  thrpt    5    694170.947 ±   46813.762   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1889.204 ±     111.281  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      4283.286 ±     143.547    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1786.292 ±     699.769  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4049.987 ±    1574.124    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.273 ±       1.839  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.609 ±       4.097    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        27.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        48.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   2883831.360 ±  229908.630   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1025.910 ±      67.476  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       559.812 ±      13.108    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1051.262 ±     556.388  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       573.761 ±     304.846    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.796 ±       6.236  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.427 ±       3.337    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        16.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                          128  thrpt    5    134609.759 ±    6068.510   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4368.904 ±     216.140  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51075.496 ±     927.668    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      4187.871 ±     737.449  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     48949.657 ±    7181.706    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.365 ±       2.649  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         4.265 ±      30.982    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        62.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        92.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                            128  thrpt    5    319875.581 ±   12155.278   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      2537.248 ±     103.101  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     12480.220 ±     332.401    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2438.673 ±     703.150  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     11999.159 ±    3686.146    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.448 ±       3.004  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.189 ±      14.656    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        37.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        52.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   1993536.984 ±   80572.462   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       705.186 ±      72.711  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       556.602 ±      43.123    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       719.038 ±     558.108  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       567.053 ±     423.429    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.883 ±       5.665  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.693 ±       4.446    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        39.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5   2785668.924 ±  195869.090   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       986.393 ±      28.095  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       557.389 ±      51.112    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       921.304 ±     574.904  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       521.019 ±     337.283    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.812 ±       6.547  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.455 ±       3.666    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   2926289.068 ±   75678.357   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                         128  thrpt    5    751228.094 ±   21344.158   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      4581.662 ±     154.568  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9597.762 ±     148.832    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4459.940 ±     431.338  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9343.209 ±     943.511    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.083 ±       0.150  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.175 ±       0.316    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        66.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        94.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                           128  thrpt    5     28920.764 ±    1798.858   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1799.107 ±     242.996  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     97922.362 ±   15665.406    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1756.163 ±     670.922  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     95680.698 ±   41883.619    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         2.021 ±       7.746  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       111.104 ±     430.219    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        67.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                     128  thrpt    5     96875.057 ±   13866.088   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       877.483 ±     277.698  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5     14287.224 ±    5714.490    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       879.140 ±     545.981  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     14340.149 ±   10021.111    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         3.515 ±       9.196  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        57.318 ±     146.524    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                            128  thrpt    5        59.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                    128  thrpt    5     75224.123 ±   12334.212   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1434.077 ±     396.643  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     30047.836 ±   10134.733    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1417.330 ±     674.152  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     29702.105 ±   15483.751    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         3.503 ±      12.996  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        74.034 ±     276.131    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       172.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                   128  thrpt    5    133591.566 ±   30764.754   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1009.439 ±    1101.227  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     12061.760 ±   15959.370    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       994.074 ±    1276.010  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     11916.853 ±   17943.780    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         9.616 ±      35.119  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       117.130 ±     430.764    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        52.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                        128  thrpt    5     49321.943 ±    4320.523   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2118.697 ±     198.589  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     67627.885 ±    9541.645    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2094.371 ±     669.378  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     66877.704 ±   23921.034    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.181 ±       6.028  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        38.525 ±     196.534    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        32.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        56.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                          128  thrpt    5     42454.074 ±    4744.380   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5       783.238 ±     581.718  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     29166.239 ±   25238.317    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5       777.322 ±    1135.928  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     29083.955 ±   46919.260    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.994 ±       5.168  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        36.401 ±     185.952    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        64.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                   128  thrpt    5     43303.434 ±    6988.900   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       670.001 ±     943.011  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     24681.360 ±   39785.716    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       710.949 ±    1356.269  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     26274.285 ±   55246.916    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.779 ±       6.430  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        64.283 ±     227.099    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        11.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        55.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                  128  thrpt    5     48403.408 ±    1963.401   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       525.400 ±     191.041  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     17092.873 ±    6787.728    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       522.401 ±     688.753  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     16995.494 ±   22525.175    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.696 ±       4.610  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        22.531 ±     148.561    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     48278.420 ±    2518.544   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5       561.840 ±     157.822  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     18330.193 ±    6102.100    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5       517.691 ±     682.056  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     16924.024 ±   22818.993    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.468 ±       1.932  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        15.316 ±      62.796    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        37.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                         128  thrpt    5     17182.771 ±    1856.295   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1337.088 ±     325.257  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    122684.985 ±   42227.829    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1304.568 ±     537.785  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    119700.295 ±   58002.691    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.284 ±      13.103  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       212.430 ±    1237.603    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                               128  thrpt    5        21.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                128  thrpt    5        96.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                  128  thrpt    5     16265.229 ±    2780.511   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1113.205 ±     582.721  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    108351.268 ±   77882.890    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                 128  thrpt    5         0.005 ±       0.041  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm            128  thrpt    5         0.499 ±       4.295    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace                              128  thrpt    5         0.013 ±       0.113  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                         128  thrpt    5         1.376 ±      11.851    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1098.525 ±     866.585  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    106997.795 ±  101727.343    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                             128  thrpt    5        10.919 ±      94.020  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                        128  thrpt    5      1141.617 ±    9829.664    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.761 ±       7.392  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       172.351 ±     716.807    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        20.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5       100.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                 128  thrpt    5    156995.886 ±    9603.321   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       420.164 ±      25.452  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      4211.225 ±     134.568    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       393.809 ±     565.206  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3941.253 ±    5542.805    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.012 ±       0.049  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.126 ±       0.494    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5         6.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        24.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                      128  thrpt    5     15552.702 ±    3251.239   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1476.590 ±     294.926  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    149671.994 ±   39292.382    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1477.198 ±     677.045  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    149944.902 ±   80525.026    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.436 ±      10.508  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       153.053 ±    1123.598    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        23.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        79.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                        128  thrpt    5     66742.536 ±    5223.613   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1580.458 ±     150.089  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     37287.089 ±    6393.663    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1566.239 ±     559.054  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     36948.914 ±   13983.033    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.420 ±      11.158  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        34.591 ±     272.854    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        45.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                 128  thrpt    5    105307.189 ±    9557.923   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1404.993 ±     132.904  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     20994.765 ±     560.597    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1357.221 ±     563.213  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     20282.452 ±    8220.929    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.292 ±       4.908  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        19.466 ±      73.700    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        51.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                128  thrpt    5    270570.587 ±    3206.892   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       443.144 ±      23.068  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2577.148 ±     130.120    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       459.675 ±     691.117  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2672.732 ±    4011.278    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.092 ±       0.705  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.535 ±       4.099    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        25.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    290123.021 ±     957.979   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.368 ±       3.163  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         1.996 ±      17.171    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                     128  thrpt    5     85768.338 ±   38862.311   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1825.886 ±     916.338  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     33939.408 ±   24731.304    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1771.844 ±    1152.525  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     32977.509 ±   28012.757    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5        18.891 ±      93.066  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       374.843 ±    1821.989    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        35.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5       295.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                             128  thrpt    5    127387.180 ±   11363.428   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1671.649 ±     679.033  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     20636.824 ±    7427.295    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.Compressed_Class_Space                            128  thrpt    5         0.004 ±       0.031  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm                       128  thrpt    5         0.046 ±       0.393    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.Metaspace                                         128  thrpt    5         0.010 ±       0.087  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.Metaspace.norm                                    128  thrpt    5         0.131 ±       1.124    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1631.864 ±     799.046  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     20128.125 ±    8493.963    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Old_Gen                                        128  thrpt    5         1.192 ±      10.267  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Old_Gen.norm                                   128  thrpt    5        15.336 ±     132.047    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.825 ±       8.886  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        22.273 ±     107.898    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        27.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        89.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                      128  thrpt    5    153381.831 ±    4911.094   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       921.393 ±      41.270  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9452.842 ±     144.920    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       896.551 ±     546.210  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9192.597 ±    5464.082    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.309 ±       5.481  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        13.485 ±      56.455    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        14.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        43.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                     128  thrpt    5    227232.004 ±    5966.343   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       158.441 ±      44.445  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1097.600 ±     336.544    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       116.598 ±     622.405  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       810.272 ±    4319.719    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.058 ±       0.495    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         2.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         9.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                          128  thrpt    5     81583.702 ±    6228.412   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2591.420 ±      94.771  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     49987.694 ±    2657.186    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2529.442 ±     690.174  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     48808.871 ±   14468.400    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.684 ±       5.401  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        13.572 ±     107.460    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        38.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        59.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                            128  thrpt    5    241309.191 ±    3077.999   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1571.939 ±      66.487  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10249.517 ±     345.183    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1574.621 ±     566.980  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     10266.949 ±    3684.467    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.729 ±       3.334  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.770 ±      21.825    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        24.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        36.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                     128  thrpt    5    768010.375 ±   14584.938   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       612.035 ±      34.384  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1254.086 ±      80.235    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       581.020 ±     550.011  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1190.976 ±    1133.354    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.009 ±       0.073    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        14.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                    128  thrpt    5    681602.634 ±   14021.770   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       540.026 ±      36.022  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1246.731 ±      69.315    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       526.215 ±     695.086  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1213.818 ±    1591.534    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.015 ±       0.046  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.034 ±       0.108    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        29.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    670827.305 ±   30052.846   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         4.295 ±      34.472  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        10.277 ±      82.617    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                         128  thrpt    5    608261.228 ±   23872.641   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1508.818 ±      50.479  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      3903.569 ±     105.167    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1447.911 ±     693.262  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3746.017 ±    1792.940    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.502 ±       4.254  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.307 ±      11.080    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        39.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                            128  thrpt    5     41222.082 ±    9064.909   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2023.675 ±     248.216  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     77567.858 ±   26998.671    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1973.511 ±     545.222  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     75624.506 ±   31444.667    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.986 ±      13.752  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        79.263 ±     547.266    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        31.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        94.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                      128  thrpt    5    303308.451 ±   11801.817   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       320.902 ±      13.017  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1664.875 ±      29.993    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       325.411 ±       1.414  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1688.391 ±      63.909    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.249 ±       1.968  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.285 ±      10.162    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        21.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                     128  thrpt    5    126839.863 ±    5043.830   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1178.189 ±      54.805  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     14616.234 ±     278.798    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1090.016 ±     666.443  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     13522.951 ±    8260.765    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.258 ±       0.699    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        17.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        35.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                    128  thrpt    5    555157.439 ±   33287.511   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       371.275 ±      17.820  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1052.570 ±      24.402    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       328.433 ±       1.574  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       931.258 ±      58.975    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.012 ±       0.104    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        18.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                         128  thrpt    5     51608.946 ±    4130.091   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      2277.516 ±     199.954  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     69470.967 ±    9138.939    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2240.867 ±     585.561  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     68342.121 ±   18303.877    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.750 ±       8.873  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        54.214 ±     274.487    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        56.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                           128  thrpt    5     93891.811 ±    3527.678   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       751.653 ±      33.862  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     12597.807 ±     141.738    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5       784.255 ±     683.117  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     13142.100 ±   11388.163    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.873 ±       5.821  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        14.573 ±      97.374    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        46.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                     128  thrpt    5    122186.673 ±    2112.405   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       463.786 ±      21.003  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5      5973.483 ±     189.347    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       452.868 ±     682.409  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5828.733 ±    8728.925    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.582 ±       4.953  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         7.482 ±      63.619    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        23.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                    128  thrpt    5    106693.541 ±    2135.098   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       405.072 ±      17.634  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      5975.353 ±     313.686    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       389.511 ±     559.674  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      5747.391 ±    8288.406    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.017 ±       0.070  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.246 ±       1.039    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        25.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                   128  thrpt    5    124053.719 ±    1109.055   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       470.682 ±      17.410  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5970.463 ±     187.378    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       459.661 ±     692.972  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5829.638 ±    8774.969    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.111 ±       0.775  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.414 ±       9.860    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        28.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    121174.533 ±    5629.712   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5       366.218 ±      42.500  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5      4755.568 ±     438.725    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                   128  thrpt    5       393.377 ±     564.057  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5103.578 ±    7218.959    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.173 ±       1.312  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         2.251 ±      17.070    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                  128  thrpt    5        26.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                          128  thrpt    5     12994.990 ±    4113.180   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2177.180 ±     392.126  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    265958.701 ±  135193.534    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2127.603 ±     627.930  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    260324.601 ±  162977.692    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         7.799 ±      48.579  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      1051.825 ±    6804.655    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                128  thrpt    5        35.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                 128  thrpt    5       123.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                   128  thrpt    5     13591.723 ±     903.979   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1966.359 ±     163.339  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    227637.096 ±    8276.366    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                  128  thrpt    5         0.003 ±       0.024  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm             128  thrpt    5         0.335 ±       2.884    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Metaspace                               128  thrpt    5         0.008 ±       0.069  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                          128  thrpt    5         0.946 ±       8.146    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1892.431 ±     580.393  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    218935.553 ±   56791.849    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                              128  thrpt    5         0.573 ±       4.933  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                         128  thrpt    5        68.046 ±     585.897    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.119 ±       8.054  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       129.596 ±     933.406    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        31.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        95.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                  128  thrpt    5    224229.849 ±   14890.683   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       599.985 ±      58.152  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      4210.312 ±     195.395    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       584.988 ±     560.872  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      4096.096 ±    3809.892    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.629 ±       5.324  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         4.331 ±      36.662    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         9.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        30.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                       128  thrpt    5      6744.092 ±     590.925   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1727.274 ±     162.140  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    402981.815 ±    8304.550    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1653.267 ±      64.568  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    385865.086 ±   33134.574    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.149 ±       0.788  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        34.489 ±     181.125    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        25.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        41.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                         128  thrpt    5     32458.629 ±    8804.805   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      2144.736 ±     617.297  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    104629.875 ±   52400.102    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2076.051 ±     998.775  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    101614.850 ±   75471.190    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         7.817 ±      36.377  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       400.077 ±    1865.749    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        36.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                128  thrpt    5       236.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                  128  thrpt    5     36320.595 ±    6963.079   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1994.206 ±     665.741  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     86705.688 ±   38578.619    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1950.506 ±     492.767  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     84877.417 ±   37869.643    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         5.413 ±       9.917  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       236.887 ±     440.976    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5        31.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5       119.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                 128  thrpt    5    314399.772 ±   16470.165   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       716.760 ±      19.936  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      3587.507 ±     103.063    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       658.977 ±       4.229  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3298.526 ±     173.022    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.758 ±       6.486  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.749 ±      32.054    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        10.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        33.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    354438.140 ±    1558.243   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5         2.330 ±      19.965  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        10.357 ±      88.724    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                      128  thrpt    5     30828.914 ±   42621.305   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      2321.697 ±    1972.890  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    128177.008 ±  147431.091    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2238.329 ±    2323.134  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    121513.399 ±  128091.592    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5        13.185 ±      36.999  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       762.305 ±    2127.367    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        44.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5       334.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                              128  thrpt    5    160366.636 ±   20806.281   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2312.811 ±     799.004  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     22664.195 ±    4708.132    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2237.860 ±    1020.798  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21929.924 ±    8069.124    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.750 ±       3.791  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         7.178 ±      35.956    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        34.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                     128  thrpt    5        51.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                        128  thrpt    5    539765.302 ±    8189.092   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       576.821 ±      20.661  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5      1681.524 ±      60.466    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       585.951 ±     561.382  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1708.218 ±    1637.657    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.006 ±       0.054  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.019 ±       0.156    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                       128  thrpt    5    527009.170 ±   41751.797   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5       515.839 ±      33.165  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1540.451 ±      70.647    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       514.428 ±     679.544  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1539.015 ±    2062.998    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.025 ±       0.130    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        14.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                      128  thrpt    5    670026.065 ±   38428.027   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       453.548 ±      51.985  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1065.172 ±     109.166    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       459.659 ±     691.160  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1074.727 ±    1553.438    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.014 ±       0.068  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.033 ±       0.157    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        26.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                           128  thrpt    5    110881.097 ±    1830.970   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      3658.252 ±      95.707  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     51916.233 ±    1196.458    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      3494.383 ±     716.927  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     49586.589 ±    9764.970    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.202 ±       1.383  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.867 ±      19.619    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        52.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        73.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                             128  thrpt    5    243293.276 ±   10882.974   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1744.102 ±      59.597  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     11282.398 ±     364.523    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1706.618 ±     530.908  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     11046.079 ±    3816.583    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.899 ±       7.031  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         5.880 ±      46.005    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        43.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                       128  thrpt    5   1211469.682 ±   76589.218   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       681.950 ±      56.317  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       885.692 ±      42.686    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       716.880 ±     561.055  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       931.299 ±     731.545    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.023 ±       8.456  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.308 ±      10.805    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                             128  thrpt    5        11.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                      128  thrpt    5   1215042.883 ±   80187.898   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5       680.901 ±      39.009  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5       881.849 ±      33.134    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       652.180 ±       7.230  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       844.815 ±      62.128    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.744 ±       6.272  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.962 ±       8.111    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1116597.127 ±   57798.283   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       633.609 ±      46.990  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       893.085 ±      75.889    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       591.952 ±     567.255  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       834.376 ±     800.786    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.742 ±       4.912  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.032 ±       6.778    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        33.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1161938.169 ±   28466.693   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         0.032 ±       0.273  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5         0.044 ±       0.375    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                          128  thrpt    5     39509.037 ±    4110.186   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1950.022 ±     165.608  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     77706.868 ±   10303.700    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1882.754 ±     557.252  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     75050.794 ±   24827.453    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.364 ±       8.100  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        56.116 ±     337.974    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        29.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        62.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                         128  thrpt    5    141796.306 ±    7019.972   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1878.214 ±     659.394  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     20865.562 ±    8357.755    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1854.123 ±    1050.635  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     20599.481 ±   12416.412    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         3.343 ±       8.484  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        37.328 ±      95.963    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                               128  thrpt    5        29.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                128  thrpt    5       112.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                  128  thrpt    5    193214.991 ±    7144.712   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1152.897 ±      48.052  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      9390.522 ±     154.150    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1120.790 ±     653.336  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      9130.939 ±    5369.576    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         2.641 ±       4.970  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        21.540 ±      40.936    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        78.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                 128  thrpt    5    249716.468 ±   14196.730   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1341.167 ±      72.632  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      8451.295 ±     188.880    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1285.756 ±       7.206  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      8103.385 ±     470.259    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.395 ±       5.732  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         8.832 ±      36.312    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        52.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                      128  thrpt    5     99918.606 ±   14458.803   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3347.498 ±     237.578  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     52751.005 ±    4283.511    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3273.282 ±     691.532  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     51522.503 ±    3899.948    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.737 ±       5.636  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        12.352 ±      95.345    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        49.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        76.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                        128  thrpt    5    235668.784 ±    6575.012   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1536.789 ±      33.755  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10261.296 ±     334.126    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1504.282 ±     700.192  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10047.373 ±    4799.005    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.921 ±       5.791  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         6.167 ±      38.806    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        23.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        49.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                 128  thrpt    5    675396.540 ±   21535.821   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       532.783 ±      37.276  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      1241.413 ±      65.624    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       514.573 ±     680.140  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      1198.224 ±    1574.436    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.019 ±       0.103    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        13.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                128  thrpt    5    675489.696 ±   21416.895   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       535.693 ±      21.862  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      1247.948 ±      51.316    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       526.440 ±     694.756  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      1227.647 ±    1633.762    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.040 ±       0.155    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        28.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    691888.407 ±    3990.525   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.030 ±       0.260  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.069 ±       0.591    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                     128  thrpt    5    608566.874 ±   25818.854   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1506.531 ±     101.260  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      3895.141 ±     127.461    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1451.545 ±     713.394  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3753.698 ±    1859.091    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.439 ±       3.470  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.150 ±       9.095    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        22.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        36.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                    128  thrpt    5     11805.793 ±     409.944   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1512.474 ±     156.172  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5    201646.514 ±   26791.172    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1442.961 ±     690.755  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    192367.873 ±   93012.172    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.366 ±       2.666  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        49.237 ±     360.109    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        22.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        32.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                             128  thrpt    5     11763.179 ±     853.821   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      1386.614 ±      89.287  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5    185512.641 ±    8726.206    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space            128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm       128  thrpt    5         0.569 ±       4.899    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                         128  thrpt    5         0.012 ±       0.100  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                    128  thrpt    5         1.581 ±      13.614    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1364.249 ±     563.063  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5    182460.286 ±   71486.457    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                        128  thrpt    5         0.410 ±       3.534  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                   128  thrpt    5        55.858 ±     480.950    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.146 ±       7.393  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       152.693 ±     978.129    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        90.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5    323491.135 ±    5473.484   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      2172.501 ±      39.348  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     10568.801 ±     311.087    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      2044.156 ±     521.529  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      9942.733 ±    2409.347    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.241 ±       1.812  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         1.173 ±       8.795    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        31.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                 128  thrpt    5      9800.074 ±    1222.826   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1729.522 ±     113.194  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5    278085.253 ±   54831.066    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1698.451 ±     532.906  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    272915.576 ±   88716.629    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.233 ±       1.780  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        36.647 ±     280.180    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        26.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                   128  thrpt    5     26847.325 ±    3604.404   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1533.344 ±     708.747  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5     90134.820 ±   49999.434    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1519.557 ±     547.515  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     89236.080 ±   37921.005    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.508 ±      11.850  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       147.088 ±     698.928    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        24.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5       130.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     31413.169 ±    4406.482   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1335.523 ±     583.145  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5     67195.455 ±   38985.984    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1301.186 ±     541.578  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     65380.668 ±   34292.431    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         2.990 ±      13.875  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       154.367 ±     727.069    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5       108.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    778754.379 ±   12573.589   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1449.672 ±      49.004  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      2929.566 ±      80.060    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1380.648 ±     550.014  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      2790.903 ±    1152.821    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.855 ±       4.995  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         1.728 ±      10.098    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        41.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    905574.322 ±   81931.172   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5         1.227 ±      10.297  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         2.177 ±      18.274    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                128  thrpt    5     30500.231 ±    4500.322   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1411.978 ±     508.154  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5     73084.468 ±   35220.494    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1365.742 ±     627.594  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     70639.698 ±   37473.181    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         4.466 ±      19.124  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       235.819 ±    1036.498    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       138.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                        128  thrpt    5     44179.095 ±   14431.083   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      2244.346 ±    1282.160  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     79796.970 ±   31103.050    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      2193.672 ±    1494.206  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     78209.589 ±   49884.599    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         5.560 ±      10.860  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       198.748 ±     392.472    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                              128  thrpt    5        35.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                               128  thrpt    5       153.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                 128  thrpt    5     41260.222 ±    9460.109   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1550.517 ±     363.990  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     59415.637 ±   25279.497    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1507.006 ±     554.768  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     57670.831 ±   26299.835    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         2.773 ±      11.106  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       110.014 ±     449.728    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        24.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        85.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                128  thrpt    5    515129.727 ±   74462.657   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1381.877 ±     196.043  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4221.479 ±      84.018    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1311.928 ±      18.929  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4011.972 ±     553.916    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.845 ±       5.268  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.587 ±      15.892    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        20.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        36.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                     128  thrpt    5     21281.902 ±    3635.893   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2075.356 ±     301.998  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    153889.300 ±   48424.884    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2034.012 ±     582.591  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    150996.275 ±   69677.046    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.442 ±       6.077  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       109.422 ±     462.171    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        31.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        60.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                       128  thrpt    5     68752.869 ±    2697.702   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1840.780 ±     140.183  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     42137.493 ±    4651.727    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1831.967 ±     701.606  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     41948.432 ±   16963.611    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.412 ±       7.608  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        32.490 ±     175.969    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                              128  thrpt    5        60.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                128  thrpt    5    202621.507 ±    8517.569   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1583.230 ±      64.081  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     12295.204 ±     166.362    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1502.277 ±     661.738  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     11668.871 ±    5221.644    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.927 ±       5.570  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         7.221 ±      43.417    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                               128  thrpt    5    844491.938 ±   28467.187   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       945.249 ±      73.716  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1761.740 ±     180.241    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       920.739 ±     559.566  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1715.720 ±    1040.201    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.850 ±       5.639  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.585 ±      10.529    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    907554.233 ±    1146.542   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                    128  thrpt    5     93190.054 ±    5263.398   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      1946.621 ±     124.047  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     32870.202 ±     712.735    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1832.435 ±     665.855  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     30929.351 ±   10440.166    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.306 ±       7.865  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        22.423 ±     136.368    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        52.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                        128  thrpt    5     18465.209 ±    1923.756   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1766.560 ±     275.025  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5    150716.918 ±   34966.184    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1713.448 ±     663.556  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    146273.521 ±   66043.808    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         3.868 ±      13.215  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       332.213 ±    1128.728    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                              128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                               128  thrpt    5        83.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                 128  thrpt    5     17711.601 ±    2218.006   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1506.233 ±     310.359  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5    134027.083 ±   40979.537    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1494.110 ±     691.490  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    133004.439 ±   70340.232    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.803 ±       4.132  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        73.484 ±     382.124    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        23.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        50.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                128  thrpt    5    780306.949 ±   29287.329   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      2096.006 ±     120.514  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4227.072 ±     152.885    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      2050.145 ±     562.776  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4134.371 ±    1102.830    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.412 ±       2.011  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.839 ±       4.112    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        31.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                     128  thrpt    5     14510.011 ±     592.316   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      1978.598 ±     119.393  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    214585.569 ±    6274.339    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1895.721 ±     573.459  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    205641.654 ±   63774.894    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.720 ±       5.713  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        78.411 ±     622.608    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        29.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        55.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                       128  thrpt    5     45707.929 ±    4480.635   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1836.712 ±     762.748  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     63204.596 ±   24878.964    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1806.078 ±     605.330  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     62185.947 ±   21185.436    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         3.530 ±       3.296  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       121.722 ±     117.517    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                              128  thrpt    5       165.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                128  thrpt    5     53443.350 ±   10714.738   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1600.044 ±     626.912  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47324.721 ±   25731.166    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1599.268 ±     995.722  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     47407.318 ±   37262.650    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         5.066 ±      20.488  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       149.531 ±     590.082    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5       113.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                               128  thrpt    5    971830.597 ±  176502.621   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       909.627 ±     173.786  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1472.668 ±      22.971    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       921.342 ±     560.321  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1490.820 ±     862.465    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.819 ±       5.253  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.370 ±       8.801    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        34.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1096096.686 ±   28635.461   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         0.195 ±       1.675  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.279 ±       2.399    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                    128  thrpt    5      3722.114 ±    1154.887   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5       885.586 ±    1788.567  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5    389163.320 ±  903954.656    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5       870.393 ±    1855.668  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    382925.195 ±  932004.073    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.465 ±       6.061  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       632.589 ±    2492.233    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5       191.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                             128  thrpt    5    145923.829 ±    6469.478   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2279.431 ±      32.367  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     24582.905 ±    1089.927    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2175.511 ±     682.270  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     23476.396 ±    8207.464    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.246 ±       1.493  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.643 ±      16.040    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        33.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        46.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                       128  thrpt    5    394064.885 ±   18806.308   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       813.208 ±      17.729  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5      3247.930 ±      94.403    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       845.397 ±     682.783  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3381.985 ±    2841.987    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.018 ±       7.227  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         4.006 ±      28.325    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        13.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        40.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                      128  thrpt    5    283948.814 ±   11639.941   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       589.177 ±      22.835  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      3264.776 ±     110.043    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       583.144 ±     559.636  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3234.601 ±    3143.457    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.277 ±       2.249  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.528 ±      12.409    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        18.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                     128  thrpt    5    481561.519 ±   36754.963   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       637.844 ±      70.083  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      2085.180 ±     333.989    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       658.008 ±       3.766  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2150.660 ±     157.053    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.708 ±       4.914  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.298 ±      15.806    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        41.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                          128  thrpt    5    106437.004 ±    3543.089   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3744.549 ±     195.898  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     55351.471 ±    1243.048    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3626.020 ±     651.850  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     53592.995 ±    8636.376    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.732 ±       5.722  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        10.894 ±      85.207    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        54.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        75.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                            128  thrpt    5    213956.217 ±    8199.871   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1849.874 ±      99.013  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     13605.634 ±     429.171    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1836.979 ±     708.323  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     13517.282 ±    5470.979    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.912 ±       7.316  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.806 ±      54.683    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        46.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                      128  thrpt    5    923455.321 ±   24294.695   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       746.711 ±      33.077  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1272.428 ±      69.769    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       717.394 ±     563.005  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1222.873 ±     972.233    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.028 ±       5.313  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.750 ±       9.050    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5        36.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                     128  thrpt    5    598194.735 ±   39870.144   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       482.068 ±      45.787  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1267.959 ±      43.190    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                    128  thrpt    5         0.004 ±       0.034  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm               128  thrpt    5         0.011 ±       0.092    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Metaspace                                 128  thrpt    5         0.010 ±       0.090  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                            128  thrpt    5         0.028 ±       0.243    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       440.959 ±     621.489  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1164.375 ±    1694.670    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.950 ±       8.137  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.575 ±      22.053    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        51.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                    128  thrpt    5    789245.343 ±   77530.950   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       646.526 ±      35.808  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1289.537 ±     107.759    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       658.413 ±       5.299  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1313.449 ±     130.728    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.594 ±       5.042  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.171 ±       9.937    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        36.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    830423.824 ±   62960.068   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.038 ±       0.329  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.072 ±       0.617    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                         128  thrpt    5     35057.707 ±    6175.302   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1668.880 ±     378.666  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     75207.430 ±   31528.697    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1617.398 ±      27.670  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     72741.403 ±   14448.070    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.601 ±       6.868  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        74.738 ±     331.525    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        25.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        63.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                   128  thrpt    5      9201.112 ±     433.088   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                    128  thrpt    5      1272.659 ±      57.862  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                               128  thrpt    5    217639.845 ±    4808.163    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1243.363 ±     556.265  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    212836.883 ±  101928.491    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.447 ±       2.897  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        76.072 ±     491.480    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                          128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                            128  thrpt    5      9130.461 ±     369.876   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                             128  thrpt    5      1185.593 ±      40.016  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    204343.607 ±    3454.459    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1166.770 ±     694.602  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    201124.872 ±  120366.644    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.432 ±       2.704  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        74.563 ±     464.599    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                  128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                   128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                           128  thrpt    5    194275.312 ±    8678.839   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1944.610 ±      98.984  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5     15751.045 ±     349.256    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1876.291 ±     497.784  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     15198.382 ±    4024.078    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.848 ±      10.938  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        15.162 ±      90.467    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                 128  thrpt    5        29.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                  128  thrpt    5        55.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                128  thrpt    5      8920.803 ±     264.838   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                 128  thrpt    5      1396.586 ±      46.562  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                            128  thrpt    5    246367.200 ±    4185.961    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1360.727 ±     543.413  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    240030.641 ±   95006.938    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.487 ±       3.980  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        85.661 ±     699.595    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                       128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                  128  thrpt    5     22494.766 ±    4202.024   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                   128  thrpt    5      1390.411 ±     495.711  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                              128  thrpt    5     97768.008 ±   52400.439    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                          128  thrpt    5      1393.760 ±     689.053  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     98080.831 ±   65041.529    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                      128  thrpt    5         2.307 ±      11.757  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       162.197 ±     827.261    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                         128  thrpt    5        95.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                           128  thrpt    5     24301.441 ±    4626.537   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                            128  thrpt    5      1200.198 ±     644.974  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                       128  thrpt    5     78239.520 ±   55672.112    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1193.370 ±    1056.498  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     78065.910 ±   82557.965    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         2.404 ±      12.213  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5       156.033 ±     806.771    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                 128  thrpt    5        19.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                  128  thrpt    5       105.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                          128  thrpt    5    530594.312 ±   16907.252   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                           128  thrpt    5      1238.487 ±      54.802  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                      128  thrpt    5      3672.724 ±      73.581    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                  128  thrpt    5      1182.570 ±     689.061  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm             128  thrpt    5      3504.460 ±    1964.273    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.880 ±       5.886  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5         2.622 ±      17.592    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                 128  thrpt    5        36.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    620149.273 ±   55420.429   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                   128  thrpt    5         9.262 ±      76.611  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm              128  thrpt    5        24.480 ±     202.890    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                               128  thrpt    5     24496.685 ±    3074.197   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                128  thrpt    5      1241.398 ±     578.913  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                           128  thrpt    5     79885.208 ±   41833.413    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                       128  thrpt    5      1215.337 ±     852.112  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     78060.166 ±   54277.849    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                   128  thrpt    5         5.151 ±      21.229  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       331.403 ±    1349.820    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                     128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                      128  thrpt    5       124.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                       128  thrpt    5     13227.271 ±    1959.380   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1331.999 ±     374.385  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    158906.853 ±   65800.775    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1280.964 ±      11.355  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    152581.543 ±   24321.627    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         3.262 ±      13.256  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       400.080 ±    1678.161    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                             128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                              128  thrpt    5        65.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                128  thrpt    5     13698.539 ±    1408.963   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1225.230 ±     107.707  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5    140755.712 ±    3621.467    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space               128  thrpt    5         0.005 ±       0.041  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm          128  thrpt    5         0.570 ±       4.907    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                            128  thrpt    5         0.013 ±       0.111  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                       128  thrpt    5         1.547 ±      13.321    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1234.487 ±     563.101  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    142089.078 ±   72937.359    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.098 ±       9.271  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       131.628 ±    1112.989    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        83.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                               128  thrpt    5    325894.144 ±   14381.586   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1941.668 ±      95.491  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      9375.748 ±     256.183    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1847.581 ±    1015.141  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8914.977 ±    4641.636    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.794 ±       9.590  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         8.723 ±      46.752    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        60.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                    128  thrpt    5     13444.101 ±     957.687   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1564.124 ±     110.728  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5    183066.229 ±    4939.283    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1505.936 ±     700.315  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    176326.362 ±   83868.950    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.658 ±       2.760  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        78.173 ±     329.433    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        45.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                      128  thrpt    5     34182.656 ±    3850.450   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1560.560 ±     632.913  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     71893.399 ±   31071.819    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1504.038 ±     822.433  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     69296.068 ±   39322.965    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         5.662 ±      17.166  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       259.466 ±     795.450    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                            128  thrpt    5        25.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                             128  thrpt    5       168.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                               128  thrpt    5    128367.674 ±    5695.812   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      2418.895 ±     163.288  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     29648.753 ±     952.184    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      2347.381 ±     610.460  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     28771.948 ±    7250.267    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.011 ±       6.229  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        12.514 ±      77.042    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        36.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        61.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                              128  thrpt    5    862941.551 ±   37588.412   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1221.379 ±      57.129  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      2226.946 ±      28.211    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1183.700 ±     699.555  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      2161.192 ±    1356.490    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.832 ±       5.767  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.528 ±      10.610    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        37.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    951169.663 ±   39030.027   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                   128  thrpt    5    124733.142 ±    3234.351   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      2810.626 ±     116.117  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     35456.792 ±     675.243    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2730.377 ±     524.685  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     34446.174 ±    6674.377    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.311 ±       2.322  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.929 ±      29.316    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        41.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        60.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                           128  thrpt    5     17635.481 ±    2164.909   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1044.274 ±     463.696  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     93489.880 ±   51088.417    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1029.395 ±     554.228  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     92043.686 ±   54992.363    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.694 ±       7.437  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       152.684 ±     676.506    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        16.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        77.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                    128  thrpt    5     17708.220 ±    4730.811   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1069.421 ±    1225.801  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     96461.570 ±  127937.732    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1060.694 ±    1514.127  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     96027.281 ±  154179.618    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.614 ±      13.699  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       152.435 ±    1296.091    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        18.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       183.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                   128  thrpt    5    166948.638 ±    6936.138   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       429.889 ±      15.776  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      4052.690 ±     185.704    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       451.751 ±     681.291  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      4270.019 ±    6581.380    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.157 ±       0.629    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        28.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                        128  thrpt    5     17227.144 ±    3905.805   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1269.210 ±     236.686  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    116544.376 ±   49594.271    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1231.892 ±    1050.153  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    113991.006 ±  124141.620    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.272 ±       7.113  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       118.225 ±     646.451    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        46.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                          128  thrpt    5     64894.018 ±    5981.846   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1887.770 ±      57.870  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     45794.241 ±    4826.721    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1835.415 ±     667.509  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     44568.213 ±   18800.515    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.292 ±      10.407  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        32.599 ±     263.488    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        49.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                   128  thrpt    5     99028.585 ±   10161.936   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1894.050 ±     200.896  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     30092.784 ±     904.226    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1849.856 ±     699.086  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     29448.998 ±   13285.225    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.259 ±       1.794  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         4.135 ±      28.760    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        42.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                  128  thrpt    5    301280.313 ±   18056.504   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       597.083 ±      54.353  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3118.827 ±     256.114    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       526.345 ±     693.888  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      2758.980 ±    3740.996    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.066  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.066 ±       0.347    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        30.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    375490.810 ±   33000.987   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        14.662 ±     119.217  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5        63.479 ±     517.252    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5        51.169 ±     440.580  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5       221.924 ±    1910.832    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.218 ±       1.878  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5         0.946 ±       8.145    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5         1.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                       128  thrpt    5     94620.640 ±    7923.274   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1983.524 ±      44.897  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     33002.758 ±    2655.352    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1895.562 ±     501.141  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     31547.198 ±    9170.990    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.659 ±       4.927  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        11.328 ±      85.180    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        42.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                            128  thrpt    5    195867.682 ±    6293.464   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2528.680 ±     159.834  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     20310.890 ±     659.056    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2440.393 ±     747.230  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19601.900 ±    5914.057    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.616 ±       4.765  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.988 ±      38.643    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        37.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        50.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                      128  thrpt    5    817963.647 ±   54672.533   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       467.500 ±      26.999  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       899.338 ±      52.076    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       454.322 ±     684.080  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       877.185 ±    1360.985    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.014 ±       0.062  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.027 ±       0.119    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        26.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                     128  thrpt    5    414107.196 ±    6439.597   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       371.085 ±       7.328  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1410.358 ±      49.336    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       387.777 ±     556.258  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1474.377 ±    2125.877    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.552 ±       4.664  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.084 ±      17.603    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                    128  thrpt    5   1098219.483 ±   12377.689   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       388.806 ±      12.648  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       557.101 ±      18.499    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       394.058 ±     567.089  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       564.693 ±     813.836    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.011 ±       0.054  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.016 ±       0.077    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                         128  thrpt    5    118172.271 ±    3504.369   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3942.419 ±     169.655  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     52488.038 ±    1288.522    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3762.405 ±     639.601  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     50086.205 ±    7692.038    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.626 ±       4.941  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         8.333 ±      65.798    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        56.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        75.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                           128  thrpt    5    302363.793 ±   13137.145   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1784.633 ±      87.061  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      9287.815 ±     169.621    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1699.884 ±     558.436  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      8845.026 ±    2763.410    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.562 ±       2.794  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.934 ±      14.558    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        26.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        46.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                     128  thrpt    5   1951443.875 ±  142359.706   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       685.186 ±      63.047  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       552.464 ±      15.072    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       717.993 ±     564.094  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       577.802 ±     416.269    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.980 ±       8.284  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.785 ±       6.636    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        39.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                    128  thrpt    5   1874435.761 ±  226845.546   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       668.133 ±      35.159  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       561.325 ±      70.979    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                   128  thrpt    5         0.005 ±       0.047  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm              128  thrpt    5         0.005 ±       0.042    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Metaspace                                128  thrpt    5         0.015 ±       0.130  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                           128  thrpt    5         0.013 ±       0.115    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       652.838 ±      42.487  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       548.729 ±     103.072    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.055 ±       8.931  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.933 ±       7.905    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        60.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                   128  thrpt    5   2199123.744 ±  128248.807   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       777.867 ±      44.966  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       556.645 ±      25.518    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       789.273 ±     694.293  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       564.495 ±     488.915    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.816 ±       5.459  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.582 ±       3.874    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2405474.347 ±  137486.304   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.644 ±       5.544  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.419 ±       3.605    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                        128  thrpt    5     46395.190 ±    5202.092   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1960.208 ±      75.063  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     66534.154 ±    8526.663    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1880.952 ±     515.123  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     63871.545 ±   20656.776    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.398 ±       7.952  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        49.010 ±     280.876    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        67.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                             128  thrpt    5     17651.297 ±    2859.934   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2079.021 ±     488.968  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    185785.285 ±   65953.453    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2059.568 ±     750.719  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    184098.463 ±   85161.805    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.791 ±      15.027  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       161.838 ±    1358.394    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        33.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        68.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                      128  thrpt    5     96047.775 ±    3166.013   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1059.168 ±      53.865  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     17352.521 ±     739.618    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1038.273 ±     548.653  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     17012.419 ±    9064.295    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.990 ±       6.226  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        16.367 ±     103.268    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        16.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        27.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                     128  thrpt    5    275237.990 ±   10682.775   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       926.978 ±      61.285  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      5299.997 ±     285.378    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       906.080 ±     550.950  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5183.164 ±    3210.824    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.213 ±       6.178  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         6.895 ±      35.100    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        45.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                          128  thrpt    5     16747.735 ±    2935.513   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2419.207 ±    1057.479  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    227495.153 ±  100707.666    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space                         128  thrpt    5         0.004 ±       0.035  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm                    128  thrpt    5         0.404 ±       3.474    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace                                      128  thrpt    5         0.012 ±       0.103  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace.norm                                 128  thrpt    5         1.194 ±      10.284    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2347.556 ±    1112.886  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    220846.646 ±  107422.883    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen                                     128  thrpt    5         3.632 ±      31.275  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm                                128  thrpt    5       362.683 ±    3122.806    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.304 ±       7.220  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       121.493 ±     667.674    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        38.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5       141.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                            128  thrpt    5     40213.625 ±    3476.839   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      3219.591 ±     223.362  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    126068.720 ±   18864.539    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      3131.485 ±     611.552  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    122657.134 ±   31771.497    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.461 ±       2.439  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        18.456 ±      99.312    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        47.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        67.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                     128  thrpt    5    144718.507 ±    4208.515   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      2013.126 ±     102.197  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     21888.693 ±     626.603    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1993.019 ±      96.108  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     21670.233 ±     625.633    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.154 ±       0.725  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.687 ±       7.989    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        30.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        44.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                    128  thrpt    5    248890.954 ±    7871.727   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       821.346 ±      33.225  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      5192.889 ±     212.217    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       790.412 ±     698.106  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      4999.641 ±    4466.250    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.833 ±       6.709  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         5.243 ±      42.224    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    281191.046 ±    1406.674   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.382 ±       2.016  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         2.138 ±      11.269    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                         128  thrpt    5     59330.229 ±    4919.720   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      3904.572 ±     247.635  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    103555.437 ±    2954.721    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3754.722 ±     554.949  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     99581.652 ±   13673.883    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.636 ±       4.814  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        17.443 ±     132.608    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        56.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        77.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                        128  thrpt    5     36396.615 ±   10149.281   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1885.380 ±     675.463  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     82156.103 ±   48280.241    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1860.639 ±     779.675  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     81285.116 ±   58038.963    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         6.877 ±      15.163  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       303.615 ±     689.898    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                              128  thrpt    5        30.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                               128  thrpt    5       102.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                 128  thrpt    5     36487.277 ±   16648.705   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1237.409 ±    1027.089  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     53071.018 ±   26852.227    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1227.209 ±    1026.604  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     52774.051 ±   33282.543    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.495 ±       7.798  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        65.838 ±     355.819    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        19.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        54.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                128  thrpt    5    650302.602 ±   54680.863   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1751.722 ±      89.477  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4239.096 ±     276.766    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1648.469 ±      43.857  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      3989.670 ±     321.448    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.793 ±       6.608  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         1.990 ±      16.592    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        36.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                     128  thrpt    5     33564.575 ±    7340.961   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2050.246 ±     626.670  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     96056.504 ±   14503.004    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2020.369 ±    1006.151  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     94651.172 ±   38342.324    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         3.722 ±      10.166  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       179.006 ±     513.860    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        33.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                            128  thrpt    5       130.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                       128  thrpt    5     94121.959 ±    2943.274   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      2106.672 ±      81.760  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     35219.977 ±     897.043    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      2044.043 ±     520.824  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     34169.302 ±    8335.515    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.392 ±       2.844  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         6.512 ±      47.303    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                             128  thrpt    5        31.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                              128  thrpt    5        46.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                128  thrpt    5    244598.160 ±    9603.990   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1692.295 ±      80.437  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10887.008 ±     297.649    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1636.725 ±     878.518  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10524.115 ±    5413.531    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.973 ±       6.808  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         6.338 ±      44.483    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        45.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                               128  thrpt    5   1101241.122 ±   52042.557   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       939.867 ±      29.378  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1343.122 ±      43.033    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       854.646 ±     698.305  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1220.384 ±     977.549    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.848 ±       5.585  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.209 ±       7.961    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        13.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        34.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1177924.710 ±   65108.107   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         1.280 ±       9.998  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         1.750 ±      13.712    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                    128  thrpt    5    238385.780 ±    4513.162   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      2533.752 ±     109.895  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     16722.860 ±     594.682    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      2460.509 ±     736.198  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     16241.869 ±    4987.323    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.275 ±       2.055  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.803 ±      13.473    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        37.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        61.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                      128  thrpt    5     54732.621 ±   16672.959   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1594.625 ±     594.619  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     45960.338 ±   16556.879    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                     128  thrpt    5         0.005 ±       0.042  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm                128  thrpt    5         0.160 ±       1.378    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace                                  128  thrpt    5         0.013 ±       0.113  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                             128  thrpt    5         0.432 ±       3.724    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1557.709 ±     902.039  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44808.531 ±   21785.091    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                                 128  thrpt    5         2.285 ±      19.677  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                            128  thrpt    5        75.233 ±     647.780    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         3.085 ±      21.259  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        98.151 ±     702.641    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        26.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5       122.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                     128  thrpt    5    791619.171 ±   44991.455   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1592.572 ±      62.064  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3165.888 ±     102.485    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1512.334 ±     684.774  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3008.067 ±    1426.756    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.802 ±       5.381  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.627 ±      10.970    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        39.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                          128  thrpt    5     43532.691 ±   14443.700   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2557.308 ±     646.361  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     92951.355 ±   37900.456    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2444.422 ±     604.104  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     89054.964 ±   45880.344    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.862 ±       6.614  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        68.458 ±     243.874    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        37.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        65.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                     128  thrpt    5    405701.342 ±   13665.978   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1055.823 ±      29.916  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      4095.225 ±      65.251    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       976.230 ±      27.630  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3786.632 ±     144.855    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.258 ±       1.995  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.991 ±       7.638    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        15.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        23.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1592739.358 ±  137545.707   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       960.413 ±      80.191  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       948.644 ±      15.546    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       919.101 ±     562.403  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       909.636 ±     594.430    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.806 ±       5.317  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.805 ±       5.327    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        35.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1740212.510 ±  134895.117   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.222 ±       1.912  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.199 ±       1.714    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                         128  thrpt    5    366656.178 ±   15517.008   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2325.716 ±     118.319  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9979.674 ±     256.670    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2262.930 ±     546.115  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9713.190 ±    2509.362    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.488 ±       3.627  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.126 ±      15.849    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        51.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                           128  thrpt    5     83630.029 ±    9167.126   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1807.990 ±     528.651  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     34092.453 ±   13496.751    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1744.504 ±     655.188  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     32893.195 ±   14997.143    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         3.110 ±      16.542  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        59.990 ±     322.646    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        58.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                    128  thrpt    5     90430.212 ±   21754.956   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1334.350 ±     748.373  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     23195.287 ±   10525.547    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1304.855 ±     867.624  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     22707.858 ±   13755.961    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.062 ±       7.450  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        36.197 ±     136.481    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        20.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        44.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                   128  thrpt    5    102227.334 ±    8682.029   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1336.704 ±     550.763  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     20622.034 ±   10380.543    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1314.170 ±     551.384  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     20276.861 ±   10423.322    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.423 ±      14.030  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        37.726 ±     216.837    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        21.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        67.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                        128  thrpt    5     59544.349 ±   15281.990   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2411.112 ±     107.950  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     63943.874 ±   16674.736    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2391.248 ±     472.976  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     63624.335 ±   31372.545    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.747 ±       3.671  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        20.804 ±     105.971    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        36.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        58.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                          128  thrpt    5    157660.811 ±    3009.217   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1484.144 ±      32.657  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     14814.247 ±     200.422    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1444.125 ±     661.250  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     14414.393 ±    6580.007    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.287 ±       1.512  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         2.871 ±      15.145    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        22.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        32.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                   128  thrpt    5    393099.547 ±   20849.935   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       504.976 ±      29.258  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2021.581 ±     131.058    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       449.888 ±     677.679  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1807.034 ±    2796.844    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.008 ±       0.053  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.033 ±       0.208    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        12.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                  128  thrpt    5   1044501.294 ±   49792.605   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1336.920 ±      69.152  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      2014.017 ±      20.910    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1314.200 ±      16.409  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1980.099 ±     114.909    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.863 ±       4.984  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.319 ±       7.646    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        20.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        38.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1137036.658 ±   33081.029   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                       128  thrpt    5    313909.521 ±    8960.445   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       957.187 ±      52.634  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      4797.523 ±     165.400    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       894.928 ±     553.922  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4482.556 ±    2701.642    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.059 ±       4.639  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.276 ±      23.072    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        14.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        45.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                       128  thrpt    5    141788.170 ±    4954.517   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1846.248 ±     565.272  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     20500.072 ±    6911.400    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1747.506 ±     667.297  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     19407.627 ±    8051.987    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.049 ±      10.050  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        22.946 ±     113.037    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                             128  thrpt    5        27.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                              128  thrpt    5        67.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                128  thrpt    5    215052.853 ±    4073.005   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1223.603 ±      16.078  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5      8954.024 ±      98.003    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1228.015 ±     567.605  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      8986.881 ±    4172.223    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.996 ±       5.480  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         7.261 ±      39.799    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        19.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        43.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                               128  thrpt    5    627093.966 ±   20235.815   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       421.553 ±      14.625  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1057.966 ±      48.106    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       392.595 ±     563.011  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       986.812 ±    1442.508    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.007 ±       0.053  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.017 ±       0.132    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5         6.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        24.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                    128  thrpt    5     97891.670 ±    4864.229   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      3190.214 ±     421.217  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     51289.132 ±    6629.542    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      3135.744 ±     579.653  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     50422.709 ±   10101.262    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.964 ±       4.685  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        15.532 ±      75.488    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        47.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        73.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                      128  thrpt    5    230767.310 ±    4585.706   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1466.623 ±      42.993  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     10000.126 ±     283.686    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1370.198 ±     545.842  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9339.171 ±    3531.718    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.894 ±       5.832  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         6.111 ±      39.902    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        21.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        38.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                               128  thrpt    5    784705.704 ±   12748.145   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       598.487 ±      15.337  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      1200.006 ±      38.991    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       580.426 ±     551.616  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1164.118 ±    1110.527    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.019 ±       0.043  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.038 ±       0.085    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        14.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                              128  thrpt    5   1398439.782 ±   64789.860   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1072.071 ±      30.156  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      1206.457 ±      32.297    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       985.047 ±      13.005  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1108.562 ±      41.121    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.810 ±       4.691  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.902 ±       5.219    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        15.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        35.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   1528999.866 ±    2137.778   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                   128  thrpt    5    617278.584 ±   12354.388   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1511.402 ±      56.233  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5      3852.584 ±      74.911    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1452.528 ±     695.783  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3703.994 ±    1828.722    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.391 ±       3.148  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.002 ±       8.056    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                    128  thrpt    5       919.936 ±      67.961   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1994.074 ±     108.113  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5   3411075.532 ±  261469.190    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1927.174 ±      63.996  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5   3297178.716 ±  333840.601    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.250 ±       3.424  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      2144.655 ±    5829.503    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        73.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                             128  thrpt    5       941.002 ±     111.243   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      2022.533 ±     170.600  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5   3381686.751 ±  148659.496    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1979.948 ±     796.899  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5   3312780.972 ± 1404777.802    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.326 ±       2.369  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       571.578 ±    4197.932    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        45.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5     45449.946 ±    5726.139   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       825.280 ±     481.473  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     28710.280 ±   21121.401    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       821.151 ±    1082.667  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     28690.866 ±   42091.960    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         2.057 ±       7.031  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        70.868 ±     236.939    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        52.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                 128  thrpt    5       872.935 ±     108.119   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1944.552 ±      79.760  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5   3506408.445 ±  342828.491    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1914.054 ±     573.685  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5   3456706.142 ± 1335605.513    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.895 ±       3.126  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5      1640.190 ±    5852.911    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        29.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        50.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                   128  thrpt    5     16642.729 ±    2452.367   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1345.415 ±     606.332  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5    127808.877 ±   79539.832    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1271.509 ±     864.481  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    120888.938 ±   99602.250    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.331 ±       8.135  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       218.147 ±     759.853    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        20.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5        65.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     18839.386 ±    4661.614   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1330.214 ±     794.269  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    112338.946 ±   95289.913    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space           128  thrpt    5         0.004 ±       0.034  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm      128  thrpt    5         0.369 ±       3.175    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Metaspace                        128  thrpt    5         0.011 ±       0.095  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                   128  thrpt    5         1.028 ±       8.849    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1327.327 ±    1026.586  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    111931.204 ±  105783.772    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                       128  thrpt    5         1.375 ±      11.838  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                  128  thrpt    5       128.298 ±    1104.688    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         4.441 ±      13.480  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       386.309 ±    1257.540    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        23.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5       156.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    330423.343 ±   20818.197   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1202.630 ±      64.135  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      5727.647 ±     131.879    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1170.413 ±     679.392  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5579.226 ±    3380.264    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.195 ±       8.643  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         5.701 ±      41.309    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        43.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    429342.894 ±   88113.906   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                128  thrpt    5     17999.406 ±    6451.195   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1386.091 ±     788.172  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5    123375.470 ±  116784.368    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1383.788 ±     921.241  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    123483.877 ±  131649.493    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         6.998 ±      31.279  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       610.520 ±    2710.952    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        24.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       100.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                           128  thrpt    5   1401067.456 ±   14004.762   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5        57.851 ±       4.537  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5        64.979 ±       5.773    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5        51.161 ±     440.513  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        57.731 ±     497.083    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.003 ±       0.022  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.003 ±       0.025    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                128  thrpt    5    128721.550 ±   19759.612   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      4461.127 ±     301.134  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     54585.832 ±    5376.779    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      4305.195 ±     533.676  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     52709.494 ±   10892.503    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.825 ±       4.184  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        10.427 ±      53.619    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        64.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        99.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                           128  thrpt    5   2193545.851 ±   99838.476   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       609.554 ±      44.763  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       437.288 ±      21.143    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       586.563 ±     562.920  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       420.155 ±     395.176    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.761 ±       6.415  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.542 ±       4.568    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                          128  thrpt    5   1937970.570 ±   50335.883   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       537.603 ±       9.463  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       436.559 ±      14.914    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       525.688 ±     695.152  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       427.599 ±     573.318    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.044  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.010 ±       0.036    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        30.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1960832.419 ±    2112.587   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                               128  thrpt    5     55498.439 ±   12461.221   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2073.959 ±     491.704  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     59105.429 ±   27171.377    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2049.755 ±     530.765  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     58478.474 ±   30238.484    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         1.181 ±       6.637  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        35.609 ±     208.390    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        31.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        54.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                            N/A  thrpt    5   1186643.101 ±   50523.812   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      3434.295 ±     187.168  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5      4554.039 ±      96.000    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      3318.258 ±     689.772  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      4402.517 ±    1077.962    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.125 ±       0.765  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.167 ±       1.027    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        50.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        65.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                      N/A  thrpt    5   5298613.522 ±  103216.045   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       331.916 ±      10.180  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5        98.578 ±       2.151    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       324.599 ±       1.166  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        96.407 ±       1.700    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.015 ±       0.093  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.005 ±       0.028    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        18.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                     N/A  thrpt    5   1054860.326 ±   46196.526   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5      1188.577 ±      56.507  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5      1773.268 ±      83.190    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5      1179.091 ±     668.457  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5      1759.551 ±    1010.378    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.221 ±       1.421  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         0.330 ±       2.133    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5        18.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        31.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                    N/A  thrpt    5  10062637.279 ±  450663.890   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       478.171 ±      21.178  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5        74.789 ±       5.165    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       460.664 ±     693.613  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5        72.023 ±     108.134    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.022 ±       0.074  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.004 ±       0.012    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        23.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                         N/A  thrpt    5    749092.081 ±   24099.174   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2784.636 ±      93.715  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5      5849.162 ±     154.776    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2723.179 ±     480.130  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      5721.877 ±    1187.481    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.641 ±       5.342  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         1.365 ±      11.382    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        41.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        65.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                  N/A  thrpt    5      4993.039 ±     338.406   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2492.876 ±     103.645  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    785767.557 ±   32505.514    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2442.034 ±     690.190  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    770400.350 ±  258103.416    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         1.246 ±       7.899  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       401.696 ±    2573.690    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        37.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        63.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                           N/A  thrpt    5      7658.695 ±     293.600   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      3145.828 ±     150.340  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5    646323.719 ±   19978.118    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      3074.408 ±     449.565  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    631769.255 ±  104161.434    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.158 ±       0.872  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        32.626 ±     180.305    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        46.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        72.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                          N/A  thrpt    5     55853.721 ±    2350.763   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       931.711 ±      40.955  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     26248.814 ±     492.203    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       920.185 ±     561.015  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     25945.511 ±   16295.153    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.867 ±       5.115  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        24.311 ±     142.500    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        39.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                 N/A  thrpt    5      5338.844 ±     366.295   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5       957.256 ±      56.045  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    282172.217 ±   11000.706    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.Compressed_Class_Space                                N/A  thrpt    5         0.004 ±       0.034  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.Compressed_Class_Space.norm                           N/A  thrpt    5         1.189 ±      10.236    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.Metaspace                                             N/A  thrpt    5         0.012 ±       0.101  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.Metaspace.norm                                        N/A  thrpt    5         3.563 ±      30.676    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       905.884 ±     562.145  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    267270.069 ±  171472.645    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Old_Gen                                            N/A  thrpt    5         0.461 ±       3.971  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Old_Gen.norm                                       N/A  thrpt    5       139.943 ±    1204.952    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         1.329 ±       6.858  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       395.923 ±    2038.735    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        16.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        81.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                          N/A  thrpt    5      5365.958 ±      54.196   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       583.635 ±      14.533  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5    171167.685 ±    5886.024    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       518.810 ±     683.401  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5    152218.073 ±  201219.495    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         4.885 ±      19.676    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         8.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        21.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                         N/A  thrpt    5      6878.346 ±      26.644   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       228.475 ±      15.777  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     52260.812 ±    3445.158    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       247.049 ±     544.673  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     56489.342 ±  124510.680    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.014 ±       0.121  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         3.213 ±      27.661    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         4.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        15.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5      6970.336 ±      80.445   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5       177.510 ±      12.536  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5     40079.105 ±    2971.395    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         N/A  thrpt    5       182.264 ±     650.580  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    N/A  thrpt    5     41182.063 ±  147042.389    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                     N/A  thrpt    5         0.011 ±       0.094  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                N/A  thrpt    5         2.475 ±      21.314    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5         3.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        N/A  thrpt    5        11.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                            N/A  thrpt    5      9147.605 ±     386.302   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      1923.505 ±     103.656  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5    330899.951 ±    5242.908    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1867.098 ±     576.364  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    321137.912 ±   94989.413    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.575 ±       7.461  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       271.623 ±    1290.779    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        29.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        78.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                      N/A  thrpt    5     17117.711 ±    2665.353   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       476.326 ±     312.722  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5     44066.951 ±   36724.088    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       517.685 ±     683.679  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     47788.933 ±   65288.839    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.313 ±       2.538  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        30.740 ±     250.141    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        31.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     14894.668 ±    1133.687   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5       407.393 ±      37.134  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5     43034.800 ±    2287.472    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       383.810 ±     550.719  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     40477.120 ±   56721.924    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.617 ±       4.509  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5        64.105 ±     468.357    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        11.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     22472.858 ±    3774.219   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       511.019 ±     393.428  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5     36031.926 ±   32844.350    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       521.606 ±     687.121  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     36452.041 ±   46901.878    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.554 ±       3.030  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        38.076 ±     209.636    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        35.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      8512.185 ±     166.730   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2663.757 ±      81.531  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5    492418.812 ±   10493.898    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2584.173 ±     540.274  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5    477765.773 ±  104021.537    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.916 ±       6.447  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5       170.573 ±    1201.744    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        39.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        69.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                           N/A  thrpt    5     11896.956 ±     612.506   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                            N/A  thrpt    5      2230.588 ±      87.433  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                       N/A  thrpt    5    295065.184 ±    4592.334    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2141.516 ±     626.092  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    283304.094 ±   83499.001    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         1.033 ±       7.783  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5       135.709 ±    1022.425    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                 N/A  thrpt    5        33.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                  N/A  thrpt    5        59.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                     N/A  thrpt    5     64829.221 ±    3965.380   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                      N/A  thrpt    5       654.666 ±     206.182  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 N/A  thrpt    5     15909.062 ±    5967.036    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       648.623 ±       4.117  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     15748.025 ±     962.502    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         1.112 ±       6.640  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5        26.960 ±     161.323    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                           N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                            N/A  thrpt    5        38.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     46223.374 ±    6490.910   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                     N/A  thrpt    5       757.083 ±     272.559  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                N/A  thrpt    5     25876.228 ±   13548.756    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       714.094 ±     542.563  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     24483.938 ±   23007.108    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.729 ±       3.854  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        24.413 ±     129.136    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                          N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                           N/A  thrpt    5        24.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5    103947.765 ±    4020.523   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                    N/A  thrpt    5       805.220 ±      13.565  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               N/A  thrpt    5     12190.294 ±     382.074    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       788.115 ±     694.290  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5     11945.013 ±   10824.623    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         0.863 ±       7.101  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5        13.033 ±     107.227    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                         N/A  thrpt    5        12.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                          N/A  thrpt    5        38.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5    134978.079 ±   14981.175   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            N/A  thrpt    5         0.163 ±       1.398  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       N/A  thrpt    5         1.976 ±      16.978    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                        N/A  thrpt    5      9116.071 ±     355.844   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                         N/A  thrpt    5      2406.586 ±     138.955  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                    N/A  thrpt    5    415449.945 ±   13817.176    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      2325.009 ±     868.199  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5    401284.963 ±  143362.185    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.302 ±       1.829  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5        52.672 ±     320.725    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                              N/A  thrpt    5        35.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                               N/A  thrpt    5        58.000                    ms
[info] IntBenchmark.readCirce                                                                      N/A  thrpt    5  11871424.433 ±  587073.416   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      5270.529 ±     265.825  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5       698.580 ±      11.388    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      5078.840 ±     909.122  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       673.041 ±     101.133    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.112 ±       0.238  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.015 ±       0.031    B/op
[info] IntBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        75.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5        97.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                N/A  thrpt    5  43267943.135 ±  876837.353   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                 N/A  thrpt    5         0.304 ±       2.613  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            N/A  thrpt    5         0.011 ±       0.096    B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                      N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                               N/A  thrpt    5  25071662.512 ± 1477098.613   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5         0.016 ±       0.138  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5         0.001 ±       0.009    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJsoniterScala                                                              N/A  thrpt    5  47974612.117 ±  970503.313   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5         0.077 ±       0.662  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5         0.003 ±       0.022    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                 N/A  thrpt    5  31165097.777 ±  570857.498   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                  N/A  thrpt    5       818.963 ±      33.591  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        41.357 ±       2.314    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       791.721 ±     696.862  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        39.983 ±      35.257    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.781 ±       6.067  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.040 ±       0.307    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                       N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                        N/A  thrpt    5        35.000                    ms
[info] IntBenchmark.readPlayJson                                                                   N/A  thrpt    5  25310221.413 ± 1608982.080   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5         0.209 ±       1.799  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5         0.013 ±       0.115    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeCirce                                                                     N/A  thrpt    5  20769529.555 ±  335958.567   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1627.552 ±      19.294  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5       123.313 ±       2.284    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1574.775 ±     580.097  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       119.320 ±      44.246    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.914 ±       6.634  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.070 ±       0.505    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        24.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        43.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                               N/A  thrpt    5  57177906.850 ± 5697828.058   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                N/A  thrpt    5      1206.794 ±      77.925  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           N/A  thrpt    5        33.222 ±       1.503    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1168.333 ±     688.705  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        32.112 ±      17.277    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.989 ±       6.859  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.027 ±       0.186    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                     N/A  thrpt    5        18.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                      N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writeJacksonScala                                                              N/A  thrpt    5  27034073.420 ± 1845629.978   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       572.658 ±      40.632  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5        33.348 ±       4.201    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       581.233 ±     557.916  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        33.936 ±      33.716    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.001 ±       0.004    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5         9.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        14.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  49238654.485 ± 3333605.290   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1032.340 ±      90.013  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        32.991 ±       0.641    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1049.497 ±     552.866  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        33.498 ±      15.544    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.877 ±       6.554  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.028 ±       0.210    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        39.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  65387186.528 ± 1224769.800   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5         0.014 ±       0.114  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5        ≈ 10⁻³                  B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                N/A  thrpt    5  26146891.081 ±  948637.729   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                 N/A  thrpt    5      2063.216 ±      57.312  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       124.185 ±       2.119    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1996.931 ±      57.024  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       120.200 ±       4.990    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.652 ±       5.303  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.039 ±       0.318    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                      N/A  thrpt    5        30.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                       N/A  thrpt    5        42.000                    ms
[info] IntBenchmark.writePlayJson                                                                  N/A  thrpt    5   3647412.278 ±  163087.773   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1509.077 ±      90.883  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5       651.101 ±      20.767    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1490.059 ±     683.675  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       642.509 ±     277.634    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         1.444 ±       4.666  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.627 ±       2.050    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        23.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        63.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    201925.405 ±    4809.524   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      3838.253 ±      45.170  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     29914.062 ±     836.261    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      3693.658 ±     200.587  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     28788.809 ±    2177.077    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.046 ±       0.067  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.356 ±       0.516    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        55.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        69.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     44129.044 ±    6573.489   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      2805.819 ±      72.602  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    100169.645 ±   14727.337    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2733.789 ±     541.595  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     97728.657 ±   33268.880    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.748 ±       4.297  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        27.955 ±     163.427    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        41.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        67.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    229275.609 ±    6516.879   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       840.424 ±      19.023  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      5768.222 ±     178.962    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       845.605 ±     687.231  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5807.188 ±    4789.871    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.183 ±       1.056  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         1.251 ±       7.187    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        13.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        22.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    511859.678 ±   25570.083   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       938.200 ±      22.381  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2884.207 ±      86.923    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       915.133 ±     565.622  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2816.701 ±    1819.043    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.025 ±       4.175  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         3.172 ±      13.085    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        14.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        47.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    569435.927 ±   22461.887   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5       406.025 ±      11.791  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5      1122.054 ±      38.060    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                128  thrpt    5       394.303 ±     565.261  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      1092.872 ±    1623.713    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.008 ±       0.034  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         0.023 ±       0.094    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5         6.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                               128  thrpt    5        26.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     83308.129 ±   22459.130   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1451.416 ±     199.982  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     27576.447 ±   11605.935    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1363.889 ±     552.127  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     25878.862 ±   13164.891    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.820 ±       3.415  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        34.369 ±      62.023    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        21.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        74.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                           128  thrpt    5    410100.002 ±   20069.085   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      3016.491 ±     115.533  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     11576.404 ±     898.169    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2925.805 ±     511.687  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     11229.029 ±    2171.983    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.096 ±       0.287  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.367 ±       1.095    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                 128  thrpt    5        44.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                  128  thrpt    5        65.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                    128  thrpt    5    836883.002 ±   36603.554   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1843.969 ±      40.748  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      3467.230 ±     125.619    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1787.880 ±     726.146  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      3364.076 ±    1476.637    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.112 ±       0.749  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.210 ±       1.398    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        27.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                   128  thrpt    5   1614488.796 ±  106024.046   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      3281.408 ±     175.167  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      3198.387 ±      74.941    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      3155.532 ±     577.207  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3075.000 ±     460.052    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.083 ±       0.188  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.081 ±       0.180    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        47.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        59.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                        128  thrpt    5    183676.320 ±    6514.377   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      4778.801 ±     176.167  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     40940.629 ±     249.381    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      4659.110 ±     545.767  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     39920.241 ±    5194.251    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.104 ±       0.220  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.894 ±       1.910    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        69.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        92.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                          128  thrpt    5    445979.109 ±   12160.340   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1466.415 ±      76.123  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5      5174.309 ±     175.996    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1438.888 ±     694.498  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      5078.294 ±    2485.875    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.866 ±       5.224  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.064 ±      18.476    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                128  thrpt    5        22.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        44.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                   128  thrpt    5    986933.260 ±   38219.546   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       470.049 ±      38.999  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       749.341 ±      39.500    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       450.586 ±     683.534  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       717.456 ±    1076.648    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.013 ±       0.113    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        11.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                  128  thrpt    5   2666752.055 ±  236679.505   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1279.291 ±      82.354  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       755.054 ±      26.129    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1247.859 ±     559.353  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       735.382 ±     286.263    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.823 ±       6.165  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.488 ±       3.661    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        39.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   2946698.724 ±   22730.445   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                       128  thrpt    5    677297.034 ±  203039.959   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1082.187 ±     690.042  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      2556.540 ±    2628.396    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1084.112 ±    1116.558  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      2578.779 ±    3747.634    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.641 ±       7.176  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         6.234 ±      16.838    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        17.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        90.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                      128  thrpt    5     75889.273 ±    8625.450   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                       128  thrpt    5      2249.032 ±      87.483  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                  128  thrpt    5     46670.576 ±    6403.408    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2154.700 ±     655.148  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44754.406 ±   16950.092    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.609 ±       9.146  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        34.526 ±     200.426    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                            128  thrpt    5        33.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                             128  thrpt    5        63.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                               128  thrpt    5    106635.167 ±    3565.933   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                128  thrpt    5      1944.333 ±      53.486  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     28695.378 ±     791.596    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1919.056 ±     547.326  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     28329.875 ±    8533.436    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.477 ±       2.935  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         7.004 ±      43.184    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                      128  thrpt    5        47.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    157103.258 ±    3016.727   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2493.068 ±     116.787  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     24972.034 ±     742.552    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2410.791 ±     696.997  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     24146.000 ±    6802.532    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.996 ±       6.621  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         9.985 ±      66.246    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                    128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                     128  thrpt    5        75.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                   128  thrpt    5     44592.646 ±    1982.609   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                    128  thrpt    5      2551.659 ±     134.370  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                               128  thrpt    5     90048.022 ±    6669.417    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2519.973 ±     676.066  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     88921.358 ±   23651.028    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.749 ±       4.296  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        26.638 ±     153.034    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                         128  thrpt    5        38.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                          128  thrpt    5        64.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    228215.216 ±    4097.400   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                               128  thrpt    5      1034.256 ±      38.190  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5      7130.412 ±     140.749    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       979.898 ±      26.298  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      6756.051 ±     294.852    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.229 ±       1.704  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.576 ±      11.717    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                    128  thrpt    5        15.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                     128  thrpt    5        24.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    576925.931 ±   32498.189   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                              128  thrpt    5       666.902 ±      25.810  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      1819.264 ±     168.503    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       714.131 ±     555.071  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1949.637 ±    1569.307    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.814 ±       6.015  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         2.197 ±      16.223    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                   128  thrpt    5        11.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                    128  thrpt    5        36.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    623305.381 ±    4053.881   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                      128  thrpt    5         6.338 ±       0.039  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                 128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                           128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                  128  thrpt    5     88634.291 ±   10906.271   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                   128  thrpt    5      1468.710 ±     377.076  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                              128  thrpt    5     26141.209 ±   10247.766    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1441.351 ±     697.493  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     25670.013 ±   15010.145    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.655 ±       3.915  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        29.410 ±      68.506    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                        128  thrpt    5        22.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                         128  thrpt    5        67.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                          N/A  thrpt    5   8171726.187 ±  359613.470   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                           N/A  thrpt    5      7208.256 ±     380.460  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                      N/A  thrpt    5      1387.893 ±      15.464    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      6915.327 ±     800.657  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1331.448 ±     129.432    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.167 ±       0.389  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.032 ±       0.077    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                N/A  thrpt    5       102.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                 N/A  thrpt    5       130.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                    N/A  thrpt    5    927708.081 ±   87991.177   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                     N/A  thrpt    5       592.838 ±      55.194  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                N/A  thrpt    5      1005.488 ±      41.143    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       585.266 ±     560.115  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       990.087 ±     915.889    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.025 ±       0.127  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.043 ±       0.218    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                          N/A  thrpt    5         9.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                           N/A  thrpt    5        33.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                   N/A  thrpt    5    436744.589 ±   10168.762   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                    N/A  thrpt    5       965.400 ±      34.880  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                               N/A  thrpt    5      3478.460 ±      64.819    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       973.241 ±      24.543  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5      3506.865 ±     126.674    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         1.003 ±       5.524  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5         3.611 ±      19.901    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                         N/A  thrpt    5        15.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                          N/A  thrpt    5        49.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                  N/A  thrpt    5    804508.954 ±  132622.069   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                   N/A  thrpt    5       733.508 ±     113.681  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              N/A  thrpt    5      1434.681 ±      21.413    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          N/A  thrpt    5       661.158 ±       4.395  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     N/A  thrpt    5      1295.021 ±     222.273    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      N/A  thrpt    5         0.719 ±       5.965  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 N/A  thrpt    5         1.377 ±      11.409    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                        N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                         N/A  thrpt    5        34.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                              N/A  thrpt    5   4348210.989 ±   70398.620   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                               N/A  thrpt    5      2634.186 ±      35.956  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                          N/A  thrpt    5       953.343 ±      18.415    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                      N/A  thrpt    5      2601.489 ±     585.329  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       941.654 ±     223.225    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.154 ±       0.881  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.056 ±       0.318    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                    N/A  thrpt    5        39.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                     N/A  thrpt    5        52.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                        N/A  thrpt    5  29390445.855 ±  639455.865   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                         N/A  thrpt    5      2614.926 ±      92.921  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                    N/A  thrpt    5       140.033 ±       2.822    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                N/A  thrpt    5      2526.692 ±     689.436  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm           N/A  thrpt    5       135.288 ±      35.365    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space            N/A  thrpt    5         0.735 ±       5.968  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm       N/A  thrpt    5         0.039 ±       0.321    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                              N/A  thrpt    5        38.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                               N/A  thrpt    5        57.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                       N/A  thrpt    5    394252.865 ±  102376.258   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                        N/A  thrpt    5      2751.856 ±     480.985  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                   N/A  thrpt    5     10997.451 ±    1068.823    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      2653.952 ±     913.647  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     10586.875 ±    1935.787    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.698 ±       4.882  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         3.092 ±      22.244    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                             N/A  thrpt    5        40.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                              N/A  thrpt    5        67.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                    128  thrpt    5   1468760.123 ±   16417.428   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5        44.973 ±       1.467  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5        48.182 ±       1.568    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.readPlayJson                                                         128  thrpt    5    116640.312 ±    4997.144   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      4166.441 ±     106.866  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     56205.761 ±    1495.817    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4033.687 ±     189.609  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     54421.707 ±    4519.738    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.572 ±       4.429  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         7.648 ±      59.185    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        60.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        88.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                    128  thrpt    5   2160828.570 ±   71491.417   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       598.878 ±      21.309  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       436.117 ±      13.944    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       584.879 ±     557.692  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       426.297 ±     411.083    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.011 ±       0.040  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.008 ±       0.029    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        34.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                   128  thrpt    5   1958134.016 ±  136577.669   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       548.404 ±      27.535  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       440.751 ±      19.864    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       525.562 ±     692.647  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       422.961 ±     563.735    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.023 ±       0.122  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.018 ±       0.098    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        32.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2045311.604 ±    3744.705   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.168 ±       1.442  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.129 ±       1.110    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                        128  thrpt    5     54349.466 ±    6308.158   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1949.876 ±     201.043  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     56539.773 ±   12736.258    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1897.581 ±     539.176  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     54998.750 ±   17540.732    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.454 ±       5.998  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        43.045 ±     181.402    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        70.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5    268927.483 ±   12968.763   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                          128  thrpt    5      1094.258 ±      79.173  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                     128  thrpt    5      6404.155 ±     615.277    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1115.774 ±     689.002  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5      6529.512 ±    4037.509    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.855 ±       4.659  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         5.022 ±      27.320    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                               128  thrpt    5        17.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                128  thrpt    5        42.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                              128  thrpt    5     50271.272 ±    2984.514   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                               128  thrpt    5      2066.271 ±     333.322  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                          128  thrpt    5     64717.733 ±   13840.735    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                      128  thrpt    5      2045.581 ±     519.583  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     64087.001 ±   19822.499    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                  128  thrpt    5         1.097 ±       6.133  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        34.949 ±     196.413    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                    128  thrpt    5        31.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                     128  thrpt    5        54.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5    158720.423 ±     997.713   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                          128  thrpt    5      1597.123 ±      47.851  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                     128  thrpt    5     15833.919 ±     535.228    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1580.974 ±     570.931  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5     15675.149 ±    5724.982    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.125 ±       0.763  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         1.240 ±       7.578    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                               128  thrpt    5        24.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                128  thrpt    5        35.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5    517710.209 ±   32490.015   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                         128  thrpt    5       720.201 ±      43.263  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                    128  thrpt    5      2189.662 ±     181.724    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                128  thrpt    5       657.445 ±       4.636  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      1998.932 ±     134.884    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.773 ±       6.431  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         2.344 ±      19.504    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                              128  thrpt    5        10.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                               128  thrpt    5        36.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    586407.973 ±    3202.885   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm            128  thrpt    5         0.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                      128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                             128  thrpt    5     83214.455 ±   16950.898   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                              128  thrpt    5      1606.897 ±     275.186  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                         128  thrpt    5     30523.400 ±   12283.807    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                     128  thrpt    5      1620.866 ±     884.533  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     30882.501 ±   23214.699    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.880 ±       5.479  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        36.058 ±     106.072    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                   128  thrpt    5        25.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                    128  thrpt    5        77.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                               128  thrpt    5    102616.061 ±    9528.581   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                128  thrpt    5      1615.634 ±     166.035  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                           128  thrpt    5     24774.354 ±     580.685    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                       128  thrpt    5      1564.363 ±     581.089  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     23961.489 ±    7326.816    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.321 ±      10.092  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        20.495 ±     156.476    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                     128  thrpt    5        24.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                      128  thrpt    5        43.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                        128  thrpt    5    153616.224 ±    5209.914   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                         128  thrpt    5       729.066 ±      40.269  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                    128  thrpt    5      7467.070 ±     188.305    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                128  thrpt    5       713.995 ±     557.858  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      7310.028 ±    5616.839    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.306 ±       2.002  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         3.132 ±      20.491    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                               128  thrpt    5        21.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                       128  thrpt    5    340594.407 ±   22457.417   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                        128  thrpt    5      1445.585 ±      93.805  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                   128  thrpt    5      6678.642 ±     155.885    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space               128  thrpt    5      1377.173 ±     549.186  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      6372.980 ±    3015.622    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.869 ±       7.124  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         3.988 ±      32.655    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                             128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                              128  thrpt    5        44.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                            128  thrpt    5     53032.930 ±    4019.464   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                             128  thrpt    5      2187.219 ±      93.200  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                        128  thrpt    5     64925.315 ±    6797.341    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                    128  thrpt    5      2119.432 ±     652.996  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     62960.683 ±   22967.368    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.908 ±       5.099  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        27.531 ±     156.107    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                  128  thrpt    5        32.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                   128  thrpt    5        55.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                       128  thrpt    5    251995.089 ±    5681.636   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                        128  thrpt    5       893.099 ±      30.262  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                   128  thrpt    5      5577.077 ±      74.223    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space               128  thrpt    5       912.492 ±     560.557  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      5697.299 ±    3478.718    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.179 ±       0.905  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         1.121 ±       5.670    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                             128  thrpt    5        14.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                              128  thrpt    5        24.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                      128  thrpt    5    651409.747 ±   46482.884   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                       128  thrpt    5       733.774 ±      38.160  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                  128  thrpt    5      1772.641 ±      41.089    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space              128  thrpt    5       723.861 ±     570.182  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      1753.725 ±    1519.233    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.881 ±       5.272  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.160 ±      13.085    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                            128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                             128  thrpt    5        42.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                              128  thrpt    5    735736.068 ±   12716.217   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate               128  thrpt    5         0.313 ±       2.541  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm          128  thrpt    5         0.673 ±       5.466    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                    128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                           128  thrpt    5     87810.309 ±   23145.614   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                            128  thrpt    5      1656.941 ±     635.376  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                       128  thrpt    5     29951.971 ±   18634.627    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                   128  thrpt    5      1580.048 ±    1051.915  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     28644.539 ±   25378.671    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.722 ±       4.586  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        31.011 ±      77.910    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                 128  thrpt    5        24.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                  128  thrpt    5        54.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                         128  thrpt    5    121130.509 ±   10326.408   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2141.834 ±     793.839  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     27870.782 ±   12280.144    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2073.681 ±     651.328  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     26982.840 ±   10553.022    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.554 ±      11.101  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        33.689 ±     148.339    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                               128  thrpt    5        32.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                128  thrpt    5        65.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                  128  thrpt    5    204937.962 ±   15552.956   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       858.197 ±      66.202  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      6589.482 ±     142.747    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       842.149 ±     683.570  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      6465.763 ±    5218.313    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.187 ±       1.092  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.418 ±       8.221    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        13.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        22.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                 128  thrpt    5    281313.699 ±   10688.031   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1029.929 ±      22.792  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5761.001 ±     137.245    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       980.903 ±      16.835  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5487.042 ±     258.079    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.835 ±       4.779  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         4.686 ±      26.761    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        15.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        39.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                      128  thrpt    5     96503.174 ±   28240.025   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3182.685 ±     569.036  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     51998.184 ±    6882.731    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3125.059 ±     728.122  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     51069.185 ±   11069.618    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.372 ±      11.038  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        39.402 ±     177.901    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        48.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5       104.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                        128  thrpt    5    249381.822 ±    2844.317   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1699.993 ±      34.139  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10726.214 ±     299.939    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1635.721 ±      47.108  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10320.761 ±     396.178    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.919 ±       7.158  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         5.811 ±      45.284    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        25.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        45.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                 128  thrpt    5    823981.856 ±   67426.420   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       448.179 ±      41.281  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       855.904 ±      58.936    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       450.792 ±     681.862  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       861.141 ±    1305.601    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.017 ±       0.105  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.032 ±       0.202    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        12.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                128  thrpt    5    871815.531 ±   47395.059   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       475.617 ±      37.897  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       858.375 ±      46.829    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       459.523 ±     690.321  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       828.826 ±    1237.976    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.015 ±       0.130  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.028 ±       0.237    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        26.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    908283.028 ±   26626.551   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         1.214 ±      10.434  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         2.128 ±      18.296    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                     128  thrpt    5     38387.491 ±    3566.695   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1888.639 ±     168.414  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     77482.128 ±   13204.923    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1820.212 ±     671.414  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     74718.180 ±   31512.686    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.930 ±       8.832  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        80.857 ±     371.478    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        28.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        66.000                    ms
[info] PrimitivesBenchmark.readCirce                                                               N/A  thrpt    5   1091278.997 ±   33009.065   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      2515.638 ±     135.552  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5      3627.503 ±     105.502    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2422.853 ±     702.263  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      3493.967 ±    1017.989    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.101 ±       6.724  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         1.597 ±       9.744    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        37.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        70.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                        N/A  thrpt    5   1842681.527 ±   67867.159   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5      1147.581 ±      58.522  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5       979.925 ±      20.715    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      1112.112 ±     669.159  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5       949.260 ±     557.009    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.250 ±       1.838  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.212 ±       1.555    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        30.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                       N/A  thrpt    5   9737990.904 ±  298934.045   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       303.768 ±      16.364  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5        49.091 ±       2.421    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       248.777 ±     549.369  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5        40.262 ±      89.035    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.017 ±       0.143  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.003 ±       0.024    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        15.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                            N/A  thrpt    5    546998.891 ±   30164.254   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      2644.005 ±     109.214  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5      7606.974 ±     338.083    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      2589.486 ±     541.293  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      7451.190 ±    1648.703    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.666 ±       5.204  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         1.961 ±      15.358    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        39.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        65.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                              N/A  thrpt    5   1967937.675 ±  150707.820   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                               N/A  thrpt    5      1986.514 ±      76.572  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                          N/A  thrpt    5      1588.819 ±      80.299    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1939.066 ±      71.820  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1551.004 ±     116.558    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         1.032 ±       4.528  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.838 ±       3.743    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                    N/A  thrpt    5        30.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                     N/A  thrpt    5        62.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                       N/A  thrpt    5   3019017.632 ±  325393.774   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5      1185.668 ±     136.281  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5       618.047 ±      12.639    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      1172.119 ±     665.919  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5       610.784 ±     333.295    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.096 ±       0.292  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.050 ±       0.151    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        26.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                      N/A  thrpt    5   9017779.427 ±  129320.055   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       762.647 ±      57.869  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5       133.070 ±       9.683    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       787.239 ±     689.252  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       137.302 ±     118.859    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.868 ±       7.252  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.151 ±       1.259    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        41.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5   8864978.320 ±  683117.296   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5       276.841 ±      16.633  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5        49.141 ±       2.605    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       246.637 ±     543.567  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5        43.987 ±      97.390    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.001 ±       0.006    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     N/A  thrpt    5        15.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                           N/A  thrpt    5    502499.715 ±   25485.821   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                            N/A  thrpt    5      2471.348 ±     140.637  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       N/A  thrpt    5      7739.643 ±     216.395    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2450.638 ±     723.652  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      7680.335 ±    2570.192    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.600 ±       4.548  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         1.908 ±      14.489    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                 N/A  thrpt    5        37.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                  N/A  thrpt    5        61.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                128  thrpt    5     94867.513 ±   16538.204   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      2708.672 ±     161.157  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     45026.360 ±   10554.462    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2653.918 ±     556.340  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     44142.727 ±   15188.639    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         3.843 ±      20.227  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        65.373 ±     341.373    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        42.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                       128  thrpt    5       112.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                         128  thrpt    5    142213.524 ±    3350.540   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      2241.057 ±      83.797  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     24797.206 ±     770.832    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2181.514 ±     709.589  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     24136.262 ±    7727.872    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.483 ±       3.759  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         5.346 ±      41.585    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        33.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        49.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                        128  thrpt    5    174333.410 ±    8188.084   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      2651.609 ±     101.013  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     23932.946 ±     657.271    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2589.418 ±     794.098  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     23376.450 ±    7374.895    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.079 ±      12.920  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        18.763 ±     116.966    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        40.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        80.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                             128  thrpt    5     86305.617 ±    8375.079   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3825.995 ±     327.791  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     69750.128 ±    1732.261    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3673.792 ±     909.144  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     66969.017 ±   15052.723    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.828 ±       6.544  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        15.693 ±     124.586    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        55.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        84.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                               128  thrpt    5    252470.009 ±    4493.220   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1741.060 ±      81.550  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     10851.415 ±     372.943    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1705.386 ±     579.066  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10627.397 ±    3487.820    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.912 ±       7.361  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.702 ±      46.040    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                        128  thrpt    5    791291.495 ±   54354.723   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       472.153 ±      38.185  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       939.054 ±      52.385    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       448.634 ±     680.654  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       893.992 ±    1376.331    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.025 ±       0.132  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.049 ±       0.259    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        13.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                       128  thrpt    5    808125.237 ±   31617.701   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       451.728 ±      22.070  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       879.680 ±      36.953    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       457.144 ±     688.388  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       891.444 ±    1357.781    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.011 ±       0.054  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.021 ±       0.104    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        27.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    832060.586 ±   53012.310   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        20.551 ±     103.353  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        39.533 ±     202.192    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                       128  thrpt    5        51.165 ±     440.545  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5        99.593 ±     857.529    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.079 ±       0.680  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.154 ±       1.323    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5         1.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                      128  thrpt    5         5.000                    ms
[info] SetOfIntsBenchmark.writePlayJson                                                            128  thrpt    5     37623.336 ±    4229.689   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1843.525 ±     315.442  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     77218.769 ±   20516.393    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1825.544 ±     500.103  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     76450.294 ±   25054.016    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         3.141 ±      13.508  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       133.649 ±     578.273    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        29.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        99.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                       128  thrpt    5   4107375.984 ±  111038.132   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      3200.528 ±      87.126  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5      1226.139 ±      29.387    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      3075.578 ±     424.559  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1178.182 ±     149.353    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.054 ±       0.108  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.021 ±       0.041    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                             128  thrpt    5        46.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                              128  thrpt    5        58.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                 128  thrpt    5   6347274.955 ±  394310.262   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                  128  thrpt    5      1231.004 ±      67.181  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                             128  thrpt    5       305.182 ±       7.598    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                         128  thrpt    5      1169.368 ±     689.173  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       289.685 ±     164.002    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.029 ±       6.117  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.257 ±       1.536    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                       128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                        128  thrpt    5        44.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                128  thrpt    5   5091668.557 ±  119278.142   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1043.384 ±      66.244  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5       322.466 ±      17.450    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1040.106 ±     542.934  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       321.456 ±     167.376    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.192 ±       0.880  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.059 ±       0.271    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        16.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        24.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                               128  thrpt    5   6518954.605 ±  498591.360   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1265.278 ±      70.466  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5       305.396 ±      11.696    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1250.887 ±     560.782  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       302.021 ±     138.842    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.802 ±       5.606  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.194 ±       1.350    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                    128  thrpt    5   5398042.360 ±  207452.484   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1047.644 ±      60.445  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5       305.398 ±      10.735    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1043.906 ±     563.883  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       304.087 ±     154.334    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.949 ±       5.370  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.276 ±       1.569    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        16.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        39.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                      128  thrpt    5   3559265.734 ±  249249.695   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1973.369 ±     127.787  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5       872.456 ±      45.164    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1911.728 ±     519.005  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       845.712 ±     257.899    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.854 ±       6.997  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.389 ±       3.196    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        29.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        45.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                128  thrpt    5   6695314.863 ±  423865.796   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                 128  thrpt    5       666.727 ±      43.680  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                            128  thrpt    5       156.705 ±       5.639    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                        128  thrpt    5       651.883 ±       5.284  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       153.242 ±       8.700    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.563 ±       4.588  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.130 ±       1.061    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                      128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                       128  thrpt    5        37.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                               128  thrpt    5   6188718.196 ±  783161.192   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       623.695 ±      33.319  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5       158.671 ±      12.777    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space              128  thrpt    5         0.006 ±       0.048  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm         128  thrpt    5         0.002 ±       0.013    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace                           128  thrpt    5         0.015 ±       0.131  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                      128  thrpt    5         0.004 ±       0.035    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       612.860 ±     333.759  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       155.390 ±      69.131    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.065 ±       8.919  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.287 ±       2.404    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        11.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        69.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                              128  thrpt    5   7040398.395 ±  204200.072   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5       699.354 ±      17.151  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5       156.301 ±       1.826    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       658.215 ±       4.452  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       147.113 ±       5.023    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.775 ±       6.447  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.175 ±       1.454    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        33.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   7378922.182 ±   17015.259   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                   128  thrpt    5   6252195.383 ±  348598.085   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5       623.640 ±      38.612  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5       156.921 ±       3.890    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5       589.104 ±     561.089  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       148.394 ±     143.294    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.897 ±       5.542  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.224 ±       1.384    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        31.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   1741291.867 ±   56247.976   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2257.669 ±     105.377  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      2040.146 ±      47.771    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2180.897 ±     709.650  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1970.706 ±     632.370    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.466 ±       3.194  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.422 ±       2.888    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                          128  thrpt    5        33.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                           128  thrpt    5        49.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   2976219.465 ±   79536.842   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                               128  thrpt    5       575.951 ±      32.063  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                          128  thrpt    5       304.507 ±      12.315    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                      128  thrpt    5       586.467 ±     561.100  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       310.061 ±     296.492    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.017 ±       0.071  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.009 ±       0.038    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                    128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                     128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   1858266.728 ±   56518.058   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       380.867 ±      13.001  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5       322.510 ±      15.734    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       386.998 ±     563.779  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       327.309 ±     469.967    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.012 ±       0.072  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.011 ±       0.060    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5         9.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   2295504.335 ±   38933.401   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       442.395 ±      17.220  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5       303.316 ±      15.547    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       395.054 ±     566.404  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       271.140 ±     393.914    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.018 ±       0.097  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.013 ±       0.066    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        19.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   1907954.800 ±   39746.948   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5       370.705 ±      14.349  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5       305.730 ±      14.748    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5       391.404 ±     562.503  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       323.146 ±     470.654    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.008 ±       0.044  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.007 ±       0.036    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                       128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        25.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   2479790.995 ±  108950.133   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1787.272 ±      50.915  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      1134.248 ±      34.288    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1708.022 ±     543.612  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1083.873 ±     339.506    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.842 ±       7.024  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.544 ±       4.545    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                         128  thrpt    5        26.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                          128  thrpt    5        41.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   3532334.899 ±   65140.745   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                              128  thrpt    5       943.923 ±      47.061  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                         128  thrpt    5       420.454 ±      18.924    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                     128  thrpt    5       911.568 ±     560.620  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       405.913 ±     246.542    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.948 ±       7.918  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.423 ±       3.536    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                   128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                    128  thrpt    5        40.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   3341486.261 ±   59772.399   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       892.793 ±      23.918  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       420.447 ±      12.524    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       849.365 ±     692.785  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       400.135 ±     329.191    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.900 ±       5.201  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.425 ±       2.461    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        40.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   3536768.949 ±  153795.392   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5       950.087 ±      43.120  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       422.770 ±      33.666    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5       920.097 ±     561.490  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       409.637 ±     256.128    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.850 ±       5.098  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.377 ±       2.250    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   3859012.114 ±  257348.432   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5         0.738 ±       6.352  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.301 ±       2.589    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   3331538.310 ±  204677.659   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5       892.775 ±      42.448  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5       421.721 ±      21.206    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5       852.995 ±     689.448  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       403.114 ±     329.800    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.892 ±       5.015  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.423 ±       2.400    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        38.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                               N/A  thrpt    5     12168.225 ±    1951.239   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      1601.999 ±     429.639  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5    207633.953 ±   76442.509    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.Compressed_Class_Space                              N/A  thrpt    5         0.003 ±       0.030  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm                         N/A  thrpt    5         0.465 ±       4.002    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.Metaspace                                           N/A  thrpt    5         0.010 ±       0.083  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.Metaspace.norm                                      N/A  thrpt    5         1.289 ±      11.097    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1591.079 ±     262.817  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    205934.703 ±   37737.828    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.669 ±       9.150  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5       219.613 ±    1219.493    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        26.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        80.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                        N/A  thrpt    5     22469.379 ±    1667.796   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5       380.541 ±     159.886  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5     26680.678 ±   12436.254    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       385.925 ±     553.191  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5     27091.880 ±   39932.892    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.156 ±       1.277  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5        11.124 ±      91.101    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        19.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                       N/A  thrpt    5     21536.299 ±     607.556   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       265.557 ±     240.668  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     19432.733 ±   18317.824    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       261.683 ±     563.292  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     19142.809 ±   41211.371    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.057 ±       0.405  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         4.132 ±      29.488    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        18.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                            N/A  thrpt    5      8717.178 ±    1303.039   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      1989.077 ±      50.539  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5    359515.376 ±   56959.428    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1960.674 ±      69.476  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    354338.985 ±   51305.765    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.315 ±       6.187  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       244.203 ±    1158.681    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        30.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        67.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                       N/A  thrpt    5     62763.725 ±    7677.069   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5       928.587 ±     262.568  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     23331.283 ±    8716.949    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       913.531 ±     554.937  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     22966.529 ±   15185.519    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.881 ±       4.039  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5        22.732 ±     106.193    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        14.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        32.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                      N/A  thrpt    5    106813.600 ±    5139.194   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       709.512 ±      34.994  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5     10454.222 ±     599.571    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       723.542 ±     567.935  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     10660.972 ±    8369.985    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.823 ±       5.060  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        12.014 ±      73.929    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        11.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        42.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5    117426.263 ±    1333.536   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5         0.207 ±       1.565  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5         2.775 ±      20.927    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                         128  thrpt    5    369642.490 ±   12255.771   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2131.890 ±      93.987  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5      9076.520 ±     293.907    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2085.292 ±     727.626  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8878.510 ±    3108.214    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.931 ±       4.992  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.996 ±      21.489    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                               128  thrpt    5        32.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                128  thrpt    5        57.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                  128  thrpt    5    981854.865 ±   41941.752   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       694.526 ±      43.636  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1113.123 ±      41.180    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       710.011 ±     553.747  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1137.740 ±     878.842    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.344 ±       1.938  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.559 ±       3.167    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        19.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5   1843610.610 ±   89875.816   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       936.264 ±      39.118  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       799.109 ±      14.759    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       919.653 ±     565.500  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       786.012 ±     507.071    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.810 ±       5.289  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.692 ±       4.512    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        14.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        37.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5    185498.437 ±    3472.649   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      4569.382 ±     158.913  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     38767.364 ±     674.972    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      4439.746 ±     586.944  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     37667.283 ±    4828.589    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.096 ±       0.244  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.814 ±       2.100    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        66.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        92.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                        128  thrpt    5    466030.435 ±    8525.836   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1531.716 ±      48.044  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5      5171.768 ±     134.575    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1450.012 ±     697.140  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4896.246 ±    2364.320    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.054 ±       0.156  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.183 ±       0.528    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                              128  thrpt    5        22.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                               128  thrpt    5        31.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    890956.291 ±   38325.055   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       425.433 ±      30.152  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       751.329 ±      37.884    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       450.632 ±     680.876  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       795.476 ±    1196.632    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.025 ±       0.174  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.044 ±       0.307    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        13.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5   1392477.604 ±  969599.927   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       664.290 ±     474.313  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       750.133 ±      28.701    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       657.335 ±     894.548  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       729.904 ±     703.750    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.767 ±       6.349  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.975 ±       8.136    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        32.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   1690612.785 ±   29512.169   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         2.906 ±      25.018  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         2.726 ±      23.469    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5    638174.879 ±  119403.499   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       961.686 ±     460.797  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      2387.997 ±    1676.999    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5       909.684 ±    1036.848  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2269.707 ±    3031.600    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.931 ±       4.503  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.344 ±      11.237    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        14.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        24.000                    ms
[info] Benchmark result is saved to graalvmee1.json
[success] Total time: 5745 s, completed Apr 29, 2018 3:00:09 AM
