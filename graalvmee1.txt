[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Updating ProjectRef(uri("file:/home/andriy/.sbt/1.0/plugins/"), "global-plugins")...
[info] Done updating.
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Updating ProjectRef(uri("file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project/"), "jsoniter-scala-build")...
[info] Done updating.
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Apr 30, 2018 8:20:47 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:986:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] four warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d12(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e12(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e8(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmee1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49863.502 ops/s
[info] # Warmup Iteration   2: 208572.163 ops/s
[info] # Warmup Iteration   3: 888841.673 ops/s
[info] Iteration   1: 1062595.190 ops/s
[info]                  ·gc.alloc.rate:                   2399.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              3552.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2279.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3376.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.284 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.344 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 1063929.872 ops/s
[info]                  ·gc.alloc.rate:                   2397.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              3545.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2589.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3829.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1075592.435 ops/s
[info]                  ·gc.alloc.rate:                   2441.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              3571.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2290.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3350.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1088824.472 ops/s
[info]                  ·gc.alloc.rate:                   2479.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              3583.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2318.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3351.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1073824.783 ops/s
[info]                  ·gc.alloc.rate:                   2450.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              3591.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3435.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   1072953.350 ±(99.9%) 40766.452 ops/s [Average]
[info]   (min, avg, max) = (1062595.190, 1072953.350, 1088824.472), stdev = 10586.918
[info]   CI (99.9%): [1032186.898, 1113719.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2433.606 ±(99.9%) 135.557 MB/sec [Average]
[info]   (min, avg, max) = (2397.404, 2433.606, 2479.430), stdev = 35.204
[info]   CI (99.9%): [2298.049, 2569.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3568.845 ±(99.9%) 75.946 B/op [Average]
[info]   (min, avg, max) = (3545.143, 3568.845, 3591.806), stdev = 19.723
[info]   CI (99.9%): [3492.899, 3644.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2364.529 ±(99.9%) 493.921 MB/sec [Average]
[info]   (min, avg, max) = (2279.925, 2364.529, 2589.578), stdev = 128.270
[info]   CI (99.9%): [1870.609, 2858.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3468.486 ±(99.9%) 787.978 B/op [Average]
[info]   (min, avg, max) = (3350.505, 3468.486, 3829.319), stdev = 204.635
[info]   CI (99.9%): [2680.508, 4256.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.961 ±(99.9%) 7.177 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.961, 4.284), stdev = 1.864
[info]   CI (99.9%): [≈ 0, 8.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.422 ±(99.9%) 10.631 B/op [Average]
[info]   (min, avg, max) = (0.060, 1.422, 6.344), stdev = 2.761
[info]   CI (99.9%): [≈ 0, 12.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.200, 24.000), stdev = 6.058
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53996.171 ops/s
[info] # Warmup Iteration   2: 1475651.432 ops/s
[info] # Warmup Iteration   3: 1813420.031 ops/s
[info] Iteration   1: 1876090.874 ops/s
[info]                  ·gc.alloc.rate:               1222.803 MB/sec
[info]                  ·gc.alloc.rate.norm:          1025.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1293.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1085.217 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1955986.443 ops/s
[info]                  ·gc.alloc.rate:                   1284.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1033.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1049.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.469 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1991234.828 ops/s
[info]                  ·gc.alloc.rate:                   1283.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              1014.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     778.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1932038.771 ops/s
[info]                  ·gc.alloc.rate:                   1251.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              1018.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1074.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1942831.640 ops/s
[info]                  ·gc.alloc.rate:               1264.327 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1074.898 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1939636.511 ±(99.9%) 161494.109 ops/s [Average]
[info]   (min, avg, max) = (1876090.874, 1939636.511, 1991234.828), stdev = 41939.507
[info]   CI (99.9%): [1778142.402, 2101130.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1261.091 ±(99.9%) 98.116 MB/sec [Average]
[info]   (min, avg, max) = (1222.803, 1261.091, 1284.252), stdev = 25.480
[info]   CI (99.9%): [1162.975, 1359.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1023.202 ±(99.9%) 27.975 B/op [Average]
[info]   (min, avg, max) = (1014.019, 1023.202, 1033.292), stdev = 7.265
[info]   CI (99.9%): [995.227, 1051.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.851 ±(99.9%) 563.834 MB/sec [Average]
[info]   (min, avg, max) = (984.932, 1245.851, 1327.067), stdev = 146.426
[info]   CI (99.9%): [682.018, 1809.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1012.480 ±(99.9%) 506.401 B/op [Average]
[info]   (min, avg, max) = (778.405, 1012.480, 1085.217), stdev = 131.511
[info]   CI (99.9%): [506.079, 1518.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.200 ±(99.9%) 0.999 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.200, 0.583), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 0.801 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.469), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:29:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1408281.426 ops/s
[info] # Warmup Iteration   2: 4416694.817 ops/s
[info] # Warmup Iteration   3: 5137829.170 ops/s
[info] Iteration   1: 5169232.238 ops/s
[info]                  ·gc.alloc.rate:               348.369 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77.878 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 5413693.189 ops/s
[info]                  ·gc.alloc.rate:                   368.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 5321325.857 ops/s
[info]                  ·gc.alloc.rate:               377.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          111.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.327 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 5391433.093 ops/s
[info]                  ·gc.alloc.rate:               367.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96.058 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 5345362.661 ops/s
[info]                  ·gc.alloc.rate:               362.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.084 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5328209.408 ±(99.9%) 369942.833 ops/s [Average]
[info]   (min, avg, max) = (5169232.238, 5328209.408, 5413693.189), stdev = 96072.979
[info]   CI (99.9%): [4958266.575, 5698152.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   364.829 ±(99.9%) 41.345 MB/sec [Average]
[info]   (min, avg, max) = (348.369, 364.829, 377.498), stdev = 10.737
[info]   CI (99.9%): [323.485, 406.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.742 ±(99.9%) 8.601 B/op [Average]
[info]   (min, avg, max) = (106.059, 107.742, 111.643), stdev = 2.234
[info]   CI (99.9%): [99.141, 116.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   380.280 ±(99.9%) 609.276 MB/sec [Average]
[info]   (min, avg, max) = (255.803, 380.280, 657.531), stdev = 158.227
[info]   CI (99.9%): [≈ 0, 989.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   111.897 ±(99.9%) 173.484 B/op [Average]
[info]   (min, avg, max) = (77.878, 111.897, 191.139), stdev = 45.053
[info]   CI (99.9%): [≈ 0, 285.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3734.429 ops/s
[info] # Warmup Iteration   2: 177030.553 ops/s
[info] # Warmup Iteration   3: 405366.407 ops/s
[info] Iteration   1: 427705.298 ops/s
[info]                  ·gc.alloc.rate:                   2357.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              8672.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8435.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.455 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 433444.343 ops/s
[info]                  ·gc.alloc.rate:                   2370.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              8607.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8331.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.907 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 437145.229 ops/s
[info]                  ·gc.alloc.rate:                   2430.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              8746.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2313.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8327.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 425152.475 ops/s
[info]                  ·gc.alloc.rate:                   2366.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              8759.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2336.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8648.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 428153.949 ops/s
[info]                  ·gc.alloc.rate:                   2373.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2354.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8650.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   430320.259 ±(99.9%) 18723.894 ops/s [Average]
[info]   (min, avg, max) = (425152.475, 430320.259, 437145.229), stdev = 4862.536
[info]   CI (99.9%): [411596.365, 449044.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2379.559 ±(99.9%) 111.648 MB/sec [Average]
[info]   (min, avg, max) = (2357.159, 2379.559, 2430.256), stdev = 28.995
[info]   CI (99.9%): [2267.911, 2491.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   8701.271 ±(99.9%) 238.778 B/op [Average]
[info]   (min, avg, max) = (8607.452, 8701.271, 8759.374), stdev = 62.010
[info]   CI (99.9%): [8462.493, 8940.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2318.368 ±(99.9%) 102.989 MB/sec [Average]
[info]   (min, avg, max) = (2292.641, 2318.368, 2354.256), stdev = 26.746
[info]   CI (99.9%): [2215.379, 2421.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   8478.623 ±(99.9%) 623.575 B/op [Average]
[info]   (min, avg, max) = (8327.532, 8478.623, 8650.862), stdev = 161.940
[info]   CI (99.9%): [7855.049, 9102.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.639 ±(99.9%) 4.755 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.639, 2.842), stdev = 1.235
[info]   CI (99.9%): [≈ 0, 5.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.348 ±(99.9%) 17.499 B/op [Average]
[info]   (min, avg, max) = (0.077, 2.348, 10.455), stdev = 4.545
[info]   CI (99.9%): [≈ 0, 19.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 17.000), stdev = 2.950
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34632.424 ops/s
[info] # Warmup Iteration   2: 675728.331 ops/s
[info] # Warmup Iteration   3: 931150.798 ops/s
[info] Iteration   1: 1077244.409 ops/s
[info]                  ·gc.alloc.rate:                   2825.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              4127.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2760.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.238 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 1075392.125 ops/s
[info]                  ·gc.alloc.rate:                   2831.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              4143.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2818.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4125.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.142 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 1066873.590 ops/s
[info]                  ·gc.alloc.rate:                   2846.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              4198.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2876.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4243.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 1101845.955 ops/s
[info]                  ·gc.alloc.rate:                   2874.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              4105.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2621.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3744.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1040448.538 ops/s
[info]                  ·gc.alloc.rate:                   2761.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              4176.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2665.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   1072360.923 ±(99.9%) 85039.858 ops/s [Average]
[info]   (min, avg, max) = (1040448.538, 1072360.923, 1101845.955), stdev = 22084.581
[info]   CI (99.9%): [987321.065, 1157400.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2827.683 ±(99.9%) 160.482 MB/sec [Average]
[info]   (min, avg, max) = (2761.182, 2827.683, 2874.123), stdev = 41.677
[info]   CI (99.9%): [2667.201, 2988.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4150.255 ±(99.9%) 144.544 B/op [Average]
[info]   (min, avg, max) = (4105.140, 4150.255, 4198.613), stdev = 37.538
[info]   CI (99.9%): [4005.711, 4294.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2748.738 ±(99.9%) 406.387 MB/sec [Average]
[info]   (min, avg, max) = (2621.419, 2748.738, 2876.865), stdev = 105.537
[info]   CI (99.9%): [2342.351, 3155.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4035.668 ±(99.9%) 710.753 B/op [Average]
[info]   (min, avg, max) = (3744.201, 4035.668, 4243.725), stdev = 184.580
[info]   CI (99.9%): [3324.915, 4746.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.615 ±(99.9%) 8.070 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.615, 4.270), stdev = 2.096
[info]   CI (99.9%): [≈ 0, 9.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.362 ±(99.9%) 11.793 B/op [Average]
[info]   (min, avg, max) = (0.089, 2.362, 6.238), stdev = 3.063
[info]   CI (99.9%): [≈ 0, 14.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 19.400, 33.000), stdev = 8.142
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 162577.363 ops/s
[info] # Warmup Iteration   2: 2211442.915 ops/s
[info] # Warmup Iteration   3: 2457254.093 ops/s
[info] Iteration   1: 3085253.544 ops/s
[info]                  ·gc.alloc.rate:                   1225.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              625.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     493.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3041987.676 ops/s
[info]                  ·gc.alloc.rate:               1212.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          627.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1299.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 672.059 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 3032983.573 ops/s
[info]                  ·gc.alloc.rate:                   1196.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              620.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     509.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3100496.010 ops/s
[info]                  ·gc.alloc.rate:                   1225.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              622.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     667.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3080422.752 ops/s
[info]                  ·gc.alloc.rate:               1223.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 675.542 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   3068228.711 ±(99.9%) 112438.305 ops/s [Average]
[info]   (min, avg, max) = (3032983.573, 3068228.711, 3100496.010), stdev = 29199.871
[info]   CI (99.9%): [2955790.406, 3180667.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1216.985 ±(99.9%) 47.928 MB/sec [Average]
[info]   (min, avg, max) = (1196.849, 1216.985, 1225.943), stdev = 12.447
[info]   CI (99.9%): [1169.057, 1264.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   624.169 ±(99.9%) 10.114 B/op [Average]
[info]   (min, avg, max) = (620.979, 624.169, 627.528), stdev = 2.627
[info]   CI (99.9%): [614.054, 634.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1177.146 ±(99.9%) 712.818 MB/sec [Average]
[info]   (min, avg, max) = (967.960, 1177.146, 1322.682), stdev = 185.117
[info]   CI (99.9%): [464.328, 1889.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   603.563 ±(99.9%) 359.738 B/op [Average]
[info]   (min, avg, max) = (493.741, 603.563, 675.542), stdev = 93.423
[info]   CI (99.9%): [243.825, 963.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.153 ±(99.9%) 0.879 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.538), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.456 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.279), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 1.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2101694.164 ops/s
[info] # Warmup Iteration   2: 15040429.359 ops/s
[info] # Warmup Iteration   3: 17591723.683 ops/s
[info] Iteration   1: 17195694.281 ops/s
[info]                  ·gc.alloc.rate:                   903.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 16718608.744 ops/s
[info]                  ·gc.alloc.rate:                   882.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              83.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 17773411.740 ops/s
[info]                  ·gc.alloc.rate:                   938.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 18019815.480 ops/s
[info]                  ·gc.alloc.rate:                   941.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 17935437.004 ops/s
[info]                  ·gc.alloc.rate:                   937.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   17528593.450 ±(99.9%) 2138454.538 ops/s [Average]
[info]   (min, avg, max) = (16718608.744, 17528593.450, 18019815.480), stdev = 555349.853
[info]   CI (99.9%): [15390138.912, 19667047.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   920.783 ±(99.9%) 101.549 MB/sec [Average]
[info]   (min, avg, max) = (882.436, 920.783, 941.919), stdev = 26.372
[info]   CI (99.9%): [819.233, 1022.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.655 ±(99.9%) 1.492 B/op [Average]
[info]   (min, avg, max) = (82.250, 82.655, 83.062), stdev = 0.388
[info]   CI (99.9%): [81.163, 84.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   918.670 ±(99.9%) 562.760 MB/sec [Average]
[info]   (min, avg, max) = (657.260, 918.670, 985.942), stdev = 146.147
[info]   CI (99.9%): [355.911, 1481.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   82.693 ±(99.9%) 55.385 B/op [Average]
[info]   (min, avg, max) = (57.397, 82.693, 92.805), stdev = 14.383
[info]   CI (99.9%): [27.308, 138.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.855 ±(99.9%) 5.380 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.855, 3.254), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.476 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.075, 0.288), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 11.000), stdev = 3.493
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2074595.763 ops/s
[info] # Warmup Iteration   2: 16606826.702 ops/s
[info] # Warmup Iteration   3: 20192604.053 ops/s
[info] Iteration   1: 20186738.255 ops/s
[info]                  ·gc.alloc.rate:      0.150 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20190821.102 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 20177987.645 ops/s
[info]                  ·gc.alloc.rate:      10.483 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.817 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 20192114.533 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 20191697.052 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   20187871.717 ±(99.9%) 22806.182 ops/s [Average]
[info]   (min, avg, max) = (20177987.645, 20187871.717, 20192114.533), stdev = 5922.693
[info]   CI (99.9%): [20165065.536, 20210677.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.127 ±(99.9%) 17.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.127, 10.483), stdev = 4.672
[info]   CI (99.9%): [≈ 0, 20.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.166 ±(99.9%) 1.403 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.166, 0.817), stdev = 0.364
[info]   CI (99.9%): [≈ 0, 1.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10056.658 ops/s
[info] # Warmup Iteration   2: 358989.061 ops/s
[info] # Warmup Iteration   3: 980647.173 ops/s
[info] Iteration   1: 1081879.645 ops/s
[info]                  ·gc.alloc.rate:                   2464.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              3582.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2604.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3785.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.370 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.445 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 1104355.808 ops/s
[info]                  ·gc.alloc.rate:                   2495.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              3555.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3265.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1106525.653 ops/s
[info]                  ·gc.alloc.rate:               2532.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          3601.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2315.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3293.703 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 1066879.634 ops/s
[info]                  ·gc.alloc.rate:                   2452.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              3617.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2339.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3450.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1086070.648 ops/s
[info]                  ·gc.alloc.rate:                   2515.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              3645.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3904.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   1089142.278 ±(99.9%) 63606.744 ops/s [Average]
[info]   (min, avg, max) = (1066879.634, 1089142.278, 1106525.653), stdev = 16518.469
[info]   CI (99.9%): [1025535.534, 1152749.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2491.924 ±(99.9%) 129.859 MB/sec [Average]
[info]   (min, avg, max) = (2452.147, 2491.924, 2532.281), stdev = 33.724
[info]   CI (99.9%): [2362.065, 2621.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3600.353 ±(99.9%) 131.295 B/op [Average]
[info]   (min, avg, max) = (3555.439, 3600.353, 3645.338), stdev = 34.097
[info]   CI (99.9%): [3469.058, 3731.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2449.115 ±(99.9%) 717.802 MB/sec [Average]
[info]   (min, avg, max) = (2291.581, 2449.115, 2694.606), stdev = 186.411
[info]   CI (99.9%): [1731.313, 3166.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3539.999 ±(99.9%) 1118.141 B/op [Average]
[info]   (min, avg, max) = (3265.456, 3539.999, 3904.486), stdev = 290.378
[info]   CI (99.9%): [2421.859, 4658.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.503 ±(99.9%) 4.020 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.503, 2.370), stdev = 1.044
[info]   CI (99.9%): [≈ 0, 4.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.731 ±(99.9%) 5.843 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.445), stdev = 1.517
[info]   CI (99.9%): [≈ 0, 6.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 17.000), stdev = 2.950
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125057.387 ops/s
[info] # Warmup Iteration   2: 1774294.509 ops/s
[info] # Warmup Iteration   3: 3671410.397 ops/s
[info] Iteration   1: 3760250.246 ops/s
[info]                  ·gc.alloc.rate:                   3705.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              1550.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3547.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1484.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.613 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.675 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 3848350.623 ops/s
[info]                  ·gc.alloc.rate:                   3744.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              1531.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3611.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1476.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 3821174.871 ops/s
[info]                  ·gc.alloc.rate:                   3765.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              1550.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3680.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1515.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 3795805.301 ops/s
[info]                  ·gc.alloc.rate:                   3723.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              1543.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1400.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 3833963.332 ops/s
[info]                  ·gc.alloc.rate:                   3773.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              1549.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3732.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1532.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   3811908.875 ±(99.9%) 133781.447 ops/s [Average]
[info]   (min, avg, max) = (3760250.246, 3811908.875, 3848350.623), stdev = 34742.617
[info]   CI (99.9%): [3678127.428, 3945690.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   3742.542 ±(99.9%) 110.180 MB/sec [Average]
[info]   (min, avg, max) = (3705.416, 3742.542, 3773.905), stdev = 28.613
[info]   CI (99.9%): [3632.362, 3852.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1545.127 ±(99.9%) 32.359 B/op [Average]
[info]   (min, avg, max) = (1531.020, 1545.127, 1550.975), stdev = 8.404
[info]   CI (99.9%): [1512.768, 1577.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3590.034 ±(99.9%) 529.963 MB/sec [Average]
[info]   (min, avg, max) = (3378.138, 3590.034, 3732.913), stdev = 137.630
[info]   CI (99.9%): [3060.071, 4119.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1482.004 ±(99.9%) 195.543 B/op [Average]
[info]   (min, avg, max) = (1400.616, 1482.004, 1532.270), stdev = 50.782
[info]   CI (99.9%): [1286.461, 1677.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.402 ±(99.9%) 2.608 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.402, 1.613), stdev = 0.677
[info]   CI (99.9%): [≈ 0, 3.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.168 ±(99.9%) 1.093 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.168, 0.675), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   54.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 11.000), stdev = 0.447
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.400, 18.000), stdev = 1.949
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.675 ops/s
[info] # Warmup Iteration   2: 9795241.994 ops/s
[info] # Warmup Iteration   3: 10655519.336 ops/s
[info] Iteration   1: 11407106.912 ops/s
[info]                  ·gc.alloc.rate:                   1437.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 11479030.491 ops/s
[info]                  ·gc.alloc.rate:                   1439.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.682 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 11519544.456 ops/s
[info]                  ·gc.alloc.rate:                   1450.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11486917.272 ops/s
[info]                  ·gc.alloc.rate:                   1429.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              195.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11295586.043 ops/s
[info]                  ·gc.alloc.rate:                   1410.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   11437637.035 ±(99.9%) 344204.052 ops/s [Average]
[info]   (min, avg, max) = (11295586.043, 11437637.035, 11519544.456), stdev = 89388.699
[info]   CI (99.9%): [11093432.983, 11781841.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1433.665 ±(99.9%) 57.413 MB/sec [Average]
[info]   (min, avg, max) = (1410.810, 1433.665, 1450.892), stdev = 14.910
[info]   CI (99.9%): [1376.252, 1491.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   197.249 ±(99.9%) 4.081 B/op [Average]
[info]   (min, avg, max) = (195.837, 197.249, 198.288), stdev = 1.060
[info]   CI (99.9%): [193.167, 201.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1366.628 ±(99.9%) 568.530 MB/sec [Average]
[info]   (min, avg, max) = (1295.745, 1366.628, 1630.634), stdev = 147.645
[info]   CI (99.9%): [798.098, 1935.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   188.004 ±(99.9%) 76.735 B/op [Average]
[info]   (min, avg, max) = (177.017, 188.004, 223.491), stdev = 19.928
[info]   CI (99.9%): [111.269, 264.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.025 ±(99.9%) 8.497 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 1.025, 4.972), stdev = 2.207
[info]   CI (99.9%): [≈ 0, 9.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 1.165 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.141, 0.682), stdev = 0.302
[info]   CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 14.000), stdev = 3.962
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77675.582 ops/s
[info] # Warmup Iteration   2: 2493531.070 ops/s
[info] # Warmup Iteration   3: 3358261.751 ops/s
[info] Iteration   1: 3783997.736 ops/s
[info]                  ·gc.alloc.rate:                   2293.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              953.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2281.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     949.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3710434.776 ops/s
[info]                  ·gc.alloc.rate:                   2241.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     979.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3666212.620 ops/s
[info]                  ·gc.alloc.rate:                   2241.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              962.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3827148.169 ops/s
[info]                  ·gc.alloc.rate:                   2350.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              966.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     965.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 3844786.806 ops/s
[info]                  ·gc.alloc.rate:                   2363.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              966.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     964.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3766516.021 ±(99.9%) 293976.312 ops/s [Average]
[info]   (min, avg, max) = (3666212.620, 3766516.021, 3844786.806), stdev = 76344.715
[info]   CI (99.9%): [3472539.709, 4060492.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2297.893 ±(99.9%) 222.911 MB/sec [Average]
[info]   (min, avg, max) = (2241.046, 2297.893, 2363.042), stdev = 57.889
[info]   CI (99.9%): [2074.982, 2520.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   959.825 ±(99.9%) 28.247 B/op [Average]
[info]   (min, avg, max) = (950.474, 959.825, 966.428), stdev = 7.336
[info]   CI (99.9%): [931.578, 988.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2259.827 ±(99.9%) 574.544 MB/sec [Average]
[info]   (min, avg, max) = (1998.702, 2259.827, 2359.160), stdev = 149.207
[info]   CI (99.9%): [1685.283, 2834.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   943.470 ±(99.9%) 189.250 B/op [Average]
[info]   (min, avg, max) = (857.733, 943.470, 979.790), stdev = 49.148
[info]   CI (99.9%): [754.220, 1132.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.217 ±(99.9%) 0.989 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.217, 0.666), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.411 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.090, 0.277), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.483
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:26:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3368241.784 ops/s
[info] # Warmup Iteration   2: 13237034.467 ops/s
[info] # Warmup Iteration   3: 14928689.145 ops/s
[info] Iteration   1: 14808772.536 ops/s
[info]                  ·gc.alloc.rate:                   1941.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 14839238.775 ops/s
[info]                  ·gc.alloc.rate:                   1937.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 14954912.872 ops/s
[info]                  ·gc.alloc.rate:                   1966.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 15134469.446 ops/s
[info]                  ·gc.alloc.rate:               1965.526 MB/sec
[info]                  ·gc.alloc.rate.norm:          204.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1994.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 207.398 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 14463524.778 ops/s
[info]                  ·gc.alloc.rate:                   1912.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   14840183.681 ±(99.9%) 948358.139 ops/s [Average]
[info]   (min, avg, max) = (14463524.778, 14840183.681, 15134469.446), stdev = 246285.597
[info]   CI (99.9%): [13891825.542, 15788541.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1944.944 ±(99.9%) 85.940 MB/sec [Average]
[info]   (min, avg, max) = (1912.917, 1944.944, 1966.877), stdev = 22.318
[info]   CI (99.9%): [1859.004, 2030.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.265 ±(99.9%) 5.487 B/op [Average]
[info]   (min, avg, max) = (204.385, 206.265, 208.137), stdev = 1.425
[info]   CI (99.9%): [200.777, 211.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1920.582 ±(99.9%) 588.247 MB/sec [Average]
[info]   (min, avg, max) = (1648.549, 1920.582, 2009.161), stdev = 152.766
[info]   CI (99.9%): [1332.335, 2508.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   203.776 ±(99.9%) 67.317 B/op [Average]
[info]   (min, avg, max) = (173.474, 203.776, 218.609), stdev = 17.482
[info]   CI (99.9%): [136.459, 271.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.760 ±(99.9%) 6.278 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.760, 3.677), stdev = 1.630
[info]   CI (99.9%): [≈ 0, 7.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.081 ±(99.9%) 0.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.081, 0.391), stdev = 0.173
[info]   CI (99.9%): [≈ 0, 0.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 13.000), stdev = 2.387
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6243.820 ops/s
[info] # Warmup Iteration   2: 546946.614 ops/s
[info] # Warmup Iteration   3: 1572633.949 ops/s
[info] Iteration   1: 1712383.143 ops/s
[info]                  ·gc.alloc.rate:                   2950.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              2711.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2951.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2712.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.162 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 1717328.370 ops/s
[info]                  ·gc.alloc.rate:                   2964.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              2716.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2972.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2723.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1720681.754 ops/s
[info]                  ·gc.alloc.rate:                   2983.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2672.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2444.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1662524.388 ops/s
[info]                  ·gc.alloc.rate:                   2900.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              2745.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2550.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1715201.424 ops/s
[info]                  ·gc.alloc.rate:                   2947.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3046.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2795.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1705623.816 ±(99.9%) 93506.405 ops/s [Average]
[info]   (min, avg, max) = (1662524.388, 1705623.816, 1720681.754), stdev = 24283.317
[info]   CI (99.9%): [1612117.410, 1799130.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2949.360 ±(99.9%) 117.972 MB/sec [Average]
[info]   (min, avg, max) = (2900.840, 2949.360, 2983.727), stdev = 30.637
[info]   CI (99.9%): [2831.388, 3067.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   2721.427 ±(99.9%) 62.952 B/op [Average]
[info]   (min, avg, max) = (2704.601, 2721.427, 2745.965), stdev = 16.348
[info]   CI (99.9%): [2658.475, 2784.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2867.441 ±(99.9%) 660.777 MB/sec [Average]
[info]   (min, avg, max) = (2672.677, 2867.441, 3046.488), stdev = 171.602
[info]   CI (99.9%): [2206.664, 3528.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2645.244 ±(99.9%) 552.372 B/op [Average]
[info]   (min, avg, max) = (2444.475, 2645.244, 2795.217), stdev = 143.449
[info]   CI (99.9%): [2092.873, 3197.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.504 ±(99.9%) 3.980 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.504, 2.352), stdev = 1.034
[info]   CI (99.9%): [≈ 0, 4.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.463 ±(99.9%) 3.657 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.463, 2.162), stdev = 0.950
[info]   CI (99.9%): [≈ 0, 4.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 14.000, 17.000), stdev = 2.449
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 153990.122 ops/s
[info] # Warmup Iteration   2: 2294436.968 ops/s
[info] # Warmup Iteration   3: 4105743.080 ops/s
[info] Iteration   1: 4848442.726 ops/s
[info]                  ·gc.alloc.rate:                   2444.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              793.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2585.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.112 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 4984891.525 ops/s
[info]                  ·gc.alloc.rate:                   2491.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              786.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2258.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     712.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 5024273.534 ops/s
[info]                  ·gc.alloc.rate:               2545.507 MB/sec
[info]                  ·gc.alloc.rate.norm:          797.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2603.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 815.481 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 4961062.170 ops/s
[info]                  ·gc.alloc.rate:                   2509.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              796.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2313.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4962097.856 ops/s
[info]                  ·gc.alloc.rate:                   2491.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              790.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     742.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   4956153.562 ±(99.9%) 251969.074 ops/s [Average]
[info]   (min, avg, max) = (4848442.726, 4956153.562, 5024273.534), stdev = 65435.568
[info]   CI (99.9%): [4704184.488, 5208122.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2496.421 ±(99.9%) 140.862 MB/sec [Average]
[info]   (min, avg, max) = (2444.235, 2496.421, 2545.507), stdev = 36.581
[info]   CI (99.9%): [2355.560, 2637.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   792.673 ±(99.9%) 16.970 B/op [Average]
[info]   (min, avg, max) = (786.505, 792.673, 797.307), stdev = 4.407
[info]   CI (99.9%): [775.704, 809.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2420.312 ±(99.9%) 623.321 MB/sec [Average]
[info]   (min, avg, max) = (2258.460, 2420.312, 2603.531), stdev = 161.874
[info]   CI (99.9%): [1796.991, 3043.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   768.765 ±(99.9%) 212.456 B/op [Average]
[info]   (min, avg, max) = (712.960, 768.765, 839.208), stdev = 55.174
[info]   CI (99.9%): [556.309, 981.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.937 ±(99.9%) 5.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.937, 3.427), stdev = 1.474
[info]   CI (99.9%): [≈ 0, 6.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.302 ±(99.9%) 1.842 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.302, 1.112), stdev = 0.478
[info]   CI (99.9%): [≈ 0, 2.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 21.000), stdev = 4.970
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.722 ops/s
[info] # Warmup Iteration   2: 17594509.332 ops/s
[info] # Warmup Iteration   3: 20873425.575 ops/s
[info] Iteration   1: 23813193.588 ops/s
[info]                  ·gc.alloc.rate:               744.723 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42.883 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 24210192.210 ops/s
[info]                  ·gc.alloc.rate:                   756.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 22957474.549 ops/s
[info]                  ·gc.alloc.rate:               723.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44.615 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 23795348.185 ops/s
[info]                  ·gc.alloc.rate:                   762.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 24190335.691 ops/s
[info]                  ·gc.alloc.rate:                   755.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   23793308.845 ±(99.9%) 1954406.255 ops/s [Average]
[info]   (min, avg, max) = (22957474.549, 23793308.845, 24210192.210), stdev = 507553.098
[info]   CI (99.9%): [21838902.590, 25747715.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   748.441 ±(99.9%) 59.350 MB/sec [Average]
[info]   (min, avg, max) = (723.284, 748.441, 762.200), stdev = 15.413
[info]   CI (99.9%): [689.090, 807.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.505 ±(99.9%) 2.056 B/op [Average]
[info]   (min, avg, max) = (49.144, 49.505, 50.407), stdev = 0.534
[info]   CI (99.9%): [47.449, 51.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   716.046 ±(99.9%) 563.964 MB/sec [Average]
[info]   (min, avg, max) = (648.880, 716.046, 978.032), stdev = 146.460
[info]   CI (99.9%): [152.083, 1280.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   47.375 ±(99.9%) 37.425 B/op [Average]
[info]   (min, avg, max) = (42.265, 47.375, 64.681), stdev = 9.719
[info]   CI (99.9%): [9.950, 84.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.960 ±(99.9%) 8.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.960, 4.707), stdev = 2.095
[info]   CI (99.9%): [≈ 0, 9.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.525 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.306), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87844.258 ops/s
[info] # Warmup Iteration   2: 8347838.956 ops/s
[info] # Warmup Iteration   3: 9468561.728 ops/s
[info] Iteration   1: 11147028.632 ops/s
[info]                  ·gc.alloc.rate:               348.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 10701922.510 ops/s
[info]                  ·gc.alloc.rate:               337.385 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47.072 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 10841396.677 ops/s
[info]                  ·gc.alloc.rate:               341.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.657 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 11160317.563 ops/s
[info]                  ·gc.alloc.rate:               350.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.323 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 11162040.596 ops/s
[info]                  ·gc.alloc.rate:               347.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.504 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   11002541.196 ±(99.9%) 833798.261 ops/s [Average]
[info]   (min, avg, max) = (10701922.510, 11002541.196, 11162040.596), stdev = 216534.761
[info]   CI (99.9%): [10168742.934, 11836339.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   345.133 ±(99.9%) 21.085 MB/sec [Average]
[info]   (min, avg, max) = (337.385, 345.133, 350.625), stdev = 5.476
[info]   CI (99.9%): [324.048, 366.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   49.368 ±(99.9%) 0.981 B/op [Average]
[info]   (min, avg, max) = (49.039, 49.368, 49.614), stdev = 0.255
[info]   CI (99.9%): [48.387, 50.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   321.163 ±(99.9%) 4.274 MB/sec [Average]
[info]   (min, avg, max) = (320.100, 321.163, 322.754), stdev = 1.110
[info]   CI (99.9%): [316.889, 325.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   45.950 ±(99.9%) 3.294 B/op [Average]
[info]   (min, avg, max) = (45.191, 45.950, 47.072), stdev = 0.855
[info]   CI (99.9%): [42.655, 49.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:26:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3962647.877 ops/s
[info] # Warmup Iteration   2: 29487318.007 ops/s
[info] # Warmup Iteration   3: 34818867.296 ops/s
[info] Iteration   1: 34948766.041 ops/s
[info]                  ·gc.alloc.rate:                   1096.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 34748228.298 ops/s
[info]                  ·gc.alloc.rate:                   1098.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 34690176.745 ops/s
[info]                  ·gc.alloc.rate:                   1126.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              51.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 35192629.511 ops/s
[info]                  ·gc.alloc.rate:               1100.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43.820 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 34114609.316 ops/s
[info]                  ·gc.alloc.rate:                   1074.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   34738881.982 ±(99.9%) 1542799.370 ops/s [Average]
[info]   (min, avg, max) = (34114609.316, 34738881.982, 35192629.511), stdev = 400660.097
[info]   CI (99.9%): [33196082.612, 36281681.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1099.219 ±(99.9%) 71.261 MB/sec [Average]
[info]   (min, avg, max) = (1074.680, 1099.219, 1126.682), stdev = 18.506
[info]   CI (99.9%): [1027.958, 1170.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.794 ±(99.9%) 2.932 B/op [Average]
[info]   (min, avg, max) = (49.218, 49.794, 51.111), stdev = 0.761
[info]   CI (99.9%): [46.863, 52.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1113.610 ±(99.9%) 690.251 MB/sec [Average]
[info]   (min, avg, max) = (979.935, 1113.610, 1313.983), stdev = 179.256
[info]   CI (99.9%): [423.359, 1803.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   50.502 ±(99.9%) 32.951 B/op [Average]
[info]   (min, avg, max) = (43.820, 50.502, 60.233), stdev = 8.557
[info]   CI (99.9%): [17.551, 83.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.906 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 4.041), stdev = 1.794
[info]   CI (99.9%): [≈ 0, 7.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.313 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.183), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 14.000), stdev = 3.647
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6671819.115 ops/s
[info] # Warmup Iteration   2: 29639309.203 ops/s
[info] # Warmup Iteration   3: 36103371.380 ops/s
[info] Iteration   1: 36162626.726 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 36350892.227 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 37737464.181 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 37732862.371 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 37646200.386 ops/s
[info]                  ·gc.alloc.rate:      3.869 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.162 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   37126009.178 ±(99.9%) 3069460.172 ops/s [Average]
[info]   (min, avg, max) = (36162626.726, 37126009.178, 37737464.181), stdev = 797129.059
[info]   CI (99.9%): [34056549.006, 40195469.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.774 ±(99.9%) 6.662 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.774, 3.869), stdev = 1.730
[info]   CI (99.9%): [≈ 0, 7.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.032 ±(99.9%) 0.278 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.032, 0.162), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27371.941 ops/s
[info] # Warmup Iteration   2: 1417560.723 ops/s
[info] # Warmup Iteration   3: 1954262.274 ops/s
[info] Iteration   1: 2471511.833 ops/s
[info]                  ·gc.alloc.rate:                   3295.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              2098.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2962.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1886.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.500 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 2443170.623 ops/s
[info]                  ·gc.alloc.rate:                   3254.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              2096.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3314.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2135.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 2388309.016 ops/s
[info]                  ·gc.alloc.rate:                   3227.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              2126.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3016.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1987.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 2394101.145 ops/s
[info]                  ·gc.alloc.rate:                   3250.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              2136.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2220.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 2440017.136 ops/s
[info]                  ·gc.alloc.rate:                   3303.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              2130.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3053.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1969.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   2427421.950 ±(99.9%) 136013.810 ops/s [Average]
[info]   (min, avg, max) = (2388309.016, 2427421.950, 2471511.833), stdev = 35322.354
[info]   CI (99.9%): [2291408.141, 2563435.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3266.370 ±(99.9%) 125.112 MB/sec [Average]
[info]   (min, avg, max) = (3227.242, 3266.370, 3303.988), stdev = 32.491
[info]   CI (99.9%): [3141.258, 3391.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2117.703 ±(99.9%) 72.846 B/op [Average]
[info]   (min, avg, max) = (2096.181, 2117.703, 2136.334), stdev = 18.918
[info]   CI (99.9%): [2044.857, 2190.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3145.303 ±(99.9%) 723.454 MB/sec [Average]
[info]   (min, avg, max) = (2962.828, 3145.303, 3378.152), stdev = 187.879
[info]   CI (99.9%): [2421.848, 3868.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2039.887 ±(99.9%) 519.775 B/op [Average]
[info]   (min, avg, max) = (1886.448, 2039.887, 2220.557), stdev = 134.984
[info]   CI (99.9%): [1520.112, 2559.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.504 ±(99.9%) 3.985 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.504, 2.356), stdev = 1.035
[info]   CI (99.9%): [≈ 0, 4.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.322 ±(99.9%) 2.536 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.322, 1.500), stdev = 0.659
[info]   CI (99.9%): [≈ 0, 2.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.800, 17.000), stdev = 1.924
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53003.795 ops/s
[info] # Warmup Iteration   2: 315233.681 ops/s
[info] # Warmup Iteration   3: 392060.960 ops/s
[info] Iteration   1: 369577.415 ops/s
[info]                  ·gc.alloc.rate:                   2188.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              9319.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2233.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9511.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.898 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.340 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 425256.503 ops/s
[info]                  ·gc.alloc.rate:                   2498.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              9247.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2241.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8294.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 413368.738 ops/s
[info]                  ·gc.alloc.rate:                   2470.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              9400.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2599.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9890.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 405270.779 ops/s
[info]                  ·gc.alloc.rate:                   2425.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              9417.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8990.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 411326.149 ops/s
[info]                  ·gc.alloc.rate:                   2466.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              9437.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2342.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8962.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   404959.917 ±(99.9%) 81119.978 ops/s [Average]
[info]   (min, avg, max) = (369577.415, 404959.917, 425256.503), stdev = 21066.601
[info]   CI (99.9%): [323839.939, 486079.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2409.955 ±(99.9%) 486.830 MB/sec [Average]
[info]   (min, avg, max) = (2188.750, 2409.955, 2498.950), stdev = 126.428
[info]   CI (99.9%): [1923.125, 2896.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9364.365 ±(99.9%) 304.731 B/op [Average]
[info]   (min, avg, max) = (9247.555, 9364.365, 9437.335), stdev = 79.138
[info]   CI (99.9%): [9059.634, 9669.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2346.441 ±(99.9%) 572.790 MB/sec [Average]
[info]   (min, avg, max) = (2233.795, 2346.441, 2599.033), stdev = 148.752
[info]   CI (99.9%): [1773.652, 2919.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9129.931 ±(99.9%) 2333.606 B/op [Average]
[info]   (min, avg, max) = (8294.464, 9129.931, 9890.363), stdev = 606.030
[info]   CI (99.9%): [6796.326, 11463.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.609 ±(99.9%) 4.928 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.609, 2.898), stdev = 1.280
[info]   CI (99.9%): [≈ 0, 5.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.579 ±(99.9%) 21.012 B/op [Average]
[info]   (min, avg, max) = (0.080, 2.579, 12.340), stdev = 5.457
[info]   CI (99.9%): [≈ 0, 23.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 16.000), stdev = 2.828
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85799.979 ops/s
[info] # Warmup Iteration   2: 458398.211 ops/s
[info] # Warmup Iteration   3: 668027.796 ops/s
[info] Iteration   1: 864287.741 ops/s
[info]                  ·gc.alloc.rate:                   714.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1300.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1170.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.997 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 846626.061 ops/s
[info]                  ·gc.alloc.rate:               712.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          1324.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:      965.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1794.315 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 815844.933 ops/s
[info]                  ·gc.alloc.rate:                   686.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              1323.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1243.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 815003.458 ops/s
[info]                  ·gc.alloc.rate:               686.292 MB/sec
[info]                  ·gc.alloc.rate.norm:          1325.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1249.061 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 815713.425 ops/s
[info]                  ·gc.alloc.rate:                   681.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              1314.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1253.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.084 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   831495.124 ±(99.9%) 87602.500 ops/s [Average]
[info]   (min, avg, max) = (815003.458, 831495.124, 864287.741), stdev = 22750.091
[info]   CI (99.9%): [743892.624, 919097.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   696.069 ±(99.9%) 61.087 MB/sec [Average]
[info]   (min, avg, max) = (681.281, 696.069, 714.254), stdev = 15.864
[info]   CI (99.9%): [634.981, 757.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1317.565 ±(99.9%) 40.212 B/op [Average]
[info]   (min, avg, max) = (1300.571, 1317.565, 1325.184), stdev = 10.443
[info]   CI (99.9%): [1277.353, 1357.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   709.882 ±(99.9%) 549.879 MB/sec [Average]
[info]   (min, avg, max) = (642.850, 709.882, 965.296), stdev = 142.802
[info]   CI (99.9%): [160.004, 1259.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1342.189 ±(99.9%) 981.997 B/op [Average]
[info]   (min, avg, max) = (1170.554, 1342.189, 1794.315), stdev = 255.022
[info]   CI (99.9%): [360.192, 2324.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 2.744 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 1.646), stdev = 0.713
[info]   CI (99.9%): [≈ 0, 3.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.824 ±(99.9%) 5.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 2.997), stdev = 1.300
[info]   CI (99.9%): [≈ 0, 5.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.140
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:25:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 440843.301 ops/s
[info] # Warmup Iteration   2: 1286222.256 ops/s
[info] # Warmup Iteration   3: 1695865.322 ops/s
[info] Iteration   1: 1682543.882 ops/s
[info]                  ·gc.alloc.rate:                   1151.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              1077.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     922.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1587897.498 ops/s
[info]                  ·gc.alloc.rate:                   1095.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              1085.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1306.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1646584.729 ops/s
[info]                  ·gc.alloc.rate:                   1123.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              1073.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     942.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.875 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1679301.174 ops/s
[info]                  ·gc.alloc.rate:                   1151.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1078.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1626751.745 ops/s
[info]                  ·gc.alloc.rate:                   1128.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              1091.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1644615.805 ±(99.9%) 151374.654 ops/s [Average]
[info]   (min, avg, max) = (1587897.498, 1644615.805, 1682543.882), stdev = 39311.517
[info]   CI (99.9%): [1493241.151, 1795990.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1130.170 ±(99.9%) 89.092 MB/sec [Average]
[info]   (min, avg, max) = (1095.620, 1130.170, 1151.657), stdev = 23.137
[info]   CI (99.9%): [1041.079, 1219.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1081.444 ±(99.9%) 28.316 B/op [Average]
[info]   (min, avg, max) = (1073.768, 1081.444, 1091.981), stdev = 7.354
[info]   CI (99.9%): [1053.128, 1109.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1116.455 ±(99.9%) 693.753 MB/sec [Average]
[info]   (min, avg, max) = (981.516, 1116.455, 1318.331), stdev = 180.166
[info]   CI (99.9%): [422.702, 1810.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1071.641 ±(99.9%) 757.913 B/op [Average]
[info]   (min, avg, max) = (919.563, 1071.641, 1306.549), stdev = 196.828
[info]   CI (99.9%): [313.727, 1829.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.835 ±(99.9%) 5.254 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.835, 3.177), stdev = 1.365
[info]   CI (99.9%): [≈ 0, 6.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.821 ±(99.9%) 5.208 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.821, 3.149), stdev = 1.353
[info]   CI (99.9%): [≈ 0, 6.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 15.000), stdev = 4.970
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8871.742 ops/s
[info] # Warmup Iteration   2: 162083.898 ops/s
[info] # Warmup Iteration   3: 194287.357 ops/s
[info] Iteration   1: 216897.569 ops/s
[info]                  ·gc.alloc.rate:                   3978.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              28863.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3617.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26242.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.141 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.023 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 219030.408 ops/s
[info]                  ·gc.alloc.rate:                   4033.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              28983.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3992.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28691.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.476 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.606 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 223413.095 ops/s
[info]                  ·gc.alloc.rate:                   4139.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              29161.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4023.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28342.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 221328.532 ops/s
[info]                  ·gc.alloc.rate:                   4104.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              29182.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4056.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28845.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 225287.884 ops/s
[info]                  ·gc.alloc.rate:                   4161.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              29073.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3734.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26088.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   221191.498 ±(99.9%) 12892.871 ops/s [Average]
[info]   (min, avg, max) = (216897.569, 221191.498, 225287.884), stdev = 3348.238
[info]   CI (99.9%): [208298.626, 234084.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4083.592 ±(99.9%) 293.874 MB/sec [Average]
[info]   (min, avg, max) = (3978.325, 4083.592, 4161.805), stdev = 76.318
[info]   CI (99.9%): [3789.718, 4377.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   29052.941 ±(99.9%) 507.200 B/op [Average]
[info]   (min, avg, max) = (28863.941, 29052.941, 29182.484), stdev = 131.718
[info]   CI (99.9%): [28545.741, 29560.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3885.038 ±(99.9%) 757.596 MB/sec [Average]
[info]   (min, avg, max) = (3617.068, 3885.038, 4056.961), stdev = 196.745
[info]   CI (99.9%): [3127.442, 4642.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27642.265 ±(99.9%) 5241.190 B/op [Average]
[info]   (min, avg, max) = (26088.865, 27642.265, 28845.680), stdev = 1361.120
[info]   CI (99.9%): [22401.075, 32883.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.357 ±(99.9%) 2.415 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.357, 1.476), stdev = 0.627
[info]   CI (99.9%): [≈ 0, 2.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.561 ±(99.9%) 17.357 B/op [Average]
[info]   (min, avg, max) = (0.291, 2.561, 10.606), stdev = 4.508
[info]   CI (99.9%): [≈ 0, 19.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   58.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 18.000, 20.000), stdev = 1.581
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114220.646 ops/s
[info] # Warmup Iteration   2: 390970.909 ops/s
[info] # Warmup Iteration   3: 424828.842 ops/s
[info] Iteration   1: 463289.062 ops/s
[info]                  ·gc.alloc.rate:                   1513.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              5140.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4453.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.500 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 457201.272 ops/s
[info]                  ·gc.alloc.rate:                   1504.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              5178.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5604.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.368 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 472540.600 ops/s
[info]                  ·gc.alloc.rate:                   1552.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              5168.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4331.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 471051.031 ops/s
[info]                  ·gc.alloc.rate:                   1546.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              5168.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5458.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 477281.953 ops/s
[info]                  ·gc.alloc.rate:               1581.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          5212.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5427.339 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   468272.784 ±(99.9%) 30715.608 ops/s [Average]
[info]   (min, avg, max) = (457201.272, 468272.784, 477281.953), stdev = 7976.746
[info]   CI (99.9%): [437557.175, 498988.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1539.742 ±(99.9%) 120.223 MB/sec [Average]
[info]   (min, avg, max) = (1504.586, 1539.742, 1581.783), stdev = 31.222
[info]   CI (99.9%): [1419.518, 1659.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5173.811 ±(99.9%) 99.132 B/op [Average]
[info]   (min, avg, max) = (5140.861, 5173.811, 5212.312), stdev = 25.744
[info]   CI (99.9%): [5074.678, 5272.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1504.140 ±(99.9%) 697.578 MB/sec [Average]
[info]   (min, avg, max) = (1300.757, 1504.140, 1647.038), stdev = 181.159
[info]   CI (99.9%): [806.561, 2201.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5055.042 ±(99.9%) 2348.624 B/op [Average]
[info]   (min, avg, max) = (4331.904, 5055.042, 5604.244), stdev = 609.930
[info]   CI (99.9%): [2706.418, 7403.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.889 ±(99.9%) 5.602 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.889, 3.385), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.029 ±(99.9%) 19.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.029, 11.500), stdev = 4.943
[info]   CI (99.9%): [≈ 0, 22.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 15.000), stdev = 3.782
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247001.923 ops/s
[info] # Warmup Iteration   2: 920311.995 ops/s
[info] # Warmup Iteration   3: 983600.078 ops/s
[info] Iteration   1: 989892.976 ops/s
[info]                  ·gc.alloc.rate:                   467.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              742.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1022382.734 ops/s
[info]                  ·gc.alloc.rate:                   488.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          639.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     984.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1019112.579 ops/s
[info]                  ·gc.alloc.rate:               482.064 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 494.289 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1015450.088 ops/s
[info]                  ·gc.alloc.rate:               489.742 MB/sec
[info]                  ·gc.alloc.rate.norm:          758.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 996.300 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1019182.017 ops/s
[info]                  ·gc.alloc.rate:               481.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          743.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 498.369 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   1013204.079 ±(99.9%) 51060.828 ops/s [Average]
[info]   (min, avg, max) = (989892.976, 1013204.079, 1022382.734), stdev = 13260.335
[info]   CI (99.9%): [962143.251, 1064264.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   481.841 ±(99.9%) 34.545 MB/sec [Average]
[info]   (min, avg, max) = (467.179, 481.841, 489.742), stdev = 8.971
[info]   CI (99.9%): [447.297, 516.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   748.353 ±(99.9%) 26.794 B/op [Average]
[info]   (min, avg, max) = (742.692, 748.353, 758.993), stdev = 6.958
[info]   CI (99.9%): [721.559, 775.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.087 ±(99.9%) 676.022 MB/sec [Average]
[info]   (min, avg, max) = (319.792, 449.087, 642.865), stdev = 175.561
[info]   CI (99.9%): [≈ 0, 1125.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   696.449 ±(99.9%) 1034.291 B/op [Average]
[info]   (min, avg, max) = (494.289, 696.449, 996.300), stdev = 268.602
[info]   CI (99.9%): [≈ 0, 1730.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.781 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.458), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 0.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.241 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.728), stdev = 0.322
[info]   CI (99.9%): [≈ 0, 1.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1290335.504 ops/s
[info] # Warmup Iteration   2: 1953515.504 ops/s
[info] # Warmup Iteration   3: 2629614.118 ops/s
[info] Iteration   1: 2745262.043 ops/s
[info]                  ·gc.alloc.rate:                   1310.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2730753.256 ops/s
[info]                  ·gc.alloc.rate:                   1298.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2728235.984 ops/s
[info]                  ·gc.alloc.rate:                   1300.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2732146.440 ops/s
[info]                  ·gc.alloc.rate:                   1302.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     753.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2745506.506 ops/s
[info]                  ·gc.alloc.rate:                   1309.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     564.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2736380.846 ±(99.9%) 32106.847 ops/s [Average]
[info]   (min, avg, max) = (2728235.984, 2736380.846, 2745506.506), stdev = 8338.046
[info]   CI (99.9%): [2704273.999, 2768487.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1304.269 ±(99.9%) 21.604 MB/sec [Average]
[info]   (min, avg, max) = (1298.254, 1304.269, 1310.995), stdev = 5.611
[info]   CI (99.9%): [1282.665, 1325.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.100 ±(99.9%) 4.636 B/op [Average]
[info]   (min, avg, max) = (748.208, 750.100, 751.529), stdev = 1.204
[info]   CI (99.9%): [745.464, 754.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1247.603 ±(99.9%) 567.036 MB/sec [Average]
[info]   (min, avg, max) = (984.291, 1247.603, 1317.696), stdev = 147.258
[info]   CI (99.9%): [680.567, 1814.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   717.643 ±(99.9%) 330.427 B/op [Average]
[info]   (min, avg, max) = (564.184, 717.643, 759.412), stdev = 85.811
[info]   CI (99.9%): [387.215, 1048.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.860 ±(99.9%) 5.543 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.860, 3.365), stdev = 1.439
[info]   CI (99.9%): [≈ 0, 6.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.496 ±(99.9%) 3.195 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.496, 1.939), stdev = 0.830
[info]   CI (99.9%): [≈ 0, 3.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 13.000), stdev = 3.962
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1478678.195 ops/s
[info] # Warmup Iteration   2: 2353930.837 ops/s
[info] # Warmup Iteration   3: 2695367.658 ops/s
[info] Iteration   1: 2696698.988 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2704250.776 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2701014.606 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2695725.446 ops/s
[info]                  ·gc.alloc.rate:      0.452 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.264 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2710967.307 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2701731.425 ±(99.9%) 23858.435 ops/s [Average]
[info]   (min, avg, max) = (2695725.446, 2701731.425, 2710967.307), stdev = 6195.960
[info]   CI (99.9%): [2677872.989, 2725589.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.091 ±(99.9%) 0.778 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.091, 0.452), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 0.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.053 ±(99.9%) 0.454 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.053, 0.264), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:24:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66759.423 ops/s
[info] # Warmup Iteration   2: 500828.999 ops/s
[info] # Warmup Iteration   3: 610449.334 ops/s
[info] Iteration   1: 624447.692 ops/s
[info]                  ·gc.alloc.rate:                   1243.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              3134.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1269.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3198.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.965 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 662549.607 ops/s
[info]                  ·gc.alloc.rate:                   920.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              2186.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2270.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.154 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 683889.197 ops/s
[info]                  ·gc.alloc.rate:                   954.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              2197.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          957.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2202.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.203 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 686781.339 ops/s
[info]                  ·gc.alloc.rate:                   961.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              2203.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2190.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.272 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 687801.816 ops/s
[info]                  ·gc.alloc.rate:                   958.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              2193.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          952.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2178.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.228 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   669093.930 ±(99.9%) 104000.256 ops/s [Average]
[info]   (min, avg, max) = (624447.692, 669093.930, 687801.816), stdev = 27008.536
[info]   CI (99.9%): [565093.675, 773094.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1007.923 ±(99.9%) 512.095 MB/sec [Average]
[info]   (min, avg, max) = (920.699, 1007.923, 1243.993), stdev = 132.989
[info]   CI (99.9%): [495.828, 1520.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2383.071 ±(99.9%) 1618.573 B/op [Average]
[info]   (min, avg, max) = (2186.784, 2383.071, 3134.920), stdev = 420.338
[info]   CI (99.9%): [764.499, 4001.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1018.120 ±(99.9%) 540.607 MB/sec [Average]
[info]   (min, avg, max) = (952.012, 1018.120, 1269.239), stdev = 140.394
[info]   CI (99.9%): [477.513, 1558.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2408.193 ±(99.9%) 1706.852 B/op [Average]
[info]   (min, avg, max) = (2178.277, 2408.193, 3198.542), stdev = 443.264
[info]   CI (99.9%): [701.341, 4115.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.869 ±(99.9%) 2.973 MB/sec [Average]
[info]   (min, avg, max) = (0.780, 1.869, 2.737), stdev = 0.772
[info]   CI (99.9%): [≈ 0, 4.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.357 ±(99.9%) 6.657 B/op [Average]
[info]   (min, avg, max) = (1.965, 4.357, 6.272), stdev = 1.729
[info]   CI (99.9%): [≈ 0, 11.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 12.800, 23.000), stdev = 6.797
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3235.357 ops/s
[info] # Warmup Iteration   2: 15154.961 ops/s
[info] # Warmup Iteration   3: 16106.917 ops/s
[info] Iteration   1: 21830.099 ops/s
[info]                  ·gc.alloc.rate:                   1725.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              124367.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1465.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105673.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.732 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 21454.633 ops/s
[info]                  ·gc.alloc.rate:                   1719.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              126108.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1780.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130613.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.581 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 21488.695 ops/s
[info]                  ·gc.alloc.rate:                   1679.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              122973.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1530.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112112.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 20288.510 ops/s
[info]                  ·gc.alloc.rate:                   1896.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              147082.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1893.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146851.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.811 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 21855.276 ops/s
[info]                  ·gc.alloc.rate:                   1717.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              123691.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116481.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.796 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129.321 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   21383.443 ±(99.9%) 2463.473 ops/s [Average]
[info]   (min, avg, max) = (20288.510, 21383.443, 21855.276), stdev = 639.756
[info]   CI (99.9%): [18919.970, 23846.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1747.555 ±(99.9%) 327.733 MB/sec [Average]
[info]   (min, avg, max) = (1679.206, 1747.555, 1896.283), stdev = 85.111
[info]   CI (99.9%): [1419.821, 2075.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   128844.625 ±(99.9%) 39512.409 B/op [Average]
[info]   (min, avg, max) = (122973.566, 128844.625, 147082.396), stdev = 10261.247
[info]   CI (99.9%): [89332.216, 168357.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1657.696 ±(99.9%) 681.091 MB/sec [Average]
[info]   (min, avg, max) = (1465.868, 1657.696, 1893.303), stdev = 176.877
[info]   CI (99.9%): [976.605, 2338.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   122346.632 ±(99.9%) 63446.365 B/op [Average]
[info]   (min, avg, max) = (105673.986, 122346.632, 146851.278), stdev = 16476.820
[info]   CI (99.9%): [58900.267, 185792.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.547 ±(99.9%) 6.555 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.547, 4.269), stdev = 1.702
[info]   CI (99.9%): [≈ 0, 8.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   113.129 ±(99.9%) 472.016 B/op [Average]
[info]   (min, avg, max) = (4.581, 113.129, 307.732), stdev = 122.581
[info]   CI (99.9%): [≈ 0, 585.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 11.000), stdev = 1.517
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12298.604 ops/s
[info] # Warmup Iteration   2: 30999.487 ops/s
[info] # Warmup Iteration   3: 42999.831 ops/s
[info] Iteration   1: 43455.715 ops/s
[info]                  ·gc.alloc.rate:                   1459.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              52849.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46681.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.168 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 40620.124 ops/s
[info]                  ·gc.alloc.rate:                   1344.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              52064.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62885.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.811 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 41837.686 ops/s
[info]                  ·gc.alloc.rate:                   1143.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              43009.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36821.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 41480.660 ops/s
[info]                  ·gc.alloc.rate:                   1135.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              43086.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37214.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.159 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 41892.266 ops/s
[info]                  ·gc.alloc.rate:                   1158.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              43534.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49349.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.346 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   41857.290 ±(99.9%) 3959.334 ops/s [Average]
[info]   (min, avg, max) = (40620.124, 41857.290, 43455.715), stdev = 1028.227
[info]   CI (99.9%): [37897.956, 45816.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1248.296 ±(99.9%) 562.555 MB/sec [Average]
[info]   (min, avg, max) = (1135.738, 1248.296, 1459.363), stdev = 146.094
[info]   CI (99.9%): [685.741, 1810.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   46909.010 ±(99.9%) 19545.902 B/op [Average]
[info]   (min, avg, max) = (43009.670, 46909.010, 52849.372), stdev = 5076.009
[info]   CI (99.9%): [27363.109, 66454.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1237.198 ±(99.9%) 1036.917 MB/sec [Average]
[info]   (min, avg, max) = (978.930, 1237.198, 1623.396), stdev = 269.284
[info]   CI (99.9%): [200.281, 2274.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46590.502 ±(99.9%) 41135.682 B/op [Average]
[info]   (min, avg, max) = (36821.814, 46590.502, 62885.653), stdev = 10682.806
[info]   CI (99.9%): [5454.820, 87726.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.611 ±(99.9%) 9.155 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.611, 5.623), stdev = 2.378
[info]   CI (99.9%): [≈ 0, 10.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   61.327 ±(99.9%) 354.305 B/op [Average]
[info]   (min, avg, max) = (2.346, 61.327, 217.811), stdev = 92.012
[info]   CI (99.9%): [≈ 0, 415.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12575.540 ops/s
[info] # Warmup Iteration   2: 39877.027 ops/s
[info] # Warmup Iteration   3: 48915.164 ops/s
[info] Iteration   1: 45240.984 ops/s
[info]                  ·gc.alloc.rate:                   830.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              28875.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          905.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31481.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 50107.132 ops/s
[info]                  ·gc.alloc.rate:                   911.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              28612.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          919.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28883.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.961 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 48609.210 ops/s
[info]                  ·gc.alloc.rate:                   836.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              27089.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          927.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30033.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 247.889 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 50929.271 ops/s
[info]                  ·gc.alloc.rate:                   698.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              21582.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          610.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18855.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.376 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 51582.653 ops/s
[info]                  ·gc.alloc.rate:                   707.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              21591.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          611.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18658.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.534 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   49293.850 ±(99.9%) 9716.507 ops/s [Average]
[info]   (min, avg, max) = (45240.984, 49293.850, 51582.653), stdev = 2523.346
[info]   CI (99.9%): [39577.343, 59010.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   796.873 ±(99.9%) 351.848 MB/sec [Average]
[info]   (min, avg, max) = (698.423, 796.873, 911.052), stdev = 91.374
[info]   CI (99.9%): [445.025, 1148.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   25550.228 ±(99.9%) 14177.126 B/op [Average]
[info]   (min, avg, max) = (21582.098, 25550.228, 28875.677), stdev = 3681.755
[info]   CI (99.9%): [11373.101, 39727.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.900 ±(99.9%) 647.602 MB/sec [Average]
[info]   (min, avg, max) = (610.197, 794.900, 927.756), stdev = 168.180
[info]   CI (99.9%): [147.298, 1442.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25582.477 ±(99.9%) 24254.685 B/op [Average]
[info]   (min, avg, max) = (18658.153, 25582.477, 31481.844), stdev = 6298.865
[info]   CI (99.9%): [1327.792, 49837.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.632 ±(99.9%) 11.331 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.632, 7.657), stdev = 2.943
[info]   CI (99.9%): [≈ 0, 13.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   84.271 ±(99.9%) 366.752 B/op [Average]
[info]   (min, avg, max) = (1.961, 84.271, 247.889), stdev = 95.244
[info]   CI (99.9%): [≈ 0, 451.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   86.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 17.200, 25.000), stdev = 7.328
[info]   CI (99.9%): [86.000, 86.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3343.254 ops/s
[info] # Warmup Iteration   2: 18424.918 ops/s
[info] # Warmup Iteration   3: 38301.342 ops/s
[info] Iteration   1: 38740.994 ops/s
[info]                  ·gc.alloc.rate:                   1699.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              69054.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66149.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 35228.553 ops/s
[info]                  ·gc.alloc.rate:                   1755.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              78422.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73250.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.998 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 39022.409 ops/s
[info]                  ·gc.alloc.rate:                   1664.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              67146.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66347.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.766 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.566 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 38252.615 ops/s
[info]                  ·gc.alloc.rate:                   1621.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              66714.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67872.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.713 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 39647.041 ops/s
[info]                  ·gc.alloc.rate:                   1668.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              66225.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65853.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.826 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   38178.322 ±(99.9%) 6639.674 ops/s [Average]
[info]   (min, avg, max) = (35228.553, 38178.322, 39647.041), stdev = 1724.302
[info]   CI (99.9%): [31538.648, 44817.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1682.234 ±(99.9%) 190.847 MB/sec [Average]
[info]   (min, avg, max) = (1621.742, 1682.234, 1755.565), stdev = 49.562
[info]   CI (99.9%): [1491.387, 1873.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69512.778 ±(99.9%) 19618.839 B/op [Average]
[info]   (min, avg, max) = (66225.351, 69512.778, 78422.744), stdev = 5094.950
[info]   CI (99.9%): [49893.940, 89131.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1644.566 ±(99.9%) 44.552 MB/sec [Average]
[info]   (min, avg, max) = (1628.446, 1644.566, 1659.537), stdev = 11.570
[info]   CI (99.9%): [1600.014, 1689.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67894.724 ±(99.9%) 11914.690 B/op [Average]
[info]   (min, avg, max) = (65853.302, 67894.724, 73250.932), stdev = 3094.207
[info]   CI (99.9%): [55980.034, 79809.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.047 ±(99.9%) 4.952 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.047, 2.766), stdev = 1.286
[info]   CI (99.9%): [≈ 0, 5.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   44.045 ±(99.9%) 207.110 B/op [Average]
[info]   (min, avg, max) = (0.826, 44.045, 111.566), stdev = 53.786
[info]   CI (99.9%): [≈ 0, 251.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 2.345
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:23:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4739.142 ops/s
[info] # Warmup Iteration   2: 23987.144 ops/s
[info] # Warmup Iteration   3: 32802.473 ops/s
[info] Iteration   1: 34345.147 ops/s
[info]                  ·gc.alloc.rate:                   2262.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              103685.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2228.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102089.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 194.992 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 31951.773 ops/s
[info]                  ·gc.alloc.rate:                   2544.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              125288.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2543.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125235.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 314.013 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 34611.471 ops/s
[info]                  ·gc.alloc.rate:                   2325.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              105711.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2248.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102219.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.828 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.012 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 35330.780 ops/s
[info]                  ·gc.alloc.rate:                   2341.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              104302.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2282.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101644.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.345 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 36068.336 ops/s
[info]                  ·gc.alloc.rate:                   2364.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              103144.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101044.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.817 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   34461.502 ±(99.9%) 5987.821 ops/s [Average]
[info]   (min, avg, max) = (31951.773, 34461.502, 36068.336), stdev = 1555.018
[info]   CI (99.9%): [28473.680, 40449.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2367.773 ±(99.9%) 407.619 MB/sec [Average]
[info]   (min, avg, max) = (2262.968, 2367.773, 2544.812), stdev = 105.857
[info]   CI (99.9%): [1960.154, 2775.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   108426.397 ±(99.9%) 36483.112 B/op [Average]
[info]   (min, avg, max) = (103144.893, 108426.397, 125288.065), stdev = 9474.548
[info]   CI (99.9%): [71943.286, 144909.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2323.664 ±(99.9%) 490.900 MB/sec [Average]
[info]   (min, avg, max) = (2228.134, 2323.664, 2543.753), stdev = 127.485
[info]   CI (99.9%): [1832.764, 2814.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   106446.493 ±(99.9%) 40484.322 B/op [Average]
[info]   (min, avg, max) = (101044.279, 106446.493, 125235.915), stdev = 10513.650
[info]   CI (99.9%): [65962.171, 146930.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.938 ±(99.9%) 10.601 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.938, 6.378), stdev = 2.753
[info]   CI (99.9%): [≈ 0, 13.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   138.636 ±(99.9%) 512.583 B/op [Average]
[info]   (min, avg, max) = (1.817, 138.636, 314.013), stdev = 133.116
[info]   CI (99.9%): [≈ 0, 651.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.400, 20.000), stdev = 4.278
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4688.228 ops/s
[info] # Warmup Iteration   2: 20951.376 ops/s
[info] # Warmup Iteration   3: 29632.473 ops/s
[info] Iteration   1: 32495.645 ops/s
[info]                  ·gc.alloc.rate:                   1830.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              88657.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1909.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92478.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.025 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 30683.712 ops/s
[info]                  ·gc.alloc.rate:                   1970.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              101051.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1931.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99046.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.734 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 30780.586 ops/s
[info]                  ·gc.alloc.rate:                   1934.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              98926.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98073.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.652 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   4: 33190.893 ops/s
[info]                  ·gc.alloc.rate:                   1815.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              86079.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1881.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89221.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.080 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   5: 33716.947 ops/s
[info]                  ·gc.alloc.rate:                   1855.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              86582.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1583.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73927.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.505 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.601 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   32173.557 ±(99.9%) 5335.877 ops/s [Average]
[info]   (min, avg, max) = (30683.712, 32173.557, 33716.947), stdev = 1385.710
[info]   CI (99.9%): [26837.680, 37509.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1881.383 ±(99.9%) 261.362 MB/sec [Average]
[info]   (min, avg, max) = (1815.502, 1881.383, 1970.596), stdev = 67.875
[info]   CI (99.9%): [1620.021, 2142.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   92259.608 ±(99.9%) 27575.993 B/op [Average]
[info]   (min, avg, max) = (86079.588, 92259.608, 101051.394), stdev = 7161.398
[info]   CI (99.9%): [64683.615, 119835.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1845.028 ±(99.9%) 566.358 MB/sec [Average]
[info]   (min, avg, max) = (1583.946, 1845.028, 1931.489), stdev = 147.081
[info]   CI (99.9%): [1278.669, 2411.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   90549.365 ±(99.9%) 39011.661 B/op [Average]
[info]   (min, avg, max) = (73927.686, 90549.365, 99046.034), stdev = 10131.204
[info]   CI (99.9%): [51537.704, 129561.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.527 ±(99.9%) 8.871 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.527, 6.018), stdev = 2.304
[info]   CI (99.9%): [≈ 0, 11.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   125.018 ±(99.9%) 450.414 B/op [Average]
[info]   (min, avg, max) = (3.025, 125.018, 307.652), stdev = 116.971
[info]   CI (99.9%): [≈ 0, 575.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   116.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 23.200, 35.000), stdev = 8.349
[info]   CI (99.9%): [116.000, 116.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7205.622 ops/s
[info] # Warmup Iteration   2: 29520.060 ops/s
[info] # Warmup Iteration   3: 38485.540 ops/s
[info] Iteration   1: 37699.611 ops/s
[info]                  ·gc.alloc.rate:                   2118.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              88420.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1916.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79986.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.660 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 37609.775 ops/s
[info]                  ·gc.alloc.rate:                   2178.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              91143.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2238.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93657.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.793 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 40721.875 ops/s
[info]                  ·gc.alloc.rate:                   2140.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              82722.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74865.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.218 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 39631.950 ops/s
[info]                  ·gc.alloc.rate:                   2078.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              82542.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77849.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.133 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 39565.942 ops/s
[info]                  ·gc.alloc.rate:                   2104.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              83695.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2317.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92178.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.656 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   39045.831 ±(99.9%) 5201.129 ops/s [Average]
[info]   (min, avg, max) = (37609.775, 39045.831, 40721.875), stdev = 1350.717
[info]   CI (99.9%): [33844.701, 44246.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   2124.149 ±(99.9%) 145.530 MB/sec [Average]
[info]   (min, avg, max) = (2078.791, 2124.149, 2178.602), stdev = 37.794
[info]   CI (99.9%): [1978.619, 2269.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   85705.098 ±(99.9%) 14899.679 B/op [Average]
[info]   (min, avg, max) = (82542.926, 85705.098, 91143.904), stdev = 3869.399
[info]   CI (99.9%): [70805.418, 100604.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2074.112 ±(99.9%) 727.912 MB/sec [Average]
[info]   (min, avg, max) = (1916.336, 2074.112, 2317.707), stdev = 189.037
[info]   CI (99.9%): [1346.199, 2802.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   83707.612 ±(99.9%) 33186.492 B/op [Average]
[info]   (min, avg, max) = (74865.186, 83707.612, 93657.700), stdev = 8618.427
[info]   CI (99.9%): [50521.120, 116894.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.746 ±(99.9%) 10.610 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.746, 6.425), stdev = 2.755
[info]   CI (99.9%): [≈ 0, 12.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   72.892 ±(99.9%) 444.176 B/op [Average]
[info]   (min, avg, max) = (1.656, 72.892, 268.793), stdev = 115.351
[info]   CI (99.9%): [≈ 0, 517.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 17.000), stdev = 3.564
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9173.213 ops/s
[info] # Warmup Iteration   2: 30317.533 ops/s
[info] # Warmup Iteration   3: 38093.388 ops/s
[info] Iteration   1: 36518.063 ops/s
[info]                  ·gc.alloc.rate:                   2064.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              88940.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1902.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81960.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.691 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 37178.509 ops/s
[info]                  ·gc.alloc.rate:                   2024.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              85662.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2200.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93112.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 345.341 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   3: 38434.559 ops/s
[info]                  ·gc.alloc.rate:                   2071.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              84832.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2113.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86533.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 225.900 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 39415.860 ops/s
[info]                  ·gc.alloc.rate:                   1953.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              77995.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1815.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72466.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.471 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 497.888 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 39817.232 ops/s
[info]                  ·gc.alloc.rate:                   2009.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              79436.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1800.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71180.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.646 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   38272.845 ±(99.9%) 5443.794 ops/s [Average]
[info]   (min, avg, max) = (36518.063, 38272.845, 39817.232), stdev = 1413.736
[info]   CI (99.9%): [32829.051, 43716.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2024.758 ±(99.9%) 183.171 MB/sec [Average]
[info]   (min, avg, max) = (1953.629, 2024.758, 2071.923), stdev = 47.569
[info]   CI (99.9%): [1841.587, 2207.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   83373.528 ±(99.9%) 17516.813 B/op [Average]
[info]   (min, avg, max) = (77995.569, 83373.528, 88940.143), stdev = 4549.061
[info]   CI (99.9%): [65856.716, 100890.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1966.400 ±(99.9%) 696.096 MB/sec [Average]
[info]   (min, avg, max) = (1800.991, 1966.400, 2200.301), stdev = 180.774
[info]   CI (99.9%): [1270.305, 2662.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   81050.671 ±(99.9%) 35890.425 B/op [Average]
[info]   (min, avg, max) = (71180.265, 81050.671, 93112.759), stdev = 9320.629
[info]   CI (99.9%): [45160.247, 116941.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   5.251 ±(99.9%) 20.622 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 5.251, 12.471), stdev = 5.355
[info]   CI (99.9%): [≈ 0, 25.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   214.693 ±(99.9%) 834.195 B/op [Average]
[info]   (min, avg, max) = (1.646, 214.693, 497.888), stdev = 216.638
[info]   CI (99.9%): [≈ 0, 1048.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   127.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 25.400, 33.000), stdev = 10.407
[info]   CI (99.9%): [127.000, 127.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1484.251 ops/s
[info] # Warmup Iteration   2: 5894.727 ops/s
[info] # Warmup Iteration   3: 8313.254 ops/s
[info] Iteration   1: 8927.651 ops/s
[info]                  ·gc.alloc.rate:                   1219.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              214869.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230264.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.634 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 8939.239 ops/s
[info]                  ·gc.alloc.rate:                   1225.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              215738.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172397.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 729.318 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 9461.705 ops/s
[info]                  ·gc.alloc.rate:                   1284.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              213662.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215831.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.872 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9449.977 ops/s
[info]                  ·gc.alloc.rate:                   1275.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              212367.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215749.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.929 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9522.977 ops/s
[info]                  ·gc.alloc.rate:                   1283.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              212132.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214921.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.440 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   9260.310 ±(99.9%) 1154.031 ops/s [Average]
[info]   (min, avg, max) = (8927.651, 9260.310, 9522.977), stdev = 299.698
[info]   CI (99.9%): [8106.279, 10414.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1257.597 ±(99.9%) 125.420 MB/sec [Average]
[info]   (min, avg, max) = (1219.015, 1257.597, 1284.615), stdev = 32.571
[info]   CI (99.9%): [1132.177, 1383.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   213754.061 ±(99.9%) 6010.500 B/op [Average]
[info]   (min, avg, max) = (212132.045, 213754.061, 215738.744), stdev = 1560.908
[info]   CI (99.9%): [207743.561, 219764.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1235.873 ±(99.9%) 552.607 MB/sec [Average]
[info]   (min, avg, max) = (979.256, 1235.873, 1306.350), stdev = 143.510
[info]   CI (99.9%): [683.266, 1788.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   209832.804 ±(99.9%) 84269.200 B/op [Average]
[info]   (min, avg, max) = (172397.575, 209832.804, 230264.002), stdev = 21884.444
[info]   CI (99.9%): [125563.604, 294102.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.039 ±(99.9%) 6.747 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.039, 4.143), stdev = 1.752
[info]   CI (99.9%): [≈ 0, 7.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   181.038 ±(99.9%) 1190.585 B/op [Average]
[info]   (min, avg, max) = (3.440, 181.038, 729.318), stdev = 309.191
[info]   CI (99.9%): [≈ 0, 1371.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 20.000), stdev = 6.107
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:22:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3608.256 ops/s
[info] # Warmup Iteration   2: 15454.575 ops/s
[info] # Warmup Iteration   3: 13294.149 ops/s
[info] Iteration   1: 22589.687 ops/s
[info]                  ·gc.alloc.rate:                   1777.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              123835.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116028.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 521.626 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 20706.966 ops/s
[info]                  ·gc.alloc.rate:                   2118.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              160988.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152139.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 890.897 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 21960.670 ops/s
[info]                  ·gc.alloc.rate:                   1734.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              124268.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1785.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127957.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.332 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 21268.321 ops/s
[info]                  ·gc.alloc.rate:                   2082.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              154079.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1855.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137344.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130.195 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 20676.134 ops/s
[info]                  ·gc.alloc.rate:                   2017.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              153556.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2238.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170368.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 329.199 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   21440.356 ±(99.9%) 3188.824 ops/s [Average]
[info]   (min, avg, max) = (20676.134, 21440.356, 22589.687), stdev = 828.128
[info]   CI (99.9%): [18251.531, 24629.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1946.187 ±(99.9%) 685.239 MB/sec [Average]
[info]   (min, avg, max) = (1734.183, 1946.187, 2118.936), stdev = 177.954
[info]   CI (99.9%): [1260.948, 2631.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   143345.634 ±(99.9%) 68756.594 B/op [Average]
[info]   (min, avg, max) = (123835.304, 143345.634, 160988.382), stdev = 17855.869
[info]   CI (99.9%): [74589.039, 212102.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1909.723 ±(99.9%) 849.077 MB/sec [Average]
[info]   (min, avg, max) = (1665.911, 1909.723, 2238.596), stdev = 220.503
[info]   CI (99.9%): [1060.647, 2758.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   140767.663 ±(99.9%) 81533.724 B/op [Average]
[info]   (min, avg, max) = (116028.858, 140767.663, 170368.248), stdev = 21174.049
[info]   CI (99.9%): [59233.939, 222301.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   5.251 ±(99.9%) 17.053 MB/sec [Average]
[info]   (min, avg, max) = (0.954, 5.251, 11.726), stdev = 4.429
[info]   CI (99.9%): [≈ 0, 22.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   388.050 ±(99.9%) 1281.273 B/op [Average]
[info]   (min, avg, max) = (68.332, 388.050, 890.897), stdev = 332.742
[info]   CI (99.9%): [≈ 0, 1669.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.600, 18.000), stdev = 3.209
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14845.447 ops/s
[info] # Warmup Iteration   2: 36660.826 ops/s
[info] # Warmup Iteration   3: 53235.989 ops/s
[info] Iteration   1: 45578.851 ops/s
[info]                  ·gc.alloc.rate:               1704.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          58834.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1593.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54996.934 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     30.000 ms
[info] Iteration   2: 49367.106 ops/s
[info]                  ·gc.alloc.rate:                   1610.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              51315.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1562.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49781.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 43347.275 ops/s
[info]                  ·gc.alloc.rate:                   1345.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              48834.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1243.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45155.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 44162.391 ops/s
[info]                  ·gc.alloc.rate:                   1248.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              44476.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1221.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43511.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.259 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 223.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   5: 44688.660 ops/s
[info]                  ·gc.alloc.rate:                   1261.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              44410.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1234.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43448.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.147 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   45428.856 ±(99.9%) 9034.073 ops/s [Average]
[info]   (min, avg, max) = (43347.275, 45428.856, 49367.106), stdev = 2346.120
[info]   CI (99.9%): [36394.783, 54462.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1433.986 ±(99.9%) 809.057 MB/sec [Average]
[info]   (min, avg, max) = (1248.219, 1433.986, 1704.683), stdev = 210.110
[info]   CI (99.9%): [624.929, 2243.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   49574.187 ±(99.9%) 22940.795 B/op [Average]
[info]   (min, avg, max) = (44410.022, 49574.187, 58834.000), stdev = 5957.651
[info]   CI (99.9%): [26633.392, 72514.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1370.975 ±(99.9%) 729.263 MB/sec [Average]
[info]   (min, avg, max) = (1221.134, 1370.975, 1593.506), stdev = 189.387
[info]   CI (99.9%): [641.713, 2100.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47378.856 ±(99.9%) 19171.619 B/op [Average]
[info]   (min, avg, max) = (43448.245, 47378.856, 54996.934), stdev = 4978.809
[info]   CI (99.9%): [28207.238, 66550.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.309 ±(99.9%) 10.242 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.309, 6.259), stdev = 2.660
[info]   CI (99.9%): [≈ 0, 12.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   79.649 ±(99.9%) 358.442 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 79.649, 223.012), stdev = 93.086
[info]   CI (99.9%): [≈ 0, 438.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   127.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 25.400, 30.000), stdev = 4.980
[info]   CI (99.9%): [127.000, 127.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29426.776 ops/s
[info] # Warmup Iteration   2: 45046.474 ops/s
[info] # Warmup Iteration   3: 60368.109 ops/s
[info] Iteration   1: 65243.394 ops/s
[info]                  ·gc.alloc.rate:                   749.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              18079.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          899.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21685.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 125.635 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 65586.040 ops/s
[info]                  ·gc.alloc.rate:                   744.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              17852.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          602.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14466.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 65577.051 ops/s
[info]                  ·gc.alloc.rate:                   758.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              18190.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          910.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21846.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.976 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 66263.153 ops/s
[info]                  ·gc.alloc.rate:                   753.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              17899.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          611.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14524.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.444 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 66189.683 ops/s
[info]                  ·gc.alloc.rate:                   759.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              18064.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          921.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21906.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   65771.864 ±(99.9%) 1686.940 ops/s [Average]
[info]   (min, avg, max) = (65243.394, 65771.864, 66263.153), stdev = 438.093
[info]   CI (99.9%): [64084.924, 67458.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   753.049 ±(99.9%) 24.705 MB/sec [Average]
[info]   (min, avg, max) = (744.049, 753.049, 759.828), stdev = 6.416
[info]   CI (99.9%): [728.344, 777.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   18017.403 ±(99.9%) 535.022 B/op [Average]
[info]   (min, avg, max) = (17852.505, 18017.403, 18190.902), stdev = 138.944
[info]   CI (99.9%): [17482.380, 18552.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.095 ±(99.9%) 639.960 MB/sec [Average]
[info]   (min, avg, max) = (602.930, 789.095, 921.389), stdev = 166.196
[info]   CI (99.9%): [149.135, 1429.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18886.044 ±(99.9%) 15436.359 B/op [Average]
[info]   (min, avg, max) = (14466.535, 18886.044, 21906.051), stdev = 4008.773
[info]   CI (99.9%): [3449.686, 34322.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2.685 ±(99.9%) 10.299 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 2.685, 5.748), stdev = 2.675
[info]   CI (99.9%): [≈ 0, 12.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   64.191 ±(99.9%) 246.454 B/op [Average]
[info]   (min, avg, max) = (0.230, 64.191, 136.669), stdev = 64.003
[info]   CI (99.9%): [≈ 0, 310.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   95.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 19.000, 27.000), stdev = 5.701
[info]   CI (99.9%): [95.000, 95.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1680.400 ops/s
[info] # Warmup Iteration   2: 21188.249 ops/s
[info] # Warmup Iteration   3: 39359.159 ops/s
[info] Iteration   1: 42110.812 ops/s
[info]                  ·gc.alloc.rate:                   2676.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              99999.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2617.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97772.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.685 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 40721.861 ops/s
[info]                  ·gc.alloc.rate:                   2494.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              96408.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89153.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123.929 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 42740.579 ops/s
[info]                  ·gc.alloc.rate:                   2456.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              90466.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97847.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.833 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 42973.076 ops/s
[info]                  ·gc.alloc.rate:                   2456.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              89942.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85850.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.287 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 42441.632 ops/s
[info]                  ·gc.alloc.rate:               2453.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          90953.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2358.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87416.326 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   42197.592 ±(99.9%) 3412.265 ops/s [Average]
[info]   (min, avg, max) = (40721.861, 42197.592, 42973.076), stdev = 886.154
[info]   CI (99.9%): [38785.328, 45609.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2507.597 ±(99.9%) 369.803 MB/sec [Average]
[info]   (min, avg, max) = (2453.605, 2507.597, 2676.664), stdev = 96.037
[info]   CI (99.9%): [2137.793, 2877.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   93554.070 ±(99.9%) 17115.140 B/op [Average]
[info]   (min, avg, max) = (89942.853, 93554.070, 99999.074), stdev = 4444.747
[info]   CI (99.9%): [76438.930, 110669.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2456.785 ±(99.9%) 640.631 MB/sec [Average]
[info]   (min, avg, max) = (2307.045, 2456.785, 2657.344), stdev = 166.370
[info]   CI (99.9%): [1816.154, 3097.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   91608.003 ±(99.9%) 22260.105 B/op [Average]
[info]   (min, avg, max) = (85850.468, 91608.003, 97847.143), stdev = 5780.879
[info]   CI (99.9%): [69347.898, 113868.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.112 ±(99.9%) 5.743 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.112, 3.207), stdev = 1.491
[info]   CI (99.9%): [≈ 0, 6.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   42.347 ±(99.9%) 220.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 42.347, 123.929), stdev = 57.194
[info]   CI (99.9%): [≈ 0, 262.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.400, 16.000), stdev = 2.302
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7814.469 ops/s
[info] # Warmup Iteration   2: 29784.076 ops/s
[info] # Warmup Iteration   3: 38965.143 ops/s
[info] Iteration   1: 36724.981 ops/s
[info]                  ·gc.alloc.rate:                   2062.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              88354.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2268.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97210.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.901 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 39995.639 ops/s
[info]                  ·gc.alloc.rate:                   1902.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              74824.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63942.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 421.770 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 42334.867 ops/s
[info]                  ·gc.alloc.rate:                   1849.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              68738.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72630.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.869 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 40403.017 ops/s
[info]                  ·gc.alloc.rate:                   1743.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              67922.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63974.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.865 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 42003.303 ops/s
[info]                  ·gc.alloc.rate:                   1827.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              68486.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62086.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.560 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   40292.361 ±(99.9%) 8594.280 ops/s [Average]
[info]   (min, avg, max) = (36724.981, 40292.361, 42334.867), stdev = 2231.907
[info]   CI (99.9%): [31698.081, 48886.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1877.033 ±(99.9%) 454.751 MB/sec [Average]
[info]   (min, avg, max) = (1743.827, 1877.033, 2062.031), stdev = 118.097
[info]   CI (99.9%): [1422.282, 2331.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73665.338 ±(99.9%) 33414.228 B/op [Average]
[info]   (min, avg, max) = (67922.802, 73665.338, 88354.910), stdev = 8677.569
[info]   CI (99.9%): [40251.110, 107079.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1829.544 ±(99.9%) 1080.012 MB/sec [Average]
[info]   (min, avg, max) = (1625.545, 1829.544, 2268.701), stdev = 280.476
[info]   CI (99.9%): [749.532, 2909.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   71968.850 ±(99.9%) 56578.531 B/op [Average]
[info]   (min, avg, max) = (62086.901, 71968.850, 97210.366), stdev = 14693.265
[info]   CI (99.9%): [15390.318, 128547.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.399 ±(99.9%) 17.982 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.399, 10.722), stdev = 4.670
[info]   CI (99.9%): [≈ 0, 20.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   94.993 ±(99.9%) 706.498 B/op [Average]
[info]   (min, avg, max) = (1.560, 94.993, 421.770), stdev = 183.475
[info]   CI (99.9%): [≈ 0, 801.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 16.000), stdev = 3.768
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:21:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16845.228 ops/s
[info] # Warmup Iteration   2: 43720.646 ops/s
[info] # Warmup Iteration   3: 50825.409 ops/s
[info] Iteration   1: 53586.122 ops/s
[info]                  ·gc.alloc.rate:                   1796.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              52759.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56931.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.577 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 193.150 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 55998.110 ops/s
[info]                  ·gc.alloc.rate:                   1759.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              49451.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45164.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.361 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 54240.762 ops/s
[info]                  ·gc.alloc.rate:                   1701.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              49354.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46782.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 55881.584 ops/s
[info]                  ·gc.alloc.rate:                   1750.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              49293.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45879.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.173 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 53670.993 ops/s
[info]                  ·gc.alloc.rate:                   1703.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              49939.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48235.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.221 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   54675.514 ±(99.9%) 4551.549 ops/s [Average]
[info]   (min, avg, max) = (53586.122, 54675.514, 55998.110), stdev = 1182.023
[info]   CI (99.9%): [50123.965, 59227.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1742.249 ±(99.9%) 155.622 MB/sec [Average]
[info]   (min, avg, max) = (1701.123, 1742.249, 1796.508), stdev = 40.415
[info]   CI (99.9%): [1586.627, 1897.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   50159.478 ±(99.9%) 5681.450 B/op [Average]
[info]   (min, avg, max) = (49293.360, 50159.478, 52759.347), stdev = 1475.454
[info]   CI (99.9%): [44478.028, 55840.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1686.554 ±(99.9%) 545.530 MB/sec [Average]
[info]   (min, avg, max) = (1607.135, 1686.554, 1938.573), stdev = 141.672
[info]   CI (99.9%): [1141.024, 2232.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48598.664 ±(99.9%) 18472.228 B/op [Average]
[info]   (min, avg, max) = (45164.963, 48598.664, 56931.473), stdev = 4797.179
[info]   CI (99.9%): [30126.437, 67070.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.407 ±(99.9%) 11.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.407, 6.577), stdev = 2.893
[info]   CI (99.9%): [≈ 0, 12.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   41.222 ±(99.9%) 327.319 B/op [Average]
[info]   (min, avg, max) = (1.173, 41.222, 193.150), stdev = 85.004
[info]   CI (99.9%): [≈ 0, 368.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.600, 21.000), stdev = 6.427
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16242.921 ops/s
[info] # Warmup Iteration   2: 46338.160 ops/s
[info] # Warmup Iteration   3: 51587.219 ops/s
[info] Iteration   1: 54769.629 ops/s
[info]                  ·gc.alloc.rate:                   1685.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              48416.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46486.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.699 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 55920.364 ops/s
[info]                  ·gc.alloc.rate:                   1654.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              46546.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45555.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.969 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 55519.575 ops/s
[info]                  ·gc.alloc.rate:                   1645.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              46634.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45715.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.770 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 54617.742 ops/s
[info]                  ·gc.alloc.rate:                   1622.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              46739.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46768.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.200 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 53828.649 ops/s
[info]                  ·gc.alloc.rate:               1614.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          47191.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47901.571 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   54931.192 ±(99.9%) 3142.825 ops/s [Average]
[info]   (min, avg, max) = (53828.649, 54931.192, 55920.364), stdev = 816.182
[info]   CI (99.9%): [51788.366, 58074.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1644.173 ±(99.9%) 107.903 MB/sec [Average]
[info]   (min, avg, max) = (1614.452, 1644.173, 1685.065), stdev = 28.022
[info]   CI (99.9%): [1536.270, 1752.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   47105.911 ±(99.9%) 2978.028 B/op [Average]
[info]   (min, avg, max) = (46546.637, 47105.911, 48416.108), stdev = 773.384
[info]   CI (99.9%): [44127.883, 50083.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1622.261 ±(99.9%) 38.130 MB/sec [Average]
[info]   (min, avg, max) = (1612.820, 1622.261, 1638.731), stdev = 9.902
[info]   CI (99.9%): [1584.130, 1660.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   46485.417 ±(99.9%) 3623.985 B/op [Average]
[info]   (min, avg, max) = (45555.212, 46485.417, 47901.571), stdev = 941.137
[info]   CI (99.9%): [42861.432, 50109.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.369 ±(99.9%) 7.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.369, 3.435), stdev = 1.827
[info]   CI (99.9%): [≈ 0, 8.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   38.928 ±(99.9%) 200.202 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.928, 98.699), stdev = 51.992
[info]   CI (99.9%): [≈ 0, 239.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.800, 21.000), stdev = 6.140
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50629.757 ops/s
[info] # Warmup Iteration   2: 345972.453 ops/s
[info] # Warmup Iteration   3: 379080.719 ops/s
[info] Iteration   1: 404215.900 ops/s
[info]                  ·gc.alloc.rate:                   2204.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              8583.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2224.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8662.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.842 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 411022.621 ops/s
[info]                  ·gc.alloc.rate:                   2224.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              8518.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2229.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8534.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.152 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 406003.968 ops/s
[info]                  ·gc.alloc.rate:                   2195.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              8511.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7503.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 407669.386 ops/s
[info]                  ·gc.alloc.rate:                   2257.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              8714.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8868.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 404525.011 ops/s
[info]                  ·gc.alloc.rate:                   2185.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              8502.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7762.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   406687.377 ±(99.9%) 10721.425 ops/s [Average]
[info]   (min, avg, max) = (404215.900, 406687.377, 411022.621), stdev = 2784.320
[info]   CI (99.9%): [395965.952, 417408.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2213.699 ±(99.9%) 110.118 MB/sec [Average]
[info]   (min, avg, max) = (2185.413, 2213.699, 2257.824), stdev = 28.597
[info]   CI (99.9%): [2103.582, 2323.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8565.989 ±(99.9%) 343.031 B/op [Average]
[info]   (min, avg, max) = (8502.679, 8565.989, 8714.784), stdev = 89.084
[info]   CI (99.9%): [8222.958, 8909.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2136.503 ±(99.9%) 616.653 MB/sec [Average]
[info]   (min, avg, max) = (1935.861, 2136.503, 2297.552), stdev = 160.143
[info]   CI (99.9%): [1519.850, 2753.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8266.116 ±(99.9%) 2299.818 B/op [Average]
[info]   (min, avg, max) = (7503.551, 8266.116, 8868.127), stdev = 597.255
[info]   CI (99.9%): [5966.298, 10565.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.955 ±(99.9%) 6.758 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.955, 4.069), stdev = 1.755
[info]   CI (99.9%): [≈ 0, 7.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.712 ±(99.9%) 26.319 B/op [Average]
[info]   (min, avg, max) = (0.081, 3.712, 15.842), stdev = 6.835
[info]   CI (99.9%): [≈ 0, 30.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.000, 19.000), stdev = 4.637
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.792 ops/s
[info] # Warmup Iteration   2: 1149431.058 ops/s
[info] # Warmup Iteration   3: 1816172.504 ops/s
[info] Iteration   1: 1787397.900 ops/s
[info]                  ·gc.alloc.rate:                   639.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              563.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     571.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1855487.772 ops/s
[info]                  ·gc.alloc.rate:                   607.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              515.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1744171.891 ops/s
[info]                  ·gc.alloc.rate:               561.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          506.416 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 293.043 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1888041.632 ops/s
[info]                  ·gc.alloc.rate:                   619.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              516.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1885624.150 ops/s
[info]                  ·gc.alloc.rate:                   616.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              514.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     543.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1832144.669 ±(99.9%) 245589.203 ops/s [Average]
[info]   (min, avg, max) = (1744171.891, 1832144.669, 1888041.632), stdev = 63778.736
[info]   CI (99.9%): [1586555.466, 2077733.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   608.858 ±(99.9%) 112.066 MB/sec [Average]
[info]   (min, avg, max) = (561.302, 608.858, 639.673), stdev = 29.103
[info]   CI (99.9%): [496.792, 720.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   523.107 ±(99.9%) 87.634 B/op [Average]
[info]   (min, avg, max) = (506.416, 523.107, 563.202), stdev = 22.758
[info]   CI (99.9%): [435.473, 610.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   584.941 ±(99.9%) 559.981 MB/sec [Average]
[info]   (min, avg, max) = (324.803, 584.941, 651.588), stdev = 145.425
[info]   CI (99.9%): [24.960, 1144.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   500.138 ±(99.9%) 448.035 B/op [Average]
[info]   (min, avg, max) = (293.043, 500.138, 571.283), stdev = 116.353
[info]   CI (99.9%): [52.103, 948.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.046), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.038), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123098.445 ops/s
[info] # Warmup Iteration   2: 802575.445 ops/s
[info] # Warmup Iteration   3: 804475.846 ops/s
[info] Iteration   1: 824710.422 ops/s
[info]                  ·gc.alloc.rate:                   336.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              642.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     612.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 828534.933 ops/s
[info]                  ·gc.alloc.rate:               340.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          646.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 609.883 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 827834.855 ops/s
[info]                  ·gc.alloc.rate:               340.437 MB/sec
[info]                  ·gc.alloc.rate.norm:          647.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 610.409 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 825995.419 ops/s
[info]                  ·gc.alloc.rate:                   342.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              653.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 824768.017 ops/s
[info]                  ·gc.alloc.rate:               343.740 MB/sec
[info]                  ·gc.alloc.rate.norm:          655.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 612.698 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   826368.729 ±(99.9%) 6750.606 ops/s [Average]
[info]   (min, avg, max) = (824710.422, 826368.729, 828534.933), stdev = 1753.111
[info]   CI (99.9%): [819618.123, 833119.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   340.826 ±(99.9%) 10.466 MB/sec [Average]
[info]   (min, avg, max) = (336.745, 340.826, 343.740), stdev = 2.718
[info]   CI (99.9%): [330.360, 351.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   649.046 ±(99.9%) 20.512 B/op [Average]
[info]   (min, avg, max) = (642.637, 649.046, 655.881), stdev = 5.327
[info]   CI (99.9%): [628.534, 669.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   321.108 ±(99.9%) 0.140 MB/sec [Average]
[info]   (min, avg, max) = (321.079, 321.108, 321.170), stdev = 0.036
[info]   CI (99.9%): [320.968, 321.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   611.496 ±(99.9%) 5.036 B/op [Average]
[info]   (min, avg, max) = (609.883, 611.496, 612.740), stdev = 1.308
[info]   CI (99.9%): [606.460, 616.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 751184.982 ops/s
[info] # Warmup Iteration   2: 1951747.478 ops/s
[info] # Warmup Iteration   3: 2199340.421 ops/s
[info] Iteration   1: 2197490.268 ops/s
[info]                  ·gc.alloc.rate:               431.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 234.736 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2189548.863 ops/s
[info]                  ·gc.alloc.rate:                   440.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              316.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2179964.273 ops/s
[info]                  ·gc.alloc.rate:               432.668 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 236.839 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2182498.778 ops/s
[info]                  ·gc.alloc.rate:               432.066 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 236.810 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2160856.479 ops/s
[info]                  ·gc.alloc.rate:                   432.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              314.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   2182071.732 ±(99.9%) 52669.063 ops/s [Average]
[info]   (min, avg, max) = (2160856.479, 2182071.732, 2197490.268), stdev = 13677.988
[info]   CI (99.9%): [2129402.669, 2234740.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   433.909 ±(99.9%) 13.989 MB/sec [Average]
[info]   (min, avg, max) = (431.641, 433.909, 440.353), stdev = 3.633
[info]   CI (99.9%): [419.919, 447.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   312.845 ±(99.9%) 11.115 B/op [Average]
[info]   (min, avg, max) = (309.056, 312.845, 316.493), stdev = 2.887
[info]   CI (99.9%): [301.730, 323.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.241 ±(99.9%) 691.418 MB/sec [Average]
[info]   (min, avg, max) = (327.843, 459.241, 655.987), stdev = 179.559
[info]   CI (99.9%): [≈ 0, 1150.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   331.375 ±(99.9%) 502.280 B/op [Average]
[info]   (min, avg, max) = (234.736, 331.375, 477.088), stdev = 130.441
[info]   CI (99.9%): [≈ 0, 833.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.030), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6123.537 ops/s
[info] # Warmup Iteration   2: 108702.439 ops/s
[info] # Warmup Iteration   3: 150902.431 ops/s
[info] Iteration   1: 153931.261 ops/s
[info]                  ·gc.alloc.rate:                   4029.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              41202.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3978.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40684.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.703 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 151593.941 ops/s
[info]                  ·gc.alloc.rate:                   4026.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              41769.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4028.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41783.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.863 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 153166.880 ops/s
[info]                  ·gc.alloc.rate:                   4057.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              41690.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3723.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38254.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 154731.259 ops/s
[info]                  ·gc.alloc.rate:                   4111.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              41821.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4075.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41454.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.847 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 155506.895 ops/s
[info]                  ·gc.alloc.rate:                   4119.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              41680.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3743.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37875.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.264 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   153786.047 ±(99.9%) 5796.636 ops/s [Average]
[info]   (min, avg, max) = (151593.941, 153786.047, 155506.895), stdev = 1505.368
[info]   CI (99.9%): [147989.411, 159582.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4069.039 ±(99.9%) 170.431 MB/sec [Average]
[info]   (min, avg, max) = (4026.960, 4069.039, 4119.667), stdev = 44.260
[info]   CI (99.9%): [3898.609, 4239.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41632.696 ±(99.9%) 953.209 B/op [Average]
[info]   (min, avg, max) = (41202.301, 41632.696, 41821.644), stdev = 247.545
[info]   CI (99.9%): [40679.487, 42585.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3909.867 ±(99.9%) 634.726 MB/sec [Average]
[info]   (min, avg, max) = (3723.189, 3909.867, 4075.433), stdev = 164.836
[info]   CI (99.9%): [3275.141, 4544.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40010.356 ±(99.9%) 7028.020 B/op [Average]
[info]   (min, avg, max) = (37875.563, 40010.356, 41783.169), stdev = 1825.155
[info]   CI (99.9%): [32982.335, 47038.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.100, 0.167), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.021 ±(99.9%) 1.858 B/op [Average]
[info]   (min, avg, max) = (0.428, 1.021, 1.703), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 2.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   58.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.800, 17.000), stdev = 1.643
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101016.675 ops/s
[info] # Warmup Iteration   2: 381312.232 ops/s
[info] # Warmup Iteration   3: 439764.639 ops/s
[info] Iteration   1: 454680.355 ops/s
[info]                  ·gc.alloc.rate:                   1495.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              5175.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5648.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.880 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 481357.393 ops/s
[info]                  ·gc.alloc.rate:                   1577.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              5157.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5307.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 464338.051 ops/s
[info]                  ·gc.alloc.rate:                   1513.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4398.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.712 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 482476.661 ops/s
[info]                  ·gc.alloc.rate:                   1589.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              5183.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5302.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 491441.483 ops/s
[info]                  ·gc.alloc.rate:               1631.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          5224.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1637.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5242.432 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   474858.789 ±(99.9%) 57537.972 ops/s [Average]
[info]   (min, avg, max) = (454680.355, 474858.789, 491441.483), stdev = 14942.429
[info]   CI (99.9%): [417320.816, 532396.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1561.487 ±(99.9%) 216.512 MB/sec [Average]
[info]   (min, avg, max) = (1495.387, 1561.487, 1631.636), stdev = 56.227
[info]   CI (99.9%): [1344.975, 1777.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5174.033 ±(99.9%) 136.413 B/op [Average]
[info]   (min, avg, max) = (5128.646, 5174.033, 5224.948), stdev = 35.426
[info]   CI (99.9%): [5037.621, 5310.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1563.260 ±(99.9%) 571.848 MB/sec [Average]
[info]   (min, avg, max) = (1297.772, 1563.260, 1637.096), stdev = 148.507
[info]   CI (99.9%): [991.412, 2135.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5179.778 ±(99.9%) 1791.862 B/op [Average]
[info]   (min, avg, max) = (4398.145, 5179.778, 5648.885), stdev = 465.341
[info]   CI (99.9%): [3387.915, 6971.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.160 ±(99.9%) 5.412 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.160, 3.432), stdev = 1.405
[info]   CI (99.9%): [≈ 0, 6.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.958 ±(99.9%) 18.746 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.958, 11.880), stdev = 4.868
[info]   CI (99.9%): [≈ 0, 22.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 21.000), stdev = 5.941
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.708 ops/s
[info] # Warmup Iteration   2: 2157723.775 ops/s
[info] # Warmup Iteration   3: 2471609.991 ops/s
[info] Iteration   1: 2599288.453 ops/s
[info]                  ·gc.alloc.rate:                   1233.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     589.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2686307.685 ops/s
[info]                  ·gc.alloc.rate:                   1279.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2511696.430 ops/s
[info]                  ·gc.alloc.rate:                   1201.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     814.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2514182.678 ops/s
[info]                  ·gc.alloc.rate:                   1188.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     608.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2524179.026 ops/s
[info]                  ·gc.alloc.rate:                   1212.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   2567130.854 ±(99.9%) 291726.449 ops/s [Average]
[info]   (min, avg, max) = (2511696.430, 2567130.854, 2686307.685), stdev = 75760.432
[info]   CI (99.9%): [2275404.406, 2858857.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1223.242 ±(99.9%) 137.649 MB/sec [Average]
[info]   (min, avg, max) = (1188.581, 1223.242, 1279.940), stdev = 35.747
[info]   CI (99.9%): [1085.593, 1360.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   749.804 ±(99.9%) 18.533 B/op [Average]
[info]   (min, avg, max) = (743.969, 749.804, 756.144), stdev = 4.813
[info]   CI (99.9%): [731.271, 768.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1170.052 ±(99.9%) 692.366 MB/sec [Average]
[info]   (min, avg, max) = (971.984, 1170.052, 1303.573), stdev = 179.805
[info]   CI (99.9%): [477.686, 1862.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   717.360 ±(99.9%) 423.897 B/op [Average]
[info]   (min, avg, max) = (589.666, 717.360, 814.783), stdev = 110.085
[info]   CI (99.9%): [293.463, 1141.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.901 ±(99.9%) 6.057 MB/sec [Average]
[info]   (min, avg, max) = (0.031, 0.901, 3.664), stdev = 1.573
[info]   CI (99.9%): [≈ 0, 6.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.535 ±(99.9%) 3.542 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.535, 2.146), stdev = 0.920
[info]   CI (99.9%): [≈ 0, 4.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 13.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 348697.022 ops/s
[info] # Warmup Iteration   2: 964150.524 ops/s
[info] # Warmup Iteration   3: 1136166.314 ops/s
[info] Iteration   1: 1137680.147 ops/s
[info]                  ·gc.alloc.rate:               534.031 MB/sec
[info]                  ·gc.alloc.rate.norm:          738.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 445.105 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1159736.407 ops/s
[info]                  ·gc.alloc.rate:               553.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 874.625 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1158743.488 ops/s
[info]                  ·gc.alloc.rate:                   551.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1161929.639 ops/s
[info]                  ·gc.alloc.rate:                   549.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1180304.587 ops/s
[info]                  ·gc.alloc.rate:               563.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          751.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 866.005 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1159678.854 ±(99.9%) 58248.810 ops/s [Average]
[info]   (min, avg, max) = (1137680.147, 1159678.854, 1180304.587), stdev = 15127.031
[info]   CI (99.9%): [1101430.044, 1217927.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   550.401 ±(99.9%) 40.848 MB/sec [Average]
[info]   (min, avg, max) = (534.031, 550.401, 563.505), stdev = 10.608
[info]   CI (99.9%): [509.553, 591.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   746.801 ±(99.9%) 20.390 B/op [Average]
[info]   (min, avg, max) = (738.696, 746.801, 751.362), stdev = 5.295
[info]   CI (99.9%): [726.411, 767.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   517.150 ±(99.9%) 683.884 MB/sec [Average]
[info]   (min, avg, max) = (321.783, 517.150, 649.485), stdev = 177.603
[info]   CI (99.9%): [≈ 0, 1201.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   700.285 ±(99.9%) 909.562 B/op [Average]
[info]   (min, avg, max) = (438.066, 700.285, 877.621), stdev = 236.210
[info]   CI (99.9%): [≈ 0, 1609.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.154 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.085), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.342
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1289263.815 ops/s
[info] # Warmup Iteration   2: 2452633.601 ops/s
[info] # Warmup Iteration   3: 2994073.232 ops/s
[info] Iteration   1: 2955388.114 ops/s
[info]                  ·gc.alloc.rate:                   1409.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     702.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2890345.396 ops/s
[info]                  ·gc.alloc.rate:                   1376.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     718.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2935627.427 ops/s
[info]                  ·gc.alloc.rate:                   1451.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              778.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3004123.484 ops/s
[info]                  ·gc.alloc.rate:                   1431.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     687.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2991869.240 ops/s
[info]                  ·gc.alloc.rate:                   1432.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     693.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2955470.732 ±(99.9%) 175690.399 ops/s [Average]
[info]   (min, avg, max) = (2890345.396, 2955470.732, 3004123.484), stdev = 45626.239
[info]   CI (99.9%): [2779780.333, 3131161.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1420.398 ±(99.9%) 110.016 MB/sec [Average]
[info]   (min, avg, max) = (1376.737, 1420.398, 1451.400), stdev = 28.571
[info]   CI (99.9%): [1310.383, 1530.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   756.320 ±(99.9%) 47.277 B/op [Average]
[info]   (min, avg, max) = (749.590, 756.320, 778.081), stdev = 12.278
[info]   CI (99.9%): [709.043, 803.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1381.132 ±(99.9%) 551.125 MB/sec [Average]
[info]   (min, avg, max) = (1311.840, 1381.132, 1637.104), stdev = 143.125
[info]   CI (99.9%): [830.007, 1932.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   735.765 ±(99.9%) 308.663 B/op [Average]
[info]   (min, avg, max) = (687.151, 735.765, 877.635), stdev = 80.159
[info]   CI (99.9%): [427.102, 1044.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 6.830 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.845, 4.018), stdev = 1.774
[info]   CI (99.9%): [≈ 0, 7.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.460 ±(99.9%) 3.720 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.460, 2.188), stdev = 0.966
[info]   CI (99.9%): [≈ 0, 4.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 13.000), stdev = 3.362
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1706896.315 ops/s
[info] # Warmup Iteration   2: 2589718.672 ops/s
[info] # Warmup Iteration   3: 3119618.090 ops/s
[info] Iteration   1: 3121270.859 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3138701.613 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3215882.590 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3214907.819 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3225598.448 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3183272.266 ±(99.9%) 189489.877 ops/s [Average]
[info]   (min, avg, max) = (3121270.859, 3183272.266, 3225598.448), stdev = 49209.919
[info]   CI (99.9%): [2993782.389, 3372762.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51694.028 ops/s
[info] # Warmup Iteration   2: 547458.754 ops/s
[info] # Warmup Iteration   3: 631820.177 ops/s
[info] Iteration   1: 946860.282 ops/s
[info]                  ·gc.alloc.rate:                   1023.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              1700.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1601.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1023781.471 ops/s
[info]                  ·gc.alloc.rate:                   1103.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              1695.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1285.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1976.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1012039.129 ops/s
[info]                  ·gc.alloc.rate:                   1090.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              1694.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.550 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1030249.767 ops/s
[info]                  ·gc.alloc.rate:                   1112.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              1699.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1473.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.485 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1033879.455 ops/s
[info]                  ·gc.alloc.rate:                   1105.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              1683.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1955.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.887 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   1009362.021 ±(99.9%) 138287.948 ops/s [Average]
[info]   (min, avg, max) = (946860.282, 1009362.021, 1033879.455), stdev = 35912.941
[info]   CI (99.9%): [871074.072, 1147649.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1086.920 ±(99.9%) 140.959 MB/sec [Average]
[info]   (min, avg, max) = (1023.085, 1086.920, 1112.553), stdev = 36.607
[info]   CI (99.9%): [945.961, 1227.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1694.740 ±(99.9%) 26.098 B/op [Average]
[info]   (min, avg, max) = (1683.396, 1694.740, 1700.508), stdev = 6.778
[info]   CI (99.9%): [1668.642, 1720.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1092.693 ±(99.9%) 676.192 MB/sec [Average]
[info]   (min, avg, max) = (963.224, 1092.693, 1285.772), stdev = 175.605
[info]   CI (99.9%): [416.501, 1768.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1701.430 ±(99.9%) 947.295 B/op [Average]
[info]   (min, avg, max) = (1473.557, 1701.430, 1976.376), stdev = 246.009
[info]   CI (99.9%): [754.135, 2648.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.089 ±(99.9%) 3.205 MB/sec [Average]
[info]   (min, avg, max) = (0.237, 1.089, 2.282), stdev = 0.832
[info]   CI (99.9%): [≈ 0, 4.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.673 ±(99.9%) 4.858 B/op [Average]
[info]   (min, avg, max) = (0.394, 1.673, 3.485), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 6.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 14.000), stdev = 3.271
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20257.704 ops/s
[info] # Warmup Iteration   2: 183271.165 ops/s
[info] # Warmup Iteration   3: 199284.797 ops/s
[info] Iteration   1: 221356.264 ops/s
[info]                  ·gc.alloc.rate:                   3045.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              21650.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2918.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20748.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.857 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.201 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 235401.119 ops/s
[info]                  ·gc.alloc.rate:                   2928.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              19576.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2950.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19723.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.202 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.037 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 232245.725 ops/s
[info]                  ·gc.alloc.rate:                   2878.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              19508.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2654.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17984.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 228669.460 ops/s
[info]                  ·gc.alloc.rate:                   2867.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              19732.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2682.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18457.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 230874.499 ops/s
[info]                  ·gc.alloc.rate:                   2908.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              19824.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3038.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20714.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.426 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   229709.414 ±(99.9%) 20288.401 ops/s [Average]
[info]   (min, avg, max) = (221356.264, 229709.414, 235401.119), stdev = 5268.833
[info]   CI (99.9%): [209421.013, 249997.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2925.774 ±(99.9%) 274.566 MB/sec [Average]
[info]   (min, avg, max) = (2867.283, 2925.774, 3045.845), stdev = 71.304
[info]   CI (99.9%): [2651.208, 3200.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20058.599 ±(99.9%) 3460.303 B/op [Average]
[info]   (min, avg, max) = (19508.428, 20058.599, 21650.541), stdev = 898.630
[info]   CI (99.9%): [16598.296, 23518.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2848.848 ±(99.9%) 658.841 MB/sec [Average]
[info]   (min, avg, max) = (2654.024, 2848.848, 3038.960), stdev = 171.099
[info]   CI (99.9%): [2190.007, 3507.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19525.639 ±(99.9%) 4895.088 B/op [Average]
[info]   (min, avg, max) = (17984.101, 19525.639, 20748.054), stdev = 1271.239
[info]   CI (99.9%): [14630.551, 24420.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.645 ±(99.9%) 3.235 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.645, 1.857), stdev = 0.840
[info]   CI (99.9%): [≈ 0, 3.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.475 ±(99.9%) 22.714 B/op [Average]
[info]   (min, avg, max) = (0.287, 4.475, 13.201), stdev = 5.899
[info]   CI (99.9%): [≈ 0, 27.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 16.000), stdev = 2.490
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44823.747 ops/s
[info] # Warmup Iteration   2: 332407.631 ops/s
[info] # Warmup Iteration   3: 394098.899 ops/s
[info] Iteration   1: 423009.854 ops/s
[info]                  ·gc.alloc.rate:                   276.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              1029.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.582 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 424265.925 ops/s
[info]                  ·gc.alloc.rate:                   277.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              1030.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1194.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 423960.664 ops/s
[info]                  ·gc.alloc.rate:               278.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          1034.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1195.638 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 423173.993 ops/s
[info]                  ·gc.alloc.rate:               280.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          1043.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1202.814 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 421123.982 ops/s
[info]                  ·gc.alloc.rate:                   280.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1208.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   423106.884 ±(99.9%) 4723.179 ops/s [Average]
[info]   (min, avg, max) = (421123.982, 423106.884, 424265.925), stdev = 1226.595
[info]   CI (99.9%): [418383.705, 427830.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   278.863 ±(99.9%) 6.890 MB/sec [Average]
[info]   (min, avg, max) = (276.635, 278.863, 280.666), stdev = 1.789
[info]   CI (99.9%): [271.973, 285.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1037.254 ±(99.9%) 33.388 B/op [Average]
[info]   (min, avg, max) = (1029.204, 1037.254, 1048.849), stdev = 8.671
[info]   CI (99.9%): [1003.867, 1070.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   322.693 ±(99.9%) 2.643 MB/sec [Average]
[info]   (min, avg, max) = (322.086, 322.693, 323.431), stdev = 0.686
[info]   CI (99.9%): [320.051, 325.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1200.279 ±(99.9%) 21.921 B/op [Average]
[info]   (min, avg, max) = (1194.723, 1200.279, 1208.662), stdev = 5.693
[info]   CI (99.9%): [1178.358, 1222.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.412 ±(99.9%) 3.501 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.412, 2.038), stdev = 0.909
[info]   CI (99.9%): [≈ 0, 3.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.532 ±(99.9%) 13.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.532, 7.582), stdev = 3.382
[info]   CI (99.9%): [≈ 0, 14.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:18:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 550246.634 ops/s
[info] # Warmup Iteration   2: 1081587.372 ops/s
[info] # Warmup Iteration   3: 1310094.418 ops/s
[info] Iteration   1: 1318561.767 ops/s
[info]                  ·gc.alloc.rate:               260.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 305.311 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1301698.726 ops/s
[info]                  ·gc.alloc.rate:                   257.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1307060.800 ops/s
[info]                  ·gc.alloc.rate:               260.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 394.631 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1320140.143 ops/s
[info]                  ·gc.alloc.rate:                   265.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              316.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1319228.814 ops/s
[info]                  ·gc.alloc.rate:               264.447 MB/sec
[info]                  ·gc.alloc.rate.norm:          315.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 391.363 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1313338.050 ±(99.9%) 32396.626 ops/s [Average]
[info]   (min, avg, max) = (1301698.726, 1313338.050, 1320140.143), stdev = 8413.301
[info]   CI (99.9%): [1280941.424, 1345734.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   261.721 ±(99.9%) 12.486 MB/sec [Average]
[info]   (min, avg, max) = (257.382, 261.721, 265.411), stdev = 3.243
[info]   CI (99.9%): [249.235, 274.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   313.585 ±(99.9%) 9.333 B/op [Average]
[info]   (min, avg, max) = (311.011, 313.585, 316.301), stdev = 2.424
[info]   CI (99.9%): [304.252, 322.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   299.060 ±(99.9%) 152.047 MB/sec [Average]
[info]   (min, avg, max) = (255.804, 299.060, 328.082), stdev = 39.486
[info]   CI (99.9%): [147.013, 451.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   358.255 ±(99.9%) 179.330 B/op [Average]
[info]   (min, avg, max) = (305.311, 358.255, 394.631), stdev = 46.571
[info]   CI (99.9%): [178.925, 537.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.025), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5548.003 ops/s
[info] # Warmup Iteration   2: 78419.739 ops/s
[info] # Warmup Iteration   3: 119849.829 ops/s
[info] Iteration   1: 126801.367 ops/s
[info]                  ·gc.alloc.rate:                   4151.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              51533.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3971.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49290.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.326 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 127471.828 ops/s
[info]                  ·gc.alloc.rate:                   4219.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              52055.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4355.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53729.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.770 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 127378.270 ops/s
[info]                  ·gc.alloc.rate:                   4215.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              52063.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4057.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50111.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 126944.720 ops/s
[info]                  ·gc.alloc.rate:                   4187.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              51909.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3735.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46306.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.774 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 124728.969 ops/s
[info]                  ·gc.alloc.rate:                   4130.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              52118.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4082.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51506.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   126665.031 ±(99.9%) 4307.209 ops/s [Average]
[info]   (min, avg, max) = (124728.969, 126665.031, 127471.828), stdev = 1118.569
[info]   CI (99.9%): [122357.822, 130972.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4180.992 ±(99.9%) 150.111 MB/sec [Average]
[info]   (min, avg, max) = (4130.803, 4180.992, 4219.843), stdev = 38.983
[info]   CI (99.9%): [4030.881, 4331.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51936.087 ±(99.9%) 915.623 B/op [Average]
[info]   (min, avg, max) = (51533.660, 51936.087, 52118.042), stdev = 237.784
[info]   CI (99.9%): [51020.464, 52851.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4040.286 ±(99.9%) 859.235 MB/sec [Average]
[info]   (min, avg, max) = (3735.395, 4040.286, 4355.531), stdev = 223.141
[info]   CI (99.9%): [3181.051, 4899.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50188.869 ±(99.9%) 10572.545 B/op [Average]
[info]   (min, avg, max) = (46306.979, 50188.869, 53729.543), stdev = 2745.656
[info]   CI (99.9%): [39616.325, 60761.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.251 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.187), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.929 ±(99.9%) 3.114 B/op [Average]
[info]   (min, avg, max) = (0.263, 0.929, 2.326), stdev = 0.809
[info]   CI (99.9%): [≈ 0, 4.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   60.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.800, 18.000), stdev = 1.095
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82101.420 ops/s
[info] # Warmup Iteration   2: 330852.235 ops/s
[info] # Warmup Iteration   3: 327676.105 ops/s
[info] Iteration   1: 350177.968 ops/s
[info]                  ·gc.alloc.rate:                   1902.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              8549.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7329.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.456 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 350530.449 ops/s
[info]                  ·gc.alloc.rate:                   1907.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              8562.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8751.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.654 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 335231.811 ops/s
[info]                  ·gc.alloc.rate:                   1821.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              8550.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7679.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 343583.318 ops/s
[info]                  ·gc.alloc.rate:                   1898.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              8695.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9077.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 349956.560 ops/s
[info]                  ·gc.alloc.rate:                   1933.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              8694.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8999.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   345896.021 ±(99.9%) 25496.884 ops/s [Average]
[info]   (min, avg, max) = (335231.811, 345896.021, 350530.449), stdev = 6621.460
[info]   CI (99.9%): [320399.137, 371392.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1892.594 ±(99.9%) 162.069 MB/sec [Average]
[info]   (min, avg, max) = (1821.370, 1892.594, 1933.427), stdev = 42.089
[info]   CI (99.9%): [1730.526, 2054.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8610.610 ±(99.9%) 297.441 B/op [Average]
[info]   (min, avg, max) = (8549.896, 8610.610, 8695.733), stdev = 77.244
[info]   CI (99.9%): [8313.169, 8908.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1839.806 ±(99.9%) 729.461 MB/sec [Average]
[info]   (min, avg, max) = (1630.798, 1839.806, 2001.336), stdev = 189.439
[info]   CI (99.9%): [1110.345, 2569.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8367.370 ±(99.9%) 3106.441 B/op [Average]
[info]   (min, avg, max) = (7329.015, 8367.370, 9077.484), stdev = 806.733
[info]   CI (99.9%): [5260.929, 11473.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.341 ±(99.9%) 2.364 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.341, 1.436), stdev = 0.614
[info]   CI (99.9%): [≈ 0, 2.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.536 ±(99.9%) 10.621 B/op [Average]
[info]   (min, avg, max) = (0.098, 1.536, 6.456), stdev = 2.758
[info]   CI (99.9%): [≈ 0, 12.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 697331.365 ops/s
[info] # Warmup Iteration   2: 2073504.727 ops/s
[info] # Warmup Iteration   3: 2171268.710 ops/s
[info] Iteration   1: 2191199.402 ops/s
[info]                  ·gc.alloc.rate:                   608.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2280590.849 ops/s
[info]                  ·gc.alloc.rate:                   631.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2230374.683 ops/s
[info]                  ·gc.alloc.rate:               623.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 459.697 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 2183151.475 ops/s
[info]                  ·gc.alloc.rate:                   594.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              428.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2272422.862 ops/s
[info]                  ·gc.alloc.rate:                   635.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     452.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.489 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   2231547.854 ±(99.9%) 172717.209 ops/s [Average]
[info]   (min, avg, max) = (2183151.475, 2231547.854, 2280590.849), stdev = 44854.111
[info]   CI (99.9%): [2058830.645, 2404265.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   618.946 ±(99.9%) 65.302 MB/sec [Average]
[info]   (min, avg, max) = (594.960, 618.946, 635.346), stdev = 16.959
[info]   CI (99.9%): [553.645, 684.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   436.440 ±(99.9%) 17.791 B/op [Average]
[info]   (min, avg, max) = (428.853, 436.440, 440.273), stdev = 4.620
[info]   CI (99.9%): [418.649, 454.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.173 ±(99.9%) 559.144 MB/sec [Average]
[info]   (min, avg, max) = (326.429, 586.173, 653.156), stdev = 145.208
[info]   CI (99.9%): [27.029, 1145.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   412.499 ±(99.9%) 382.364 B/op [Average]
[info]   (min, avg, max) = (235.293, 412.499, 466.504), stdev = 99.299
[info]   CI (99.9%): [30.135, 794.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.735 ±(99.9%) 6.153 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.735, 3.594), stdev = 1.598
[info]   CI (99.9%): [≈ 0, 6.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.510 ±(99.9%) 4.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.510, 2.489), stdev = 1.106
[info]   CI (99.9%): [≈ 0, 4.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.191
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1914487.075 ops/s
[info] # Warmup Iteration   2: 2714051.462 ops/s
[info] # Warmup Iteration   3: 3433855.514 ops/s
[info] Iteration   1: 3349383.247 ops/s
[info]                  ·gc.alloc.rate:                   923.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     308.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3449393.138 ops/s
[info]                  ·gc.alloc.rate:                   961.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3458364.977 ops/s
[info]                  ·gc.alloc.rate:                   953.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.487 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3413044.362 ops/s
[info]                  ·gc.alloc.rate:                   940.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     453.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3485886.760 ops/s
[info]                  ·gc.alloc.rate:                   971.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   3431214.497 ±(99.9%) 202691.466 ops/s [Average]
[info]   (min, avg, max) = (3349383.247, 3431214.497, 3485886.760), stdev = 52638.330
[info]   CI (99.9%): [3228523.030, 3633905.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   950.130 ±(99.9%) 71.864 MB/sec [Average]
[info]   (min, avg, max) = (923.840, 950.130, 971.362), stdev = 18.663
[info]   CI (99.9%): [878.265, 1021.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   435.755 ±(99.9%) 10.314 B/op [Average]
[info]   (min, avg, max) = (433.440, 435.755, 438.868), stdev = 2.678
[info]   CI (99.9%): [425.442, 446.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.022 ±(99.9%) 565.168 MB/sec [Average]
[info]   (min, avg, max) = (657.527, 920.022, 989.216), stdev = 146.772
[info]   CI (99.9%): [354.854, 1485.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   421.318 ±(99.9%) 242.363 B/op [Average]
[info]   (min, avg, max) = (308.946, 421.318, 453.710), stdev = 62.941
[info]   CI (99.9%): [178.955, 663.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.851 ±(99.9%) 5.398 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.851, 3.268), stdev = 1.402
[info]   CI (99.9%): [≈ 0, 6.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 2.457 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.389, 1.487), stdev = 0.638
[info]   CI (99.9%): [≈ 0, 2.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.050
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:17:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 998960.047 ops/s
[info] # Warmup Iteration   2: 3153779.923 ops/s
[info] # Warmup Iteration   3: 3637143.103 ops/s
[info] Iteration   1: 3622164.474 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3646772.989 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3625216.622 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3624740.271 ops/s
[info]                  ·gc.alloc.rate:      1.134 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.492 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3626400.563 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3629058.984 ±(99.9%) 38593.100 ops/s [Average]
[info]   (min, avg, max) = (3622164.474, 3629058.984, 3646772.989), stdev = 10022.505
[info]   CI (99.9%): [3590465.884, 3667652.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.227 ±(99.9%) 1.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.227, 1.134), stdev = 0.507
[info]   CI (99.9%): [≈ 0, 2.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.099 ±(99.9%) 0.848 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.099, 0.492), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 0.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6523.184 ops/s
[info] # Warmup Iteration   2: 28789.465 ops/s
[info] # Warmup Iteration   3: 47709.911 ops/s
[info] Iteration   1: 51390.240 ops/s
[info]                  ·gc.alloc.rate:                   2188.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              67016.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69557.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150.587 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 59387.605 ops/s
[info]                  ·gc.alloc.rate:                   2079.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              55108.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51303.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.451 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 59401.985 ops/s
[info]                  ·gc.alloc.rate:                   2078.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              55064.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51536.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.861 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 58354.700 ops/s
[info]                  ·gc.alloc.rate:                   2053.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              55359.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53090.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.246 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 58047.319 ops/s
[info]                  ·gc.alloc.rate:                   2060.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              55870.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53912.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   57316.370 ±(99.9%) 12968.618 ops/s [Average]
[info]   (min, avg, max) = (51390.240, 57316.370, 59401.985), stdev = 3367.909
[info]   CI (99.9%): [44347.752, 70284.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2092.150 ±(99.9%) 211.677 MB/sec [Average]
[info]   (min, avg, max) = (2053.287, 2092.150, 2188.348), stdev = 54.972
[info]   CI (99.9%): [1880.473, 2303.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   57684.149 ±(99.9%) 20127.180 B/op [Average]
[info]   (min, avg, max) = (55064.336, 57684.149, 67016.830), stdev = 5226.965
[info]   CI (99.9%): [37556.969, 77811.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2022.109 ±(99.9%) 542.189 MB/sec [Average]
[info]   (min, avg, max) = (1936.217, 2022.109, 2271.312), stdev = 140.805
[info]   CI (99.9%): [1479.919, 2564.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   55880.182 ±(99.9%) 29735.905 B/op [Average]
[info]   (min, avg, max) = (51303.340, 55880.182, 69557.568), stdev = 7722.320
[info]   CI (99.9%): [26144.277, 85616.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.226 ±(99.9%) 11.349 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.226, 5.942), stdev = 2.947
[info]   CI (99.9%): [≈ 0, 13.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   63.055 ±(99.9%) 319.911 B/op [Average]
[info]   (min, avg, max) = (1.129, 63.055, 157.451), stdev = 83.080
[info]   CI (99.9%): [≈ 0, 382.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.200, 26.000), stdev = 7.727
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37517.714 ops/s
[info] # Warmup Iteration   2: 217979.427 ops/s
[info] # Warmup Iteration   3: 265326.408 ops/s
[info] Iteration   1: 309193.610 ops/s
[info]                  ·gc.alloc.rate:                   3291.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              16755.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3222.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16401.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.089 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 314263.820 ops/s
[info]                  ·gc.alloc.rate:                   3378.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              16914.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3267.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16362.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 315733.649 ops/s
[info]                  ·gc.alloc.rate:                   3414.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              17018.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2994.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14927.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 313718.210 ops/s
[info]                  ·gc.alloc.rate:                   3396.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              17033.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3366.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16884.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.313 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 316988.808 ops/s
[info]                  ·gc.alloc.rate:                   3430.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              17030.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16814.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   313979.620 ±(99.9%) 11420.718 ops/s [Average]
[info]   (min, avg, max) = (309193.610, 313979.620, 316988.808), stdev = 2965.924
[info]   CI (99.9%): [302558.901, 325400.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3382.178 ±(99.9%) 208.537 MB/sec [Average]
[info]   (min, avg, max) = (3291.867, 3382.178, 3430.427), stdev = 54.156
[info]   CI (99.9%): [3173.641, 3590.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   16950.514 ±(99.9%) 460.773 B/op [Average]
[info]   (min, avg, max) = (16755.235, 16950.514, 17033.405), stdev = 119.661
[info]   CI (99.9%): [16489.742, 17411.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3247.649 ±(99.9%) 604.319 MB/sec [Average]
[info]   (min, avg, max) = (2994.750, 3247.649, 3386.852), stdev = 156.940
[info]   CI (99.9%): [2643.330, 3851.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16277.977 ±(99.9%) 3045.521 B/op [Average]
[info]   (min, avg, max) = (14927.241, 16277.977, 16884.542), stdev = 790.912
[info]   CI (99.9%): [13232.456, 19323.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.351 ±(99.9%) 2.666 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.351, 1.589), stdev = 0.692
[info]   CI (99.9%): [≈ 0, 3.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.784 ±(99.9%) 13.574 B/op [Average]
[info]   (min, avg, max) = (0.103, 1.784, 8.089), stdev = 3.525
[info]   CI (99.9%): [≈ 0, 15.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.800, 18.000), stdev = 2.280
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81209.721 ops/s
[info] # Warmup Iteration   2: 484973.990 ops/s
[info] # Warmup Iteration   3: 590087.674 ops/s
[info] Iteration   1: 695449.939 ops/s
[info]                  ·gc.alloc.rate:                   1913.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              4331.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4430.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 694705.293 ops/s
[info]                  ·gc.alloc.rate:                   1904.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              4314.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3726.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 696036.934 ops/s
[info]                  ·gc.alloc.rate:                   1914.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              4327.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4502.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 696450.899 ops/s
[info]                  ·gc.alloc.rate:                   1928.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              4358.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3779.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 655263.720 ops/s
[info]                  ·gc.alloc.rate:                   1826.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              4385.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4847.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   687581.357 ±(99.9%) 69612.046 ops/s [Average]
[info]   (min, avg, max) = (655263.720, 687581.357, 696450.899), stdev = 18078.027
[info]   CI (99.9%): [617969.311, 757193.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1897.550 ±(99.9%) 157.144 MB/sec [Average]
[info]   (min, avg, max) = (1826.170, 1897.550, 1928.707), stdev = 40.810
[info]   CI (99.9%): [1740.406, 2054.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4343.615 ±(99.9%) 109.506 B/op [Average]
[info]   (min, avg, max) = (4314.808, 4343.615, 4385.793), stdev = 28.438
[info]   CI (99.9%): [4234.109, 4453.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1856.915 ±(99.9%) 702.756 MB/sec [Average]
[info]   (min, avg, max) = (1644.976, 1856.915, 2018.218), stdev = 182.504
[info]   CI (99.9%): [1154.159, 2559.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4257.001 ±(99.9%) 1875.012 B/op [Average]
[info]   (min, avg, max) = (3726.211, 4257.001, 4847.022), stdev = 486.935
[info]   CI (99.9%): [2381.990, 6132.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.759 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.129, 0.479), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 0.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.294 ±(99.9%) 1.716 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.294, 1.084), stdev = 0.446
[info]   CI (99.9%): [≈ 0, 2.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1452712.374 ops/s
[info] # Warmup Iteration   2: 2286138.158 ops/s
[info] # Warmup Iteration   3: 2854588.642 ops/s
[info] Iteration   1: 2917171.790 ops/s
[info]                  ·gc.alloc.rate:                   1040.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     532.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2934147.162 ops/s
[info]                  ·gc.alloc.rate:               1040.401 MB/sec
[info]                  ·gc.alloc.rate.norm:          557.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 530.968 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 2937245.698 ops/s
[info]                  ·gc.alloc.rate:                   1037.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     530.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.769 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2803959.560 ops/s
[info]                  ·gc.alloc.rate:                   1058.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              594.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2882863.854 ops/s
[info]                  ·gc.alloc.rate:                   1027.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2895077.613 ±(99.9%) 213045.424 ops/s [Average]
[info]   (min, avg, max) = (2803959.560, 2895077.613, 2937245.698), stdev = 55327.220
[info]   CI (99.9%): [2682032.189, 3108123.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1040.721 ±(99.9%) 43.465 MB/sec [Average]
[info]   (min, avg, max) = (1027.164, 1040.721, 1058.469), stdev = 11.288
[info]   CI (99.9%): [997.256, 1084.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   565.902 ±(99.9%) 61.132 B/op [Average]
[info]   (min, avg, max) = (555.845, 565.902, 594.053), stdev = 15.876
[info]   CI (99.9%): [504.769, 627.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   987.529 ±(99.9%) 10.732 MB/sec [Average]
[info]   (min, avg, max) = (983.535, 987.529, 990.056), stdev = 2.787
[info]   CI (99.9%): [976.797, 998.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   536.903 ±(99.9%) 36.736 B/op [Average]
[info]   (min, avg, max) = (530.424, 536.903, 553.382), stdev = 9.540
[info]   CI (99.9%): [500.167, 573.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.769 ±(99.9%) 5.514 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.769, 3.303), stdev = 1.432
[info]   CI (99.9%): [≈ 0, 6.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.414 ±(99.9%) 2.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.414, 1.769), stdev = 0.767
[info]   CI (99.9%): [≈ 0, 3.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:16:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1443.156 ops/s
[info] # Warmup Iteration   2: 82353.824 ops/s
[info] # Warmup Iteration   3: 110584.989 ops/s
[info] Iteration   1: 125786.778 ops/s
[info]                  ·gc.alloc.rate:                   4233.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              52957.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4295.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53737.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.471 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.399 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 119258.051 ops/s
[info]                  ·gc.alloc.rate:                   4033.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              53226.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3966.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52342.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.151 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.772 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   3: 134780.082 ops/s
[info]                  ·gc.alloc.rate:                   4148.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              48433.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3960.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46242.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.221 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   4: 136025.492 ops/s
[info]                  ·gc.alloc.rate:                   4230.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              48944.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3971.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45952.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 138059.526 ops/s
[info]                  ·gc.alloc.rate:                   4307.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              49093.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4357.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49658.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.712 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   130781.986 ±(99.9%) 30696.353 ops/s [Average]
[info]   (min, avg, max) = (119258.051, 130781.986, 138059.526), stdev = 7971.745
[info]   CI (99.9%): [100085.633, 161478.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4190.648 ±(99.9%) 401.757 MB/sec [Average]
[info]   (min, avg, max) = (4033.579, 4190.648, 4307.446), stdev = 104.335
[info]   CI (99.9%): [3788.891, 4592.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50530.858 ±(99.9%) 9058.348 B/op [Average]
[info]   (min, avg, max) = (48433.557, 50530.858, 53226.067), stdev = 2352.424
[info]   CI (99.9%): [41472.510, 59589.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4110.412 ±(99.9%) 764.395 MB/sec [Average]
[info]   (min, avg, max) = (3960.536, 4110.412, 4357.073), stdev = 198.511
[info]   CI (99.9%): [3346.017, 4874.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49586.799 ±(99.9%) 13507.369 B/op [Average]
[info]   (min, avg, max) = (45952.655, 49586.799, 53737.863), stdev = 3507.821
[info]   CI (99.9%): [36079.431, 63094.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.834 ±(99.9%) 7.317 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.834, 4.151), stdev = 1.900
[info]   CI (99.9%): [≈ 0, 9.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.917 ±(99.9%) 92.956 B/op [Average]
[info]   (min, avg, max) = (0.482, 22.917, 54.772), stdev = 24.140
[info]   CI (99.9%): [≈ 0, 115.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   62.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.400, 13.000), stdev = 0.548
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   122.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 24.400, 30.000), stdev = 5.683
[info]   CI (99.9%): [122.000, 122.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71755.610 ops/s
[info] # Warmup Iteration   2: 290552.542 ops/s
[info] # Warmup Iteration   3: 300492.871 ops/s
[info] Iteration   1: 322225.288 ops/s
[info]                  ·gc.alloc.rate:                   2552.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              12464.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2603.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12715.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.322 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 324881.644 ops/s
[info]                  ·gc.alloc.rate:                   2548.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              12343.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11099.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 309912.844 ops/s
[info]                  ·gc.alloc.rate:                   2479.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              12591.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2652.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13466.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 315960.665 ops/s
[info]                  ·gc.alloc.rate:                   2521.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              12559.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2345.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11681.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 318984.678 ops/s
[info]                  ·gc.alloc.rate:                   2506.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              12365.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2361.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11649.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   318393.024 ±(99.9%) 22367.594 ops/s [Average]
[info]   (min, avg, max) = (309912.844, 318393.024, 324881.644), stdev = 5808.793
[info]   CI (99.9%): [296025.430, 340760.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2521.598 ±(99.9%) 115.731 MB/sec [Average]
[info]   (min, avg, max) = (2479.683, 2521.598, 2552.103), stdev = 30.055
[info]   CI (99.9%): [2405.867, 2637.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12464.854 ±(99.9%) 428.840 B/op [Average]
[info]   (min, avg, max) = (12343.144, 12464.854, 12591.648), stdev = 111.368
[info]   CI (99.9%): [12036.014, 12893.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2450.690 ±(99.9%) 633.794 MB/sec [Average]
[info]   (min, avg, max) = (2291.318, 2450.690, 2652.024), stdev = 164.594
[info]   CI (99.9%): [1816.896, 3084.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12122.425 ±(99.9%) 3664.830 B/op [Average]
[info]   (min, avg, max) = (11099.415, 12122.425, 13466.788), stdev = 951.745
[info]   CI (99.9%): [8457.596, 15787.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.417 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.271), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.410 ±(99.9%) 2.033 B/op [Average]
[info]   (min, avg, max) = (0.101, 0.410, 1.322), stdev = 0.528
[info]   CI (99.9%): [≈ 0, 2.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 505172.333 ops/s
[info] # Warmup Iteration   2: 1877699.264 ops/s
[info] # Warmup Iteration   3: 2044475.918 ops/s
[info] Iteration   1: 2044851.466 ops/s
[info]                  ·gc.alloc.rate:                   725.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              558.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     751.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2041914.348 ops/s
[info]                  ·gc.alloc.rate:                   716.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2029870.194 ops/s
[info]                  ·gc.alloc.rate:                   724.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2033492.348 ops/s
[info]                  ·gc.alloc.rate:                   710.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.685 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2051401.060 ops/s
[info]                  ·gc.alloc.rate:                   715.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     501.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   2040305.883 ±(99.9%) 33440.815 ops/s [Average]
[info]   (min, avg, max) = (2029870.194, 2040305.883, 2051401.060), stdev = 8684.473
[info]   CI (99.9%): [2006865.069, 2073746.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   718.536 ±(99.9%) 25.422 MB/sec [Average]
[info]   (min, avg, max) = (710.171, 718.536, 725.786), stdev = 6.602
[info]   CI (99.9%): [693.114, 743.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   554.201 ±(99.9%) 21.890 B/op [Average]
[info]   (min, avg, max) = (549.225, 554.201, 561.847), stdev = 5.685
[info]   CI (99.9%): [532.311, 576.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   718.602 ±(99.9%) 556.210 MB/sec [Average]
[info]   (min, avg, max) = (653.035, 718.602, 976.993), stdev = 144.446
[info]   CI (99.9%): [162.392, 1274.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   554.142 ±(99.9%) 425.757 B/op [Average]
[info]   (min, avg, max) = (501.866, 554.142, 751.892), stdev = 110.568
[info]   CI (99.9%): [128.386, 979.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.874 ±(99.9%) 5.735 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.874, 3.469), stdev = 1.489
[info]   CI (99.9%): [≈ 0, 6.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.676 ±(99.9%) 4.439 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.676, 2.685), stdev = 1.153
[info]   CI (99.9%): [≈ 0, 5.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 14.000), stdev = 3.912
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1434842.038 ops/s
[info] # Warmup Iteration   2: 2494780.169 ops/s
[info] # Warmup Iteration   3: 2774171.610 ops/s
[info] Iteration   1: 2670404.777 ops/s
[info]                  ·gc.alloc.rate:                   1002.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              590.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     581.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2786763.431 ops/s
[info]                  ·gc.alloc.rate:               980.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 557.897 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 2805053.036 ops/s
[info]                  ·gc.alloc.rate:                   983.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.594 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.667 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2779199.872 ops/s
[info]                  ·gc.alloc.rate:                   963.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              545.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2790487.966 ops/s
[info]                  ·gc.alloc.rate:                   968.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              546.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2766381.816 ±(99.9%) 209744.141 ops/s [Average]
[info]   (min, avg, max) = (2670404.777, 2766381.816, 2805053.036), stdev = 54469.887
[info]   CI (99.9%): [2556637.676, 2976125.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   979.568 ±(99.9%) 59.205 MB/sec [Average]
[info]   (min, avg, max) = (963.120, 979.568, 1002.714), stdev = 15.375
[info]   CI (99.9%): [920.363, 1038.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   557.543 ±(99.9%) 73.126 B/op [Average]
[info]   (min, avg, max) = (545.380, 557.543, 590.922), stdev = 18.991
[info]   CI (99.9%): [484.418, 630.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   854.444 ±(99.9%) 700.426 MB/sec [Average]
[info]   (min, avg, max) = (654.182, 854.444, 987.942), stdev = 181.899
[info]   CI (99.9%): [154.017, 1554.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   486.750 ±(99.9%) 411.399 B/op [Average]
[info]   (min, avg, max) = (368.943, 486.750, 581.058), stdev = 106.839
[info]   CI (99.9%): [75.350, 898.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.667), stdev = 1.601
[info]   CI (99.9%): [≈ 0, 6.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.456 ±(99.9%) 3.459 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.456, 2.057), stdev = 0.898
[info]   CI (99.9%): [≈ 0, 3.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 4.266
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1656777.771 ops/s
[info] # Warmup Iteration   2: 2481982.023 ops/s
[info] # Warmup Iteration   3: 2841046.842 ops/s
[info] Iteration   1: 2841555.627 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2850488.506 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2843583.587 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2848512.986 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2848400.656 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2846508.272 ±(99.9%) 14475.135 ops/s [Average]
[info]   (min, avg, max) = (2841555.627, 2846508.272, 2850488.506), stdev = 3759.147
[info]   CI (99.9%): [2832033.138, 2860983.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:15:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58681.066 ops/s
[info] # Warmup Iteration   2: 471712.630 ops/s
[info] # Warmup Iteration   3: 701397.969 ops/s
[info] Iteration   1: 761862.205 ops/s
[info]                  ·gc.alloc.rate:                   4634.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              9572.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4660.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9625.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 764618.267 ops/s
[info]                  ·gc.alloc.rate:                   4678.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              9629.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4384.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9024.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 763011.563 ops/s
[info]                  ·gc.alloc.rate:                   4663.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              9618.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4411.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9098.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 763458.140 ops/s
[info]                  ·gc.alloc.rate:                   4667.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              9619.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4421.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9112.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 764915.966 ops/s
[info]                  ·gc.alloc.rate:                   4689.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              9647.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4765.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9805.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   763573.228 ±(99.9%) 4775.173 ops/s [Average]
[info]   (min, avg, max) = (761862.205, 763573.228, 764915.966), stdev = 1240.097
[info]   CI (99.9%): [758798.055, 768348.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   4666.658 ±(99.9%) 79.310 MB/sec [Average]
[info]   (min, avg, max) = (4634.474, 4666.658, 4689.181), stdev = 20.597
[info]   CI (99.9%): [4587.348, 4745.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9617.366 ±(99.9%) 106.234 B/op [Average]
[info]   (min, avg, max) = (9572.651, 9617.366, 9647.342), stdev = 27.589
[info]   CI (99.9%): [9511.132, 9723.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   4528.780 ±(99.9%) 665.261 MB/sec [Average]
[info]   (min, avg, max) = (4384.861, 4528.780, 4765.844), stdev = 172.766
[info]   CI (99.9%): [3863.519, 5194.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9333.265 ±(99.9%) 1370.958 B/op [Average]
[info]   (min, avg, max) = (9024.886, 9333.265, 9805.066), stdev = 356.033
[info]   CI (99.9%): [7962.307, 10704.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.146), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.155 ±(99.9%) 0.399 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.155, 0.301), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   67.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.400, 14.000), stdev = 0.548
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   98.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 19.600, 21.000), stdev = 0.894
[info]   CI (99.9%): [98.000, 98.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5200.724 ops/s
[info] # Warmup Iteration   2: 18031.615 ops/s
[info] # Warmup Iteration   3: 28509.778 ops/s
[info] Iteration   1: 28889.973 ops/s
[info]                  ·gc.alloc.rate:                   1764.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              96093.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106073.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 193.496 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 28616.150 ops/s
[info]                  ·gc.alloc.rate:                   1819.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              100023.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89026.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.262 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 28577.247 ops/s
[info]                  ·gc.alloc.rate:                   1817.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              100096.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107102.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.252 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.969 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 28209.099 ops/s
[info]                  ·gc.alloc.rate:                   1711.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              95456.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90887.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.484 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 28365.466 ops/s
[info]                  ·gc.alloc.rate:                   1699.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              94265.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91120.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.775 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   28531.587 ±(99.9%) 999.075 ops/s [Average]
[info]   (min, avg, max) = (28209.099, 28531.587, 28889.973), stdev = 259.457
[info]   CI (99.9%): [27532.512, 29530.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1762.214 ±(99.9%) 219.021 MB/sec [Average]
[info]   (min, avg, max) = (1699.044, 1762.214, 1819.187), stdev = 56.879
[info]   CI (99.9%): [1543.192, 1981.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   97187.141 ±(99.9%) 10410.766 B/op [Average]
[info]   (min, avg, max) = (94265.269, 97187.141, 100096.708), stdev = 2703.643
[info]   CI (99.9%): [86776.376, 107597.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1756.582 ±(99.9%) 666.998 MB/sec [Average]
[info]   (min, avg, max) = (1619.186, 1756.582, 1947.279), stdev = 173.217
[info]   CI (99.9%): [1089.584, 2423.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   96842.092 ±(99.9%) 34428.948 B/op [Average]
[info]   (min, avg, max) = (89026.927, 96842.092, 107102.741), stdev = 8941.089
[info]   CI (99.9%): [62413.144, 131271.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.195 ±(99.9%) 5.469 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.195, 3.552), stdev = 1.420
[info]   CI (99.9%): [≈ 0, 6.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   65.397 ±(99.9%) 297.727 B/op [Average]
[info]   (min, avg, max) = (3.484, 65.397, 193.496), stdev = 77.319
[info]   CI (99.9%): [≈ 0, 363.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.000, 30.000), stdev = 9.274
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.765 ops/s
[info] # Warmup Iteration   2: 49581.359 ops/s
[info] # Warmup Iteration   3: 93208.319 ops/s
[info] Iteration   1: 93153.100 ops/s
[info]                  ·gc.alloc.rate:                   1220.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              20614.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1239.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20933.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.503 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 98975.125 ops/s
[info]                  ·gc.alloc.rate:                   786.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              12503.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          609.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9691.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.818 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.709 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 94527.889 ops/s
[info]                  ·gc.alloc.rate:                   929.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              15473.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          905.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15083.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.213 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 98791.143 ops/s
[info]                  ·gc.alloc.rate:                   798.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              12718.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          907.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14454.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   5: 100043.896 ops/s
[info]                  ·gc.alloc.rate:                   802.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              12624.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          608.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9578.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.516 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   97098.230 ±(99.9%) 11748.621 ops/s [Average]
[info]   (min, avg, max) = (93153.100, 97098.230, 100043.896), stdev = 3051.079
[info]   CI (99.9%): [85349.610, 108846.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   907.404 ±(99.9%) 709.744 MB/sec [Average]
[info]   (min, avg, max) = (786.357, 907.404, 1220.260), stdev = 184.318
[info]   CI (99.9%): [197.660, 1617.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14787.049 ±(99.9%) 13423.169 B/op [Average]
[info]   (min, avg, max) = (12503.394, 14787.049, 20614.981), stdev = 3485.954
[info]   CI (99.9%): [1363.880, 28210.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   854.173 ±(99.9%) 1007.202 MB/sec [Average]
[info]   (min, avg, max) = (608.913, 854.173, 1239.086), stdev = 261.567
[info]   CI (99.9%): [≈ 0, 1861.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13948.124 ±(99.9%) 18014.407 B/op [Average]
[info]   (min, avg, max) = (9578.238, 13948.124, 20933.030), stdev = 4678.284
[info]   CI (99.9%): [≈ 0, 31962.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   3.512 ±(99.9%) 8.922 MB/sec [Average]
[info]   (min, avg, max) = (0.033, 3.512, 6.517), stdev = 2.317
[info]   CI (99.9%): [≈ 0, 12.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   56.893 ±(99.9%) 141.129 B/op [Average]
[info]   (min, avg, max) = (0.523, 56.893, 102.516), stdev = 36.651
[info]   CI (99.9%): [≈ 0, 198.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   113.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 22.600, 34.000), stdev = 7.893
[info]   CI (99.9%): [113.000, 113.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7497.036 ops/s
[info] # Warmup Iteration   2: 46283.656 ops/s
[info] # Warmup Iteration   3: 61019.006 ops/s
[info] Iteration   1: 68177.441 ops/s
[info]                  ·gc.alloc.rate:                   1478.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              34130.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37245.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.816 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 79500.882 ops/s
[info]                  ·gc.alloc.rate:                   1452.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              28752.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25608.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.736 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 76509.928 ops/s
[info]                  ·gc.alloc.rate:                   1401.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              28837.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26720.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.532 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 81930.578 ops/s
[info]                  ·gc.alloc.rate:                   1468.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              28201.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31316.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 79950.941 ops/s
[info]                  ·gc.alloc.rate:                   1444.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              28439.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25766.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.288 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   77213.954 ±(99.9%) 20836.387 ops/s [Average]
[info]   (min, avg, max) = (68177.441, 77213.954, 81930.578), stdev = 5411.143
[info]   CI (99.9%): [56377.567, 98050.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1449.283 ±(99.9%) 113.872 MB/sec [Average]
[info]   (min, avg, max) = (1401.959, 1449.283, 1478.688), stdev = 29.572
[info]   CI (99.9%): [1335.411, 1563.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   29672.226 ±(99.9%) 9645.995 B/op [Average]
[info]   (min, avg, max) = (28201.007, 29672.226, 34130.339), stdev = 2505.034
[info]   CI (99.9%): [20026.231, 39318.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1429.209 ±(99.9%) 678.841 MB/sec [Average]
[info]   (min, avg, max) = (1293.730, 1429.209, 1630.599), stdev = 176.293
[info]   CI (99.9%): [750.368, 2108.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29331.549 ±(99.9%) 19249.250 B/op [Average]
[info]   (min, avg, max) = (25608.796, 29331.549, 37245.385), stdev = 4998.969
[info]   CI (99.9%): [10082.299, 48580.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.801 ±(99.9%) 5.988 MB/sec [Average]
[info]   (min, avg, max) = (0.852, 2.801, 4.170), stdev = 1.555
[info]   CI (99.9%): [≈ 0, 8.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   57.293 ±(99.9%) 121.810 B/op [Average]
[info]   (min, avg, max) = (17.532, 57.293, 81.736), stdev = 31.634
[info]   CI (99.9%): [≈ 0, 179.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 14.000), stdev = 1.924
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30225.076 ops/s
[info] # Warmup Iteration   2: 76965.620 ops/s
[info] # Warmup Iteration   3: 106195.244 ops/s
[info] Iteration   1: 107117.452 ops/s
[info]                  ·gc.alloc.rate:                   1165.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              17125.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1144.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16815.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.906 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 277.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   2: 118724.755 ops/s
[info]                  ·gc.alloc.rate:                   1347.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              17854.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1433.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18997.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 177.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 133830.306 ops/s
[info]                  ·gc.alloc.rate:                   1133.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              13332.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1158.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13630.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 141260.780 ops/s
[info]                  ·gc.alloc.rate:                   857.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              9547.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          882.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9830.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.883 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 134381.645 ops/s
[info]                  ·gc.alloc.rate:                   826.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              9680.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          897.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10512.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   127062.988 ±(99.9%) 53366.062 ops/s [Average]
[info]   (min, avg, max) = (107117.452, 127062.988, 141260.780), stdev = 13858.997
[info]   CI (99.9%): [73696.926, 180429.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1066.089 ±(99.9%) 848.992 MB/sec [Average]
[info]   (min, avg, max) = (826.823, 1066.089, 1347.172), stdev = 220.480
[info]   CI (99.9%): [217.097, 1915.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   13507.977 ±(99.9%) 15201.746 B/op [Average]
[info]   (min, avg, max) = (9547.330, 13507.977, 17854.517), stdev = 3947.845
[info]   CI (99.9%): [≈ 0, 28709.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1103.474 ±(99.9%) 871.273 MB/sec [Average]
[info]   (min, avg, max) = (882.441, 1103.474, 1433.438), stdev = 226.267
[info]   CI (99.9%): [232.201, 1974.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13957.148 ±(99.9%) 15231.069 B/op [Average]
[info]   (min, avg, max) = (9830.122, 13957.148, 18997.830), stdev = 3955.460
[info]   CI (99.9%): [≈ 0, 29188.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   8.020 ±(99.9%) 30.961 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 8.020, 18.906), stdev = 8.040
[info]   CI (99.9%): [≈ 0, 38.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   109.242 ±(99.9%) 451.214 B/op [Average]
[info]   (min, avg, max) = (1.463, 109.242, 277.735), stdev = 117.179
[info]   CI (99.9%): [≈ 0, 560.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 15.600, 38.000), stdev = 13.939
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3238.548 ops/s
[info] # Warmup Iteration   2: 23037.080 ops/s
[info] # Warmup Iteration   3: 45239.546 ops/s
[info] Iteration   1: 45993.421 ops/s
[info]                  ·gc.alloc.rate:                   2056.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              70375.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66694.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.137 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 47183.852 ops/s
[info]                  ·gc.alloc.rate:                   2141.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              71431.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65099.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 195.792 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 50756.051 ops/s
[info]                  ·gc.alloc.rate:                   2151.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              66687.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2274.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70494.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.227 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 50267.146 ops/s
[info]                  ·gc.alloc.rate:                   2110.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              66063.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61568.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.652 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 49269.735 ops/s
[info]                  ·gc.alloc.rate:                   2092.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              66834.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63494.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.330 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   48694.041 ±(99.9%) 7851.913 ops/s [Average]
[info]   (min, avg, max) = (45993.421, 48694.041, 50756.051), stdev = 2039.117
[info]   CI (99.9%): [40842.128, 56545.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2110.565 ±(99.9%) 147.434 MB/sec [Average]
[info]   (min, avg, max) = (2056.873, 2110.565, 2151.480), stdev = 38.288
[info]   CI (99.9%): [1963.132, 2257.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68278.418 ±(99.9%) 9404.642 B/op [Average]
[info]   (min, avg, max) = (66063.356, 68278.418, 71431.536), stdev = 2442.356
[info]   CI (99.9%): [58873.776, 77683.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2026.011 ±(99.9%) 537.672 MB/sec [Average]
[info]   (min, avg, max) = (1949.289, 2026.011, 2274.285), stdev = 139.632
[info]   CI (99.9%): [1488.340, 2563.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65470.252 ±(99.9%) 13059.240 B/op [Average]
[info]   (min, avg, max) = (61568.071, 65470.252, 70494.413), stdev = 3391.443
[info]   CI (99.9%): [52411.011, 78529.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.220 ±(99.9%) 10.012 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.220, 5.871), stdev = 2.600
[info]   CI (99.9%): [≈ 0, 11.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   40.628 ±(99.9%) 334.023 B/op [Average]
[info]   (min, avg, max) = (0.652, 40.628, 195.792), stdev = 86.745
[info]   CI (99.9%): [≈ 0, 374.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 18.000), stdev = 3.742
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8644.998 ops/s
[info] # Warmup Iteration   2: 27924.816 ops/s
[info] # Warmup Iteration   3: 37730.951 ops/s
[info] Iteration   1: 41246.427 ops/s
[info]                  ·gc.alloc.rate:                   1000.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              38160.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37312.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 40638.576 ops/s
[info]                  ·gc.alloc.rate:                   830.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              32157.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37920.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.285 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.455 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 44523.018 ops/s
[info]                  ·gc.alloc.rate:                   904.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              31985.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23074.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 42255.411 ops/s
[info]                  ·gc.alloc.rate:                   847.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              31546.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36223.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.503 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 44877.036 ops/s
[info]                  ·gc.alloc.rate:                   727.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              25506.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22706.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.300 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   42708.093 ±(99.9%) 7362.325 ops/s [Average]
[info]   (min, avg, max) = (40638.576, 42708.093, 44877.036), stdev = 1911.973
[info]   CI (99.9%): [35345.768, 50070.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   862.117 ±(99.9%) 386.036 MB/sec [Average]
[info]   (min, avg, max) = (727.579, 862.117, 1000.203), stdev = 100.252
[info]   CI (99.9%): [476.081, 1248.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   31871.620 ±(99.9%) 17248.488 B/op [Average]
[info]   (min, avg, max) = (25506.995, 31871.620, 38160.528), stdev = 4479.378
[info]   CI (99.9%): [14623.133, 49120.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   846.172 ±(99.9%) 688.879 MB/sec [Average]
[info]   (min, avg, max) = (647.703, 846.172, 979.502), stdev = 178.900
[info]   CI (99.9%): [157.293, 1535.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   31447.593 ±(99.9%) 30173.861 B/op [Average]
[info]   (min, avg, max) = (22706.765, 31447.593, 37920.850), stdev = 7836.056
[info]   CI (99.9%): [1273.732, 61621.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.865 ±(99.9%) 4.150 MB/sec [Average]
[info]   (min, avg, max) = (0.208, 1.865, 3.177), stdev = 1.078
[info]   CI (99.9%): [≈ 0, 6.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   69.168 ±(99.9%) 149.929 B/op [Average]
[info]   (min, avg, max) = (7.300, 69.168, 112.301), stdev = 38.936
[info]   CI (99.9%): [≈ 0, 219.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.000, 16.000), stdev = 5.788
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10016.171 ops/s
[info] # Warmup Iteration   2: 29987.843 ops/s
[info] # Warmup Iteration   3: 39684.077 ops/s
[info] Iteration   1: 38190.372 ops/s
[info]                  ·gc.alloc.rate:                   979.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              40356.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40104.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123.629 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 42655.222 ops/s
[info]                  ·gc.alloc.rate:                   443.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              16379.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11944.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.304 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 41968.943 ops/s
[info]                  ·gc.alloc.rate:                   651.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              24429.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24279.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.781 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 44864.561 ops/s
[info]                  ·gc.alloc.rate:                   474.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              16638.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22712.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 42400.109 ops/s
[info]                  ·gc.alloc.rate:                   637.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              23678.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24071.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   42015.841 ±(99.9%) 9295.156 ops/s [Average]
[info]   (min, avg, max) = (38190.372, 42015.841, 44864.561), stdev = 2413.923
[info]   CI (99.9%): [32720.685, 51310.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   637.483 ±(99.9%) 819.847 MB/sec [Average]
[info]   (min, avg, max) = (443.939, 637.483, 979.632), stdev = 212.912
[info]   CI (99.9%): [≈ 0, 1457.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   24296.234 ±(99.9%) 37513.825 B/op [Average]
[info]   (min, avg, max) = (16379.306, 24296.234, 40356.198), stdev = 9742.221
[info]   CI (99.9%): [≈ 0, 61810.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   648.179 ±(99.9%) 884.641 MB/sec [Average]
[info]   (min, avg, max) = (323.737, 648.179, 973.534), stdev = 229.738
[info]   CI (99.9%): [≈ 0, 1532.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24622.524 ±(99.9%) 38722.884 B/op [Average]
[info]   (min, avg, max) = (11944.403, 24622.524, 40104.964), stdev = 10056.210
[info]   CI (99.9%): [≈ 0, 63345.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.286 ±(99.9%) 5.265 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.286, 3.001), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 6.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   49.792 ±(99.9%) 211.300 B/op [Average]
[info]   (min, avg, max) = (0.781, 49.792, 123.629), stdev = 54.874
[info]   CI (99.9%): [≈ 0, 261.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 1.924
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16940.455 ops/s
[info] # Warmup Iteration   2: 25750.821 ops/s
[info] # Warmup Iteration   3: 40876.536 ops/s
[info] Iteration   1: 45524.968 ops/s
[info]                  ·gc.alloc.rate:               618.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          21341.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22403.708 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 46138.401 ops/s
[info]                  ·gc.alloc.rate:               469.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          16018.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11088.588 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 48227.608 ops/s
[info]                  ·gc.alloc.rate:                   495.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              16168.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10585.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 47412.970 ops/s
[info]                  ·gc.alloc.rate:                   495.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              16452.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21515.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 48687.831 ops/s
[info]                  ·gc.alloc.rate:               497.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          16086.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10464.658 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   47198.356 ±(99.9%) 5183.260 ops/s [Average]
[info]   (min, avg, max) = (45524.968, 47198.356, 48687.831), stdev = 1346.076
[info]   CI (99.9%): [42015.095, 52381.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   515.433 ±(99.9%) 226.177 MB/sec [Average]
[info]   (min, avg, max) = (469.649, 515.433, 618.438), stdev = 58.738
[info]   CI (99.9%): [289.256, 741.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   17213.597 ±(99.9%) 8907.536 B/op [Average]
[info]   (min, avg, max) = (16018.571, 17213.597, 21341.095), stdev = 2313.259
[info]   CI (99.9%): [8306.061, 26121.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   454.192 ±(99.9%) 684.190 MB/sec [Average]
[info]   (min, avg, max) = (323.777, 454.192, 649.231), stdev = 177.682
[info]   CI (99.9%): [≈ 0, 1138.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15211.682 ±(99.9%) 23767.752 B/op [Average]
[info]   (min, avg, max) = (10464.658, 15211.682, 22403.708), stdev = 6172.410
[info]   CI (99.9%): [≈ 0, 38979.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.001 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.182 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.087), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.828
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:13:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7822.231 ops/s
[info] # Warmup Iteration   2: 21147.652 ops/s
[info] # Warmup Iteration   3: 31243.054 ops/s
[info] Iteration   1: 47675.773 ops/s
[info]                  ·gc.alloc.rate:                   569.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              18780.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21448.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.793 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 44862.461 ops/s
[info]                  ·gc.alloc.rate:               559.527 MB/sec
[info]                  ·gc.alloc.rate.norm:          19625.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11450.142 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 48262.083 ops/s
[info]                  ·gc.alloc.rate:                   568.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              18536.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21288.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.453 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 47389.785 ops/s
[info]                  ·gc.alloc.rate:                   537.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              17839.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21679.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 48956.510 ops/s
[info]                  ·gc.alloc.rate:               527.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          16957.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10492.398 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   47429.322 ±(99.9%) 5989.228 ops/s [Average]
[info]   (min, avg, max) = (44862.461, 47429.322, 48956.510), stdev = 1555.384
[info]   CI (99.9%): [41440.094, 53418.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   552.544 ±(99.9%) 73.646 MB/sec [Average]
[info]   (min, avg, max) = (527.576, 552.544, 569.946), stdev = 19.126
[info]   CI (99.9%): [478.897, 626.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18348.026 ±(99.9%) 3872.772 B/op [Average]
[info]   (min, avg, max) = (16957.921, 18348.026, 19625.953), stdev = 1005.747
[info]   CI (99.9%): [14475.254, 22220.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   521.900 ±(99.9%) 687.100 MB/sec [Average]
[info]   (min, avg, max) = (326.428, 521.900, 652.874), stdev = 178.438
[info]   CI (99.9%): [≈ 0, 1209.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   17271.858 ±(99.9%) 22192.266 B/op [Average]
[info]   (min, avg, max) = (10492.398, 17271.858, 21679.877), stdev = 5763.261
[info]   CI (99.9%): [≈ 0, 39464.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.014 ±(99.9%) 4.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.014, 2.270), stdev = 1.056
[info]   CI (99.9%): [≈ 0, 5.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   33.333 ±(99.9%) 133.452 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.333, 74.793), stdev = 34.657
[info]   CI (99.9%): [≈ 0, 166.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1666.038 ops/s
[info] # Warmup Iteration   2: 6024.915 ops/s
[info] # Warmup Iteration   3: 8265.577 ops/s
[info] Iteration   1: 11305.692 ops/s
[info]                  ·gc.alloc.rate:                   1180.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              164263.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1255.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174700.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 414.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         48.000 ms
[info] Iteration   2: 16824.878 ops/s
[info]                  ·gc.alloc.rate:               1215.343 MB/sec
[info]                  ·gc.alloc.rate.norm:          113673.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1220.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114154.459 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     35.000 ms
[info] Iteration   3: 17290.635 ops/s
[info]                  ·gc.alloc.rate:               1221.192 MB/sec
[info]                  ·gc.alloc.rate.norm:          111143.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:      916.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83455.615 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     26.000 ms
[info] Iteration   4: 16976.598 ops/s
[info]                  ·gc.alloc.rate:                   1239.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              114902.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1229.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113935.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 315.508 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   5: 17665.955 ops/s
[info]                  ·gc.alloc.rate:                   1259.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              112176.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1231.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109687.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 720.648 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   16012.752 ±(99.9%) 10208.025 ops/s [Average]
[info]   (min, avg, max) = (11305.692, 16012.752, 17665.955), stdev = 2650.992
[info]   CI (99.9%): [5804.727, 26220.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1223.146 ±(99.9%) 113.171 MB/sec [Average]
[info]   (min, avg, max) = (1180.471, 1223.146, 1259.230), stdev = 29.390
[info]   CI (99.9%): [1109.975, 1336.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   123231.563 ±(99.9%) 88495.173 B/op [Average]
[info]   (min, avg, max) = (111143.080, 123231.563, 164263.033), stdev = 22981.915
[info]   CI (99.9%): [34736.390, 211726.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1170.661 ±(99.9%) 548.368 MB/sec [Average]
[info]   (min, avg, max) = (916.974, 1170.661, 1255.482), stdev = 142.409
[info]   CI (99.9%): [622.293, 1719.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   119186.816 ±(99.9%) 129178.348 B/op [Average]
[info]   (min, avg, max) = (83455.615, 119186.816, 174700.848), stdev = 33547.207
[info]   CI (99.9%): [≈ 0, 248365.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.894 ±(99.9%) 12.773 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.894, 8.090), stdev = 3.317
[info]   CI (99.9%): [≈ 0, 15.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   290.117 ±(99.9%) 1170.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 290.117, 720.648), stdev = 304.052
[info]   CI (99.9%): [≈ 0, 1460.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   157.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 31.400, 48.000), stdev = 12.522
[info]   CI (99.9%): [157.000, 157.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 829.584 ops/s
[info] # Warmup Iteration   2: 5032.008 ops/s
[info] # Warmup Iteration   3: 10266.695 ops/s
[info] Iteration   1: 10920.293 ops/s
[info]                  ·gc.alloc.rate:                   1040.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              149870.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1190.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171450.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         59.000 ms
[info] Iteration   2: 15932.537 ops/s
[info]                  ·gc.alloc.rate:                   997.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              98474.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          833.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82314.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2232.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   3: 16737.284 ops/s
[info]                  ·gc.alloc.rate:                   1059.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              99643.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1124.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105759.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 16216.644 ops/s
[info]                  ·gc.alloc.rate:                   1083.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              105125.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1138.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110481.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.760 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 16254.138 ops/s
[info]                  ·gc.alloc.rate:                   1075.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              104093.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          870.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84264.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.535 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.612 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   15212.179 ±(99.9%) 9305.456 ops/s [Average]
[info]   (min, avg, max) = (10920.293, 15212.179, 16737.284), stdev = 2416.597
[info]   CI (99.9%): [5906.723, 24517.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1051.122 ±(99.9%) 132.322 MB/sec [Average]
[info]   (min, avg, max) = (997.068, 1051.122, 1083.291), stdev = 34.364
[info]   CI (99.9%): [918.799, 1183.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   111441.563 ±(99.9%) 83435.372 B/op [Average]
[info]   (min, avg, max) = (98474.164, 111441.563, 149870.365), stdev = 21667.901
[info]   CI (99.9%): [28006.191, 194876.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1031.445 ±(99.9%) 640.103 MB/sec [Average]
[info]   (min, avg, max) = (833.452, 1031.445, 1190.158), stdev = 166.233
[info]   CI (99.9%): [391.342, 1671.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   110854.207 ±(99.9%) 139097.991 B/op [Average]
[info]   (min, avg, max) = (82314.795, 110854.207, 171450.768), stdev = 36123.306
[info]   CI (99.9%): [≈ 0, 249952.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.636 ±(99.9%) 36.651 MB/sec [Average]
[info]   (min, avg, max) = (0.080, 5.636, 22.600), stdev = 9.518
[info]   CI (99.9%): [≈ 0, 42.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   568.745 ±(99.9%) 3597.130 B/op [Average]
[info]   (min, avg, max) = (7.760, 568.745, 2232.036), stdev = 934.163
[info]   CI (99.9%): [≈ 0, 4165.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   129.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 25.800, 59.000), stdev = 20.327
[info]   CI (99.9%): [129.000, 129.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78045.995 ops/s
[info] # Warmup Iteration   2: 93500.559 ops/s
[info] # Warmup Iteration   3: 152326.903 ops/s
[info] Iteration   1: 157583.194 ops/s
[info]                  ·gc.alloc.rate:                   423.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              4227.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6440.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 153600.433 ops/s
[info]                  ·gc.alloc.rate:               469.987 MB/sec
[info]                  ·gc.alloc.rate.norm:          4815.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3306.853 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 159015.340 ops/s
[info]                  ·gc.alloc.rate:                   421.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              4172.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3194.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 158583.846 ops/s
[info]                  ·gc.alloc.rate:                   431.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              4278.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6419.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.620 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 157790.170 ops/s
[info]                  ·gc.alloc.rate:               420.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          4194.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3235.648 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   157314.597 ±(99.9%) 8302.771 ops/s [Average]
[info]   (min, avg, max) = (153600.433, 157314.597, 159015.340), stdev = 2156.203
[info]   CI (99.9%): [149011.826, 165617.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   433.350 ±(99.9%) 80.459 MB/sec [Average]
[info]   (min, avg, max) = (420.607, 433.350, 469.987), stdev = 20.895
[info]   CI (99.9%): [352.891, 513.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4337.880 ±(99.9%) 1039.158 B/op [Average]
[info]   (min, avg, max) = (4172.938, 4337.880, 4815.348), stdev = 269.866
[info]   CI (99.9%): [3298.721, 5377.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   452.336 ±(99.9%) 680.308 MB/sec [Average]
[info]   (min, avg, max) = (322.755, 452.336, 646.839), stdev = 176.674
[info]   CI (99.9%): [≈ 0, 1132.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4519.156 ±(99.9%) 6717.110 B/op [Average]
[info]   (min, avg, max) = (3194.205, 4519.156, 6440.043), stdev = 1744.412
[info]   CI (99.9%): [≈ 0, 11236.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.186 ±(99.9%) 0.991 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.186, 0.620), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1275.909 ops/s
[info] # Warmup Iteration   2: 6329.592 ops/s
[info] # Warmup Iteration   3: 11331.141 ops/s
[info] Iteration   1: 15708.843 ops/s
[info]                  ·gc.alloc.rate:                   1393.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              139596.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1571.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157423.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.262 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.553 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 16208.616 ops/s
[info]                  ·gc.alloc.rate:                   1427.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              138554.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1250.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121345.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 16621.820 ops/s
[info]                  ·gc.alloc.rate:                   1473.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              139460.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1551.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146895.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.971 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 16607.903 ops/s
[info]                  ·gc.alloc.rate:                   1492.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              141412.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118675.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.973 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 16535.474 ops/s
[info]                  ·gc.alloc.rate:               1493.116 MB/sec
[info]                  ·gc.alloc.rate.norm:          142101.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1590.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 151399.691 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   16336.531 ±(99.9%) 1497.506 ops/s [Average]
[info]   (min, avg, max) = (15708.843, 16336.531, 16621.820), stdev = 388.898
[info]   CI (99.9%): [14839.025, 17834.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1455.968 ±(99.9%) 168.881 MB/sec [Average]
[info]   (min, avg, max) = (1393.688, 1455.968, 1493.116), stdev = 43.858
[info]   CI (99.9%): [1287.088, 1624.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   140225.070 ±(99.9%) 5678.840 B/op [Average]
[info]   (min, avg, max) = (138554.818, 140225.070, 142101.091), stdev = 1474.777
[info]   CI (99.9%): [134546.230, 145903.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1443.364 ±(99.9%) 677.320 MB/sec [Average]
[info]   (min, avg, max) = (1250.148, 1443.364, 1590.820), stdev = 175.898
[info]   CI (99.9%): [766.044, 2120.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   139147.837 ±(99.9%) 68886.614 B/op [Average]
[info]   (min, avg, max) = (118675.750, 139147.837, 157423.203), stdev = 17889.635
[info]   CI (99.9%): [70261.223, 208034.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.469 ±(99.9%) 3.860 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.469, 2.262), stdev = 1.002
[info]   CI (99.9%): [≈ 0, 4.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   46.908 ±(99.9%) 386.738 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.908, 226.553), stdev = 100.435
[info]   CI (99.9%): [≈ 0, 433.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.600, 32.000), stdev = 11.459
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11106.411 ops/s
[info] # Warmup Iteration   2: 50331.695 ops/s
[info] # Warmup Iteration   3: 66062.139 ops/s
[info] Iteration   1: 64196.918 ops/s
[info]                  ·gc.alloc.rate:                   1643.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              40277.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39878.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.546 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 69028.407 ops/s
[info]                  ·gc.alloc.rate:                   1606.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              36616.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36844.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.746 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 69450.994 ops/s
[info]                  ·gc.alloc.rate:                   1609.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              36465.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29300.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.830 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 69857.611 ops/s
[info]                  ·gc.alloc.rate:                   1613.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              36348.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36656.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.876 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 68994.487 ops/s
[info]                  ·gc.alloc.rate:               1606.682 MB/sec
[info]                  ·gc.alloc.rate.norm:          36639.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37448.542 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   68305.683 ±(99.9%) 8947.871 ops/s [Average]
[info]   (min, avg, max) = (64196.918, 68305.683, 69857.611), stdev = 2323.734
[info]   CI (99.9%): [59357.812, 77253.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1615.806 ±(99.9%) 59.552 MB/sec [Average]
[info]   (min, avg, max) = (1606.634, 1615.806, 1643.020), stdev = 15.465
[info]   CI (99.9%): [1556.255, 1675.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   37269.254 ±(99.9%) 6490.893 B/op [Average]
[info]   (min, avg, max) = (36348.286, 37269.254, 40277.251), stdev = 1685.664
[info]   CI (99.9%): [30778.361, 43760.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1561.153 ±(99.9%) 578.235 MB/sec [Average]
[info]   (min, avg, max) = (1293.023, 1561.153, 1642.181), stdev = 150.166
[info]   CI (99.9%): [982.918, 2139.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36025.679 ±(99.9%) 15301.972 B/op [Average]
[info]   (min, avg, max) = (29300.290, 36025.679, 39878.254), stdev = 3973.874
[info]   CI (99.9%): [20723.707, 51327.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.556 ±(99.9%) 12.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.556, 7.365), stdev = 3.248
[info]   CI (99.9%): [≈ 0, 14.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   38.000 ±(99.9%) 306.912 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.000, 180.546), stdev = 79.704
[info]   CI (99.9%): [≈ 0, 344.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 19.000), stdev = 5.495
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22520.315 ops/s
[info] # Warmup Iteration   2: 78249.196 ops/s
[info] # Warmup Iteration   3: 96615.409 ops/s
[info] Iteration   1: 105860.864 ops/s
[info]                  ·gc.alloc.rate:                   1419.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              21106.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24262.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.798 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 108240.821 ops/s
[info]                  ·gc.alloc.rate:                   1439.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              20934.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18944.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 108944.376 ops/s
[info]                  ·gc.alloc.rate:                   1438.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              20777.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18745.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 108720.566 ops/s
[info]                  ·gc.alloc.rate:                   1459.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              21131.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23548.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 107218.785 ops/s
[info]                  ·gc.alloc.rate:                   1440.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              21142.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19261.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   107797.082 ±(99.9%) 4889.475 ops/s [Average]
[info]   (min, avg, max) = (105860.864, 107797.082, 108944.376), stdev = 1269.781
[info]   CI (99.9%): [102907.607, 112686.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1439.631 ±(99.9%) 54.530 MB/sec [Average]
[info]   (min, avg, max) = (1419.790, 1439.631, 1459.788), stdev = 14.161
[info]   CI (99.9%): [1385.101, 1494.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21018.409 ±(99.9%) 611.248 B/op [Average]
[info]   (min, avg, max) = (20777.535, 21018.409, 21142.497), stdev = 158.739
[info]   CI (99.9%): [20407.161, 21629.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1434.359 ±(99.9%) 686.094 MB/sec [Average]
[info]   (min, avg, max) = (1297.696, 1434.359, 1632.116), stdev = 178.176
[info]   CI (99.9%): [748.265, 2120.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20952.551 ±(99.9%) 10449.242 B/op [Average]
[info]   (min, avg, max) = (18745.708, 20952.551, 24262.506), stdev = 2713.635
[info]   CI (99.9%): [10503.308, 31401.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.949 ±(99.9%) 5.577 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.949, 3.350), stdev = 1.448
[info]   CI (99.9%): [≈ 0, 6.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.014 ±(99.9%) 82.833 B/op [Average]
[info]   (min, avg, max) = (0.301, 14.014, 49.798), stdev = 21.511
[info]   CI (99.9%): [≈ 0, 96.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 20.000), stdev = 5.983
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93644.189 ops/s
[info] # Warmup Iteration   2: 207891.081 ops/s
[info] # Warmup Iteration   3: 254235.909 ops/s
[info] Iteration   1: 270589.044 ops/s
[info]                  ·gc.alloc.rate:               459.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          2672.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1910.130 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 272583.164 ops/s
[info]                  ·gc.alloc.rate:                   448.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              2587.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3792.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 272305.838 ops/s
[info]                  ·gc.alloc.rate:               441.040 MB/sec
[info]                  ·gc.alloc.rate.norm:          2548.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1898.032 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 269495.201 ops/s
[info]                  ·gc.alloc.rate:               451.091 MB/sec
[info]                  ·gc.alloc.rate.norm:          2633.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1919.778 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 264810.659 ops/s
[info]                  ·gc.alloc.rate:                   440.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              2619.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3909.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   269956.781 ±(99.9%) 12102.198 ops/s [Average]
[info]   (min, avg, max) = (264810.659, 269956.781, 272583.164), stdev = 3142.902
[info]   CI (99.9%): [257854.583, 282058.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   448.140 ±(99.9%) 30.011 MB/sec [Average]
[info]   (min, avg, max) = (440.838, 448.140, 459.566), stdev = 7.794
[info]   CI (99.9%): [418.129, 478.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2612.410 ±(99.9%) 181.058 B/op [Average]
[info]   (min, avg, max) = (2548.862, 2612.410, 2672.933), stdev = 47.020
[info]   CI (99.9%): [2431.352, 2793.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.102 ±(99.9%) 693.591 MB/sec [Average]
[info]   (min, avg, max) = (328.415, 460.102, 657.867), stdev = 180.123
[info]   CI (99.9%): [≈ 0, 1153.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2685.941 ±(99.9%) 4098.147 B/op [Average]
[info]   (min, avg, max) = (1898.032, 2685.941, 3909.436), stdev = 1064.276
[info]   CI (99.9%): [≈ 0, 6784.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.659 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.361), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118579.096 ops/s
[info] # Warmup Iteration   2: 220706.056 ops/s
[info] # Warmup Iteration   3: 266572.603 ops/s
[info] Iteration   1: 287629.977 ops/s
[info]                  ·gc.alloc.rate:      3.371 MB/sec
[info]                  ·gc.alloc.rate.norm: 18.444 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 288853.404 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 288521.549 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 287873.505 ops/s
[info]                  ·gc.alloc.rate:      0.838 MB/sec
[info]                  ·gc.alloc.rate.norm: 4.583 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 288338.928 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   288243.473 ±(99.9%) 1897.890 ops/s [Average]
[info]   (min, avg, max) = (287629.977, 288243.473, 288853.404), stdev = 492.876
[info]   CI (99.9%): [286345.583, 290141.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.842 ±(99.9%) 5.621 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.842, 3.371), stdev = 1.460
[info]   CI (99.9%): [≈ 0, 6.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4.606 ±(99.9%) 30.750 B/op [Average]
[info]   (min, avg, max) = (0.001, 4.606, 18.444), stdev = 7.986
[info]   CI (99.9%): [≈ 0, 35.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20008.075 ops/s
[info] # Warmup Iteration   2: 53669.425 ops/s
[info] # Warmup Iteration   3: 61661.386 ops/s
[info] Iteration   1: 73169.048 ops/s
[info]                  ·gc.alloc.rate:                   1783.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              38405.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36006.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 281.137 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         60.000 ms
[info] Iteration   2: 70455.274 ops/s
[info]                  ·gc.alloc.rate:                   1578.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              35236.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1556.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34755.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      66.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1491.727 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         132.000 ms
[info] Iteration   3: 54344.635 ops/s
[info]                  ·gc.alloc.rate:                   1652.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              47833.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46300.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.173 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.642 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         87.000 ms
[info] Iteration   4: 82520.950 ops/s
[info]                  ·gc.alloc.rate:                   1916.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              36528.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1772.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33795.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.060 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         57.000 ms
[info] Iteration   5: 87045.585 ops/s
[info]                  ·gc.alloc.rate:                   1525.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              27569.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1486.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26871.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      43.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 779.513 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         65.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   73507.098 ±(99.9%) 48751.648 ops/s [Average]
[info]   (min, avg, max) = (54344.635, 73507.098, 87045.585), stdev = 12660.648
[info]   CI (99.9%): [24755.450, 122258.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1691.115 ±(99.9%) 612.045 MB/sec [Average]
[info]   (min, avg, max) = (1525.069, 1691.115, 1916.131), stdev = 158.946
[info]   CI (99.9%): [1079.070, 2303.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   37114.770 ±(99.9%) 28001.735 B/op [Average]
[info]   (min, avg, max) = (27569.834, 37114.770, 47833.064), stdev = 7271.962
[info]   CI (99.9%): [9113.035, 65116.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1617.517 ±(99.9%) 423.254 MB/sec [Average]
[info]   (min, avg, max) = (1486.418, 1617.517, 1772.744), stdev = 109.918
[info]   CI (99.9%): [1194.262, 2040.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   35545.634 ±(99.9%) 26873.251 B/op [Average]
[info]   (min, avg, max) = (26871.123, 35545.634, 46300.708), stdev = 6978.898
[info]   CI (99.9%): [8672.383, 62418.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   26.652 ±(99.9%) 105.504 MB/sec [Average]
[info]   (min, avg, max) = (3.098, 26.652, 66.810), stdev = 27.399
[info]   CI (99.9%): [≈ 0, 132.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   563.816 ±(99.9%) 2252.783 B/op [Average]
[info]   (min, avg, max) = (59.060, 563.816, 1491.727), stdev = 585.040
[info]   CI (99.9%): [≈ 0, 2816.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 10.000), stdev = 1.517
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   401.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (57.000, 80.200, 132.000), stdev = 31.252
[info]   CI (99.9%): [401.000, 401.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:11:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5567.907 ops/s
[info] # Warmup Iteration   2: 55770.151 ops/s
[info] # Warmup Iteration   3: 122306.958 ops/s
[info] Iteration   1: 119831.510 ops/s
[info]                  ·gc.alloc.rate:                   1753.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              23027.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21223.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.275 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 131666.041 ops/s
[info]                  ·gc.alloc.rate:                   2034.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              24320.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23101.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.670 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 125413.124 ops/s
[info]                  ·gc.alloc.rate:                   1570.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              19708.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20377.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.719 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 125018.273 ops/s
[info]                  ·gc.alloc.rate:                   1572.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              19798.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20516.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 125484.377 ops/s
[info]                  ·gc.alloc.rate:                   1580.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              19820.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16441.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   125482.665 ±(99.9%) 16153.232 ops/s [Average]
[info]   (min, avg, max) = (119831.510, 125482.665, 131666.041), stdev = 4194.943
[info]   CI (99.9%): [109329.433, 141635.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1702.374 ±(99.9%) 774.611 MB/sec [Average]
[info]   (min, avg, max) = (1570.732, 1702.374, 2034.428), stdev = 201.164
[info]   CI (99.9%): [927.764, 2476.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21335.237 ±(99.9%) 8409.097 B/op [Average]
[info]   (min, avg, max) = (19708.937, 21335.237, 24320.527), stdev = 2183.816
[info]   CI (99.9%): [12926.140, 29744.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1622.675 ±(99.9%) 846.241 MB/sec [Average]
[info]   (min, avg, max) = (1311.007, 1622.675, 1932.445), stdev = 219.766
[info]   CI (99.9%): [776.434, 2468.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20332.045 ±(99.9%) 9360.351 B/op [Average]
[info]   (min, avg, max) = (16441.567, 20332.045, 23101.369), stdev = 2430.853
[info]   CI (99.9%): [10971.694, 29692.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.058 ±(99.9%) 3.700 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.058, 2.001), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.290 ±(99.9%) 46.814 B/op [Average]
[info]   (min, avg, max) = (0.262, 13.290, 26.275), stdev = 12.157
[info]   CI (99.9%): [≈ 0, 60.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 13.000), stdev = 3.114
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17660.046 ops/s
[info] # Warmup Iteration   2: 93425.113 ops/s
[info] # Warmup Iteration   3: 129292.069 ops/s
[info] Iteration   1: 159164.720 ops/s
[info]                  ·gc.alloc.rate:                   940.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              9301.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9521.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.099 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.869 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 163444.053 ops/s
[info]                  ·gc.alloc.rate:               971.643 MB/sec
[info]                  ·gc.alloc.rate.norm:          9355.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      963.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9278.156 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 163382.142 ops/s
[info]                  ·gc.alloc.rate:                   971.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              9360.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9326.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.422 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 163432.796 ops/s
[info]                  ·gc.alloc.rate:                   971.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              9353.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9368.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.604 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 163982.137 ops/s
[info]                  ·gc.alloc.rate:                   969.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              9308.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9382.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.199 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   162681.170 ±(99.9%) 7627.830 ops/s [Average]
[info]   (min, avg, max) = (159164.720, 162681.170, 163982.137), stdev = 1980.923
[info]   CI (99.9%): [155053.340, 170308.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   965.148 ±(99.9%) 52.586 MB/sec [Average]
[info]   (min, avg, max) = (940.754, 965.148, 971.808), stdev = 13.656
[info]   CI (99.9%): [912.562, 1017.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9335.979 ±(99.9%) 109.744 B/op [Average]
[info]   (min, avg, max) = (9301.123, 9335.979, 9360.565), stdev = 28.500
[info]   CI (99.9%): [9226.235, 9445.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   969.127 ±(99.9%) 24.106 MB/sec [Average]
[info]   (min, avg, max) = (963.031, 969.127, 977.642), stdev = 6.260
[info]   CI (99.9%): [945.021, 993.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9375.383 ±(99.9%) 351.116 B/op [Average]
[info]   (min, avg, max) = (9278.156, 9375.383, 9521.371), stdev = 91.184
[info]   CI (99.9%): [9024.267, 9726.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.453 ±(99.9%) 1.916 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.453, 1.099), stdev = 0.498
[info]   CI (99.9%): [≈ 0, 2.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.419 ±(99.9%) 18.810 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.419, 10.869), stdev = 4.885
[info]   CI (99.9%): [≈ 0, 23.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45574.529 ops/s
[info] # Warmup Iteration   2: 194472.915 ops/s
[info] # Warmup Iteration   3: 201720.711 ops/s
[info] Iteration   1: 218955.126 ops/s
[info]                  ·gc.alloc.rate:                   145.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1046.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1838.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.889 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 228704.978 ops/s
[info]                  ·gc.alloc.rate:      149.604 MB/sec
[info]                  ·gc.alloc.rate.norm: 1029.344 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 226940.063 ops/s
[info]                  ·gc.alloc.rate:                   153.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2266.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 227761.214 ops/s
[info]                  ·gc.alloc.rate:      148.208 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 226891.206 ops/s
[info]                  ·gc.alloc.rate:                   155.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              1079.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2266.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   225850.518 ±(99.9%) 15112.891 ops/s [Average]
[info]   (min, avg, max) = (218955.126, 225850.518, 228704.978), stdev = 3924.770
[info]   CI (99.9%): [210737.627, 240963.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   150.553 ±(99.9%) 15.561 MB/sec [Average]
[info]   (min, avg, max) = (145.701, 150.553, 155.679), stdev = 4.041
[info]   CI (99.9%): [134.991, 166.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1049.007 ±(99.9%) 90.611 B/op [Average]
[info]   (min, avg, max) = (1024.002, 1049.007, 1079.734), stdev = 23.531
[info]   CI (99.9%): [958.396, 1139.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   181.884 ±(99.9%) 648.998 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 181.884, 326.796), stdev = 168.543
[info]   CI (99.9%): [≈ 0, 830.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1274.227 ±(99.9%) 4529.278 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1274.227, 2266.544), stdev = 1176.239
[info]   CI (99.9%): [≈ 0, 5803.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 1.159 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.680), stdev = 0.301
[info]   CI (99.9%): [≈ 0, 1.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.021 ±(99.9%) 8.332 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.021, 4.889), stdev = 2.164
[info]   CI (99.9%): [≈ 0, 9.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 5.000), stdev = 2.302
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2136.041 ops/s
[info] # Warmup Iteration   2: 43925.213 ops/s
[info] # Warmup Iteration   3: 79447.074 ops/s
[info] Iteration   1: 81132.561 ops/s
[info]                  ·gc.alloc.rate:                   2634.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              51100.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50703.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.972 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 84257.684 ops/s
[info]                  ·gc.alloc.rate:                   2656.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              49618.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2620.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48949.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.167 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 84916.777 ops/s
[info]                  ·gc.alloc.rate:                   2676.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              49609.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2652.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49157.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 84310.801 ops/s
[info]                  ·gc.alloc.rate:                   2672.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              49884.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43762.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.166 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 82019.769 ops/s
[info]                  ·gc.alloc.rate:                   2616.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              50206.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51773.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   83327.518 ±(99.9%) 6352.349 ops/s [Average]
[info]   (min, avg, max) = (81132.561, 83327.518, 84916.777), stdev = 1649.685
[info]   CI (99.9%): [76975.169, 89679.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2651.542 ±(99.9%) 98.326 MB/sec [Average]
[info]   (min, avg, max) = (2616.852, 2651.542, 2676.998), stdev = 25.535
[info]   CI (99.9%): [2553.216, 2749.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50084.135 ±(99.9%) 2382.033 B/op [Average]
[info]   (min, avg, max) = (49609.790, 50084.135, 51100.898), stdev = 618.606
[info]   CI (99.9%): [47702.102, 52466.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2586.146 ±(99.9%) 535.509 MB/sec [Average]
[info]   (min, avg, max) = (2344.629, 2586.146, 2698.513), stdev = 139.070
[info]   CI (99.9%): [2050.637, 3121.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48869.595 ±(99.9%) 11863.539 B/op [Average]
[info]   (min, avg, max) = (43762.682, 48869.595, 51773.720), stdev = 3080.923
[info]   CI (99.9%): [37006.056, 60733.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.116 ±(99.9%) 9.249 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.116, 5.412), stdev = 2.402
[info]   CI (99.9%): [≈ 0, 10.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   21.618 ±(99.9%) 179.432 B/op [Average]
[info]   (min, avg, max) = (0.386, 21.618, 104.972), stdev = 46.598
[info]   CI (99.9%): [≈ 0, 201.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 15.000), stdev = 1.789
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40576.769 ops/s
[info] # Warmup Iteration   2: 184083.108 ops/s
[info] # Warmup Iteration   3: 219667.268 ops/s
[info] Iteration   1: 230454.088 ops/s
[info]                  ·gc.alloc.rate:                   1502.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              10257.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11145.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.399 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 236025.606 ops/s
[info]                  ·gc.alloc.rate:                   1529.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              10197.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8670.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.337 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 231899.155 ops/s
[info]                  ·gc.alloc.rate:                   1505.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              10215.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10977.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.297 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 230472.476 ops/s
[info]                  ·gc.alloc.rate:               1488.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          10165.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1298.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8863.608 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 229230.960 ops/s
[info]                  ·gc.alloc.rate:               1513.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          10391.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11225.710 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   231616.457 ±(99.9%) 10164.333 ops/s [Average]
[info]   (min, avg, max) = (229230.960, 231616.457, 236025.606), stdev = 2639.645
[info]   CI (99.9%): [221452.124, 241780.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1507.875 ±(99.9%) 58.028 MB/sec [Average]
[info]   (min, avg, max) = (1488.718, 1507.875, 1529.508), stdev = 15.070
[info]   CI (99.9%): [1449.847, 1565.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10245.561 ±(99.9%) 339.713 B/op [Average]
[info]   (min, avg, max) = (10165.135, 10245.561, 10391.651), stdev = 88.222
[info]   CI (99.9%): [9905.848, 10585.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1496.698 ±(99.9%) 694.422 MB/sec [Average]
[info]   (min, avg, max) = (1298.105, 1496.698, 1635.167), stdev = 180.339
[info]   CI (99.9%): [802.276, 2191.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10176.586 ±(99.9%) 4973.594 B/op [Average]
[info]   (min, avg, max) = (8670.543, 10176.586, 11225.710), stdev = 1291.627
[info]   CI (99.9%): [5202.992, 15150.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.121 ±(99.9%) 5.665 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.121, 3.573), stdev = 1.471
[info]   CI (99.9%): [≈ 0, 6.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.607 ±(99.9%) 38.678 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.607, 24.399), stdev = 10.045
[info]   CI (99.9%): [≈ 0, 46.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.000, 26.000), stdev = 8.456
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144973.401 ops/s
[info] # Warmup Iteration   2: 627460.174 ops/s
[info] # Warmup Iteration   3: 725698.080 ops/s
[info] Iteration   1: 724192.557 ops/s
[info]                  ·gc.alloc.rate:               563.010 MB/sec
[info]                  ·gc.alloc.rate.norm:          1223.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 705.714 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 725851.188 ops/s
[info]                  ·gc.alloc.rate:                   571.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              1239.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1409.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 753686.015 ops/s
[info]                  ·gc.alloc.rate:                   600.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              1253.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1359.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 744491.528 ops/s
[info]                  ·gc.alloc.rate:               588.970 MB/sec
[info]                  ·gc.alloc.rate.norm:          1244.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1378.666 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 731341.020 ops/s
[info]                  ·gc.alloc.rate:                   569.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     702.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   735912.462 ±(99.9%) 49047.858 ops/s [Average]
[info]   (min, avg, max) = (724192.557, 735912.462, 753686.015), stdev = 12737.573
[info]   CI (99.9%): [686864.603, 784960.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   578.801 ±(99.9%) 59.368 MB/sec [Average]
[info]   (min, avg, max) = (563.010, 578.801, 600.426), stdev = 15.418
[info]   CI (99.9%): [519.433, 638.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1237.545 ±(99.9%) 49.018 B/op [Average]
[info]   (min, avg, max) = (1223.518, 1237.545, 1253.538), stdev = 12.730
[info]   CI (99.9%): [1188.527, 1286.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   520.975 ±(99.9%) 686.844 MB/sec [Average]
[info]   (min, avg, max) = (324.739, 520.975, 652.209), stdev = 178.371
[info]   CI (99.9%): [≈ 0, 1207.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1111.218 ±(99.9%) 1432.873 B/op [Average]
[info]   (min, avg, max) = (702.405, 1111.218, 1409.627), stdev = 372.112
[info]   CI (99.9%): [≈ 0, 2544.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.044), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.096), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 2.049
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 316229.426 ops/s
[info] # Warmup Iteration   2: 513952.434 ops/s
[info] # Warmup Iteration   3: 671812.988 ops/s
[info] Iteration   1: 657231.484 ops/s
[info]                  ·gc.alloc.rate:                   519.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              1243.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 660439.085 ops/s
[info]                  ·gc.alloc.rate:               547.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          1303.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1559.548 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 686264.029 ops/s
[info]                  ·gc.alloc.rate:               538.460 MB/sec
[info]                  ·gc.alloc.rate.norm:          1234.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 753.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 670499.212 ops/s
[info]                  ·gc.alloc.rate:                   532.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              1250.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 667106.622 ops/s
[info]                  ·gc.alloc.rate:                   522.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     776.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   668308.086 ±(99.9%) 43619.177 ops/s [Average]
[info]   (min, avg, max) = (657231.484, 668308.086, 686264.029), stdev = 11327.762
[info]   CI (99.9%): [624688.910, 711927.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   532.052 ±(99.9%) 44.786 MB/sec [Average]
[info]   (min, avg, max) = (519.233, 532.052, 547.528), stdev = 11.631
[info]   CI (99.9%): [487.266, 576.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1252.713 ±(99.9%) 111.921 B/op [Average]
[info]   (min, avg, max) = (1232.043, 1252.713, 1303.066), stdev = 29.066
[info]   CI (99.9%): [1140.792, 1364.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.312 ±(99.9%) 690.360 MB/sec [Average]
[info]   (min, avg, max) = (328.751, 525.312, 657.852), stdev = 179.284
[info]   CI (99.9%): [≈ 0, 1215.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1240.689 ±(99.9%) 1672.400 B/op [Average]
[info]   (min, avg, max) = (753.887, 1240.689, 1569.672), stdev = 434.317
[info]   CI (99.9%): [≈ 0, 2913.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.023 ±(99.9%) 0.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.070), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.168), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 263953.826 ops/s
[info] # Warmup Iteration   2: 552820.238 ops/s
[info] # Warmup Iteration   3: 673351.481 ops/s
[info] Iteration   1: 671845.809 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 673267.686 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 672823.219 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 672622.842 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 673826.089 ops/s
[info]                  ·gc.alloc.rate:      0.811 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.893 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   672877.129 ±(99.9%) 2845.473 ops/s [Average]
[info]   (min, avg, max) = (671845.809, 672877.129, 673826.089), stdev = 738.960
[info]   CI (99.9%): [670031.655, 675722.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.162 ±(99.9%) 1.395 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.162, 0.811), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.379 ±(99.9%) 3.259 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.379, 1.893), stdev = 0.846
[info]   CI (99.9%): [≈ 0, 3.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53560.877 ops/s
[info] # Warmup Iteration   2: 458059.570 ops/s
[info] # Warmup Iteration   3: 564865.224 ops/s
[info] Iteration   1: 617752.251 ops/s
[info]                  ·gc.alloc.rate:                   1527.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              3891.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3329.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 622907.389 ops/s
[info]                  ·gc.alloc.rate:                   1550.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              3917.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4146.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.996 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 617851.639 ops/s
[info]                  ·gc.alloc.rate:                   1518.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              3866.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3352.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 593022.710 ops/s
[info]                  ·gc.alloc.rate:                   1474.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              3912.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4390.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 612844.993 ops/s
[info]                  ·gc.alloc.rate:               1526.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          3920.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3418.903 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   612875.796 ±(99.9%) 44877.667 ops/s [Average]
[info]   (min, avg, max) = (593022.710, 612875.796, 622907.389), stdev = 11654.588
[info]   CI (99.9%): [567998.129, 657753.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1519.492 ±(99.9%) 107.017 MB/sec [Average]
[info]   (min, avg, max) = (1474.706, 1519.492, 1550.567), stdev = 27.792
[info]   CI (99.9%): [1412.475, 1626.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3901.634 ±(99.9%) 87.267 B/op [Average]
[info]   (min, avg, max) = (3866.535, 3901.634, 3920.245), stdev = 22.663
[info]   CI (99.9%): [3814.367, 3988.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1450.198 ±(99.9%) 696.707 MB/sec [Average]
[info]   (min, avg, max) = (1307.067, 1450.198, 1654.788), stdev = 180.933
[info]   CI (99.9%): [753.491, 2146.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3727.754 ±(99.9%) 1934.340 B/op [Average]
[info]   (min, avg, max) = (3329.626, 3727.754, 4390.546), stdev = 502.342
[info]   CI (99.9%): [1793.414, 5662.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.443 ±(99.9%) 3.309 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.443, 1.978), stdev = 0.859
[info]   CI (99.9%): [≈ 0, 3.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.124 ±(99.9%) 8.354 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.124, 4.996), stdev = 2.169
[info]   CI (99.9%): [≈ 0, 9.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 10.000), stdev = 1.817
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:09:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6739.608 ops/s
[info] # Warmup Iteration   2: 21767.572 ops/s
[info] # Warmup Iteration   3: 34174.363 ops/s
[info] Iteration   1: 39641.555 ops/s
[info]                  ·gc.alloc.rate:                   2052.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              81463.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1853.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73549.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.132 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   2: 39229.679 ops/s
[info]                  ·gc.alloc.rate:                   2364.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              94803.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2474.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99226.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 410.220 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 41290.997 ops/s
[info]                  ·gc.alloc.rate:                   1944.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              74111.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1862.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70968.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 295.307 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 41717.249 ops/s
[info]                  ·gc.alloc.rate:                   1925.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              72619.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1887.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71169.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.639 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 41717.556 ops/s
[info]                  ·gc.alloc.rate:                   1925.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              72632.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1926.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72654.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.927 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   40719.407 ±(99.9%) 4596.546 ops/s [Average]
[info]   (min, avg, max) = (39229.679, 40719.407, 41717.556), stdev = 1193.708
[info]   CI (99.9%): [36122.861, 45315.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   2042.619 ±(99.9%) 721.785 MB/sec [Average]
[info]   (min, avg, max) = (1925.520, 2042.619, 2364.303), stdev = 187.445
[info]   CI (99.9%): [1320.834, 2764.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   79125.994 ±(99.9%) 36576.573 B/op [Average]
[info]   (min, avg, max) = (72619.489, 79125.994, 94803.930), stdev = 9498.820
[info]   CI (99.9%): [42549.421, 115702.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2000.730 ±(99.9%) 1025.811 MB/sec [Average]
[info]   (min, avg, max) = (1853.392, 2000.730, 2474.605), stdev = 266.400
[info]   CI (99.9%): [974.919, 3026.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   77513.762 ±(99.9%) 46919.221 B/op [Average]
[info]   (min, avg, max) = (70968.107, 77513.762, 99226.819), stdev = 12184.773
[info]   CI (99.9%): [30594.541, 124432.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.873 ±(99.9%) 17.506 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 4.873, 10.230), stdev = 4.546
[info]   CI (99.9%): [≈ 0, 22.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   191.645 ±(99.9%) 693.119 B/op [Average]
[info]   (min, avg, max) = (3.927, 191.645, 410.220), stdev = 180.001
[info]   CI (99.9%): [≈ 0, 884.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   103.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 20.600, 44.000), stdev = 15.027
[info]   CI (99.9%): [103.000, 103.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.718 ops/s
[info] # Warmup Iteration   2: 208294.844 ops/s
[info] # Warmup Iteration   3: 290093.850 ops/s
[info] Iteration   1: 287819.467 ops/s
[info]                  ·gc.alloc.rate:                   303.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              1658.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1773.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.474 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 286756.390 ops/s
[info]                  ·gc.alloc.rate:               304.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          1668.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1780.426 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 287112.790 ops/s
[info]                  ·gc.alloc.rate:               303.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          1664.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1774.599 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 285980.909 ops/s
[info]                  ·gc.alloc.rate:                   308.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              1694.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1781.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 287118.040 ops/s
[info]                  ·gc.alloc.rate:               307.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          1684.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1774.660 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   286957.519 ±(99.9%) 2573.782 ops/s [Average]
[info]   (min, avg, max) = (285980.909, 286957.519, 287819.467), stdev = 668.403
[info]   CI (99.9%): [284383.737, 289531.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   305.290 ±(99.9%) 8.427 MB/sec [Average]
[info]   (min, avg, max) = (303.421, 305.290, 308.025), stdev = 2.188
[info]   CI (99.9%): [296.863, 313.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1674.235 ±(99.9%) 57.372 B/op [Average]
[info]   (min, avg, max) = (1658.930, 1674.235, 1694.865), stdev = 14.899
[info]   CI (99.9%): [1616.863, 1731.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   324.034 ±(99.9%) 1.389 MB/sec [Average]
[info]   (min, avg, max) = (323.759, 324.034, 324.437), stdev = 0.361
[info]   CI (99.9%): [322.644, 325.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1777.009 ±(99.9%) 14.084 B/op [Average]
[info]   (min, avg, max) = (1773.834, 1777.009, 1781.528), stdev = 3.658
[info]   CI (99.9%): [1762.925, 1791.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.241 ±(99.9%) 2.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.241, 1.184), stdev = 0.527
[info]   CI (99.9%): [≈ 0, 2.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.318 ±(99.9%) 11.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.318, 6.474), stdev = 2.883
[info]   CI (99.9%): [≈ 0, 12.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31642.227 ops/s
[info] # Warmup Iteration   2: 75255.255 ops/s
[info] # Warmup Iteration   3: 126826.920 ops/s
[info] Iteration   1: 122754.004 ops/s
[info]                  ·gc.alloc.rate:                   1130.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              14496.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12323.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.534 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 124228.807 ops/s
[info]                  ·gc.alloc.rate:                   1170.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              14830.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16270.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.773 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 121005.802 ops/s
[info]                  ·gc.alloc.rate:                   1118.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              14548.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12579.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.649 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.456 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 118719.458 ops/s
[info]                  ·gc.alloc.rate:                   1098.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              14554.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17104.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.828 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 124103.789 ops/s
[info]                  ·gc.alloc.rate:               1137.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          14425.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12317.106 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   122162.372 ±(99.9%) 8944.068 ops/s [Average]
[info]   (min, avg, max) = (118719.458, 122162.372, 124228.807), stdev = 2322.746
[info]   CI (99.9%): [113218.304, 131106.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1131.238 ±(99.9%) 102.701 MB/sec [Average]
[info]   (min, avg, max) = (1098.383, 1131.238, 1170.825), stdev = 26.671
[info]   CI (99.9%): [1028.537, 1233.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   14571.240 ±(99.9%) 593.283 B/op [Average]
[info]   (min, avg, max) = (14425.967, 14571.240, 14830.900), stdev = 154.074
[info]   CI (99.9%): [13977.957, 15164.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1095.019 ±(99.9%) 677.257 MB/sec [Average]
[info]   (min, avg, max) = (961.288, 1095.019, 1290.763), stdev = 175.881
[info]   CI (99.9%): [417.762, 1772.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   14119.038 ±(99.9%) 9108.758 B/op [Average]
[info]   (min, avg, max) = (12317.106, 14119.038, 17104.218), stdev = 2365.515
[info]   CI (99.9%): [5010.281, 23227.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.594 ±(99.9%) 4.435 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.594, 2.649), stdev = 1.152
[info]   CI (99.9%): [≈ 0, 5.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.718 ±(99.9%) 57.696 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.718, 34.456), stdev = 14.983
[info]   CI (99.9%): [≈ 0, 65.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 223932.477 ops/s
[info] # Warmup Iteration   2: 471884.791 ops/s
[info] # Warmup Iteration   3: 563483.891 ops/s
[info] Iteration   1: 566666.025 ops/s
[info]                  ·gc.alloc.rate:               376.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          1045.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 910.266 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 566116.706 ops/s
[info]                  ·gc.alloc.rate:               378.349 MB/sec
[info]                  ·gc.alloc.rate.norm:          1051.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 911.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 566916.613 ops/s
[info]                  ·gc.alloc.rate:                   379.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              1054.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 563582.866 ops/s
[info]                  ·gc.alloc.rate:               378.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          1058.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 917.088 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 566885.547 ops/s
[info]                  ·gc.alloc.rate:               381.091 MB/sec
[info]                  ·gc.alloc.rate.norm:          1057.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 913.616 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   566033.551 ±(99.9%) 5417.819 ops/s [Average]
[info]   (min, avg, max) = (563582.866, 566033.551, 566916.613), stdev = 1406.990
[info]   CI (99.9%): [560615.732, 571451.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   378.957 ±(99.9%) 6.682 MB/sec [Average]
[info]   (min, avg, max) = (376.471, 378.957, 381.091), stdev = 1.735
[info]   CI (99.9%): [372.275, 385.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1053.559 ±(99.9%) 20.265 B/op [Average]
[info]   (min, avg, max) = (1045.455, 1053.559, 1058.155), stdev = 5.263
[info]   CI (99.9%): [1033.294, 1073.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   328.312 ±(99.9%) 2.095 MB/sec [Average]
[info]   (min, avg, max) = (327.789, 328.312, 329.090), stdev = 0.544
[info]   CI (99.9%): [326.217, 330.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   912.759 ±(99.9%) 10.449 B/op [Average]
[info]   (min, avg, max) = (910.266, 912.759, 917.088), stdev = 2.713
[info]   CI (99.9%): [902.311, 923.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.236 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.137), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2750.960 ops/s
[info] # Warmup Iteration   2: 24421.811 ops/s
[info] # Warmup Iteration   3: 50511.831 ops/s
[info] Iteration   1: 49212.327 ops/s
[info]                  ·gc.alloc.rate:                   2602.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              83201.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2263.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72357.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.496 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 52280.437 ops/s
[info]                  ·gc.alloc.rate:                   2285.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              68784.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69096.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.507 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 54381.589 ops/s
[info]                  ·gc.alloc.rate:                   2333.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              67519.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2322.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67215.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.410 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 53655.251 ops/s
[info]                  ·gc.alloc.rate:                   2298.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              67414.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68769.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.053 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 54509.815 ops/s
[info]                  ·gc.alloc.rate:                   2354.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              67982.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58361.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   52807.884 ±(99.9%) 8457.705 ops/s [Average]
[info]   (min, avg, max) = (49212.327, 52807.884, 54509.815), stdev = 2196.439
[info]   CI (99.9%): [44350.179, 61265.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2374.884 ±(99.9%) 501.675 MB/sec [Average]
[info]   (min, avg, max) = (2285.226, 2374.884, 2602.662), stdev = 130.283
[info]   CI (99.9%): [1873.209, 2876.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   70980.666 ±(99.9%) 26389.076 B/op [Average]
[info]   (min, avg, max) = (67414.848, 70980.666, 83201.826), stdev = 6853.159
[info]   CI (99.9%): [44591.590, 97369.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2249.598 ±(99.9%) 504.761 MB/sec [Average]
[info]   (min, avg, max) = (2021.499, 2249.598, 2344.669), stdev = 131.085
[info]   CI (99.9%): [1744.837, 2754.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67160.105 ±(99.9%) 20264.143 B/op [Average]
[info]   (min, avg, max) = (58361.070, 67160.105, 72357.091), stdev = 5262.534
[info]   CI (99.9%): [46895.962, 87424.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.516 ±(99.9%) 3.772 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.516, 2.268), stdev = 0.980
[info]   CI (99.9%): [≈ 0, 4.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   16.333 ±(99.9%) 120.921 B/op [Average]
[info]   (min, avg, max) = (1.202, 16.333, 72.496), stdev = 31.403
[info]   CI (99.9%): [≈ 0, 137.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.483
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19852.892 ops/s
[info] # Warmup Iteration   2: 79335.649 ops/s
[info] # Warmup Iteration   3: 88792.264 ops/s
[info] Iteration   1: 94030.225 ops/s
[info]                  ·gc.alloc.rate:                   742.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              12431.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10893.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.594 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 93236.874 ops/s
[info]                  ·gc.alloc.rate:               752.509 MB/sec
[info]                  ·gc.alloc.rate.norm:          12700.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16494.681 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   3: 92891.435 ops/s
[info]                  ·gc.alloc.rate:                   747.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              12669.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11049.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 94299.690 ops/s
[info]                  ·gc.alloc.rate:                   751.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              12547.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10895.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.802 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.450 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 95683.464 ops/s
[info]                  ·gc.alloc.rate:                   759.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              12493.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10693.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.163 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   94028.338 ±(99.9%) 4188.203 ops/s [Average]
[info]   (min, avg, max) = (92891.435, 94028.338, 95683.464), stdev = 1087.663
[info]   CI (99.9%): [89840.135, 98216.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   750.973 ±(99.9%) 23.930 MB/sec [Average]
[info]   (min, avg, max) = (742.761, 750.973, 759.624), stdev = 6.215
[info]   CI (99.9%): [727.042, 774.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12568.473 ±(99.9%) 441.161 B/op [Average]
[info]   (min, avg, max) = (12431.211, 12568.473, 12700.647), stdev = 114.568
[info]   CI (99.9%): [12127.313, 13009.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   716.731 ±(99.9%) 560.921 MB/sec [Average]
[info]   (min, avg, max) = (650.196, 716.731, 977.304), stdev = 145.669
[info]   CI (99.9%): [155.809, 1277.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12005.213 ±(99.9%) 9676.121 B/op [Average]
[info]   (min, avg, max) = (10693.718, 12005.213, 16494.681), stdev = 2512.858
[info]   CI (99.9%): [2329.092, 21681.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.058 ±(99.9%) 6.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.058, 3.802), stdev = 1.590
[info]   CI (99.9%): [≈ 0, 7.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.653 ±(99.9%) 102.176 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.653, 63.450), stdev = 26.535
[info]   CI (99.9%): [≈ 0, 119.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.674 ops/s
[info] # Warmup Iteration   2: 91027.800 ops/s
[info] # Warmup Iteration   3: 112937.021 ops/s
[info] Iteration   1: 120578.281 ops/s
[info]                  ·gc.alloc.rate:               452.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          5901.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4234.299 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 112432.184 ops/s
[info]                  ·gc.alloc.rate:               421.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          5903.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4541.349 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 117622.569 ops/s
[info]                  ·gc.alloc.rate:                   451.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              6038.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8681.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 106866.372 ops/s
[info]                  ·gc.alloc.rate:               405.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          5972.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4782.441 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 116771.118 ops/s
[info]                  ·gc.alloc.rate:               443.426 MB/sec
[info]                  ·gc.alloc.rate.norm:          5975.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4376.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   114854.105 ±(99.9%) 20536.526 ops/s [Average]
[info]   (min, avg, max) = (106866.372, 114854.105, 120578.281), stdev = 5333.271
[info]   CI (99.9%): [94317.579, 135390.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   434.871 ±(99.9%) 78.753 MB/sec [Average]
[info]   (min, avg, max) = (405.617, 434.871, 452.218), stdev = 20.452
[info]   CI (99.9%): [356.118, 513.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   5958.212 ±(99.9%) 221.515 B/op [Average]
[info]   (min, avg, max) = (5901.271, 5958.212, 6038.403), stdev = 57.527
[info]   CI (99.9%): [5736.697, 6179.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   389.482 ±(99.9%) 558.423 MB/sec [Average]
[info]   (min, avg, max) = (324.468, 389.482, 648.902), stdev = 145.021
[info]   CI (99.9%): [≈ 0, 947.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   5323.287 ±(99.9%) 7271.529 B/op [Average]
[info]   (min, avg, max) = (4234.299, 5323.287, 8681.608), stdev = 1888.393
[info]   CI (99.9%): [≈ 0, 12594.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 1.439 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.836), stdev = 0.374
[info]   CI (99.9%): [≈ 0, 1.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36841.515 ops/s
[info] # Warmup Iteration   2: 90511.476 ops/s
[info] # Warmup Iteration   3: 89944.697 ops/s
[info] Iteration   1: 105183.372 ops/s
[info]                  ·gc.alloc.rate:                   395.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              5917.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4869.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 105232.301 ops/s
[info]                  ·gc.alloc.rate:               401.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          6003.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4871.769 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 101306.987 ops/s
[info]                  ·gc.alloc.rate:                   382.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              5934.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5060.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.647 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 105100.519 ops/s
[info]                  ·gc.alloc.rate:               398.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          5972.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4882.688 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 104487.312 ops/s
[info]                  ·gc.alloc.rate:               405.072 MB/sec
[info]                  ·gc.alloc.rate.norm:          6101.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9827.766 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   104262.098 ±(99.9%) 6465.296 ops/s [Average]
[info]   (min, avg, max) = (101306.987, 104262.098, 105232.301), stdev = 1679.017
[info]   CI (99.9%): [97796.802, 110727.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   396.625 ±(99.9%) 34.141 MB/sec [Average]
[info]   (min, avg, max) = (382.041, 396.625, 405.072), stdev = 8.866
[info]   CI (99.9%): [362.483, 430.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5985.922 ±(99.9%) 279.651 B/op [Average]
[info]   (min, avg, max) = (5917.759, 5985.922, 6101.413), stdev = 72.624
[info]   CI (99.9%): [5706.271, 6265.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   391.135 ±(99.9%) 562.532 MB/sec [Average]
[info]   (min, avg, max) = (325.470, 391.135, 652.464), stdev = 146.088
[info]   CI (99.9%): [≈ 0, 953.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5902.360 ±(99.9%) 8455.434 B/op [Average]
[info]   (min, avg, max) = (4869.193, 5902.360, 9827.766), stdev = 2195.849
[info]   CI (99.9%): [≈ 0, 14357.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.192 ±(99.9%) 1.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.647), stdev = 0.288
[info]   CI (99.9%): [≈ 0, 1.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47143.014 ops/s
[info] # Warmup Iteration   2: 107240.954 ops/s
[info] # Warmup Iteration   3: 115479.944 ops/s
[info] Iteration   1: 121020.412 ops/s
[info]                  ·gc.alloc.rate:                   460.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              5984.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4257.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.287 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 116158.817 ops/s
[info]                  ·gc.alloc.rate:                   448.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              6077.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8881.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.564 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 121333.011 ops/s
[info]                  ·gc.alloc.rate:               460.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          5975.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4259.694 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 120604.165 ops/s
[info]                  ·gc.alloc.rate:               465.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          6073.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8575.149 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 121369.509 ops/s
[info]                  ·gc.alloc.rate:                   458.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              5946.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4262.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   120097.183 ±(99.9%) 8559.824 ops/s [Average]
[info]   (min, avg, max) = (116158.817, 120097.183, 121369.509), stdev = 2222.959
[info]   CI (99.9%): [111537.358, 128657.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   458.740 ±(99.9%) 23.812 MB/sec [Average]
[info]   (min, avg, max) = (448.647, 458.740, 465.427), stdev = 6.184
[info]   CI (99.9%): [434.928, 482.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6011.352 ±(99.9%) 232.010 B/op [Average]
[info]   (min, avg, max) = (5946.188, 6011.352, 6077.844), stdev = 60.252
[info]   CI (99.9%): [5779.342, 6243.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.492 ±(99.9%) 692.086 MB/sec [Average]
[info]   (min, avg, max) = (327.524, 459.492, 657.174), stdev = 179.733
[info]   CI (99.9%): [≈ 0, 1151.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6047.306 ±(99.9%) 9432.818 B/op [Average]
[info]   (min, avg, max) = (4257.750, 6047.306, 8881.189), stdev = 2449.673
[info]   CI (99.9%): [≈ 0, 15480.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.066 ±(99.9%) 0.410 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.253), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.858 ±(99.9%) 5.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.287), stdev = 1.381
[info]   CI (99.9%): [≈ 0, 6.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 2.490
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52843.083 ops/s
[info] # Warmup Iteration   2: 92998.920 ops/s
[info] # Warmup Iteration   3: 110375.068 ops/s
[info] Iteration   1: 118699.605 ops/s
[info]                  ·gc.alloc.rate:                   350.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              4649.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4345.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.839 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 117773.700 ops/s
[info]                  ·gc.alloc.rate:                   347.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              4646.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4379.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 123163.975 ops/s
[info]                  ·gc.alloc.rate:                   374.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              4789.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8376.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 118206.595 ops/s
[info]                  ·gc.alloc.rate:               351.584 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4372.688 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 107113.898 ops/s
[info]                  ·gc.alloc.rate:               319.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          4696.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4825.517 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   116991.555 ±(99.9%) 22835.355 ops/s [Average]
[info]   (min, avg, max) = (107113.898, 116991.555, 123163.975), stdev = 5930.269
[info]   CI (99.9%): [94156.199, 139826.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   348.931 ±(99.9%) 75.548 MB/sec [Average]
[info]   (min, avg, max) = (319.700, 348.931, 374.884), stdev = 19.620
[info]   CI (99.9%): [273.382, 424.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4692.709 ±(99.9%) 224.099 B/op [Average]
[info]   (min, avg, max) = (4646.563, 4692.709, 4789.785), stdev = 58.198
[info]   CI (99.9%): [4468.610, 4916.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   393.614 ±(99.9%) 563.936 MB/sec [Average]
[info]   (min, avg, max) = (327.759, 393.614, 655.595), stdev = 146.452
[info]   CI (99.9%): [≈ 0, 957.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   5259.949 ±(99.9%) 6752.091 B/op [Average]
[info]   (min, avg, max) = (4345.331, 5259.949, 8376.350), stdev = 1753.496
[info]   CI (99.9%): [≈ 0, 12012.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.214 ±(99.9%) 1.786 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.214, 1.044), stdev = 0.464
[info]   CI (99.9%): [≈ 0, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.836 ±(99.9%) 23.687 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.836, 13.839), stdev = 6.151
[info]   CI (99.9%): [≈ 0, 26.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 7.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:07:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1210.487 ops/s
[info] # Warmup Iteration   2: 6564.346 ops/s
[info] # Warmup Iteration   3: 9896.592 ops/s
[info] Iteration   1: 12949.504 ops/s
[info]                  ·gc.alloc.rate:                   2140.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              260087.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2060.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250364.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1083.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 13735.662 ops/s
[info]                  ·gc.alloc.rate:                   2069.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              237089.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1791.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205227.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.155 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13744.526 ops/s
[info]                  ·gc.alloc.rate:                   2075.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              237641.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2166.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248071.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.150 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 11728.539 ops/s
[info]                  ·gc.alloc.rate:               2479.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          332708.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2535.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 340154.801 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     42.000 ms
[info] Iteration   5: 13102.396 ops/s
[info]                  ·gc.alloc.rate:                   1961.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              235543.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1813.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217859.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1132.870 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   13052.125 ±(99.9%) 3170.404 ops/s [Average]
[info]   (min, avg, max) = (11728.539, 13052.125, 13744.526), stdev = 823.344
[info]   CI (99.9%): [9881.721, 16222.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   2145.329 ±(99.9%) 761.193 MB/sec [Average]
[info]   (min, avg, max) = (1961.204, 2145.329, 2479.706), stdev = 197.679
[info]   CI (99.9%): [1384.136, 2906.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   260614.132 ±(99.9%) 160017.613 B/op [Average]
[info]   (min, avg, max) = (235543.770, 260614.132, 332708.928), stdev = 41556.066
[info]   CI (99.9%): [100596.519, 420631.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2073.567 ±(99.9%) 1169.269 MB/sec [Average]
[info]   (min, avg, max) = (1791.633, 2073.567, 2535.200), stdev = 303.656
[info]   CI (99.9%): [904.298, 3242.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   252335.751 ±(99.9%) 203228.818 B/op [Average]
[info]   (min, avg, max) = (205227.518, 252335.751, 340154.801), stdev = 52777.879
[info]   CI (99.9%): [49106.933, 455564.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.694 ±(99.9%) 19.272 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.694, 9.433), stdev = 5.005
[info]   CI (99.9%): [≈ 0, 22.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   446.053 ±(99.9%) 2327.780 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 446.053, 1132.870), stdev = 604.517
[info]   CI (99.9%): [≈ 0, 2773.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   114.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 22.800, 42.000), stdev = 14.957
[info]   CI (99.9%): [114.000, 114.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 877.220 ops/s
[info] # Warmup Iteration   2: 8967.884 ops/s
[info] # Warmup Iteration   3: 11755.134 ops/s
[info] Iteration   1: 13466.403 ops/s
[info]                  ·gc.alloc.rate:               1898.981 MB/sec
[info]                  ·gc.alloc.rate.norm:          221925.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1927.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225223.132 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 13467.640 ops/s
[info]                  ·gc.alloc.rate:                   1888.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              220715.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224350.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.433 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 12948.084 ops/s
[info]                  ·gc.alloc.rate:               1813.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          220397.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1618.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 196719.335 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 13242.341 ops/s
[info]                  ·gc.alloc.rate:                   1893.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              224997.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233861.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.948 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 13324.658 ops/s
[info]                  ·gc.alloc.rate:                   1892.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              223546.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195860.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.459 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   13289.825 ±(99.9%) 823.743 ops/s [Average]
[info]   (min, avg, max) = (12948.084, 13289.825, 13467.640), stdev = 213.923
[info]   CI (99.9%): [12466.082, 14113.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1877.454 ±(99.9%) 138.749 MB/sec [Average]
[info]   (min, avg, max) = (1813.323, 1877.454, 1898.981), stdev = 36.033
[info]   CI (99.9%): [1738.706, 2016.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   222316.460 ±(99.9%) 7481.244 B/op [Average]
[info]   (min, avg, max) = (220397.534, 222316.460, 224997.060), stdev = 1942.855
[info]   CI (99.9%): [214835.216, 229797.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1818.393 ±(99.9%) 638.892 MB/sec [Average]
[info]   (min, avg, max) = (1618.510, 1818.393, 1967.998), stdev = 165.918
[info]   CI (99.9%): [1179.501, 2457.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   215202.903 ±(99.9%) 68015.421 B/op [Average]
[info]   (min, avg, max) = (195860.591, 215202.903, 233861.344), stdev = 17663.389
[info]   CI (99.9%): [147187.483, 283218.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.968 ±(99.9%) 7.958 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.968, 4.948), stdev = 2.067
[info]   CI (99.9%): [≈ 0, 9.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 9.000), stdev = 1.414
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82058.951 ops/s
[info] # Warmup Iteration   2: 196212.715 ops/s
[info] # Warmup Iteration   3: 223631.961 ops/s
[info] Iteration   1: 222480.902 ops/s
[info]                  ·gc.alloc.rate:               585.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          4142.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2285.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 225614.242 ops/s
[info]                  ·gc.alloc.rate:                   620.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              4330.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4511.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.743 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 189567.120 ops/s
[info]                  ·gc.alloc.rate:                   509.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              4231.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5381.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 214851.193 ops/s
[info]                  ·gc.alloc.rate:               579.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          4243.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4757.804 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 212493.468 ops/s
[info]                  ·gc.alloc.rate:                   562.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              4167.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2409.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.354 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   213001.385 ±(99.9%) 54517.216 ops/s [Average]
[info]   (min, avg, max) = (189567.120, 213001.385, 225614.242), stdev = 14157.948
[info]   CI (99.9%): [158484.169, 267518.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   571.661 ±(99.9%) 156.310 MB/sec [Average]
[info]   (min, avg, max) = (509.669, 571.661, 620.821), stdev = 40.593
[info]   CI (99.9%): [415.351, 727.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4222.909 ±(99.9%) 283.383 B/op [Average]
[info]   (min, avg, max) = (4142.215, 4222.909, 4330.280), stdev = 73.594
[info]   CI (99.9%): [3939.526, 4506.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   518.641 ±(99.9%) 683.148 MB/sec [Average]
[info]   (min, avg, max) = (323.096, 518.641, 649.535), stdev = 177.411
[info]   CI (99.9%): [≈ 0, 1201.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3869.243 ±(99.9%) 5488.537 B/op [Average]
[info]   (min, avg, max) = (2285.403, 3869.243, 5381.142), stdev = 1425.356
[info]   CI (99.9%): [≈ 0, 9357.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 5.099 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 3.019), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 5.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.854 ±(99.9%) 37.776 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.854, 22.354), stdev = 9.810
[info]   CI (99.9%): [≈ 0, 42.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.739
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282.539 ops/s
[info] # Warmup Iteration   2: 3134.318 ops/s
[info] # Warmup Iteration   3: 5380.637 ops/s
[info] Iteration   1: 6773.556 ops/s
[info]                  ·gc.alloc.rate:                   1724.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              400572.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     379189.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 376.801 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 6791.736 ops/s
[info]                  ·gc.alloc.rate:                   1738.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              402761.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380346.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 6551.435 ops/s
[info]                  ·gc.alloc.rate:                   1665.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              400038.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395876.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 6516.298 ops/s
[info]                  ·gc.alloc.rate:                   1659.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              400824.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     400093.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6770.940 ops/s
[info]                  ·gc.alloc.rate:                   1756.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              408182.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     387352.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.838 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6680.793 ±(99.9%) 519.595 ops/s [Average]
[info]   (min, avg, max) = (6516.298, 6680.793, 6791.736), stdev = 134.937
[info]   CI (99.9%): [6161.198, 7200.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1708.787 ±(99.9%) 168.137 MB/sec [Average]
[info]   (min, avg, max) = (1659.849, 1708.787, 1756.332), stdev = 43.665
[info]   CI (99.9%): [1540.650, 1876.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   402475.878 ±(99.9%) 12906.921 B/op [Average]
[info]   (min, avg, max) = (400038.148, 402475.878, 408182.646), stdev = 3351.886
[info]   CI (99.9%): [389568.957, 415382.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1649.036 ±(99.9%) 51.624 MB/sec [Average]
[info]   (min, avg, max) = (1632.090, 1649.036, 1666.703), stdev = 13.407
[info]   CI (99.9%): [1597.412, 1700.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   388571.576 ±(99.9%) 35671.550 B/op [Average]
[info]   (min, avg, max) = (379189.845, 388571.576, 400093.359), stdev = 9263.788
[info]   CI (99.9%): [352900.026, 424243.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 2.678 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.641, 1.622), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 3.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   149.538 ±(99.9%) 620.806 B/op [Average]
[info]   (min, avg, max) = (4.838, 149.538, 376.801), stdev = 161.221
[info]   CI (99.9%): [≈ 0, 770.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.140
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6133.214 ops/s
[info] # Warmup Iteration   2: 18585.451 ops/s
[info] # Warmup Iteration   3: 31560.624 ops/s
[info] Iteration   1: 35891.790 ops/s
[info]                  ·gc.alloc.rate:                   2152.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              94387.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2092.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91745.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.069 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 34063.359 ops/s
[info]                  ·gc.alloc.rate:                   2507.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              115798.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2478.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114463.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.388 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 30013.879 ops/s
[info]                  ·gc.alloc.rate:                   2241.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              117463.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2357.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123587.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 889.523 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         140.000 ms
[info] Iteration   4: 32825.941 ops/s
[info]                  ·gc.alloc.rate:                   2084.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              99929.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2080.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99744.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1096.369 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         69.000 ms
[info] Iteration   5: 35857.747 ops/s
[info]                  ·gc.alloc.rate:                   2130.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              93498.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1920.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84277.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.568 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   33730.543 ±(99.9%) 9420.049 ops/s [Average]
[info]   (min, avg, max) = (30013.879, 33730.543, 35891.790), stdev = 2446.357
[info]   CI (99.9%): [24310.494, 43150.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2223.255 ±(99.9%) 649.586 MB/sec [Average]
[info]   (min, avg, max) = (2084.620, 2223.255, 2507.338), stdev = 168.695
[info]   CI (99.9%): [1573.669, 2872.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   104215.600 ±(99.9%) 44719.209 B/op [Average]
[info]   (min, avg, max) = (93498.862, 104215.600, 117463.853), stdev = 11613.437
[info]   CI (99.9%): [59496.390, 148934.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2185.996 ±(99.9%) 872.838 MB/sec [Average]
[info]   (min, avg, max) = (1920.253, 2185.996, 2478.434), stdev = 226.673
[info]   CI (99.9%): [1313.158, 3058.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   102763.698 ±(99.9%) 62173.098 B/op [Average]
[info]   (min, avg, max) = (84277.279, 102763.698, 123587.910), stdev = 16146.156
[info]   CI (99.9%): [40590.600, 164936.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   8.326 ±(99.9%) 41.588 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 8.326, 22.871), stdev = 10.800
[info]   CI (99.9%): [≈ 0, 49.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   412.984 ±(99.9%) 2059.758 B/op [Average]
[info]   (min, avg, max) = (4.568, 412.984, 1096.369), stdev = 534.913
[info]   CI (99.9%): [≈ 0, 2472.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 9.000), stdev = 0.837
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   273.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 54.600, 140.000), stdev = 52.899
[info]   CI (99.9%): [273.000, 273.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7520.138 ops/s
[info] # Warmup Iteration   2: 21944.197 ops/s
[info] # Warmup Iteration   3: 27233.706 ops/s
[info] Iteration   1: 37305.116 ops/s
[info]                  ·gc.alloc.rate:                   2152.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              90814.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2095.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88381.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 449.583 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 36113.478 ops/s
[info]                  ·gc.alloc.rate:                   1964.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              85613.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1824.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79482.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.894 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.942 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 36645.869 ops/s
[info]                  ·gc.alloc.rate:                   1989.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              85427.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2083.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89460.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      19.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 831.311 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   4: 39256.939 ops/s
[info]                  ·gc.alloc.rate:                   1867.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              74858.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67525.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.151 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.063 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         40.000 ms
[info] Iteration   5: 35828.555 ops/s
[info]                  ·gc.alloc.rate:                   2159.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              94819.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100673.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      25.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1119.227 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         63.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   37029.992 ±(99.9%) 5260.742 ops/s [Average]
[info]   (min, avg, max) = (35828.555, 37029.992, 39256.939), stdev = 1366.198
[info]   CI (99.9%): [31769.249, 42290.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2026.749 ±(99.9%) 487.090 MB/sec [Average]
[info]   (min, avg, max) = (1867.688, 2026.749, 2159.355), stdev = 126.496
[info]   CI (99.9%): [1539.659, 2513.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   86306.650 ±(99.9%) 28885.866 B/op [Average]
[info]   (min, avg, max) = (74858.900, 86306.650, 94819.480), stdev = 7501.568
[info]   CI (99.9%): [57420.785, 115192.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1995.929 ±(99.9%) 927.113 MB/sec [Average]
[info]   (min, avg, max) = (1684.725, 1995.929, 2292.665), stdev = 240.768
[info]   CI (99.9%): [1068.816, 2923.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   85104.652 ±(99.9%) 47657.721 B/op [Average]
[info]   (min, avg, max) = (67525.581, 85104.652, 100673.245), stdev = 12376.559
[info]   CI (99.9%): [37446.931, 132762.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   11.310 ±(99.9%) 43.019 MB/sec [Average]
[info]   (min, avg, max) = (0.151, 11.310, 25.489), stdev = 11.172
[info]   CI (99.9%): [≈ 0, 54.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   489.025 ±(99.9%) 1878.247 B/op [Average]
[info]   (min, avg, max) = (6.063, 489.025, 1119.227), stdev = 487.775
[info]   CI (99.9%): [≈ 0, 2367.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   177.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (21.000, 35.400, 63.000), stdev = 17.387
[info]   CI (99.9%): [177.000, 177.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118943.794 ops/s
[info] # Warmup Iteration   2: 256576.115 ops/s
[info] # Warmup Iteration   3: 302035.685 ops/s
[info] Iteration   1: 313443.246 ops/s
[info]                  ·gc.alloc.rate:                   708.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              3557.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3297.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 312030.763 ops/s
[info]                  ·gc.alloc.rate:                   710.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              3581.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3319.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 311594.285 ops/s
[info]                  ·gc.alloc.rate:                   711.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3324.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 315616.049 ops/s
[info]                  ·gc.alloc.rate:                   713.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              3555.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3288.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 317306.570 ops/s
[info]                  ·gc.alloc.rate:                   735.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3270.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   313998.183 ±(99.9%) 9337.382 ops/s [Average]
[info]   (min, avg, max) = (311594.285, 313998.183, 317306.570), stdev = 2424.889
[info]   CI (99.9%): [304660.800, 323335.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   715.808 ±(99.9%) 43.258 MB/sec [Average]
[info]   (min, avg, max) = (708.553, 715.808, 735.683), stdev = 11.234
[info]   CI (99.9%): [672.551, 759.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3587.333 ±(99.9%) 145.584 B/op [Average]
[info]   (min, avg, max) = (3555.754, 3587.333, 3648.719), stdev = 37.808
[info]   CI (99.9%): [3441.749, 3732.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.471 ±(99.9%) 4.211 MB/sec [Average]
[info]   (min, avg, max) = (656.872, 658.471, 659.505), stdev = 1.094
[info]   CI (99.9%): [654.260, 662.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3300.212 ±(99.9%) 85.119 B/op [Average]
[info]   (min, avg, max) = (3270.905, 3300.212, 3324.252), stdev = 22.105
[info]   CI (99.9%): [3215.093, 3385.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.281 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.766, 3.684), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.801 ±(99.9%) 31.148 B/op [Average]
[info]   (min, avg, max) = (0.104, 3.801, 18.270), stdev = 8.089
[info]   CI (99.9%): [≈ 0, 34.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 8.000), stdev = 1.095
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199811.287 ops/s
[info] # Warmup Iteration   2: 309236.007 ops/s
[info] # Warmup Iteration   3: 350320.074 ops/s
[info] Iteration   1: 349826.248 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 350196.231 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 350153.562 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 349051.332 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.828 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 349747.372 ops/s
[info]                  ·gc.alloc.rate:      0.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.330 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   349794.949 ±(99.9%) 1770.711 ops/s [Average]
[info]   (min, avg, max) = (349051.332, 349794.949, 350196.231), stdev = 459.848
[info]   CI (99.9%): [348024.238, 351565.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.185 ±(99.9%) 1.435 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.185, 0.849), stdev = 0.373
[info]   CI (99.9%): [≈ 0, 1.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.832 ±(99.9%) 6.472 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.832, 3.828), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6571.262 ops/s
[info] # Warmup Iteration   2: 20828.601 ops/s
[info] # Warmup Iteration   3: 24949.137 ops/s
[info] Iteration   1: 36979.284 ops/s
[info]                  ·gc.alloc.rate:                   3024.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              128638.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2846.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121090.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.852 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         60.000 ms
[info] Iteration   2: 34813.627 ops/s
[info]                  ·gc.alloc.rate:                   2509.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              113414.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121879.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      43.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1953.785 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         85.000 ms
[info] Iteration   3: 32924.640 ops/s
[info]                  ·gc.alloc.rate:                        2515.485 MB/sec
[info]                  ·gc.alloc.rate.norm:                   120192.985 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.829 B/op
[info]                  ·gc.churn.Metaspace:                   0.050 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              2.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2308.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          110286.759 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  269.253 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             12865.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           44.201 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      2111.995 B/op
[info]                  ·gc.count:                             10.000 counts
[info]                  ·gc.time:                              184.000 ms
[info] Iteration   4: 39504.555 ops/s
[info]                  ·gc.alloc.rate:                   2326.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              92668.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2256.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89860.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.836 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   5: 36351.933 ops/s
[info]                  ·gc.alloc.rate:                   2680.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              115977.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2797.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121060.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      31.215 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1350.801 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         63.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   36114.808 ±(99.9%) 9464.319 ops/s [Average]
[info]   (min, avg, max) = (32924.640, 36114.808, 39504.555), stdev = 2457.854
[info]   CI (99.9%): [26650.489, 45579.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2611.304 ±(99.9%) 1010.285 MB/sec [Average]
[info]   (min, avg, max) = (2326.957, 2611.304, 3024.002), stdev = 262.368
[info]   CI (99.9%): [1601.018, 3621.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   114178.444 ±(99.9%) 51365.956 B/op [Average]
[info]   (min, avg, max) = (92668.423, 114178.444, 128638.832), stdev = 13339.576
[info]   CI (99.9%): [62812.488, 165544.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.166 ±(99.9%) 1.427 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.829), stdev = 0.371
[info]   CI (99.9%): [≈ 0, 1.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.050), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.481 ±(99.9%) 4.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.405), stdev = 1.075
[info]   CI (99.9%): [≈ 0, 4.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2581.209 ±(99.9%) 1073.227 MB/sec [Average]
[info]   (min, avg, max) = (2256.449, 2581.209, 2846.569), stdev = 278.714
[info]   CI (99.9%): [1507.982, 3654.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112835.574 ±(99.9%) 52795.170 B/op [Average]
[info]   (min, avg, max) = (89860.503, 112835.574, 121879.116), stdev = 13710.738
[info]   CI (99.9%): [60040.404, 165630.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   53.851 ±(99.9%) 463.671 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 53.851, 269.253), stdev = 120.414
[info]   CI (99.9%): [≈ 0, 517.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   2573.053 ±(99.9%) 22154.761 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2573.053, 12865.264), stdev = 5753.521
[info]   CI (99.9%): [≈ 0, 24727.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   24.576 ±(99.9%) 81.432 MB/sec [Average]
[info]   (min, avg, max) = (1.101, 24.576, 44.201), stdev = 21.148
[info]   CI (99.9%): [≈ 0, 106.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1118.654 ±(99.9%) 3785.156 B/op [Average]
[info]   (min, avg, max) = (43.836, 1118.654, 2111.995), stdev = 982.993
[info]   CI (99.9%): [≈ 0, 4903.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 12.000), stdev = 1.414
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   423.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (31.000, 84.600, 184.000), stdev = 58.790
[info]   CI (99.9%): [423.000, 423.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23481.550 ops/s
[info] # Warmup Iteration   2: 133327.195 ops/s
[info] # Warmup Iteration   3: 142735.534 ops/s
[info] Iteration   1: 181331.927 ops/s
[info]                  ·gc.alloc.rate:                   2538.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              22031.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2277.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19761.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.828 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 181412.341 ops/s
[info]                  ·gc.alloc.rate:                   2524.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              21902.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2605.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22601.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.982 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 178002.885 ops/s
[info]                  ·gc.alloc.rate:                   2516.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              22243.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20242.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 175543.371 ops/s
[info]                  ·gc.alloc.rate:                   2484.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              22265.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20761.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 179299.225 ops/s
[info]                  ·gc.alloc.rate:                   2542.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              22318.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23482.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   179117.950 ±(99.9%) 9475.200 ops/s [Average]
[info]   (min, avg, max) = (175543.371, 179117.950, 181412.341), stdev = 2460.679
[info]   CI (99.9%): [169642.750, 188593.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2521.303 ±(99.9%) 89.858 MB/sec [Average]
[info]   (min, avg, max) = (2484.239, 2521.303, 2542.837), stdev = 23.336
[info]   CI (99.9%): [2431.446, 2611.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22152.242 ±(99.9%) 683.539 B/op [Average]
[info]   (min, avg, max) = (21902.088, 22152.242, 22318.912), stdev = 177.513
[info]   CI (99.9%): [21468.703, 22835.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2432.797 ±(99.9%) 738.166 MB/sec [Average]
[info]   (min, avg, max) = (2277.012, 2432.797, 2675.429), stdev = 191.699
[info]   CI (99.9%): [1694.631, 3170.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21369.816 ±(99.9%) 6152.744 B/op [Average]
[info]   (min, avg, max) = (19761.000, 21369.816, 23482.695), stdev = 1597.848
[info]   CI (99.9%): [15217.072, 27522.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.781 ±(99.9%) 4.059 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.781, 2.303), stdev = 1.054
[info]   CI (99.9%): [≈ 0, 4.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.784 ±(99.9%) 35.197 B/op [Average]
[info]   (min, avg, max) = (0.184, 6.784, 19.982), stdev = 9.141
[info]   CI (99.9%): [≈ 0, 41.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 19.000), stdev = 4.324
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.630 ops/s
[info] # Warmup Iteration   2: 427386.313 ops/s
[info] # Warmup Iteration   3: 536349.146 ops/s
[info] Iteration   1: 543856.479 ops/s
[info]                  ·gc.alloc.rate:               573.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          1659.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 940.671 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 554056.573 ops/s
[info]                  ·gc.alloc.rate:               593.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          1686.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1847.680 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 548105.470 ops/s
[info]                  ·gc.alloc.rate:                   589.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              1691.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1869.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 562385.503 ops/s
[info]                  ·gc.alloc.rate:                   608.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              1702.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 552376.360 ops/s
[info]                  ·gc.alloc.rate:                   603.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              1718.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1858.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   552156.077 ±(99.9%) 26788.439 ops/s [Average]
[info]   (min, avg, max) = (543856.479, 552156.077, 562385.503), stdev = 6956.873
[info]   CI (99.9%): [525367.637, 578944.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   593.701 ±(99.9%) 52.164 MB/sec [Average]
[info]   (min, avg, max) = (573.686, 593.701, 608.609), stdev = 13.547
[info]   CI (99.9%): [541.538, 645.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1691.868 ±(99.9%) 83.478 B/op [Average]
[info]   (min, avg, max) = (1659.992, 1691.868, 1718.599), stdev = 21.679
[info]   CI (99.9%): [1608.390, 1775.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   586.143 ±(99.9%) 561.938 MB/sec [Average]
[info]   (min, avg, max) = (325.092, 586.143, 652.188), stdev = 145.934
[info]   CI (99.9%): [24.205, 1148.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1667.851 ±(99.9%) 1566.716 B/op [Average]
[info]   (min, avg, max) = (940.671, 1667.851, 1869.766), stdev = 406.871
[info]   CI (99.9%): [101.136, 3234.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.047), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41631.553 ops/s
[info] # Warmup Iteration   2: 238646.308 ops/s
[info] # Warmup Iteration   3: 350701.968 ops/s
[info] Iteration   1: 468115.215 ops/s
[info]                  ·gc.alloc.rate:                   473.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              1591.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2165.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 476681.206 ops/s
[info]                  ·gc.alloc.rate:               475.724 MB/sec
[info]                  ·gc.alloc.rate.norm:          1570.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1062.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 462899.947 ops/s
[info]                  ·gc.alloc.rate:                   473.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2187.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 477648.789 ops/s
[info]                  ·gc.alloc.rate:               479.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          1579.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1060.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 479126.654 ops/s
[info]                  ·gc.alloc.rate:               479.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          1576.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1059.073 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   472894.362 ±(99.9%) 27126.879 ops/s [Average]
[info]   (min, avg, max) = (462899.947, 472894.362, 479126.654), stdev = 7044.764
[info]   CI (99.9%): [445767.483, 500021.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   476.327 ±(99.9%) 12.400 MB/sec [Average]
[info]   (min, avg, max) = (473.105, 476.327, 479.915), stdev = 3.220
[info]   CI (99.9%): [463.927, 488.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1585.247 ±(99.9%) 57.711 B/op [Average]
[info]   (min, avg, max) = (1570.578, 1585.247, 1608.397), stdev = 14.987
[info]   CI (99.9%): [1527.535, 1642.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   450.766 ±(99.9%) 679.038 MB/sec [Average]
[info]   (min, avg, max) = (321.758, 450.766, 644.346), stdev = 176.344
[info]   CI (99.9%): [≈ 0, 1129.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1506.980 ±(99.9%) 2354.429 B/op [Average]
[info]   (min, avg, max) = (1059.073, 1506.980, 2187.798), stdev = 611.438
[info]   CI (99.9%): [≈ 0, 3861.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.956 ±(99.9%) 8.144 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.956, 4.739), stdev = 2.115
[info]   CI (99.9%): [≈ 0, 9.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.214 ±(99.9%) 27.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.214, 15.929), stdev = 7.108
[info]   CI (99.9%): [≈ 0, 30.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175740.943 ops/s
[info] # Warmup Iteration   2: 451249.040 ops/s
[info] # Warmup Iteration   3: 635215.027 ops/s
[info] Iteration   1: 666155.966 ops/s
[info]                  ·gc.alloc.rate:                   445.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              1052.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1550.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 653388.904 ops/s
[info]                  ·gc.alloc.rate:               432.306 MB/sec
[info]                  ·gc.alloc.rate.norm:          1040.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 791.073 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 642654.294 ops/s
[info]                  ·gc.alloc.rate:                   425.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              1041.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     804.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 644326.882 ops/s
[info]                  ·gc.alloc.rate:               430.708 MB/sec
[info]                  ·gc.alloc.rate.norm:          1051.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 803.771 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 555796.582 ops/s
[info]                  ·gc.alloc.rate:                   381.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              1080.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1863.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   632464.525 ±(99.9%) 168896.537 ops/s [Average]
[info]   (min, avg, max) = (555796.582, 632464.525, 666155.966), stdev = 43861.894
[info]   CI (99.9%): [463567.988, 801361.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   423.143 ±(99.9%) 93.718 MB/sec [Average]
[info]   (min, avg, max) = (381.727, 423.143, 445.691), stdev = 24.338
[info]   CI (99.9%): [329.425, 516.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1053.536 ±(99.9%) 62.751 B/op [Average]
[info]   (min, avg, max) = (1040.959, 1053.536, 1080.819), stdev = 16.296
[info]   CI (99.9%): [990.784, 1116.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.112 ±(99.9%) 692.790 MB/sec [Average]
[info]   (min, avg, max) = (328.530, 460.112, 658.187), stdev = 179.915
[info]   CI (99.9%): [≈ 0, 1152.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1162.577 ±(99.9%) 1960.468 B/op [Average]
[info]   (min, avg, max) = (791.073, 1162.577, 1863.585), stdev = 509.127
[info]   CI (99.9%): [≈ 0, 3123.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.112 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.070), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.166), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5738.992 ops/s
[info] # Warmup Iteration   2: 75431.189 ops/s
[info] # Warmup Iteration   3: 104295.103 ops/s
[info] Iteration   1: 111073.368 ops/s
[info]                  ·gc.alloc.rate:                   3634.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              51505.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3611.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51168.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.655 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 112723.984 ops/s
[info]                  ·gc.alloc.rate:                   3711.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              51816.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3664.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51165.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.872 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 107875.523 ops/s
[info]                  ·gc.alloc.rate:                   3575.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              52144.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3369.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49146.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.519 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 107964.413 ops/s
[info]                  ·gc.alloc.rate:                   3578.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              52156.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49385.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.910 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 111115.262 ops/s
[info]                  ·gc.alloc.rate:                   3693.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              52299.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3735.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52888.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   110150.510 ±(99.9%) 8249.677 ops/s [Average]
[info]   (min, avg, max) = (107875.523, 110150.510, 112723.984), stdev = 2142.415
[info]   CI (99.9%): [101900.833, 118400.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3638.763 ±(99.9%) 243.477 MB/sec [Average]
[info]   (min, avg, max) = (3575.416, 3638.763, 3711.462), stdev = 63.230
[info]   CI (99.9%): [3395.285, 3882.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51984.412 ±(99.9%) 1236.003 B/op [Average]
[info]   (min, avg, max) = (51505.430, 51984.412, 52299.451), stdev = 320.986
[info]   CI (99.9%): [50748.410, 53220.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3553.876 ±(99.9%) 638.112 MB/sec [Average]
[info]   (min, avg, max) = (3369.862, 3553.876, 3735.369), stdev = 165.716
[info]   CI (99.9%): [2915.764, 4191.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50750.968 ±(99.9%) 5888.878 B/op [Average]
[info]   (min, avg, max) = (49146.837, 50750.968, 52888.867), stdev = 1529.323
[info]   CI (99.9%): [44862.090, 56639.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.243 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.187), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.250 ±(99.9%) 3.453 B/op [Average]
[info]   (min, avg, max) = (0.295, 1.250, 2.655), stdev = 0.897
[info]   CI (99.9%): [≈ 0, 4.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.800, 15.000), stdev = 1.304
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:04:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46687.366 ops/s
[info] # Warmup Iteration   2: 233423.904 ops/s
[info] # Warmup Iteration   3: 235804.663 ops/s
[info] Iteration   1: 247546.659 ops/s
[info]                  ·gc.alloc.rate:                   1767.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              11236.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1602.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10185.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.875 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 247621.927 ops/s
[info]                  ·gc.alloc.rate:                   1759.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              11177.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10165.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.413 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.333 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 249127.122 ops/s
[info]                  ·gc.alloc.rate:               1788.000 MB/sec
[info]                  ·gc.alloc.rate.norm:          11293.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1923.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12148.950 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 249227.734 ops/s
[info]                  ·gc.alloc.rate:                   1788.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              11297.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10236.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 248651.276 ops/s
[info]                  ·gc.alloc.rate:                   1791.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              11335.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10378.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   248434.944 ±(99.9%) 3107.158 ops/s [Average]
[info]   (min, avg, max) = (247546.659, 248434.944, 249227.734), stdev = 806.919
[info]   CI (99.9%): [245327.785, 251542.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1778.967 ±(99.9%) 56.062 MB/sec [Average]
[info]   (min, avg, max) = (1759.277, 1778.967, 1791.112), stdev = 14.559
[info]   CI (99.9%): [1722.905, 1835.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11268.163 ±(99.9%) 237.284 B/op [Average]
[info]   (min, avg, max) = (11177.908, 11268.163, 11335.515), stdev = 61.622
[info]   CI (99.9%): [11030.878, 11505.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1677.255 ±(99.9%) 533.508 MB/sec [Average]
[info]   (min, avg, max) = (1599.872, 1677.255, 1923.404), stdev = 138.550
[info]   CI (99.9%): [1143.747, 2210.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10622.838 ±(99.9%) 3300.729 B/op [Average]
[info]   (min, avg, max) = (10165.100, 10622.838, 12148.950), stdev = 857.189
[info]   CI (99.9%): [7322.110, 13923.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.385 ±(99.9%) 7.573 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.385, 4.385), stdev = 1.967
[info]   CI (99.9%): [≈ 0, 8.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.800 ±(99.9%) 48.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.800, 27.875), stdev = 12.503
[info]   CI (99.9%): [≈ 0, 56.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 17.000), stdev = 4.062
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.800 ops/s
[info] # Warmup Iteration   2: 886666.273 ops/s
[info] # Warmup Iteration   3: 1106174.316 ops/s
[info] Iteration   1: 1247505.744 ops/s
[info]                  ·gc.alloc.rate:                   696.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     818.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1245678.312 ops/s
[info]                  ·gc.alloc.rate:               701.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 820.626 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 1249402.573 ops/s
[info]                  ·gc.alloc.rate:                   702.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1242337.949 ops/s
[info]                  ·gc.alloc.rate:                   711.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              901.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1246675.004 ops/s
[info]                  ·gc.alloc.rate:                   699.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.441 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   1246319.916 ±(99.9%) 10060.203 ops/s [Average]
[info]   (min, avg, max) = (1242337.949, 1246319.916, 1249402.573), stdev = 2612.603
[info]   CI (99.9%): [1236259.714, 1256380.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   702.316 ±(99.9%) 22.406 MB/sec [Average]
[info]   (min, avg, max) = (696.428, 702.316, 711.834), stdev = 5.819
[info]   CI (99.9%): [679.910, 724.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   886.720 ±(99.9%) 34.081 B/op [Average]
[info]   (min, avg, max) = (878.481, 886.720, 901.657), stdev = 8.851
[info]   CI (99.9%): [852.639, 920.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.707 ±(99.9%) 6.144 MB/sec [Average]
[info]   (min, avg, max) = (648.941, 650.707, 652.942), stdev = 1.596
[info]   CI (99.9%): [644.563, 656.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   821.552 ±(99.9%) 11.791 B/op [Average]
[info]   (min, avg, max) = (818.581, 821.552, 825.362), stdev = 3.062
[info]   CI (99.9%): [809.761, 833.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.875 ±(99.9%) 7.395 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.875, 4.310), stdev = 1.921
[info]   CI (99.9%): [≈ 0, 8.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.104 ±(99.9%) 9.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.104, 5.441), stdev = 2.424
[info]   CI (99.9%): [≈ 0, 10.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372301.868 ops/s
[info] # Warmup Iteration   2: 855563.414 ops/s
[info] # Warmup Iteration   3: 1178940.128 ops/s
[info] Iteration   1: 1230893.199 ops/s
[info]                  ·gc.alloc.rate:                   687.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              878.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1218282.467 ops/s
[info]                  ·gc.alloc.rate:                   682.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1174718.510 ops/s
[info]                  ·gc.alloc.rate:                   666.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              893.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1224728.154 ops/s
[info]                  ·gc.alloc.rate:                   686.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1230078.868 ops/s
[info]                  ·gc.alloc.rate:                   684.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   1215740.240 ±(99.9%) 90413.009 ops/s [Average]
[info]   (min, avg, max) = (1174718.510, 1215740.240, 1230893.199), stdev = 23479.971
[info]   CI (99.9%): [1125327.231, 1306153.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   681.534 ±(99.9%) 32.332 MB/sec [Average]
[info]   (min, avg, max) = (666.856, 681.534, 687.236), stdev = 8.397
[info]   CI (99.9%): [649.202, 713.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   882.327 ±(99.9%) 26.044 B/op [Average]
[info]   (min, avg, max) = (875.406, 882.327, 893.346), stdev = 6.764
[info]   CI (99.9%): [856.282, 908.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   644.184 ±(99.9%) 10.053 MB/sec [Average]
[info]   (min, avg, max) = (642.193, 644.184, 648.164), stdev = 2.611
[info]   CI (99.9%): [634.130, 654.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   834.112 ±(99.9%) 59.942 B/op [Average]
[info]   (min, avg, max) = (821.064, 834.112, 861.193), stdev = 15.567
[info]   CI (99.9%): [774.171, 894.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.032, 0.053), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 617705.764 ops/s
[info] # Warmup Iteration   2: 841884.812 ops/s
[info] # Warmup Iteration   3: 1062835.344 ops/s
[info] Iteration   1: 1127180.902 ops/s
[info]                  ·gc.alloc.rate:                   632.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     916.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1140149.101 ops/s
[info]                  ·gc.alloc.rate:               642.049 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 907.597 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 1098593.186 ops/s
[info]                  ·gc.alloc.rate:                   617.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              883.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     942.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1059248.107 ops/s
[info]                  ·gc.alloc.rate:               590.506 MB/sec
[info]                  ·gc.alloc.rate.norm:          877.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 488.943 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1069399.907 ops/s
[info]                  ·gc.alloc.rate:                   596.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     970.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1098914.241 ±(99.9%) 135375.177 ops/s [Average]
[info]   (min, avg, max) = (1059248.107, 1098914.241, 1140149.101), stdev = 35156.504
[info]   CI (99.9%): [963539.063, 1234289.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   615.709 ±(99.9%) 85.342 MB/sec [Average]
[info]   (min, avg, max) = (590.506, 615.709, 642.049), stdev = 22.163
[info]   CI (99.9%): [530.367, 701.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   881.554 ±(99.9%) 15.048 B/op [Average]
[info]   (min, avg, max) = (877.090, 881.554, 886.204), stdev = 3.908
[info]   CI (99.9%): [866.506, 896.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   592.159 ±(99.9%) 566.094 MB/sec [Average]
[info]   (min, avg, max) = (329.184, 592.159, 659.519), stdev = 147.013
[info]   CI (99.9%): [26.065, 1158.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   845.209 ±(99.9%) 772.737 B/op [Average]
[info]   (min, avg, max) = (488.943, 845.209, 970.516), stdev = 200.677
[info]   CI (99.9%): [72.472, 1617.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.060), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 609078.555 ops/s
[info] # Warmup Iteration   2: 973136.133 ops/s
[info] # Warmup Iteration   3: 1156566.919 ops/s
[info] Iteration   1: 1147764.238 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1022893.779 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1155548.253 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1150346.264 ops/s
[info]                  ·gc.alloc.rate:      0.839 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.148 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1122657.848 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1119842.076 ±(99.9%) 214325.475 ops/s [Average]
[info]   (min, avg, max) = (1022893.779, 1119842.076, 1155548.253), stdev = 55659.645
[info]   CI (99.9%): [905516.601, 1334167.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.168 ±(99.9%) 1.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.168, 0.839), stdev = 0.375
[info]   CI (99.9%): [≈ 0, 1.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.230 ±(99.9%) 1.975 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.230, 1.148), stdev = 0.513
[info]   CI (99.9%): [≈ 0, 2.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:03:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5852.581 ops/s
[info] # Warmup Iteration   2: 21489.967 ops/s
[info] # Warmup Iteration   3: 36581.254 ops/s
[info] Iteration   1: 39903.294 ops/s
[info]                  ·gc.alloc.rate:                   2014.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              79458.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77174.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.326 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 36193.417 ops/s
[info]                  ·gc.alloc.rate:                   1897.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              82486.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70528.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.199 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 40647.586 ops/s
[info]                  ·gc.alloc.rate:                   1947.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              75379.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75517.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.383 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 40575.816 ops/s
[info]                  ·gc.alloc.rate:                   1951.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              75692.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76193.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.230 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 40078.958 ops/s
[info]                  ·gc.alloc.rate:                   1933.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              75911.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77923.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.635 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   39479.814 ±(99.9%) 7179.057 ops/s [Average]
[info]   (min, avg, max) = (36193.417, 39479.814, 40647.586), stdev = 1864.378
[info]   CI (99.9%): [32300.757, 46658.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1948.819 ±(99.9%) 164.201 MB/sec [Average]
[info]   (min, avg, max) = (1897.135, 1948.819, 2014.797), stdev = 42.642
[info]   CI (99.9%): [1784.618, 2113.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77785.896 ±(99.9%) 11959.489 B/op [Average]
[info]   (min, avg, max) = (75379.391, 77785.896, 82486.957), stdev = 3105.841
[info]   CI (99.9%): [65826.407, 89745.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1895.772 ±(99.9%) 591.146 MB/sec [Average]
[info]   (min, avg, max) = (1622.106, 1895.772, 1984.629), stdev = 153.519
[info]   CI (99.9%): [1304.626, 2486.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75467.537 ±(99.9%) 11204.275 B/op [Average]
[info]   (min, avg, max) = (70528.771, 75467.537, 77923.215), stdev = 2909.715
[info]   CI (99.9%): [64263.262, 86671.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.387 ±(99.9%) 9.163 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.387, 5.432), stdev = 2.380
[info]   CI (99.9%): [≈ 0, 11.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   98.154 ±(99.9%) 389.456 B/op [Average]
[info]   (min, avg, max) = (1.635, 98.154, 236.199), stdev = 101.140
[info]   CI (99.9%): [≈ 0, 487.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 18.000), stdev = 4.087
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17456.766 ops/s
[info] # Warmup Iteration   2: 86233.205 ops/s
[info] # Warmup Iteration   3: 142646.406 ops/s
[info] Iteration   1: 128885.735 ops/s
[info]                  ·gc.alloc.rate:                   1915.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              23381.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1916.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23399.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.332 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 128838.408 ops/s
[info]                  ·gc.alloc.rate:                   1622.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              19803.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1596.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19486.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.789 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 131732.806 ops/s
[info]                  ·gc.alloc.rate:                   1655.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              19771.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1606.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19195.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.870 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 137744.169 ops/s
[info]                  ·gc.alloc.rate:                   1731.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              19776.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1593.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18199.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.709 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 137719.325 ops/s
[info]                  ·gc.alloc.rate:                   1736.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              19838.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1596.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18243.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.476 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   132984.089 ±(99.9%) 17288.245 ops/s [Average]
[info]   (min, avg, max) = (128838.408, 132984.089, 137744.169), stdev = 4489.702
[info]   CI (99.9%): [115695.844, 150272.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1732.061 ±(99.9%) 436.260 MB/sec [Average]
[info]   (min, avg, max) = (1622.817, 1732.061, 1915.024), stdev = 113.295
[info]   CI (99.9%): [1295.801, 2168.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20514.238 ±(99.9%) 6172.515 B/op [Average]
[info]   (min, avg, max) = (19771.565, 20514.238, 23381.342), stdev = 1602.983
[info]   CI (99.9%): [14341.723, 26686.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1661.998 ±(99.9%) 548.299 MB/sec [Average]
[info]   (min, avg, max) = (1593.015, 1661.998, 1916.547), stdev = 142.392
[info]   CI (99.9%): [1113.699, 2210.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19704.926 ±(99.9%) 8250.408 B/op [Average]
[info]   (min, avg, max) = (18199.106, 19704.926, 23399.940), stdev = 2142.605
[info]   CI (99.9%): [11454.518, 27955.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.215 ±(99.9%) 10.607 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.215, 6.017), stdev = 2.755
[info]   CI (99.9%): [≈ 0, 12.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   26.635 ±(99.9%) 127.673 B/op [Average]
[info]   (min, avg, max) = (0.476, 26.635, 71.870), stdev = 33.156
[info]   CI (99.9%): [≈ 0, 154.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 17.600, 32.000), stdev = 10.407
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48148.442 ops/s
[info] # Warmup Iteration   2: 174631.110 ops/s
[info] # Warmup Iteration   3: 195983.639 ops/s
[info] Iteration   1: 181229.427 ops/s
[info]                  ·gc.alloc.rate:                   1087.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              9443.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8431.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 188003.370 ops/s
[info]                  ·gc.alloc.rate:                   1139.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              9539.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10868.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.318 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 192217.225 ops/s
[info]                  ·gc.alloc.rate:                   1147.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              9395.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8009.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.852 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 193202.807 ops/s
[info]                  ·gc.alloc.rate:                   1156.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              9419.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10674.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 196061.425 ops/s
[info]                  ·gc.alloc.rate:                   1171.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              9404.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7938.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   190142.851 ±(99.9%) 22180.710 ops/s [Average]
[info]   (min, avg, max) = (181229.427, 190142.851, 196061.425), stdev = 5760.260
[info]   CI (99.9%): [167962.141, 212323.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1140.652 ±(99.9%) 123.304 MB/sec [Average]
[info]   (min, avg, max) = (1087.508, 1140.652, 1171.771), stdev = 32.022
[info]   CI (99.9%): [1017.348, 1263.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9440.675 ±(99.9%) 224.137 B/op [Average]
[info]   (min, avg, max) = (9395.570, 9440.675, 9539.571), stdev = 58.208
[info]   CI (99.9%): [9216.538, 9664.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1109.498 ±(99.9%) 686.435 MB/sec [Average]
[info]   (min, avg, max) = (970.943, 1109.498, 1310.818), stdev = 178.265
[info]   CI (99.9%): [423.063, 1795.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9184.380 ±(99.9%) 5631.156 B/op [Average]
[info]   (min, avg, max) = (7938.289, 9184.380, 10868.297), stdev = 1462.393
[info]   CI (99.9%): [3553.224, 14815.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.160 ±(99.9%) 1.032 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.160, 0.635), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.337 ±(99.9%) 8.642 B/op [Average]
[info]   (min, avg, max) = (0.167, 1.337, 5.318), stdev = 2.244
[info]   CI (99.9%): [≈ 0, 9.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111677.290 ops/s
[info] # Warmup Iteration   2: 198839.451 ops/s
[info] # Warmup Iteration   3: 244505.870 ops/s
[info] Iteration   1: 248009.447 ops/s
[info]                  ·gc.alloc.rate:                   1330.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              8439.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8276.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 246785.053 ops/s
[info]                  ·gc.alloc.rate:                   1333.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              8505.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8334.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.239 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 248258.041 ops/s
[info]                  ·gc.alloc.rate:                   1319.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              8367.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8285.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.348 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 252337.163 ops/s
[info]                  ·gc.alloc.rate:               1346.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          8397.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1299.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8101.732 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 255013.179 ops/s
[info]                  ·gc.alloc.rate:                   1372.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              8468.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8020.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   250080.577 ±(99.9%) 13324.346 ops/s [Average]
[info]   (min, avg, max) = (246785.053, 250080.577, 255013.179), stdev = 3460.290
[info]   CI (99.9%): [236756.231, 263404.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1340.532 ±(99.9%) 77.561 MB/sec [Average]
[info]   (min, avg, max) = (1319.939, 1340.532, 1372.310), stdev = 20.142
[info]   CI (99.9%): [1262.971, 1418.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8435.647 ±(99.9%) 212.013 B/op [Average]
[info]   (min, avg, max) = (8367.286, 8435.647, 8505.348), stdev = 55.059
[info]   CI (99.9%): [8223.634, 8647.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1303.486 ±(99.9%) 14.901 MB/sec [Average]
[info]   (min, avg, max) = (1299.105, 1303.486, 1307.085), stdev = 3.870
[info]   CI (99.9%): [1288.585, 1318.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8203.991 ±(99.9%) 520.466 B/op [Average]
[info]   (min, avg, max) = (8020.904, 8203.991, 8334.877), stdev = 135.163
[info]   CI (99.9%): [7683.525, 8724.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.945 ±(99.9%) 6.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.945, 3.683), stdev = 1.586
[info]   CI (99.9%): [≈ 0, 7.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.996 ±(99.9%) 38.717 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.996, 23.348), stdev = 10.055
[info]   CI (99.9%): [≈ 0, 44.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 14.000), stdev = 4.278
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:02:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1669.311 ops/s
[info] # Warmup Iteration   2: 43243.705 ops/s
[info] # Warmup Iteration   3: 91349.818 ops/s
[info] Iteration   1: 96938.758 ops/s
[info]                  ·gc.alloc.rate:                   3332.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              54104.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3271.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53104.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.855 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 104104.382 ops/s
[info]                  ·gc.alloc.rate:                   3320.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              50192.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3302.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49917.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.806 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 101290.613 ops/s
[info]                  ·gc.alloc.rate:                   3205.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              49795.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3004.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46669.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.970 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 104539.201 ops/s
[info]                  ·gc.alloc.rate:                   3365.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              50659.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3369.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50713.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.940 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 104360.352 ops/s
[info]                  ·gc.alloc.rate:                   3364.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              50736.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51093.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.628 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   102246.661 ±(99.9%) 12516.433 ops/s [Average]
[info]   (min, avg, max) = (96938.758, 102246.661, 104539.201), stdev = 3250.478
[info]   CI (99.9%): [89730.228, 114763.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3317.719 ±(99.9%) 253.837 MB/sec [Average]
[info]   (min, avg, max) = (3205.189, 3317.719, 3365.385), stdev = 65.921
[info]   CI (99.9%): [3063.882, 3571.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51097.786 ±(99.9%) 6636.172 B/op [Average]
[info]   (min, avg, max) = (49795.063, 51097.786, 54104.741), stdev = 1723.393
[info]   CI (99.9%): [44461.613, 57733.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3266.979 ±(99.9%) 595.142 MB/sec [Average]
[info]   (min, avg, max) = (3004.034, 3266.979, 3388.400), stdev = 154.557
[info]   CI (99.9%): [2671.837, 3862.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50299.923 ±(99.9%) 9028.779 B/op [Average]
[info]   (min, avg, max) = (46669.958, 50299.923, 53104.708), stdev = 2344.745
[info]   CI (99.9%): [41271.145, 59328.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.025 ±(99.9%) 6.897 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.025, 4.180), stdev = 1.791
[info]   CI (99.9%): [≈ 0, 7.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   16.440 ±(99.9%) 112.174 B/op [Average]
[info]   (min, avg, max) = (0.628, 16.440, 67.855), stdev = 29.131
[info]   CI (99.9%): [≈ 0, 128.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.000, 17.000), stdev = 1.000
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44291.772 ops/s
[info] # Warmup Iteration   2: 204795.866 ops/s
[info] # Warmup Iteration   3: 218910.803 ops/s
[info] Iteration   1: 238614.944 ops/s
[info]                  ·gc.alloc.rate:                   1552.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              10237.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8633.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 238234.797 ops/s
[info]                  ·gc.alloc.rate:                   1555.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              10273.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10742.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.739 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 241704.059 ops/s
[info]                  ·gc.alloc.rate:                   1555.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              10122.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8460.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 240573.790 ops/s
[info]                  ·gc.alloc.rate:                   1551.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              10150.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10683.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 236717.050 ops/s
[info]                  ·gc.alloc.rate:                   1536.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              10212.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10964.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   239168.928 ±(99.9%) 7602.396 ops/s [Average]
[info]   (min, avg, max) = (236717.050, 239168.928, 241704.059), stdev = 1974.318
[info]   CI (99.9%): [231566.532, 246771.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1550.052 ±(99.9%) 30.595 MB/sec [Average]
[info]   (min, avg, max) = (1536.138, 1550.052, 1555.224), stdev = 7.945
[info]   CI (99.9%): [1519.456, 1580.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10199.309 ±(99.9%) 238.850 B/op [Average]
[info]   (min, avg, max) = (10122.839, 10199.309, 10273.633), stdev = 62.029
[info]   CI (99.9%): [9960.458, 10438.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1503.454 ±(99.9%) 700.697 MB/sec [Average]
[info]   (min, avg, max) = (1299.674, 1503.454, 1649.237), stdev = 181.969
[info]   CI (99.9%): [802.758, 2204.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9896.828 ±(99.9%) 4767.648 B/op [Average]
[info]   (min, avg, max) = (8460.421, 9896.828, 10964.189), stdev = 1238.143
[info]   CI (99.9%): [5129.179, 14664.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.893 ±(99.9%) 5.567 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.893, 3.362), stdev = 1.446
[info]   CI (99.9%): [≈ 0, 6.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.892 ±(99.9%) 36.716 B/op [Average]
[info]   (min, avg, max) = (0.136, 5.892, 22.175), stdev = 9.535
[info]   CI (99.9%): [≈ 0, 42.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 16.000), stdev = 4.087
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200984.421 ops/s
[info] # Warmup Iteration   2: 576039.598 ops/s
[info] # Warmup Iteration   3: 834935.543 ops/s
[info] Iteration   1: 803594.964 ops/s
[info]                  ·gc.alloc.rate:                   632.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              1238.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 805274.785 ops/s
[info]                  ·gc.alloc.rate:                   640.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              1251.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 804283.275 ops/s
[info]                  ·gc.alloc.rate:               639.831 MB/sec
[info]                  ·gc.alloc.rate.norm:          1251.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1263.057 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 828491.021 ops/s
[info]                  ·gc.alloc.rate:                   653.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              1241.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1231.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 844036.732 ops/s
[info]                  ·gc.alloc.rate:               662.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          1234.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1213.512 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   817136.155 ±(99.9%) 70526.372 ops/s [Average]
[info]   (min, avg, max) = (803594.964, 817136.155, 844036.732), stdev = 18315.475
[info]   CI (99.9%): [746609.783, 887662.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   645.691 ±(99.9%) 45.997 MB/sec [Average]
[info]   (min, avg, max) = (632.446, 645.691, 662.075), stdev = 11.945
[info]   CI (99.9%): [599.694, 691.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1243.460 ±(99.9%) 30.357 B/op [Average]
[info]   (min, avg, max) = (1234.116, 1243.460, 1251.926), stdev = 7.884
[info]   CI (99.9%): [1213.103, 1273.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   646.145 ±(99.9%) 13.457 MB/sec [Average]
[info]   (min, avg, max) = (642.341, 646.145, 651.021), stdev = 3.495
[info]   CI (99.9%): [632.688, 659.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1244.615 ±(99.9%) 82.302 B/op [Average]
[info]   (min, avg, max) = (1213.512, 1244.615, 1263.057), stdev = 21.373
[info]   CI (99.9%): [1162.314, 1326.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.206 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.119), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424217.748 ops/s
[info] # Warmup Iteration   2: 667663.769 ops/s
[info] # Warmup Iteration   3: 683348.451 ops/s
[info] Iteration   1: 680836.883 ops/s
[info]                  ·gc.alloc.rate:                   538.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              1244.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1517.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 652838.690 ops/s
[info]                  ·gc.alloc.rate:               514.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 791.679 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 656219.053 ops/s
[info]                  ·gc.alloc.rate:                   521.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1578.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 655696.456 ops/s
[info]                  ·gc.alloc.rate:                   520.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 661365.700 ops/s
[info]                  ·gc.alloc.rate:                   523.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              1245.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1568.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   661391.356 ±(99.9%) 43499.575 ops/s [Average]
[info]   (min, avg, max) = (652838.690, 661391.356, 680836.883), stdev = 11296.701
[info]   CI (99.9%): [617891.781, 704890.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   523.620 ±(99.9%) 34.019 MB/sec [Average]
[info]   (min, avg, max) = (514.482, 523.620, 538.244), stdev = 8.835
[info]   CI (99.9%): [489.601, 557.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1245.804 ±(99.9%) 15.413 B/op [Average]
[info]   (min, avg, max) = (1240.146, 1245.804, 1249.957), stdev = 4.003
[info]   CI (99.9%): [1230.391, 1261.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.401 ±(99.9%) 694.160 MB/sec [Average]
[info]   (min, avg, max) = (328.433, 526.401, 659.339), stdev = 180.271
[info]   CI (99.9%): [≈ 0, 1220.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1249.355 ±(99.9%) 1613.059 B/op [Average]
[info]   (min, avg, max) = (790.653, 1249.355, 1578.452), stdev = 418.906
[info]   CI (99.9%): [≈ 0, 2862.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.212 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.144), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332560.432 ops/s
[info] # Warmup Iteration   2: 554607.122 ops/s
[info] # Warmup Iteration   3: 687028.458 ops/s
[info] Iteration   1: 687290.378 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 689830.046 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 688684.470 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 688488.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 685727.277 ops/s
[info]                  ·gc.alloc.rate:      4.072 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.344 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   688004.177 ±(99.9%) 6004.153 ops/s [Average]
[info]   (min, avg, max) = (685727.277, 688004.177, 689830.046), stdev = 1559.259
[info]   CI (99.9%): [682000.025, 694008.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.815 ±(99.9%) 7.011 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.815, 4.072), stdev = 1.821
[info]   CI (99.9%): [≈ 0, 7.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.869 ±(99.9%) 16.090 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.869, 9.344), stdev = 4.179
[info]   CI (99.9%): [≈ 0, 17.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:01:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73468.107 ops/s
[info] # Warmup Iteration   2: 521409.970 ops/s
[info] # Warmup Iteration   3: 550064.488 ops/s
[info] Iteration   1: 619309.276 ops/s
[info]                  ·gc.alloc.rate:                   1532.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              3893.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3331.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 621365.250 ops/s
[info]                  ·gc.alloc.rate:                   1540.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              3901.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4168.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.114 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 596859.887 ops/s
[info]                  ·gc.alloc.rate:                   1474.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              3887.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3479.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 617491.797 ops/s
[info]                  ·gc.alloc.rate:                   1537.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              3917.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4221.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 625256.159 ops/s
[info]                  ·gc.alloc.rate:               1556.258 MB/sec
[info]                  ·gc.alloc.rate.norm:          3916.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1332.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3353.345 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   616056.474 ±(99.9%) 42790.995 ops/s [Average]
[info]   (min, avg, max) = (596859.887, 616056.474, 625256.159), stdev = 11112.685
[info]   CI (99.9%): [573265.479, 658847.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1528.151 ±(99.9%) 120.386 MB/sec [Average]
[info]   (min, avg, max) = (1474.598, 1528.151, 1556.258), stdev = 31.264
[info]   CI (99.9%): [1407.765, 1648.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3903.412 ±(99.9%) 52.068 B/op [Average]
[info]   (min, avg, max) = (3887.960, 3903.412, 3917.659), stdev = 13.522
[info]   CI (99.9%): [3851.344, 3955.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1453.096 ±(99.9%) 697.263 MB/sec [Average]
[info]   (min, avg, max) = (1311.013, 1453.096, 1656.466), stdev = 181.077
[info]   CI (99.9%): [755.833, 2150.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3710.799 ±(99.9%) 1716.776 B/op [Average]
[info]   (min, avg, max) = (3331.543, 3710.799, 4221.536), stdev = 445.841
[info]   CI (99.9%): [1994.022, 5427.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.429 ±(99.9%) 3.425 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.429, 2.020), stdev = 0.890
[info]   CI (99.9%): [≈ 0, 3.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.088 ±(99.9%) 8.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.088, 5.114), stdev = 2.252
[info]   CI (99.9%): [≈ 0, 9.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 10.000), stdev = 1.871
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1313.658 ops/s
[info] # Warmup Iteration   2: 6984.604 ops/s
[info] # Warmup Iteration   3: 12039.135 ops/s
[info] Iteration   1: 11916.284 ops/s
[info]                  ·gc.alloc.rate:                   1493.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              197297.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214571.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.480 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 12250.080 ops/s
[info]                  ·gc.alloc.rate:                   1526.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              196154.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167402.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 12299.048 ops/s
[info]                  ·gc.alloc.rate:                   1537.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              196684.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207720.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 506.982 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 11036.673 ops/s
[info]                  ·gc.alloc.rate:                   1845.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              263075.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276818.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.888 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 269.107 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 11841.265 ops/s
[info]                  ·gc.alloc.rate:                   1476.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              196224.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173124.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 252.911 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   11868.670 ±(99.9%) 1950.130 ops/s [Average]
[info]   (min, avg, max) = (11036.673, 11868.670, 12299.048), stdev = 506.443
[info]   CI (99.9%): [9918.540, 13818.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1576.018 ±(99.9%) 587.651 MB/sec [Average]
[info]   (min, avg, max) = (1476.778, 1576.018, 1845.522), stdev = 152.611
[info]   CI (99.9%): [988.367, 2163.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   209887.416 ±(99.9%) 114504.739 B/op [Average]
[info]   (min, avg, max) = (196154.810, 209887.416, 263075.454), stdev = 29736.517
[info]   CI (99.9%): [95382.676, 324392.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1559.181 ±(99.9%) 1030.075 MB/sec [Average]
[info]   (min, avg, max) = (1302.930, 1559.181, 1941.931), stdev = 267.507
[info]   CI (99.9%): [529.106, 2589.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   207927.545 ±(99.9%) 168326.916 B/op [Average]
[info]   (min, avg, max) = (167402.437, 207927.545, 276818.365), stdev = 43713.966
[info]   CI (99.9%): [39600.628, 376254.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.850 ±(99.9%) 5.085 MB/sec [Average]
[info]   (min, avg, max) = (0.541, 1.850, 3.962), stdev = 1.320
[info]   CI (99.9%): [≈ 0, 6.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   244.701 ±(99.9%) 650.817 B/op [Average]
[info]   (min, avg, max) = (71.480, 244.701, 506.982), stdev = 169.015
[info]   CI (99.9%): [≈ 0, 895.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.200, 21.000), stdev = 5.450
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1139.300 ops/s
[info] # Warmup Iteration   2: 6701.991 ops/s
[info] # Warmup Iteration   3: 12174.461 ops/s
[info] Iteration   1: 12115.347 ops/s
[info]                  ·gc.alloc.rate:                   1417.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              184191.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168734.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 12234.346 ops/s
[info]                  ·gc.alloc.rate:                   1425.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              183408.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166994.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.532 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 582.988 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 11689.162 ops/s
[info]                  ·gc.alloc.rate:                   1362.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              183385.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217051.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75.677 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 11596.440 ops/s
[info]                  ·gc.alloc.rate:                   1395.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              189414.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175425.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.825 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11991.016 ops/s
[info]                  ·gc.alloc.rate:               1400.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          183861.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1301.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 170828.540 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   11925.262 ±(99.9%) 1054.290 ops/s [Average]
[info]   (min, avg, max) = (11596.440, 11925.262, 12234.346), stdev = 273.796
[info]   CI (99.9%): [10870.973, 12979.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1400.586 ±(99.9%) 95.142 MB/sec [Average]
[info]   (min, avg, max) = (1362.175, 1400.586, 1425.910), stdev = 24.708
[info]   CI (99.9%): [1305.444, 1495.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   184852.308 ±(99.9%) 9904.343 B/op [Average]
[info]   (min, avg, max) = (183385.395, 184852.308, 189414.068), stdev = 2572.126
[info]   CI (99.9%): [174947.965, 194756.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1360.799 ±(99.9%) 541.407 MB/sec [Average]
[info]   (min, avg, max) = (1292.779, 1360.799, 1612.248), stdev = 140.602
[info]   CI (99.9%): [819.392, 1902.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   179806.923 ±(99.9%) 81087.020 B/op [Average]
[info]   (min, avg, max) = (166994.168, 179806.923, 217051.913), stdev = 21058.042
[info]   CI (99.9%): [98719.903, 260893.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.025 ±(99.9%) 7.607 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.025, 4.532), stdev = 1.975
[info]   CI (99.9%): [≈ 0, 8.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   132.501 ±(99.9%) 977.618 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 132.501, 582.988), stdev = 253.884
[info]   CI (99.9%): [≈ 0, 1110.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.600, 19.000), stdev = 5.320
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125558.496 ops/s
[info] # Warmup Iteration   2: 262022.721 ops/s
[info] # Warmup Iteration   3: 320746.395 ops/s
[info] Iteration   1: 318727.109 ops/s
[info]                  ·gc.alloc.rate:                   2128.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              10508.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9596.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.962 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 326900.527 ops/s
[info]                  ·gc.alloc.rate:                   2185.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              10522.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2277.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10966.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 324460.031 ops/s
[info]                  ·gc.alloc.rate:               2189.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          10621.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9583.443 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 324631.406 ops/s
[info]                  ·gc.alloc.rate:                   2191.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              10624.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9675.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 325362.946 ops/s
[info]                  ·gc.alloc.rate:                   2224.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              10761.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11363.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   324016.404 ±(99.9%) 11974.670 ops/s [Average]
[info]   (min, avg, max) = (318727.109, 324016.404, 326900.527), stdev = 3109.784
[info]   CI (99.9%): [312041.734, 335991.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2184.071 ±(99.9%) 134.364 MB/sec [Average]
[info]   (min, avg, max) = (2128.255, 2184.071, 2224.827), stdev = 34.894
[info]   CI (99.9%): [2049.706, 2318.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10607.626 ±(99.9%) 391.550 B/op [Average]
[info]   (min, avg, max) = (10508.022, 10607.626, 10761.541), stdev = 101.684
[info]   CI (99.9%): [10216.075, 10999.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2108.505 ±(99.9%) 730.892 MB/sec [Average]
[info]   (min, avg, max) = (1943.657, 2108.505, 2349.200), stdev = 189.810
[info]   CI (99.9%): [1377.614, 2839.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10236.994 ±(99.9%) 3308.156 B/op [Average]
[info]   (min, avg, max) = (9583.443, 10236.994, 11363.137), stdev = 859.118
[info]   CI (99.9%): [6928.838, 13545.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.271 ±(99.9%) 2.019 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.271, 1.207), stdev = 0.524
[info]   CI (99.9%): [≈ 0, 2.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.333 ±(99.9%) 9.973 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.333, 5.962), stdev = 2.590
[info]   CI (99.9%): [≈ 0, 11.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 732.433 ops/s
[info] # Warmup Iteration   2: 5449.357 ops/s
[info] # Warmup Iteration   3: 8694.589 ops/s
[info] Iteration   1: 9248.714 ops/s
[info]                  ·gc.alloc.rate:                   1706.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              290360.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1606.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     273393.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.626 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 9085.482 ops/s
[info]                  ·gc.alloc.rate:                   1669.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              289087.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280085.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.817 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 9258.899 ops/s
[info]                  ·gc.alloc.rate:                   1695.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              288121.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276778.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.251 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 9387.859 ops/s
[info]                  ·gc.alloc.rate:                   1743.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              292316.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     274427.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.490 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 9291.432 ops/s
[info]                  ·gc.alloc.rate:               1733.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          293665.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 279518.726 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   9254.477 ±(99.9%) 420.798 ops/s [Average]
[info]   (min, avg, max) = (9085.482, 9254.477, 9387.859), stdev = 109.280
[info]   CI (99.9%): [8833.680, 9675.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1709.687 ±(99.9%) 115.952 MB/sec [Average]
[info]   (min, avg, max) = (1669.067, 1709.687, 1743.823), stdev = 30.112
[info]   CI (99.9%): [1593.735, 1825.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   290710.249 ±(99.9%) 8774.240 B/op [Average]
[info]   (min, avg, max) = (288121.557, 290710.249, 293665.300), stdev = 2278.642
[info]   CI (99.9%): [281936.009, 299484.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1627.953 ±(99.9%) 65.422 MB/sec [Average]
[info]   (min, avg, max) = (1606.787, 1627.953, 1650.419), stdev = 16.990
[info]   CI (99.9%): [1562.532, 1693.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   276840.808 ±(99.9%) 11456.854 B/op [Average]
[info]   (min, avg, max) = (273393.721, 276840.808, 280085.634), stdev = 2975.309
[info]   CI (99.9%): [265383.954, 288297.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.391 ±(99.9%) 3.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 1.808), stdev = 0.793
[info]   CI (99.9%): [≈ 0, 3.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   66.437 ±(99.9%) 518.681 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 66.437, 307.251), stdev = 134.700
[info]   CI (99.9%): [≈ 0, 585.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.140
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 01:00:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5663.854 ops/s
[info] # Warmup Iteration   2: 18237.101 ops/s
[info] # Warmup Iteration   3: 26476.027 ops/s
[info] Iteration   1: 26818.154 ops/s
[info]                  ·gc.alloc.rate:                   1327.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              77884.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1244.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73024.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 192.407 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 26692.919 ops/s
[info]                  ·gc.alloc.rate:                   1505.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              88742.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1565.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92277.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.576 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 25755.414 ops/s
[info]                  ·gc.alloc.rate:                   1587.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              97004.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1575.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96252.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 552.201 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 26242.702 ops/s
[info]                  ·gc.alloc.rate:                   1687.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              101150.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1540.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92378.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.857 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   5: 27387.643 ops/s
[info]                  ·gc.alloc.rate:                   1373.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              78907.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1248.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71740.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.591 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.885 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   26579.366 ±(99.9%) 2370.152 ops/s [Average]
[info]   (min, avg, max) = (25755.414, 26579.366, 27387.643), stdev = 615.521
[info]   CI (99.9%): [24209.214, 28949.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1496.268 ±(99.9%) 573.105 MB/sec [Average]
[info]   (min, avg, max) = (1327.323, 1496.268, 1687.261), stdev = 148.834
[info]   CI (99.9%): [923.163, 2069.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   88738.098 ±(99.9%) 40240.642 B/op [Average]
[info]   (min, avg, max) = (77884.966, 88738.098, 101150.621), stdev = 10450.367
[info]   CI (99.9%): [48497.456, 128978.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1435.020 ±(99.9%) 664.409 MB/sec [Average]
[info]   (min, avg, max) = (1244.493, 1435.020, 1575.429), stdev = 172.545
[info]   CI (99.9%): [770.611, 2099.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   85134.506 ±(99.9%) 45282.148 B/op [Average]
[info]   (min, avg, max) = (71740.040, 85134.506, 96252.104), stdev = 11759.630
[info]   CI (99.9%): [39852.358, 130416.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.476 ±(99.9%) 12.501 MB/sec [Average]
[info]   (min, avg, max) = (0.815, 3.476, 9.038), stdev = 3.246
[info]   CI (99.9%): [≈ 0, 15.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   207.985 ±(99.9%) 769.484 B/op [Average]
[info]   (min, avg, max) = (48.857, 207.985, 552.201), stdev = 199.832
[info]   CI (99.9%): [≈ 0, 977.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   117.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 23.400, 29.000), stdev = 4.827
[info]   CI (99.9%): [117.000, 117.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6515.401 ops/s
[info] # Warmup Iteration   2: 21433.303 ops/s
[info] # Warmup Iteration   3: 29779.202 ops/s
[info] Iteration   1: 30595.487 ops/s
[info]                  ·gc.alloc.rate:                   1185.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              60967.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1246.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64088.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.877 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 28940.758 ops/s
[info]                  ·gc.alloc.rate:                   1378.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              74976.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68083.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.132 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 28443.972 ops/s
[info]                  ·gc.alloc.rate:                   1462.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              80889.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1557.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86134.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.542 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.310 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 32357.396 ops/s
[info]                  ·gc.alloc.rate:                   1228.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              59723.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1231.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59876.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 679.355 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 32468.268 ops/s
[info]                  ·gc.alloc.rate:                   1235.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              59844.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1240.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60092.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   30561.176 ±(99.9%) 7196.917 ops/s [Average]
[info]   (min, avg, max) = (28443.972, 30561.176, 32468.268), stdev = 1869.017
[info]   CI (99.9%): [23364.259, 37758.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1297.958 ±(99.9%) 451.624 MB/sec [Average]
[info]   (min, avg, max) = (1185.387, 1297.958, 1462.237), stdev = 117.285
[info]   CI (99.9%): [846.334, 1749.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   67280.514 ±(99.9%) 38346.685 B/op [Average]
[info]   (min, avg, max) = (59723.783, 67280.514, 80889.830), stdev = 9958.512
[info]   CI (99.9%): [28933.829, 105627.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1305.350 ±(99.9%) 542.586 MB/sec [Average]
[info]   (min, avg, max) = (1231.353, 1305.350, 1557.042), stdev = 140.908
[info]   CI (99.9%): [762.764, 1847.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67654.958 ±(99.9%) 41832.511 B/op [Average]
[info]   (min, avg, max) = (59876.045, 67654.958, 86134.345), stdev = 10863.770
[info]   CI (99.9%): [25822.447, 109487.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.343 ±(99.9%) 21.286 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 4.343, 13.971), stdev = 5.528
[info]   CI (99.9%): [≈ 0, 25.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   218.572 ±(99.9%) 1024.654 B/op [Average]
[info]   (min, avg, max) = (2.018, 218.572, 679.355), stdev = 266.099
[info]   CI (99.9%): [≈ 0, 1243.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 14.200, 28.000), stdev = 9.066
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 343045.175 ops/s
[info] # Warmup Iteration   2: 651042.454 ops/s
[info] # Warmup Iteration   3: 786718.330 ops/s
[info] Iteration   1: 771026.268 ops/s
[info]                  ·gc.alloc.rate:                   1429.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              2918.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2693.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.846 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.810 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 769790.269 ops/s
[info]                  ·gc.alloc.rate:                   1435.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              2934.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2688.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.511 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 771086.108 ops/s
[info]                  ·gc.alloc.rate:                   1436.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              2931.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2671.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 786754.434 ops/s
[info]                  ·gc.alloc.rate:                   1485.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              2971.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3280.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 785899.756 ops/s
[info]                  ·gc.alloc.rate:                   1469.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              2943.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2643.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   776911.367 ±(99.9%) 33177.894 ops/s [Average]
[info]   (min, avg, max) = (769790.269, 776911.367, 786754.434), stdev = 8616.194
[info]   CI (99.9%): [743733.473, 810089.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1451.516 ±(99.9%) 95.345 MB/sec [Average]
[info]   (min, avg, max) = (1429.807, 1451.516, 1485.678), stdev = 24.761
[info]   CI (99.9%): [1356.171, 1546.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2939.757 ±(99.9%) 76.880 B/op [Average]
[info]   (min, avg, max) = (2918.438, 2939.757, 2971.720), stdev = 19.966
[info]   CI (99.9%): [2862.877, 3016.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1380.978 ±(99.9%) 558.103 MB/sec [Average]
[info]   (min, avg, max) = (1309.348, 1380.978, 1640.131), stdev = 144.938
[info]   CI (99.9%): [822.875, 1939.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2795.630 ±(99.9%) 1046.728 B/op [Average]
[info]   (min, avg, max) = (2643.988, 2795.630, 3280.664), stdev = 271.832
[info]   CI (99.9%): [1748.902, 3842.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.836 ±(99.9%) 4.764 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.836, 2.846), stdev = 1.237
[info]   CI (99.9%): [≈ 0, 5.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.706 ±(99.9%) 9.726 B/op [Average]
[info]   (min, avg, max) = (0.042, 1.706, 5.810), stdev = 2.526
[info]   CI (99.9%): [≈ 0, 11.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 494942.228 ops/s
[info] # Warmup Iteration   2: 782804.745 ops/s
[info] # Warmup Iteration   3: 940962.943 ops/s
[info] Iteration   1: 941289.541 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 941609.194 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 942056.653 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 936126.452 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 941430.223 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   940502.412 ±(99.9%) 9485.032 ops/s [Average]
[info]   (min, avg, max) = (936126.452, 940502.412, 942056.653), stdev = 2463.233
[info]   CI (99.9%): [931017.381, 949987.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6420.080 ops/s
[info] # Warmup Iteration   2: 17689.579 ops/s
[info] # Warmup Iteration   3: 26230.438 ops/s
[info] Iteration   1: 29905.088 ops/s
[info]                  ·gc.alloc.rate:                   1248.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              65705.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1194.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62823.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.287 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   2: 30611.317 ops/s
[info]                  ·gc.alloc.rate:                   1599.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              82210.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1474.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75751.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.993 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.600 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   3: 29312.261 ops/s
[info]                  ·gc.alloc.rate:                   1559.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              83692.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1761.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94546.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 417.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         55.000 ms
[info] Iteration   4: 31003.650 ops/s
[info]                  ·gc.alloc.rate:                   1285.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              65255.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1178.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59796.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 615.650 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 31437.761 ops/s
[info]                  ·gc.alloc.rate:                   1313.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              65725.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1174.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58806.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.288 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   30454.016 ±(99.9%) 3278.436 ops/s [Average]
[info]   (min, avg, max) = (29312.261, 30454.016, 31437.761), stdev = 851.399
[info]   CI (99.9%): [27175.580, 33732.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1401.271 ±(99.9%) 634.575 MB/sec [Average]
[info]   (min, avg, max) = (1248.798, 1401.271, 1599.704), stdev = 164.797
[info]   CI (99.9%): [766.696, 2035.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   72517.703 ±(99.9%) 36737.660 B/op [Average]
[info]   (min, avg, max) = (65255.363, 72517.703, 83692.040), stdev = 9540.654
[info]   CI (99.9%): [35780.043, 109255.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1356.461 ±(99.9%) 998.180 MB/sec [Average]
[info]   (min, avg, max) = (1174.939, 1356.461, 1761.206), stdev = 259.224
[info]   CI (99.9%): [358.281, 2354.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70344.897 ±(99.9%) 58268.614 B/op [Average]
[info]   (min, avg, max) = (58806.290, 70344.897, 94546.376), stdev = 15132.174
[info]   CI (99.9%): [12076.283, 128613.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   5.068 ±(99.9%) 19.648 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 5.068, 12.129), stdev = 5.103
[info]   CI (99.9%): [≈ 0, 24.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   262.367 ±(99.9%) 1009.586 B/op [Average]
[info]   (min, avg, max) = (3.287, 262.367, 615.650), stdev = 262.186
[info]   CI (99.9%): [≈ 0, 1271.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   164.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 32.800, 55.000), stdev = 17.627
[info]   CI (99.9%): [164.000, 164.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2893.439 ops/s
[info] # Warmup Iteration   2: 16540.855 ops/s
[info] # Warmup Iteration   3: 20834.034 ops/s
[info] Iteration   1: 41644.168 ops/s
[info]                  ·gc.alloc.rate:                   2284.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              86316.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2142.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80959.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.571 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         49.000 ms
[info] Iteration   2: 40625.523 ops/s
[info]                  ·gc.alloc.rate:                   2289.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              88684.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2465.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95501.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 593.655 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 46018.040 ops/s
[info]                  ·gc.alloc.rate:                   2452.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              83826.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2498.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85431.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309.894 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 37918.331 ops/s
[info]                  ·gc.alloc.rate:                   1877.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              77921.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1582.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65693.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 290.850 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 44136.504 ops/s
[info]                  ·gc.alloc.rate:                   1862.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              66378.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1923.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68559.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.969 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   42068.513 ±(99.9%) 12079.252 ops/s [Average]
[info]   (min, avg, max) = (37918.331, 42068.513, 46018.040), stdev = 3136.943
[info]   CI (99.9%): [29989.261, 54147.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   2153.095 ±(99.9%) 1029.078 MB/sec [Average]
[info]   (min, avg, max) = (1862.125, 2153.095, 2452.033), stdev = 267.248
[info]   CI (99.9%): [1124.017, 3182.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   80625.391 ±(99.9%) 34326.727 B/op [Average]
[info]   (min, avg, max) = (66378.112, 80625.391, 88684.296), stdev = 8914.542
[info]   CI (99.9%): [46298.664, 114952.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2122.639 ±(99.9%) 1479.549 MB/sec [Average]
[info]   (min, avg, max) = (1582.987, 2122.639, 2498.972), stdev = 384.234
[info]   CI (99.9%): [643.090, 3602.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   79229.028 ±(99.9%) 47289.725 B/op [Average]
[info]   (min, avg, max) = (65693.252, 79229.028, 95501.028), stdev = 12280.991
[info]   CI (99.9%): [31939.303, 126518.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   7.104 ±(99.9%) 21.965 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 7.104, 15.326), stdev = 5.704
[info]   CI (99.9%): [≈ 0, 29.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   269.988 ±(99.9%) 843.357 B/op [Average]
[info]   (min, avg, max) = (2.969, 269.988, 593.655), stdev = 219.017
[info]   CI (99.9%): [≈ 0, 1113.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   113.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 22.600, 49.000), stdev = 16.395
[info]   CI (99.9%): [113.000, 113.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1439.297 ops/s
[info] # Warmup Iteration   2: 24489.809 ops/s
[info] # Warmup Iteration   3: 40506.273 ops/s
[info] Iteration   1: 48283.705 ops/s
[info]                  ·gc.alloc.rate:                   1955.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              63730.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1923.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62663.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.803 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   2: 37575.455 ops/s
[info]                  ·gc.alloc.rate:                   1615.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              67635.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67020.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.878 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.638 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 41100.979 ops/s
[info]                  ·gc.alloc.rate:                   1418.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              54303.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1272.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48732.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.864 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 39904.221 ops/s
[info]                  ·gc.alloc.rate:                        1385.717 MB/sec
[info]                  ·gc.alloc.rate.norm:                   54649.727 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.026 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.021 B/op
[info]                  ·gc.churn.Metaspace:                   0.072 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              2.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1522.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          60038.284 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  6.486 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             255.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           6.077 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      239.681 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              52.000 ms
[info] Iteration   5: 41720.042 ops/s
[info]                  ·gc.alloc.rate:                   1438.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              54253.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1264.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47693.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.571 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   41716.880 ±(99.9%) 15395.315 ops/s [Average]
[info]   (min, avg, max) = (37575.455, 41716.880, 48283.705), stdev = 3998.114
[info]   CI (99.9%): [26321.566, 57112.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1562.703 ±(99.9%) 913.244 MB/sec [Average]
[info]   (min, avg, max) = (1385.717, 1562.703, 1955.963), stdev = 237.167
[info]   CI (99.9%): [649.459, 2475.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   58914.591 ±(99.9%) 24384.977 B/op [Average]
[info]   (min, avg, max) = (54253.746, 58914.591, 67635.354), stdev = 6332.701
[info]   CI (99.9%): [34529.614, 83299.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.026), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.204 ±(99.9%) 1.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 1.021), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.014 ±(99.9%) 0.123 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.072), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.565 ±(99.9%) 4.863 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.565, 2.824), stdev = 1.263
[info]   CI (99.9%): [≈ 0, 5.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1516.650 ±(99.9%) 1046.317 MB/sec [Average]
[info]   (min, avg, max) = (1264.637, 1516.650, 1923.213), stdev = 271.725
[info]   CI (99.9%): [470.333, 2562.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   57229.507 ±(99.9%) 33146.909 B/op [Average]
[info]   (min, avg, max) = (47693.385, 57229.507, 67020.025), stdev = 8608.147
[info]   CI (99.9%): [24082.598, 90376.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   1.297 ±(99.9%) 11.169 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.297, 6.486), stdev = 2.900
[info]   CI (99.9%): [≈ 0, 12.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   51.156 ±(99.9%) 440.466 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.156, 255.779), stdev = 114.388
[info]   CI (99.9%): [≈ 0, 491.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.016 ±(99.9%) 8.907 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.016, 6.077), stdev = 2.313
[info]   CI (99.9%): [≈ 0, 11.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   115.111 ±(99.9%) 350.334 B/op [Average]
[info]   (min, avg, max) = (1.571, 115.111, 239.681), stdev = 90.981
[info]   CI (99.9%): [≈ 0, 465.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   133.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 26.600, 52.000), stdev = 18.202
[info]   CI (99.9%): [133.000, 133.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145683.628 ops/s
[info] # Warmup Iteration   2: 459578.283 ops/s
[info] # Warmup Iteration   3: 541034.213 ops/s
[info] Iteration   1: 534715.778 ops/s
[info]                  ·gc.alloc.rate:                   1429.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              4206.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3859.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.646 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 527989.534 ops/s
[info]                  ·gc.alloc.rate:                   1437.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              4284.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3901.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.979 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 540272.435 ops/s
[info]                  ·gc.alloc.rate:                   1440.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              4197.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4754.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 535856.033 ops/s
[info]                  ·gc.alloc.rate:                   1433.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              4210.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3848.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 560428.437 ops/s
[info]                  ·gc.alloc.rate:                   1508.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              4243.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3700.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   539852.443 ±(99.9%) 47420.533 ops/s [Average]
[info]   (min, avg, max) = (527989.534, 539852.443, 560428.437), stdev = 12314.962
[info]   CI (99.9%): [492431.910, 587272.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1449.915 ±(99.9%) 126.676 MB/sec [Average]
[info]   (min, avg, max) = (1429.408, 1449.915, 1508.264), stdev = 32.897
[info]   CI (99.9%): [1323.239, 1576.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4228.417 ±(99.9%) 137.375 B/op [Average]
[info]   (min, avg, max) = (4197.170, 4228.417, 4284.079), stdev = 35.676
[info]   CI (99.9%): [4091.041, 4365.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1375.626 ±(99.9%) 552.121 MB/sec [Average]
[info]   (min, avg, max) = (1309.124, 1375.626, 1632.087), stdev = 143.384
[info]   CI (99.9%): [823.505, 1927.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4012.816 ±(99.9%) 1622.183 B/op [Average]
[info]   (min, avg, max) = (3700.337, 4012.816, 4754.021), stdev = 421.276
[info]   CI (99.9%): [2390.634, 5634.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 4.858 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.808, 2.938), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 5.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.385 ±(99.9%) 14.306 B/op [Average]
[info]   (min, avg, max) = (0.058, 2.385, 8.646), stdev = 3.715
[info]   CI (99.9%): [≈ 0, 16.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 16.000), stdev = 4.583
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1190.819 ops/s
[info] # Warmup Iteration   2: 11975.923 ops/s
[info] # Warmup Iteration   3: 15258.025 ops/s
[info] Iteration   1: 21960.772 ops/s
[info]                  ·gc.alloc.rate:                   2033.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              145716.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138936.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.152 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 21644.113 ops/s
[info]                  ·gc.alloc.rate:                   2011.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              146233.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141503.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 227.869 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 21686.965 ops/s
[info]                  ·gc.alloc.rate:                   2034.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              147641.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141199.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.496 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.020 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 21336.686 ops/s
[info]                  ·gc.alloc.rate:                   2138.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              157757.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168383.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 389.831 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 20820.193 ops/s
[info]                  ·gc.alloc.rate:                   2088.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              157820.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148437.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426.689 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   21489.746 ±(99.9%) 1674.386 ops/s [Average]
[info]   (min, avg, max) = (20820.193, 21489.746, 21960.772), stdev = 434.833
[info]   CI (99.9%): [19815.360, 23164.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2061.302 ±(99.9%) 199.381 MB/sec [Average]
[info]   (min, avg, max) = (2011.315, 2061.302, 2138.969), stdev = 51.779
[info]   CI (99.9%): [1861.921, 2260.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   151034.084 ±(99.9%) 23899.413 B/op [Average]
[info]   (min, avg, max) = (145716.787, 151034.084, 157820.738), stdev = 6206.602
[info]   CI (99.9%): [127134.671, 174933.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2015.594 ±(99.9%) 576.798 MB/sec [Average]
[info]   (min, avg, max) = (1938.859, 2015.594, 2283.042), stdev = 149.793
[info]   CI (99.9%): [1438.796, 2592.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   147691.972 ±(99.9%) 46599.113 B/op [Average]
[info]   (min, avg, max) = (138936.559, 147691.972, 168383.391), stdev = 12101.642
[info]   CI (99.9%): [101092.859, 194291.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.005 ±(99.9%) 9.616 MB/sec [Average]
[info]   (min, avg, max) = (0.463, 3.005, 5.645), stdev = 2.497
[info]   CI (99.9%): [≈ 0, 12.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   222.712 ±(99.9%) 721.286 B/op [Average]
[info]   (min, avg, max) = (33.152, 222.712, 426.689), stdev = 187.316
[info]   CI (99.9%): [≈ 0, 943.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.200, 17.000), stdev = 3.033
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:58:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16817.518 ops/s
[info] # Warmup Iteration   2: 44232.165 ops/s
[info] # Warmup Iteration   3: 68035.819 ops/s
[info] Iteration   1: 65027.895 ops/s
[info]                  ·gc.alloc.rate:                   1829.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              44277.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39529.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.383 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 72543.976 ops/s
[info]                  ·gc.alloc.rate:                   1926.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              41783.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42168.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.580 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 72758.293 ops/s
[info]                  ·gc.alloc.rate:                   1920.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              41537.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42205.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.602 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 72675.029 ops/s
[info]                  ·gc.alloc.rate:                   1915.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              41467.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42714.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 71721.538 ops/s
[info]                  ·gc.alloc.rate:                   1917.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              42062.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36419.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.457 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   70945.346 ±(99.9%) 12836.701 ops/s [Average]
[info]   (min, avg, max) = (65027.895, 70945.346, 72758.293), stdev = 3333.650
[info]   CI (99.9%): [58108.646, 83782.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1901.688 ±(99.9%) 156.083 MB/sec [Average]
[info]   (min, avg, max) = (1829.563, 1901.688, 1926.177), stdev = 40.534
[info]   CI (99.9%): [1745.605, 2057.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   42225.602 ±(99.9%) 4506.513 B/op [Average]
[info]   (min, avg, max) = (41467.808, 42225.602, 44277.013), stdev = 1170.327
[info]   CI (99.9%): [37719.089, 46732.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1832.262 ±(99.9%) 654.870 MB/sec [Average]
[info]   (min, avg, max) = (1633.411, 1832.262, 1972.836), stdev = 170.068
[info]   CI (99.9%): [1177.393, 2487.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   40607.478 ±(99.9%) 10211.922 B/op [Average]
[info]   (min, avg, max) = (36419.141, 40607.478, 42714.508), stdev = 2652.004
[info]   CI (99.9%): [30395.556, 50819.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.483 ±(99.9%) 11.443 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.483, 6.792), stdev = 2.972
[info]   CI (99.9%): [≈ 0, 12.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   35.585 ±(99.9%) 277.527 B/op [Average]
[info]   (min, avg, max) = (0.457, 35.585, 164.383), stdev = 72.073
[info]   CI (99.9%): [≈ 0, 313.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 17.000), stdev = 3.899
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35178.327 ops/s
[info] # Warmup Iteration   2: 152811.745 ops/s
[info] # Warmup Iteration   3: 188879.070 ops/s
[info] Iteration   1: 201620.475 ops/s
[info]                  ·gc.alloc.rate:                   1591.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              12422.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12768.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.941 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 201326.477 ops/s
[info]                  ·gc.alloc.rate:                   1573.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              12296.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12700.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.974 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 208185.504 ops/s
[info]                  ·gc.alloc.rate:                   1610.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              12169.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9814.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 207734.273 ops/s
[info]                  ·gc.alloc.rate:               1619.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          12272.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1632.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12364.747 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 203707.771 ops/s
[info]                  ·gc.alloc.rate:               1609.634 MB/sec
[info]                  ·gc.alloc.rate.norm:          12434.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12729.584 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   204514.900 ±(99.9%) 12630.008 ops/s [Average]
[info]   (min, avg, max) = (201326.477, 204514.900, 208185.504), stdev = 3279.973
[info]   CI (99.9%): [191884.892, 217144.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1600.896 ±(99.9%) 71.830 MB/sec [Average]
[info]   (min, avg, max) = (1573.068, 1600.896, 1619.948), stdev = 18.654
[info]   CI (99.9%): [1529.066, 1672.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12319.115 ±(99.9%) 426.713 B/op [Average]
[info]   (min, avg, max) = (12169.718, 12319.115, 12434.872), stdev = 110.816
[info]   CI (99.9%): [11892.402, 12745.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1567.859 ±(99.9%) 580.161 MB/sec [Average]
[info]   (min, avg, max) = (1298.750, 1567.859, 1647.783), stdev = 150.666
[info]   CI (99.9%): [987.698, 2148.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12075.668 ±(99.9%) 4905.939 B/op [Average]
[info]   (min, avg, max) = (9814.883, 12075.668, 12768.298), stdev = 1274.057
[info]   CI (99.9%): [7169.729, 16981.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.954 ±(99.9%) 6.161 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.954, 3.708), stdev = 1.600
[info]   CI (99.9%): [≈ 0, 7.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.446 ±(99.9%) 48.097 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.446, 28.941), stdev = 12.491
[info]   CI (99.9%): [≈ 0, 55.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 17.000), stdev = 4.528
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 538155.785 ops/s
[info] # Warmup Iteration   2: 1018375.564 ops/s
[info] # Warmup Iteration   3: 856295.804 ops/s
[info] Iteration   1: 801684.417 ops/s
[info]                  ·gc.alloc.rate:                   913.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              1794.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1293.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 857408.234 ops/s
[info]                  ·gc.alloc.rate:               950.314 MB/sec
[info]                  ·gc.alloc.rate.norm:          1744.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1818.239 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 850569.550 ops/s
[info]                  ·gc.alloc.rate:                   936.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              1732.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1831.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.492 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.460 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 870010.775 ops/s
[info]                  ·gc.alloc.rate:                   959.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              1735.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1780.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 863814.323 ops/s
[info]                  ·gc.alloc.rate:                   959.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              1747.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1791.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   848697.460 ±(99.9%) 104967.760 ops/s [Average]
[info]   (min, avg, max) = (801684.417, 848697.460, 870010.775), stdev = 27259.794
[info]   CI (99.9%): [743729.700, 953665.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   943.848 ±(99.9%) 73.761 MB/sec [Average]
[info]   (min, avg, max) = (913.982, 943.848, 959.588), stdev = 19.155
[info]   CI (99.9%): [870.087, 1017.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1750.769 ±(99.9%) 96.233 B/op [Average]
[info]   (min, avg, max) = (1732.427, 1750.769, 1794.163), stdev = 24.992
[info]   CI (99.9%): [1654.536, 1847.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   921.505 ±(99.9%) 564.790 MB/sec [Average]
[info]   (min, avg, max) = (659.188, 921.505, 990.568), stdev = 146.674
[info]   CI (99.9%): [356.715, 1486.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1703.219 ±(99.9%) 884.321 B/op [Average]
[info]   (min, avg, max) = (1293.999, 1703.219, 1831.509), stdev = 229.655
[info]   CI (99.9%): [818.899, 2587.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.832 ±(99.9%) 5.816 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.832, 3.492), stdev = 1.510
[info]   CI (99.9%): [≈ 0, 6.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.534 ±(99.9%) 10.763 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.534, 6.460), stdev = 2.795
[info]   CI (99.9%): [≈ 0, 12.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 2.588
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 739131.594 ops/s
[info] # Warmup Iteration   2: 867355.889 ops/s
[info] # Warmup Iteration   3: 918556.233 ops/s
[info] Iteration   1: 915393.970 ops/s
[info]                  ·gc.alloc.rate:      0.588 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 912325.446 ops/s
[info]                  ·gc.alloc.rate:      18.772 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.379 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 917809.509 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 916832.973 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.457 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 917957.147 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   916063.809 ±(99.9%) 8957.995 ops/s [Average]
[info]   (min, avg, max) = (912325.446, 916063.809, 917957.147), stdev = 2326.363
[info]   CI (99.9%): [907105.814, 925021.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.042 ±(99.9%) 31.740 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.042, 18.772), stdev = 8.243
[info]   CI (99.9%): [≈ 0, 35.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   6.970 ±(99.9%) 54.750 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 6.970, 32.379), stdev = 14.218
[info]   CI (99.9%): [≈ 0, 61.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16461.259 ops/s
[info] # Warmup Iteration   2: 63582.678 ops/s
[info] # Warmup Iteration   3: 75028.122 ops/s
[info] Iteration   1: 90946.444 ops/s
[info]                  ·gc.alloc.rate:                   1891.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              32725.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28085.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.300 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 93712.940 ops/s
[info]                  ·gc.alloc.rate:                   1959.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              32903.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32952.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.691 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 94512.948 ops/s
[info]                  ·gc.alloc.rate:                   1962.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              32686.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32962.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.120 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 94654.639 ops/s
[info]                  ·gc.alloc.rate:                   2002.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              33288.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33204.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.692 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 90552.754 ops/s
[info]                  ·gc.alloc.rate:                   1879.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              32670.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29110.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.724 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   92875.945 ±(99.9%) 7620.064 ops/s [Average]
[info]   (min, avg, max) = (90552.754, 92875.945, 94654.639), stdev = 1978.906
[info]   CI (99.9%): [85255.881, 100496.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1939.115 ±(99.9%) 199.677 MB/sec [Average]
[info]   (min, avg, max) = (1879.896, 1939.115, 2002.242), stdev = 51.856
[info]   CI (99.9%): [1739.438, 2138.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32854.742 ±(99.9%) 999.376 B/op [Average]
[info]   (min, avg, max) = (32670.462, 32854.742, 33288.385), stdev = 259.535
[info]   CI (99.9%): [31855.366, 33854.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1847.423 ±(99.9%) 702.340 MB/sec [Average]
[info]   (min, avg, max) = (1623.124, 1847.423, 1997.172), stdev = 182.395
[info]   CI (99.9%): [1145.083, 2549.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31263.279 ±(99.9%) 9479.141 B/op [Average]
[info]   (min, avg, max) = (28085.828, 31263.279, 33204.094), stdev = 2461.703
[info]   CI (99.9%): [21784.138, 40742.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.415 ±(99.9%) 2.109 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.415, 1.347), stdev = 0.548
[info]   CI (99.9%): [≈ 0, 2.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.106 ±(99.9%) 36.549 B/op [Average]
[info]   (min, avg, max) = (0.692, 7.106, 23.300), stdev = 9.492
[info]   CI (99.9%): [≈ 0, 43.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.140
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:57:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1800.365 ops/s
[info] # Warmup Iteration   2: 10538.542 ops/s
[info] # Warmup Iteration   3: 15183.760 ops/s
[info] Iteration   1: 18079.247 ops/s
[info]                  ·gc.alloc.rate:                   1618.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              140887.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1576.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137218.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.248 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 19067.569 ops/s
[info]                  ·gc.alloc.rate:                   1705.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              140786.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1905.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157269.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 316.178 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 18314.467 ops/s
[info]                  ·gc.alloc.rate:                   1597.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              137275.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1584.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136173.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.357 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 18183.435 ops/s
[info]                  ·gc.alloc.rate:                   1635.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              141571.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1586.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137305.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.207 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 18134.796 ops/s
[info]                  ·gc.alloc.rate:                   2018.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              175171.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167498.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 280.525 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   18355.903 ±(99.9%) 1568.113 ops/s [Average]
[info]   (min, avg, max) = (18079.247, 18355.903, 19067.569), stdev = 407.234
[info]   CI (99.9%): [16787.790, 19924.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1715.389 ±(99.9%) 671.204 MB/sec [Average]
[info]   (min, avg, max) = (1597.637, 1715.389, 2018.605), stdev = 174.310
[info]   CI (99.9%): [1044.185, 2386.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   147138.528 ±(99.9%) 60686.665 B/op [Average]
[info]   (min, avg, max) = (137275.299, 147138.528, 175171.283), stdev = 15760.134
[info]   CI (99.9%): [86451.863, 207825.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1716.797 ±(99.9%) 708.016 MB/sec [Average]
[info]   (min, avg, max) = (1576.752, 1716.797, 1930.183), stdev = 183.870
[info]   CI (99.9%): [1008.780, 2424.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   147093.159 ±(99.9%) 55550.507 B/op [Average]
[info]   (min, avg, max) = (136173.498, 147093.159, 167498.151), stdev = 14426.290
[info]   CI (99.9%): [91542.652, 202643.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.043 ±(99.9%) 6.989 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.043, 3.831), stdev = 1.815
[info]   CI (99.9%): [≈ 0, 9.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   173.503 ±(99.9%) 590.198 B/op [Average]
[info]   (min, avg, max) = (7.207, 173.503, 316.178), stdev = 153.272
[info]   CI (99.9%): [≈ 0, 763.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.600, 26.000), stdev = 8.905
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1406.299 ops/s
[info] # Warmup Iteration   2: 11424.189 ops/s
[info] # Warmup Iteration   3: 18057.660 ops/s
[info] Iteration   1: 19136.847 ops/s
[info]                  ·gc.alloc.rate:                   1539.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              126590.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106490.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 18980.808 ops/s
[info]                  ·gc.alloc.rate:                   1527.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              126633.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     134592.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 18635.353 ops/s
[info]                  ·gc.alloc.rate:                   1493.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              126142.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110376.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188.577 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 19020.741 ops/s
[info]                  ·gc.alloc.rate:                   1713.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              141786.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162425.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.722 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 18765.693 ops/s
[info]                  ·gc.alloc.rate:                   1690.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              141762.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137203.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 531.172 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   18907.888 ±(99.9%) 781.999 ops/s [Average]
[info]   (min, avg, max) = (18635.353, 18907.888, 19136.847), stdev = 203.083
[info]   CI (99.9%): [18125.889, 19689.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1592.957 ±(99.9%) 390.340 MB/sec [Average]
[info]   (min, avg, max) = (1493.755, 1592.957, 1713.682), stdev = 101.370
[info]   CI (99.9%): [1202.617, 1983.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   132583.065 ±(99.9%) 32317.750 B/op [Average]
[info]   (min, avg, max) = (126142.351, 132583.065, 141786.454), stdev = 8392.817
[info]   CI (99.9%): [100265.315, 164900.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1564.953 ±(99.9%) 1065.921 MB/sec [Average]
[info]   (min, avg, max) = (1294.871, 1564.953, 1963.138), stdev = 276.816
[info]   CI (99.9%): [499.033, 2630.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   130217.667 ±(99.9%) 87427.179 B/op [Average]
[info]   (min, avg, max) = (106490.009, 130217.667, 162425.938), stdev = 22704.561
[info]   CI (99.9%): [42790.488, 217644.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.743 ±(99.9%) 10.534 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.743, 6.334), stdev = 2.736
[info]   CI (99.9%): [≈ 0, 12.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   146.357 ±(99.9%) 883.678 B/op [Average]
[info]   (min, avg, max) = (1.722, 146.357, 531.172), stdev = 229.488
[info]   CI (99.9%): [≈ 0, 1030.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 13.000), stdev = 2.449
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 220846.198 ops/s
[info] # Warmup Iteration   2: 627349.920 ops/s
[info] # Warmup Iteration   3: 783389.382 ops/s
[info] Iteration   1: 779540.063 ops/s
[info]                  ·gc.alloc.rate:                   2077.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              4193.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3963.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.698 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.446 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 789730.414 ops/s
[info]                  ·gc.alloc.rate:                   2100.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              4185.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3914.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 791175.550 ops/s
[info]                  ·gc.alloc.rate:                   2138.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              4251.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3933.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 797024.269 ops/s
[info]                  ·gc.alloc.rate:                   2161.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              4265.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2326.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4590.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 785257.208 ops/s
[info]                  ·gc.alloc.rate:                   2123.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4033.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   788545.501 ±(99.9%) 25259.276 ops/s [Average]
[info]   (min, avg, max) = (779540.063, 788545.501, 797024.269), stdev = 6559.754
[info]   CI (99.9%): [763286.225, 813804.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2120.385 ±(99.9%) 126.207 MB/sec [Average]
[info]   (min, avg, max) = (2077.369, 2120.385, 2161.922), stdev = 32.776
[info]   CI (99.9%): [1994.178, 2246.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4230.707 ±(99.9%) 145.510 B/op [Average]
[info]   (min, avg, max) = (4185.806, 4230.707, 4265.444), stdev = 37.789
[info]   CI (99.9%): [4085.196, 4376.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2048.928 ±(99.9%) 602.503 MB/sec [Average]
[info]   (min, avg, max) = (1963.219, 2048.928, 2326.549), stdev = 156.468
[info]   CI (99.9%): [1446.424, 2651.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4086.945 ±(99.9%) 1097.300 B/op [Average]
[info]   (min, avg, max) = (3914.356, 4086.945, 4590.250), stdev = 284.965
[info]   CI (99.9%): [2989.645, 5184.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.564 ±(99.9%) 4.592 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.564, 2.698), stdev = 1.193
[info]   CI (99.9%): [≈ 0, 5.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.139 ±(99.9%) 9.272 B/op [Average]
[info]   (min, avg, max) = (0.041, 1.139, 5.446), stdev = 2.408
[info]   CI (99.9%): [≈ 0, 10.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 12.000), stdev = 1.924
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 848.523 ops/s
[info] # Warmup Iteration   2: 6806.172 ops/s
[info] # Warmup Iteration   3: 10941.489 ops/s
[info] Iteration   1: 14596.297 ops/s
[info]                  ·gc.alloc.rate:                   1844.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              198911.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208652.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.391 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 14233.619 ops/s
[info]                  ·gc.alloc.rate:                   1788.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              197737.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178752.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.603 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 13863.914 ops/s
[info]                  ·gc.alloc.rate:                   1735.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              197011.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221632.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 336.341 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 14219.207 ops/s
[info]                  ·gc.alloc.rate:                   1784.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              197500.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180181.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.608 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 14859.192 ops/s
[info]                  ·gc.alloc.rate:                   1890.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              200216.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173551.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.205 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   14354.446 ±(99.9%) 1474.817 ops/s [Average]
[info]   (min, avg, max) = (13863.914, 14354.446, 14859.192), stdev = 383.005
[info]   CI (99.9%): [12879.629, 15829.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1809.029 ±(99.9%) 230.338 MB/sec [Average]
[info]   (min, avg, max) = (1735.612, 1809.029, 1890.577), stdev = 59.818
[info]   CI (99.9%): [1578.690, 2039.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   198275.421 ±(99.9%) 4969.416 B/op [Average]
[info]   (min, avg, max) = (197011.352, 198275.421, 200216.947), stdev = 1290.542
[info]   CI (99.9%): [193306.005, 203244.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1754.463 ±(99.9%) 667.045 MB/sec [Average]
[info]   (min, avg, max) = (1617.224, 1754.463, 1952.516), stdev = 173.229
[info]   CI (99.9%): [1087.419, 2421.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   192553.928 ±(99.9%) 81896.824 B/op [Average]
[info]   (min, avg, max) = (173551.568, 192553.928, 221632.383), stdev = 21268.345
[info]   CI (99.9%): [110657.104, 274450.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.839 ±(99.9%) 4.922 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.839, 2.963), stdev = 1.278
[info]   CI (99.9%): [≈ 0, 5.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   93.830 ±(99.9%) 557.641 B/op [Average]
[info]   (min, avg, max) = (2.205, 93.830, 336.341), stdev = 144.817
[info]   CI (99.9%): [≈ 0, 651.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 14.000), stdev = 2.966
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6306.887 ops/s
[info] # Warmup Iteration   2: 30363.466 ops/s
[info] # Warmup Iteration   3: 44136.877 ops/s
[info] Iteration   1: 44992.541 ops/s
[info]                  ·gc.alloc.rate:                   1951.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              68251.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1880.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65755.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.849 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.609 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 44445.126 ops/s
[info]                  ·gc.alloc.rate:                   2009.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              71137.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2167.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76702.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 197.425 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         42.000 ms
[info] Iteration   3: 43425.087 ops/s
[info]                  ·gc.alloc.rate:                   1814.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              65767.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1825.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66151.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.460 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         45.000 ms
[info] Iteration   4: 43820.607 ops/s
[info]                  ·gc.alloc.rate:                   1559.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              56011.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1485.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53351.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.317 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   5: 45816.071 ops/s
[info]                  ·gc.alloc.rate:                   1622.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              55736.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1509.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51848.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82.944 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44499.886 ±(99.9%) 3650.333 ops/s [Average]
[info]   (min, avg, max) = (43425.087, 44499.886, 45816.071), stdev = 947.980
[info]   CI (99.9%): [40849.554, 48150.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1791.827 ±(99.9%) 760.980 MB/sec [Average]
[info]   (min, avg, max) = (1559.649, 1791.827, 2009.932), stdev = 197.624
[info]   CI (99.9%): [1030.846, 2552.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   63380.896 ±(99.9%) 27386.639 B/op [Average]
[info]   (min, avg, max) = (55736.615, 63380.896, 71137.813), stdev = 7112.223
[info]   CI (99.9%): [35994.257, 90767.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1773.668 ±(99.9%) 1092.033 MB/sec [Average]
[info]   (min, avg, max) = (1485.577, 1773.668, 2167.169), stdev = 283.598
[info]   CI (99.9%): [681.635, 2865.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   62762.063 ±(99.9%) 39573.054 B/op [Average]
[info]   (min, avg, max) = (51848.762, 62762.063, 76702.922), stdev = 10276.997
[info]   CI (99.9%): [23189.008, 102335.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.895 ±(99.9%) 4.899 MB/sec [Average]
[info]   (min, avg, max) = (2.415, 3.895, 5.578), stdev = 1.272
[info]   CI (99.9%): [≈ 0, 8.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   138.296 ±(99.9%) 179.243 B/op [Average]
[info]   (min, avg, max) = (82.944, 138.296, 197.425), stdev = 46.549
[info]   CI (99.9%): [≈ 0, 317.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   180.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (24.000, 36.000, 45.000), stdev = 8.216
[info]   CI (99.9%): [180.000, 180.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6631.485 ops/s
[info] # Warmup Iteration   2: 37688.067 ops/s
[info] # Warmup Iteration   3: 49744.933 ops/s
[info] Iteration   1: 52603.791 ops/s
[info]                  ·gc.alloc.rate:                   1778.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              53195.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1877.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56169.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.870 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         45.000 ms
[info] Iteration   2: 52416.862 ops/s
[info]                  ·gc.alloc.rate:                   1818.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              54584.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1818.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54599.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.823 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         51.000 ms
[info] Iteration   3: 58531.258 ops/s
[info]                  ·gc.alloc.rate:                   1580.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              42476.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1503.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40426.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.152 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   4: 57459.363 ops/s
[info]                  ·gc.alloc.rate:                   1568.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              42961.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41728.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.765 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   5: 59576.922 ops/s
[info]                  ·gc.alloc.rate:                   1606.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              42429.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1520.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40154.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.138 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.307 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   56117.639 ±(99.9%) 13006.300 ops/s [Average]
[info]   (min, avg, max) = (52416.862, 56117.639, 59576.922), stdev = 3377.695
[info]   CI (99.9%): [43111.339, 69123.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1670.271 ±(99.9%) 456.096 MB/sec [Average]
[info]   (min, avg, max) = (1568.642, 1670.271, 1818.301), stdev = 118.447
[info]   CI (99.9%): [1214.175, 2126.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   47129.465 ±(99.9%) 23852.931 B/op [Average]
[info]   (min, avg, max) = (42429.524, 47129.465, 54584.574), stdev = 6194.530
[info]   CI (99.9%): [23276.534, 70982.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1648.779 ±(99.9%) 706.035 MB/sec [Average]
[info]   (min, avg, max) = (1503.764, 1648.779, 1877.539), stdev = 183.355
[info]   CI (99.9%): [942.744, 2354.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46615.849 ±(99.9%) 30982.212 B/op [Average]
[info]   (min, avg, max) = (40154.561, 46615.849, 56169.444), stdev = 8045.982
[info]   CI (99.9%): [15633.637, 77598.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.454 ±(99.9%) 10.855 MB/sec [Average]
[info]   (min, avg, max) = (0.230, 4.454, 7.408), stdev = 2.819
[info]   CI (99.9%): [≈ 0, 15.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   122.583 ±(99.9%) 291.842 B/op [Average]
[info]   (min, avg, max) = (6.870, 122.583, 199.152), stdev = 75.790
[info]   CI (99.9%): [≈ 0, 414.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   174.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 34.800, 51.000), stdev = 13.846
[info]   CI (99.9%): [174.000, 174.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 737879.730 ops/s
[info] # Warmup Iteration   2: 859777.328 ops/s
[info] # Warmup Iteration   3: 1027824.298 ops/s
[info] Iteration   1: 1005012.429 ops/s
[info]                  ·gc.alloc.rate:                   942.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              1475.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1549.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 980404.766 ops/s
[info]                  ·gc.alloc.rate:               947.658 MB/sec
[info]                  ·gc.alloc.rate.norm:          1521.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1590.072 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 1023868.980 ops/s
[info]                  ·gc.alloc.rate:                   961.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              1477.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1521.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.273 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1031970.121 ops/s
[info]                  ·gc.alloc.rate:                   961.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              1465.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.365 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1036502.999 ops/s
[info]                  ·gc.alloc.rate:                   976.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              1481.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1487.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1015551.859 ±(99.9%) 88733.781 ops/s [Average]
[info]   (min, avg, max) = (980404.766, 1015551.859, 1036502.999), stdev = 23043.881
[info]   CI (99.9%): [926818.078, 1104285.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   957.726 ±(99.9%) 51.549 MB/sec [Average]
[info]   (min, avg, max) = (942.078, 957.726, 976.305), stdev = 13.387
[info]   CI (99.9%): [906.176, 1009.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1484.323 ±(99.9%) 82.361 B/op [Average]
[info]   (min, avg, max) = (1465.903, 1484.323, 1521.145), stdev = 21.389
[info]   CI (99.9%): [1401.961, 1566.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   986.957 ±(99.9%) 16.738 MB/sec [Average]
[info]   (min, avg, max) = (980.417, 986.957, 990.598), stdev = 4.347
[info]   CI (99.9%): [970.219, 1003.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1530.037 ±(99.9%) 156.671 B/op [Average]
[info]   (min, avg, max) = (1487.984, 1530.037, 1590.072), stdev = 40.687
[info]   CI (99.9%): [1373.366, 1686.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 5.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.840, 3.273), stdev = 1.413
[info]   CI (99.9%): [≈ 0, 6.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.289 ±(99.9%) 8.364 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.289, 5.031), stdev = 2.172
[info]   CI (99.9%): [≈ 0, 9.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.050
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 790797.174 ops/s
[info] # Warmup Iteration   2: 854672.284 ops/s
[info] # Warmup Iteration   3: 1017480.415 ops/s
[info] Iteration   1: 1017663.004 ops/s
[info]                  ·gc.alloc.rate:      0.131 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.203 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1020116.887 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1018038.584 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1018909.895 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 994080.408 ops/s
[info]                  ·gc.alloc.rate:      13.182 MB/sec
[info]                  ·gc.alloc.rate.norm: 20.869 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1013761.755 ±(99.9%) 42521.182 ops/s [Average]
[info]   (min, avg, max) = (994080.408, 1013761.755, 1020116.887), stdev = 11042.616
[info]   CI (99.9%): [971240.573, 1056282.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.663 ±(99.9%) 22.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.663, 13.182), stdev = 5.881
[info]   CI (99.9%): [≈ 0, 25.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4.215 ±(99.9%) 35.851 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 4.215, 20.869), stdev = 9.310
[info]   CI (99.9%): [≈ 0, 40.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1377.370 ops/s
[info] # Warmup Iteration   2: 2632.467 ops/s
[info] # Warmup Iteration   3: 3452.329 ops/s
[info] Iteration   1: 3070.393 ops/s
[info]                  ·gc.alloc.rate:                   1599.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              819552.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1799.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     921900.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 958.359 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         85.000 ms
[info] Iteration   2: 3580.311 ops/s
[info]                  ·gc.alloc.rate:                   788.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              346680.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          778.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342302.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      25.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11049.687 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         55.000 ms
[info] Iteration   3: 3787.924 ops/s
[info]                  ·gc.alloc.rate:                   512.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              212877.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          486.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202021.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      14.172 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5887.584 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 3839.215 ops/s
[info]                  ·gc.alloc.rate:                   529.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              216814.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          490.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200924.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.531 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3892.882 ops/s
[info]                  ·gc.alloc.rate:                   538.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              217754.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          492.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199267.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3634.145 ±(99.9%) 1296.360 ops/s [Average]
[info]   (min, avg, max) = (3070.393, 3634.145, 3892.882), stdev = 336.661
[info]   CI (99.9%): [2337.785, 4930.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   793.710 ±(99.9%) 1789.452 MB/sec [Average]
[info]   (min, avg, max) = (512.430, 793.710, 1599.667), stdev = 464.715
[info]   CI (99.9%): [≈ 0, 2583.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   362735.989 ±(99.9%) 1007275.824 B/op [Average]
[info]   (min, avg, max) = (212877.849, 362735.989, 819552.883), stdev = 261586.333
[info]   CI (99.9%): [≈ 0, 1370011.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   809.545 ±(99.9%) 2184.654 MB/sec [Average]
[info]   (min, avg, max) = (486.297, 809.545, 1799.436), stdev = 567.348
[info]   CI (99.9%): [≈ 0, 2994.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   373283.255 ±(99.9%) 1204303.598 B/op [Average]
[info]   (min, avg, max) = (199267.139, 373283.255, 921900.098), stdev = 312753.820
[info]   CI (99.9%): [≈ 0, 1577586.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   8.254 ±(99.9%) 42.873 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 8.254, 25.142), stdev = 11.134
[info]   CI (99.9%): [≈ 0, 51.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3585.881 ±(99.9%) 18605.591 B/op [Average]
[info]   (min, avg, max) = (8.531, 3585.881, 11049.687), stdev = 4831.813
[info]   CI (99.9%): [≈ 0, 22191.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 6.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   171.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 34.200, 85.000), stdev = 34.680
[info]   CI (99.9%): [171.000, 171.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:55:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26059.713 ops/s
[info] # Warmup Iteration   2: 116482.878 ops/s
[info] # Warmup Iteration   3: 134961.321 ops/s
[info] Iteration   1: 135361.479 ops/s
[info]                  ·gc.alloc.rate:                   2129.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              24742.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26394.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.919 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 137401.338 ops/s
[info]                  ·gc.alloc.rate:                   2126.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              24354.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22344.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.384 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 138649.260 ops/s
[info]                  ·gc.alloc.rate:               2148.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          24380.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1969.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22348.016 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 133974.404 ops/s
[info]                  ·gc.alloc.rate:                   2110.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              24790.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23382.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 132351.456 ops/s
[info]                  ·gc.alloc.rate:                   2055.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              24441.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23870.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.743 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   135547.588 ±(99.9%) 9775.927 ops/s [Average]
[info]   (min, avg, max) = (132351.456, 135547.588, 138649.260), stdev = 2538.777
[info]   CI (99.9%): [125771.661, 145323.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   2114.164 ±(99.9%) 136.387 MB/sec [Average]
[info]   (min, avg, max) = (2055.595, 2114.164, 2148.628), stdev = 35.419
[info]   CI (99.9%): [1977.777, 2250.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24541.769 ±(99.9%) 801.112 B/op [Average]
[info]   (min, avg, max) = (24354.369, 24541.769, 24790.179), stdev = 208.046
[info]   CI (99.9%): [23740.657, 25342.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2038.076 ±(99.9%) 508.434 MB/sec [Average]
[info]   (min, avg, max) = (1951.435, 2038.076, 2271.206), stdev = 132.039
[info]   CI (99.9%): [1529.642, 2546.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   23667.779 ±(99.9%) 6399.660 B/op [Average]
[info]   (min, avg, max) = (22344.300, 23667.779, 26394.034), stdev = 1661.971
[info]   CI (99.9%): [17268.119, 30067.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.349 ±(99.9%) 2.402 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.349, 1.456), stdev = 0.624
[info]   CI (99.9%): [≈ 0, 2.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.058 ±(99.9%) 27.915 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.058, 16.919), stdev = 7.249
[info]   CI (99.9%): [≈ 0, 31.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 12.000), stdev = 2.074
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.631 ops/s
[info] # Warmup Iteration   2: 330832.665 ops/s
[info] # Warmup Iteration   3: 382532.619 ops/s
[info] Iteration   1: 398900.866 ops/s
[info]                  ·gc.alloc.rate:                   816.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              3221.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2566.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 396881.654 ops/s
[info]                  ·gc.alloc.rate:                   823.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              3265.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3873.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 397661.650 ops/s
[info]                  ·gc.alloc.rate:                   817.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              3234.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2581.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 392036.508 ops/s
[info]                  ·gc.alloc.rate:                   832.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              3340.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3928.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.968 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.941 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 391823.539 ops/s
[info]                  ·gc.alloc.rate:                   800.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              3216.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2608.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   395460.844 ±(99.9%) 12720.547 ops/s [Average]
[info]   (min, avg, max) = (391823.539, 395460.844, 398900.866), stdev = 3303.486
[info]   CI (99.9%): [382740.297, 408181.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   818.060 ±(99.9%) 44.060 MB/sec [Average]
[info]   (min, avg, max) = (800.861, 818.060, 832.049), stdev = 11.442
[info]   CI (99.9%): [774.000, 862.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3255.617 ±(99.9%) 195.888 B/op [Average]
[info]   (min, avg, max) = (3216.619, 3255.617, 3340.039), stdev = 50.871
[info]   CI (99.9%): [3059.729, 3451.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   781.576 ±(99.9%) 689.786 MB/sec [Average]
[info]   (min, avg, max) = (649.535, 781.576, 978.641), stdev = 179.135
[info]   CI (99.9%): [91.791, 1471.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3111.764 ±(99.9%) 2776.697 B/op [Average]
[info]   (min, avg, max) = (2566.477, 3111.764, 3928.493), stdev = 721.099
[info]   CI (99.9%): [335.066, 5888.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.027 ±(99.9%) 8.484 MB/sec [Average]
[info]   (min, avg, max) = (0.006, 1.027, 4.968), stdev = 2.203
[info]   CI (99.9%): [≈ 0, 9.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   4.122 ±(99.9%) 34.057 B/op [Average]
[info]   (min, avg, max) = (0.024, 4.122, 19.941), stdev = 8.844
[info]   CI (99.9%): [≈ 0, 38.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 12.000), stdev = 3.271
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72912.910 ops/s
[info] # Warmup Iteration   2: 203920.083 ops/s
[info] # Warmup Iteration   3: 249314.598 ops/s
[info] Iteration   1: 274655.771 ops/s
[info]                  ·gc.alloc.rate:                   564.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              3235.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3710.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.907 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.925 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 265244.081 ops/s
[info]                  ·gc.alloc.rate:                   551.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              3274.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3841.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 266370.255 ops/s
[info]                  ·gc.alloc.rate:                   544.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              3218.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1912.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 263735.970 ops/s
[info]                  ·gc.alloc.rate:               570.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          3403.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3863.754 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 263452.289 ops/s
[info]                  ·gc.alloc.rate:                   547.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              3273.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3871.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.511 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.969 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   266691.673 ±(99.9%) 17735.495 ops/s [Average]
[info]   (min, avg, max) = (263452.289, 266691.673, 274655.771), stdev = 4605.852
[info]   CI (99.9%): [248956.178, 284427.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   555.948 ±(99.9%) 42.555 MB/sec [Average]
[info]   (min, avg, max) = (544.804, 555.948, 570.379), stdev = 11.051
[info]   CI (99.9%): [513.393, 598.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3281.005 ±(99.9%) 279.501 B/op [Average]
[info]   (min, avg, max) = (3218.679, 3281.005, 3403.472), stdev = 72.585
[info]   CI (99.9%): [3001.505, 3560.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   582.911 ±(99.9%) 557.847 MB/sec [Average]
[info]   (min, avg, max) = (323.758, 582.911, 648.200), stdev = 144.871
[info]   CI (99.9%): [25.064, 1140.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3440.039 ±(99.9%) 3297.235 B/op [Average]
[info]   (min, avg, max) = (1912.749, 3440.039, 3871.780), stdev = 856.281
[info]   CI (99.9%): [142.804, 6737.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.092 ±(99.9%) 6.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.092, 3.511), stdev = 1.581
[info]   CI (99.9%): [≈ 0, 7.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.428 ±(99.9%) 36.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.428, 20.969), stdev = 9.387
[info]   CI (99.9%): [≈ 0, 42.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 9.000), stdev = 1.732
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 213773.275 ops/s
[info] # Warmup Iteration   2: 372472.061 ops/s
[info] # Warmup Iteration   3: 459741.308 ops/s
[info] Iteration   1: 472763.050 ops/s
[info]                  ·gc.alloc.rate:                   642.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              2137.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2186.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 482259.916 ops/s
[info]                  ·gc.alloc.rate:                   624.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              2037.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2146.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 472168.217 ops/s
[info]                  ·gc.alloc.rate:               622.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          2072.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2195.964 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 481151.470 ops/s
[info]                  ·gc.alloc.rate:               626.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          2048.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2158.156 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 484712.146 ops/s
[info]                  ·gc.alloc.rate:                   618.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   478610.960 ±(99.9%) 22178.884 ops/s [Average]
[info]   (min, avg, max) = (472168.217, 478610.960, 484712.146), stdev = 5759.786
[info]   CI (99.9%): [456432.075, 500789.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   626.678 ±(99.9%) 34.829 MB/sec [Average]
[info]   (min, avg, max) = (618.718, 626.678, 642.050), stdev = 9.045
[info]   CI (99.9%): [591.848, 661.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2060.894 ±(99.9%) 186.618 B/op [Average]
[info]   (min, avg, max) = (2008.821, 2060.894, 2137.223), stdev = 48.464
[info]   CI (99.9%): [1874.276, 2247.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   592.726 ±(99.9%) 565.379 MB/sec [Average]
[info]   (min, avg, max) = (330.081, 592.726, 659.832), stdev = 146.827
[info]   CI (99.9%): [27.347, 1158.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1951.809 ±(99.9%) 1896.096 B/op [Average]
[info]   (min, avg, max) = (1071.690, 1951.809, 2195.964), stdev = 492.410
[info]   CI (99.9%): [55.713, 3847.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.204), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 8.000), stdev = 1.732
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4702.203 ops/s
[info] # Warmup Iteration   2: 59383.111 ops/s
[info] # Warmup Iteration   3: 98483.188 ops/s
[info] Iteration   1: 106278.049 ops/s
[info]                  ·gc.alloc.rate:                   3704.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              54858.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3597.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53264.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.164 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 105390.668 ops/s
[info]                  ·gc.alloc.rate:                   3696.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              55190.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3647.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54447.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.933 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 104222.651 ops/s
[info]                  ·gc.alloc.rate:                   3684.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              55637.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3696.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55816.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.943 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 107529.819 ops/s
[info]                  ·gc.alloc.rate:                   3795.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              55553.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3723.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54501.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.609 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 108035.960 ops/s
[info]                  ·gc.alloc.rate:               3801.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          55374.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3396.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49469.188 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   106291.429 ±(99.9%) 5986.604 ops/s [Average]
[info]   (min, avg, max) = (104222.651, 106291.429, 108035.960), stdev = 1554.702
[info]   CI (99.9%): [100304.826, 112278.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3736.744 ±(99.9%) 219.289 MB/sec [Average]
[info]   (min, avg, max) = (3684.870, 3736.744, 3801.384), stdev = 56.949
[info]   CI (99.9%): [3517.456, 3956.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   55322.833 ±(99.9%) 1198.927 B/op [Average]
[info]   (min, avg, max) = (54858.856, 55322.833, 55637.489), stdev = 311.358
[info]   CI (99.9%): [54123.906, 56521.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3612.185 ±(99.9%) 501.373 MB/sec [Average]
[info]   (min, avg, max) = (3396.011, 3612.185, 3723.947), stdev = 130.205
[info]   CI (99.9%): [3110.812, 4113.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   53499.883 ±(99.9%) 9347.433 B/op [Average]
[info]   (min, avg, max) = (49469.188, 53499.883, 55816.625), stdev = 2427.499
[info]   CI (99.9%): [44152.450, 62847.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 2.043 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 1.227), stdev = 0.531
[info]   CI (99.9%): [≈ 0, 2.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.130 ±(99.9%) 30.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.130, 18.164), stdev = 7.855
[info]   CI (99.9%): [≈ 0, 34.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   54.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 11.000), stdev = 0.447
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 16.200, 19.000), stdev = 2.387
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:54:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48384.841 ops/s
[info] # Warmup Iteration   2: 172533.491 ops/s
[info] # Warmup Iteration   3: 194132.107 ops/s
[info] Iteration   1: 214973.544 ops/s
[info]                  ·gc.alloc.rate:                   1855.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              13581.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14361.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.945 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 212118.725 ops/s
[info]                  ·gc.alloc.rate:                   1818.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              13494.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12060.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.618 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 211349.398 ops/s
[info]                  ·gc.alloc.rate:                   1808.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              13464.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12158.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 212689.761 ops/s
[info]                  ·gc.alloc.rate:                   1858.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              13745.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14627.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 216790.967 ops/s
[info]                  ·gc.alloc.rate:                   1880.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              13651.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12072.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   213584.479 ±(99.9%) 8643.732 ops/s [Average]
[info]   (min, avg, max) = (211349.398, 213584.479, 216790.967), stdev = 2244.750
[info]   CI (99.9%): [204940.747, 222228.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1844.371 ±(99.9%) 115.496 MB/sec [Average]
[info]   (min, avg, max) = (1808.275, 1844.371, 1880.772), stdev = 29.994
[info]   CI (99.9%): [1728.875, 1959.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13587.383 ±(99.9%) 444.007 B/op [Average]
[info]   (min, avg, max) = (13464.017, 13587.383, 13745.683), stdev = 115.307
[info]   CI (99.9%): [13143.376, 14031.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1772.287 ±(99.9%) 696.992 MB/sec [Average]
[info]   (min, avg, max) = (1625.568, 1772.287, 1977.410), stdev = 181.007
[info]   CI (99.9%): [1075.295, 2469.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13055.973 ±(99.9%) 5071.453 B/op [Average]
[info]   (min, avg, max) = (12060.040, 13055.973, 14627.430), stdev = 1317.040
[info]   CI (99.9%): [7984.519, 18127.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.902 ±(99.9%) 7.455 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.902, 4.365), stdev = 1.936
[info]   CI (99.9%): [≈ 0, 8.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.605 ±(99.9%) 54.553 B/op [Average]
[info]   (min, avg, max) = (0.151, 6.605, 31.945), stdev = 14.167
[info]   CI (99.9%): [≈ 0, 61.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.834
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.610 ops/s
[info] # Warmup Iteration   2: 622915.493 ops/s
[info] # Warmup Iteration   3: 861653.962 ops/s
[info] Iteration   1: 868948.167 ops/s
[info]                  ·gc.alloc.rate:               695.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          1259.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1177.512 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 917764.563 ops/s
[info]                  ·gc.alloc.rate:                   755.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              1295.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1672.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 931050.541 ops/s
[info]                  ·gc.alloc.rate:                   752.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              1272.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1100.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 932420.738 ops/s
[info]                  ·gc.alloc.rate:               748.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          1262.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1099.597 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 934066.450 ops/s
[info]                  ·gc.alloc.rate:                   747.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              1258.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1096.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.831 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   916850.092 ±(99.9%) 106083.868 ops/s [Average]
[info]   (min, avg, max) = (868948.167, 916850.092, 934066.450), stdev = 27549.644
[info]   CI (99.9%): [810766.224, 1022933.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   739.855 ±(99.9%) 96.946 MB/sec [Average]
[info]   (min, avg, max) = (695.235, 739.855, 755.557), stdev = 25.177
[info]   CI (99.9%): [642.909, 836.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1269.753 ±(99.9%) 59.674 B/op [Average]
[info]   (min, avg, max) = (1258.556, 1269.753, 1295.554), stdev = 15.497
[info]   CI (99.9%): [1210.079, 1329.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   715.792 ±(99.9%) 558.712 MB/sec [Average]
[info]   (min, avg, max) = (650.200, 715.792, 975.345), stdev = 145.096
[info]   CI (99.9%): [157.080, 1274.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1229.233 ±(99.9%) 963.017 B/op [Average]
[info]   (min, avg, max) = (1096.522, 1229.233, 1672.425), stdev = 250.093
[info]   CI (99.9%): [266.215, 2192.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.059 ±(99.9%) 9.002 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.059, 5.242), stdev = 2.338
[info]   CI (99.9%): [≈ 0, 10.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.785 ±(99.9%) 15.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.785, 8.831), stdev = 3.939
[info]   CI (99.9%): [≈ 0, 16.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 12.000), stdev = 2.280
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138561.759 ops/s
[info] # Warmup Iteration   2: 439148.032 ops/s
[info] # Warmup Iteration   3: 574034.787 ops/s
[info] Iteration   1: 596046.049 ops/s
[info]                  ·gc.alloc.rate:                   479.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              1266.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1709.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 600915.771 ops/s
[info]                  ·gc.alloc.rate:               479.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          1255.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 849.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 596201.854 ops/s
[info]                  ·gc.alloc.rate:                   484.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              1278.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1713.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 587705.417 ops/s
[info]                  ·gc.alloc.rate:               470.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          1260.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 869.654 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 597339.513 ops/s
[info]                  ·gc.alloc.rate:                   488.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              1285.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1714.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   595641.721 ±(99.9%) 18682.594 ops/s [Average]
[info]   (min, avg, max) = (587705.417, 595641.721, 600915.771), stdev = 4851.810
[info]   CI (99.9%): [576959.127, 614324.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   480.431 ±(99.9%) 24.808 MB/sec [Average]
[info]   (min, avg, max) = (470.860, 480.431, 488.003), stdev = 6.443
[info]   CI (99.9%): [455.622, 505.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1269.360 ±(99.9%) 48.618 B/op [Average]
[info]   (min, avg, max) = (1255.096, 1269.360, 1285.713), stdev = 12.626
[info]   CI (99.9%): [1220.742, 1317.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   519.324 ±(99.9%) 684.479 MB/sec [Average]
[info]   (min, avg, max) = (324.421, 519.324, 650.822), stdev = 177.757
[info]   CI (99.9%): [≈ 0, 1203.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1371.430 ±(99.9%) 1799.245 B/op [Average]
[info]   (min, avg, max) = (849.622, 1371.430, 1714.684), stdev = 467.258
[info]   CI (99.9%): [≈ 0, 3170.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.165), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 335169.742 ops/s
[info] # Warmup Iteration   2: 590672.049 ops/s
[info] # Warmup Iteration   3: 780050.731 ops/s
[info] Iteration   1: 790371.485 ops/s
[info]                  ·gc.alloc.rate:               636.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          1267.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1306.583 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 796251.562 ops/s
[info]                  ·gc.alloc.rate:                   643.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              1271.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1298.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 800720.556 ops/s
[info]                  ·gc.alloc.rate:                   644.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              1266.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1292.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 797387.118 ops/s
[info]                  ·gc.alloc.rate:                   645.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              1273.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1299.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 794881.890 ops/s
[info]                  ·gc.alloc.rate:                   649.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              1286.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1305.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   795922.522 ±(99.9%) 14557.697 ops/s [Average]
[info]   (min, avg, max) = (790371.485, 795922.522, 800720.556), stdev = 3780.588
[info]   CI (99.9%): [781364.825, 810480.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   643.840 ±(99.9%) 18.682 MB/sec [Average]
[info]   (min, avg, max) = (636.377, 643.840, 649.886), stdev = 4.852
[info]   CI (99.9%): [625.158, 662.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1272.990 ±(99.9%) 31.453 B/op [Average]
[info]   (min, avg, max) = (1266.352, 1272.990, 1286.653), stdev = 8.168
[info]   CI (99.9%): [1241.537, 1304.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.800 ±(99.9%) 4.465 MB/sec [Average]
[info]   (min, avg, max) = (656.211, 657.800, 659.167), stdev = 1.160
[info]   CI (99.9%): [653.335, 662.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1300.607 ±(99.9%) 20.943 B/op [Average]
[info]   (min, avg, max) = (1292.922, 1300.607, 1306.583), stdev = 5.439
[info]   CI (99.9%): [1279.664, 1321.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.618 ±(99.9%) 5.234 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.618, 3.050), stdev = 1.359
[info]   CI (99.9%): [≈ 0, 5.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.224 ±(99.9%) 10.363 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.224, 6.038), stdev = 2.691
[info]   CI (99.9%): [≈ 0, 11.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 434649.671 ops/s
[info] # Warmup Iteration   2: 771954.486 ops/s
[info] # Warmup Iteration   3: 828351.645 ops/s
[info] Iteration   1: 835974.833 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 793242.649 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.683 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 835342.166 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 834803.167 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 820540.229 ops/s
[info]                  ·gc.alloc.rate:      19.209 MB/sec
[info]                  ·gc.alloc.rate.norm: 36.842 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   823980.609 ±(99.9%) 70655.186 ops/s [Average]
[info]   (min, avg, max) = (793242.649, 823980.609, 835974.833), stdev = 18348.927
[info]   CI (99.9%): [753325.423, 894635.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.012 ±(99.9%) 32.745 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.012, 19.209), stdev = 8.504
[info]   CI (99.9%): [≈ 0, 36.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   7.705 ±(99.9%) 62.781 B/op [Average]
[info]   (min, avg, max) = (0.001, 7.705, 36.842), stdev = 16.304
[info]   CI (99.9%): [≈ 0, 70.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:53:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5816.191 ops/s
[info] # Warmup Iteration   2: 21820.371 ops/s
[info] # Warmup Iteration   3: 34740.285 ops/s
[info] Iteration   1: 37134.540 ops/s
[info]                  ·gc.alloc.rate:                   1701.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              72113.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68685.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.882 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 32391.585 ops/s
[info]                  ·gc.alloc.rate:                   1876.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              91158.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95313.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.284 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.550 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 35843.088 ops/s
[info]                  ·gc.alloc.rate:                   1628.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              71514.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72242.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.563 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 36268.872 ops/s
[info]                  ·gc.alloc.rate:                   1636.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              70990.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57390.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.710 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 36203.798 ops/s
[info]                  ·gc.alloc.rate:                   1633.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              70991.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72232.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.239 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   35568.377 ±(99.9%) 7077.960 ops/s [Average]
[info]   (min, avg, max) = (32391.585, 35568.377, 37134.540), stdev = 1838.124
[info]   CI (99.9%): [28490.417, 42646.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1695.222 ±(99.9%) 406.650 MB/sec [Average]
[info]   (min, avg, max) = (1628.864, 1695.222, 1876.357), stdev = 105.606
[info]   CI (99.9%): [1288.572, 2101.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   75353.742 ±(99.9%) 34068.624 B/op [Average]
[info]   (min, avg, max) = (70990.075, 75353.742, 91158.963), stdev = 8847.514
[info]   CI (99.9%): [41285.118, 109422.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1642.486 ±(99.9%) 872.053 MB/sec [Average]
[info]   (min, avg, max) = (1322.639, 1642.486, 1961.867), stdev = 226.469
[info]   CI (99.9%): [770.433, 2514.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   73172.859 ±(99.9%) 53118.493 B/op [Average]
[info]   (min, avg, max) = (57390.293, 73172.859, 95313.322), stdev = 13794.704
[info]   CI (99.9%): [20054.365, 126291.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.115 ±(99.9%) 5.700 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.115, 3.284), stdev = 1.480
[info]   CI (99.9%): [≈ 0, 6.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   51.989 ±(99.9%) 272.445 B/op [Average]
[info]   (min, avg, max) = (0.882, 51.989, 159.550), stdev = 70.753
[info]   CI (99.9%): [≈ 0, 324.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 597.760 ops/s
[info] # Warmup Iteration   2: 5690.629 ops/s
[info] # Warmup Iteration   3: 7207.676 ops/s
[info] Iteration   1: 8628.644 ops/s
[info]                  ·gc.alloc.rate:                   1205.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              219894.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236114.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 401.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 8599.495 ops/s
[info]                  ·gc.alloc.rate:                   1193.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              218220.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237059.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.592 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 8759.087 ops/s
[info]                  ·gc.alloc.rate:                   1212.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              217784.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175819.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.922 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 8627.398 ops/s
[info]                  ·gc.alloc.rate:                   1192.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              217482.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238876.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 786.813 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 8984.798 ops/s
[info]                  ·gc.alloc.rate:                   1244.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              217911.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171048.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.646 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8719.884 ±(99.9%) 618.170 ops/s [Average]
[info]   (min, avg, max) = (8599.495, 8719.884, 8984.798), stdev = 160.537
[info]   CI (99.9%): [8101.714, 9338.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1209.683 ±(99.9%) 80.777 MB/sec [Average]
[info]   (min, avg, max) = (1192.368, 1209.683, 1244.119), stdev = 20.978
[info]   CI (99.9%): [1128.906, 1290.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   218258.655 ±(99.9%) 3666.162 B/op [Average]
[info]   (min, avg, max) = (217482.076, 218258.655, 219894.592), stdev = 952.091
[info]   CI (99.9%): [214592.492, 221924.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1171.310 ±(99.9%) 681.086 MB/sec [Average]
[info]   (min, avg, max) = (976.566, 1171.310, 1309.663), stdev = 176.876
[info]   CI (99.9%): [490.224, 1852.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   211783.721 ±(99.9%) 135014.561 B/op [Average]
[info]   (min, avg, max) = (171048.450, 211783.721, 238876.062), stdev = 35062.853
[info]   CI (99.9%): [76769.160, 346798.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.348 ±(99.9%) 7.302 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.348, 4.314), stdev = 1.896
[info]   CI (99.9%): [≈ 0, 8.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   245.814 ±(99.9%) 1332.230 B/op [Average]
[info]   (min, avg, max) = (3.646, 245.814, 786.813), stdev = 345.976
[info]   CI (99.9%): [≈ 0, 1578.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.800, 14.000), stdev = 3.962
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 797.627 ops/s
[info] # Warmup Iteration   2: 5530.754 ops/s
[info] # Warmup Iteration   3: 8866.788 ops/s
[info] Iteration   1: 8687.992 ops/s
[info]                  ·gc.alloc.rate:                   1140.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              206621.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177015.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.953 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 9086.823 ops/s
[info]                  ·gc.alloc.rate:                   1199.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              207807.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226005.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 727.288 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 9219.141 ops/s
[info]                  ·gc.alloc.rate:                   1202.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              205221.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165893.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.363 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 8758.601 ops/s
[info]                  ·gc.alloc.rate:                   1158.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              208169.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232132.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.246 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8786.216 ops/s
[info]                  ·gc.alloc.rate:                        1149.570 MB/sec
[info]                  ·gc.alloc.rate.norm:                   205881.376 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.013 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.320 B/op
[info]                  ·gc.churn.Metaspace:                   0.037 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              6.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1080.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          193588.909 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.730 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             488.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      41.016 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              48.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   8907.755 ±(99.9%) 891.365 ops/s [Average]
[info]   (min, avg, max) = (8687.992, 8907.755, 9219.141), stdev = 231.485
[info]   CI (99.9%): [8016.389, 9799.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1170.224 ±(99.9%) 111.231 MB/sec [Average]
[info]   (min, avg, max) = (1140.745, 1170.224, 1202.266), stdev = 28.886
[info]   CI (99.9%): [1058.993, 1281.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   206740.303 ±(99.9%) 4810.391 B/op [Average]
[info]   (min, avg, max) = (205221.395, 206740.303, 208169.862), stdev = 1249.243
[info]   CI (99.9%): [201929.912, 211550.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.464 ±(99.9%) 3.996 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.464, 2.320), stdev = 1.038
[info]   CI (99.9%): [≈ 0, 4.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.007 ±(99.9%) 0.063 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.315 ±(99.9%) 11.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.315, 6.574), stdev = 2.940
[info]   CI (99.9%): [≈ 0, 12.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1125.416 ±(99.9%) 631.234 MB/sec [Average]
[info]   (min, avg, max) = (971.870, 1125.416, 1304.980), stdev = 163.929
[info]   CI (99.9%): [494.183, 1756.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   198927.079 ±(99.9%) 112851.677 B/op [Average]
[info]   (min, avg, max) = (165893.774, 198927.079, 232132.536), stdev = 29307.222
[info]   CI (99.9%): [86075.402, 311778.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.546 ±(99.9%) 4.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.546, 2.730), stdev = 1.221
[info]   CI (99.9%): [≈ 0, 5.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   97.782 ±(99.9%) 841.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 97.782, 488.912), stdev = 218.648
[info]   CI (99.9%): [≈ 0, 939.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.143 ±(99.9%) 6.664 MB/sec [Average]
[info]   (min, avg, max) = (0.016, 1.143, 4.199), stdev = 1.731
[info]   CI (99.9%): [≈ 0, 7.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   198.573 ±(99.9%) 1152.631 B/op [Average]
[info]   (min, avg, max) = (2.953, 198.573, 727.288), stdev = 299.335
[info]   CI (99.9%): [≈ 0, 1351.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 19.200, 48.000), stdev = 17.196
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57323.623 ops/s
[info] # Warmup Iteration   2: 153858.941 ops/s
[info] # Warmup Iteration   3: 177252.293 ops/s
[info] Iteration   1: 194066.304 ops/s
[info]                  ·gc.alloc.rate:                   1939.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              15722.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1901.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15413.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.296 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.720 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 192692.529 ops/s
[info]                  ·gc.alloc.rate:                   1917.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              15653.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1897.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15491.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 193361.368 ops/s
[info]                  ·gc.alloc.rate:               1911.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          15559.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1592.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12960.543 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 194641.255 ops/s
[info]                  ·gc.alloc.rate:                   1957.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              15824.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15690.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 196052.431 ops/s
[info]                  ·gc.alloc.rate:                   1977.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              15874.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15822.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   194162.778 ±(99.9%) 4951.083 ops/s [Average]
[info]   (min, avg, max) = (192692.529, 194162.778, 196052.431), stdev = 1285.781
[info]   CI (99.9%): [189211.694, 199113.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1940.867 ±(99.9%) 105.828 MB/sec [Average]
[info]   (min, avg, max) = (1911.820, 1940.867, 1977.737), stdev = 27.483
[info]   CI (99.9%): [1835.039, 2046.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15726.878 ±(99.9%) 489.935 B/op [Average]
[info]   (min, avg, max) = (15559.642, 15726.878, 15874.956), stdev = 127.235
[info]   CI (99.9%): [15236.943, 16216.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1860.794 ±(99.9%) 589.232 MB/sec [Average]
[info]   (min, avg, max) = (1592.468, 1860.794, 1971.257), stdev = 153.022
[info]   CI (99.9%): [1271.562, 2450.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15075.666 ±(99.9%) 4595.266 B/op [Average]
[info]   (min, avg, max) = (12960.543, 15075.666, 15822.941), stdev = 1193.376
[info]   CI (99.9%): [10480.400, 19670.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.970 ±(99.9%) 5.555 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.970, 3.296), stdev = 1.443
[info]   CI (99.9%): [≈ 0, 6.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.878 ±(99.9%) 45.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.878, 26.720), stdev = 11.704
[info]   CI (99.9%): [≈ 0, 52.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 20.000), stdev = 5.413
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:52:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 301.730 ops/s
[info] # Warmup Iteration   2: 5339.967 ops/s
[info] # Warmup Iteration   3: 8153.431 ops/s
[info] Iteration   1: 8940.021 ops/s
[info]                  ·gc.alloc.rate:                   1406.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              247511.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     228899.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.329 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 8797.161 ops/s
[info]                  ·gc.alloc.rate:                   1386.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              248040.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292621.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 8954.548 ops/s
[info]                  ·gc.alloc.rate:                   1400.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              246189.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231091.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.876 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8812.752 ops/s
[info]                  ·gc.alloc.rate:                   1377.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              245942.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236003.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 8662.593 ops/s
[info]                  ·gc.alloc.rate:                   1367.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              248402.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     241299.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.782 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8833.415 ±(99.9%) 459.501 ops/s [Average]
[info]   (min, avg, max) = (8662.593, 8833.415, 8954.548), stdev = 119.331
[info]   CI (99.9%): [8373.914, 9292.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1387.668 ±(99.9%) 61.889 MB/sec [Average]
[info]   (min, avg, max) = (1367.434, 1387.668, 1406.107), stdev = 16.072
[info]   CI (99.9%): [1325.778, 1449.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   247217.592 ±(99.9%) 4240.512 B/op [Average]
[info]   (min, avg, max) = (245942.628, 247217.592, 248402.993), stdev = 1101.247
[info]   CI (99.9%): [242977.081, 251458.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1380.229 ±(99.9%) 551.636 MB/sec [Average]
[info]   (min, avg, max) = (1300.371, 1380.229, 1635.828), stdev = 143.258
[info]   CI (99.9%): [828.593, 1931.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   245983.316 ±(99.9%) 102065.231 B/op [Average]
[info]   (min, avg, max) = (228899.614, 245983.316, 292621.703), stdev = 26506.016
[info]   CI (99.9%): [143918.086, 348048.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.252 ±(99.9%) 1.139 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.252, 0.739), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   44.854 ±(99.9%) 203.672 B/op [Average]
[info]   (min, avg, max) = (3.782, 44.854, 132.264), stdev = 52.893
[info]   CI (99.9%): [≈ 0, 248.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 10.000), stdev = 1.517
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4624.812 ops/s
[info] # Warmup Iteration   2: 11828.759 ops/s
[info] # Warmup Iteration   3: 18620.300 ops/s
[info] Iteration   1: 22999.132 ops/s
[info]                  ·gc.alloc.rate:                   1228.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              84053.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1236.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84604.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 22277.601 ops/s
[info]                  ·gc.alloc.rate:                   1191.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              84193.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1237.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87436.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 301.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 22473.227 ops/s
[info]                  ·gc.alloc.rate:                   1423.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              99642.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1244.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87140.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 21557.599 ops/s
[info]                  ·gc.alloc.rate:                   1527.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              111513.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1559.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113825.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.641 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 265.747 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 20277.243 ops/s
[info]                  ·gc.alloc.rate:                   1488.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              115462.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1528.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118573.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.504 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 582.180 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   21916.960 ±(99.9%) 4051.604 ops/s [Average]
[info]   (min, avg, max) = (20277.243, 21916.960, 22999.132), stdev = 1052.189
[info]   CI (99.9%): [17865.357, 25968.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1371.954 ±(99.9%) 588.567 MB/sec [Average]
[info]   (min, avg, max) = (1191.890, 1371.954, 1527.710), stdev = 152.849
[info]   CI (99.9%): [783.386, 1960.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   98973.176 ±(99.9%) 56810.201 B/op [Average]
[info]   (min, avg, max) = (84053.686, 98973.176, 115462.463), stdev = 14753.429
[info]   CI (99.9%): [42162.975, 155783.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1361.379 ±(99.9%) 642.987 MB/sec [Average]
[info]   (min, avg, max) = (1236.512, 1361.379, 1559.379), stdev = 166.982
[info]   CI (99.9%): [718.393, 2004.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   98316.026 ±(99.9%) 63336.511 B/op [Average]
[info]   (min, avg, max) = (84604.489, 98316.026, 118573.566), stdev = 16448.291
[info]   CI (99.9%): [34979.515, 161652.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.398 ±(99.9%) 10.986 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.398, 7.504), stdev = 2.853
[info]   CI (99.9%): [≈ 0, 14.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   251.942 ±(99.9%) 850.873 B/op [Average]
[info]   (min, avg, max) = (0.021, 251.942, 582.180), stdev = 220.969
[info]   CI (99.9%): [≈ 0, 1102.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   124.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (20.000, 24.800, 33.000), stdev = 4.970
[info]   CI (99.9%): [124.000, 124.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3374.684 ops/s
[info] # Warmup Iteration   2: 11838.016 ops/s
[info] # Warmup Iteration   3: 16417.643 ops/s
[info] Iteration   1: 24773.174 ops/s
[info]                  ·gc.alloc.rate:                   1006.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              63907.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          927.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58947.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 24937.135 ops/s
[info]                  ·gc.alloc.rate:                   1037.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              65454.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          936.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59088.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 23734.675 ops/s
[info]                  ·gc.alloc.rate:                   1278.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              84737.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1259.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83457.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 24246.970 ops/s
[info]                  ·gc.alloc.rate:                   1371.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              88952.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1244.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80766.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 428.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   5: 24606.584 ops/s
[info]                  ·gc.alloc.rate:                   1042.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              66690.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1222.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78185.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.801 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 370.992 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24459.708 ±(99.9%) 1845.398 ops/s [Average]
[info]   (min, avg, max) = (23734.675, 24459.708, 24937.135), stdev = 479.244
[info]   CI (99.9%): [22614.309, 26305.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1147.102 ±(99.9%) 639.250 MB/sec [Average]
[info]   (min, avg, max) = (1006.055, 1147.102, 1371.092), stdev = 166.011
[info]   CI (99.9%): [507.853, 1786.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73948.670 ±(99.9%) 45852.256 B/op [Average]
[info]   (min, avg, max) = (63907.151, 73948.670, 88952.406), stdev = 11907.685
[info]   CI (99.9%): [28096.413, 119800.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1118.157 ±(99.9%) 655.862 MB/sec [Average]
[info]   (min, avg, max) = (927.982, 1118.157, 1259.019), stdev = 170.325
[info]   CI (99.9%): [462.295, 1774.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   72088.941 ±(99.9%) 46504.370 B/op [Average]
[info]   (min, avg, max) = (58947.753, 72088.941, 83457.639), stdev = 12077.037
[info]   CI (99.9%): [25584.571, 118593.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.735 ±(99.9%) 12.373 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.735, 6.604), stdev = 3.213
[info]   CI (99.9%): [≈ 0, 15.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   176.688 ±(99.9%) 797.154 B/op [Average]
[info]   (min, avg, max) = (1.314, 176.688, 428.451), stdev = 207.018
[info]   CI (99.9%): [≈ 0, 973.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   116.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 23.200, 29.000), stdev = 5.541
[info]   CI (99.9%): [116.000, 116.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 216746.095 ops/s
[info] # Warmup Iteration   2: 415110.263 ops/s
[info] # Warmup Iteration   3: 504511.259 ops/s
[info] Iteration   1: 516328.000 ops/s
[info]                  ·gc.alloc.rate:               1202.512 MB/sec
[info]                  ·gc.alloc.rate.norm:          3665.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3011.212 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 531268.287 ops/s
[info]                  ·gc.alloc.rate:                   1236.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              3661.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3907.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.398 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 537686.984 ops/s
[info]                  ·gc.alloc.rate:                   1252.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              3665.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3837.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 535863.148 ops/s
[info]                  ·gc.alloc.rate:                   1247.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              3663.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2877.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 521167.339 ops/s
[info]                  ·gc.alloc.rate:                   1280.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              3866.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3952.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   528462.751 ±(99.9%) 35926.663 ops/s [Average]
[info]   (min, avg, max) = (516328.000, 528462.751, 537686.984), stdev = 9330.040
[info]   CI (99.9%): [492536.088, 564389.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1243.797 ±(99.9%) 108.824 MB/sec [Average]
[info]   (min, avg, max) = (1202.512, 1243.797, 1280.378), stdev = 28.261
[info]   CI (99.9%): [1134.973, 1352.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3704.340 ±(99.9%) 348.266 B/op [Average]
[info]   (min, avg, max) = (3661.516, 3704.340, 3866.105), stdev = 90.444
[info]   CI (99.9%): [3356.074, 4052.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1181.424 ±(99.9%) 695.017 MB/sec [Average]
[info]   (min, avg, max) = (979.636, 1181.424, 1319.018), stdev = 180.494
[info]   CI (99.9%): [486.407, 1876.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3517.158 ±(99.9%) 2028.800 B/op [Average]
[info]   (min, avg, max) = (2877.021, 3517.158, 3952.951), stdev = 526.873
[info]   CI (99.9%): [1488.358, 5545.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.869 ±(99.9%) 5.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.869, 3.510), stdev = 1.512
[info]   CI (99.9%): [≈ 0, 6.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.568 ±(99.9%) 17.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.568, 10.398), stdev = 4.479
[info]   CI (99.9%): [≈ 0, 19.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 13.000), stdev = 3.912
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309228.987 ops/s
[info] # Warmup Iteration   2: 529758.425 ops/s
[info] # Warmup Iteration   3: 613043.474 ops/s
[info] Iteration   1: 612695.712 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 613058.927 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 607722.898 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 612563.299 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 613212.116 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   611850.591 ±(99.9%) 8942.671 ops/s [Average]
[info]   (min, avg, max) = (607722.898, 611850.591, 613212.116), stdev = 2322.383
[info]   CI (99.9%): [602907.920, 620793.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:51:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2360.969 ops/s
[info] # Warmup Iteration   2: 16576.681 ops/s
[info] # Warmup Iteration   3: 18463.263 ops/s
[info] Iteration   1: 23866.194 ops/s
[info]                  ·gc.alloc.rate:                   1081.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              71311.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1197.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78980.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 543.992 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 24740.387 ops/s
[info]                  ·gc.alloc.rate:                   1105.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              70306.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          911.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57967.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 24437.160 ops/s
[info]                  ·gc.alloc.rate:                   1439.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              92690.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1539.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99100.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.296 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 24356.671 ops/s
[info]                  ·gc.alloc.rate:                   1560.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              100782.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1558.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100639.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.825 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 634.550 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 24097.187 ops/s
[info]                  ·gc.alloc.rate:                   1155.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              75464.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1220.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79709.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1024.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24299.520 ±(99.9%) 1284.761 ops/s [Average]
[info]   (min, avg, max) = (23866.194, 24299.520, 24740.387), stdev = 333.648
[info]   CI (99.9%): [23014.759, 25584.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1268.628 ±(99.9%) 836.723 MB/sec [Average]
[info]   (min, avg, max) = (1081.504, 1268.628, 1560.516), stdev = 217.294
[info]   CI (99.9%): [431.905, 2105.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   82111.295 ±(99.9%) 53102.940 B/op [Average]
[info]   (min, avg, max) = (70306.620, 82111.295, 100782.986), stdev = 13790.665
[info]   CI (99.9%): [29008.355, 135214.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1285.544 ±(99.9%) 1037.849 MB/sec [Average]
[info]   (min, avg, max) = (911.633, 1285.544, 1558.290), stdev = 269.526
[info]   CI (99.9%): [247.695, 2323.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83279.215 ±(99.9%) 67348.008 B/op [Average]
[info]   (min, avg, max) = (57967.024, 83279.215, 100639.191), stdev = 17490.064
[info]   CI (99.9%): [15931.206, 150627.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   7.117 ±(99.9%) 24.388 MB/sec [Average]
[info]   (min, avg, max) = (0.052, 7.117, 15.684), stdev = 6.334
[info]   CI (99.9%): [≈ 0, 31.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   464.082 ±(99.9%) 1592.205 B/op [Average]
[info]   (min, avg, max) = (3.314, 464.082, 1024.256), stdev = 413.491
[info]   CI (99.9%): [≈ 0, 2056.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 19.200, 27.000), stdev = 6.340
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1279.275 ops/s
[info] # Warmup Iteration   2: 5131.645 ops/s
[info] # Warmup Iteration   3: 8177.892 ops/s
[info] Iteration   1: 13811.252 ops/s
[info]                  ·gc.alloc.rate:                   1318.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              150284.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1265.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144136.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.691 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 13516.208 ops/s
[info]                  ·gc.alloc.rate:                   1305.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              151967.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145885.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.424 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 13176.282 ops/s
[info]                  ·gc.alloc.rate:                   1267.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              151353.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149609.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.825 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.930 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 13390.542 ops/s
[info]                  ·gc.alloc.rate:                   1377.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              161904.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1567.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184170.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 942.509 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 13325.851 ops/s
[info]                  ·gc.alloc.rate:                   1286.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              151892.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1241.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146638.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.458 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13444.027 ±(99.9%) 920.492 ops/s [Average]
[info]   (min, avg, max) = (13176.282, 13444.027, 13811.252), stdev = 239.049
[info]   CI (99.9%): [12523.535, 14364.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1311.124 ±(99.9%) 161.483 MB/sec [Average]
[info]   (min, avg, max) = (1267.608, 1311.124, 1377.638), stdev = 41.937
[info]   CI (99.9%): [1149.641, 1472.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   153480.448 ±(99.9%) 18316.185 B/op [Average]
[info]   (min, avg, max) = (150284.963, 153480.448, 161904.037), stdev = 4756.655
[info]   CI (99.9%): [135164.263, 171796.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1315.957 ±(99.9%) 541.532 MB/sec [Average]
[info]   (min, avg, max) = (1241.733, 1315.957, 1567.100), stdev = 140.634
[info]   CI (99.9%): [774.425, 1857.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   154087.949 ±(99.9%) 65200.076 B/op [Average]
[info]   (min, avg, max) = (144136.506, 154087.949, 184170.154), stdev = 16932.253
[info]   CI (99.9%): [88887.873, 219288.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.121 ±(99.9%) 13.012 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.121, 8.020), stdev = 3.379
[info]   CI (99.9%): [≈ 0, 15.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   249.402 ±(99.9%) 1529.987 B/op [Average]
[info]   (min, avg, max) = (2.424, 249.402, 942.509), stdev = 397.333
[info]   CI (99.9%): [≈ 0, 1779.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   104.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 20.800, 27.000), stdev = 8.871
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 994.509 ops/s
[info] # Warmup Iteration   2: 6596.637 ops/s
[info] # Warmup Iteration   3: 12664.182 ops/s
[info] Iteration   1: 13930.951 ops/s
[info]                  ·gc.alloc.rate:                   1239.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              139982.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145464.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.352 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 13944.027 ops/s
[info]                  ·gc.alloc.rate:                   1222.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              137946.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109090.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 13666.113 ops/s
[info]                  ·gc.alloc.rate:                   1204.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              138681.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149270.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.397 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 13809.450 ops/s
[info]                  ·gc.alloc.rate:                   1212.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              138159.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148939.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.817 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13671.273 ops/s
[info]                  ·gc.alloc.rate:                   1206.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              138842.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113675.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13804.363 ±(99.9%) 517.988 ops/s [Average]
[info]   (min, avg, max) = (13666.113, 13804.363, 13944.027), stdev = 134.520
[info]   CI (99.9%): [13286.375, 14322.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1216.887 ±(99.9%) 55.044 MB/sec [Average]
[info]   (min, avg, max) = (1204.350, 1216.887, 1239.178), stdev = 14.295
[info]   CI (99.9%): [1161.843, 1271.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   138722.490 ±(99.9%) 3057.174 B/op [Average]
[info]   (min, avg, max) = (137946.988, 138722.490, 139982.200), stdev = 793.938
[info]   CI (99.9%): [135665.317, 141779.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1169.038 ±(99.9%) 675.816 MB/sec [Average]
[info]   (min, avg, max) = (966.613, 1169.038, 1306.981), stdev = 175.507
[info]   CI (99.9%): [493.222, 1844.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   133288.116 ±(99.9%) 77465.248 B/op [Average]
[info]   (min, avg, max) = (109090.398, 133288.116, 149270.585), stdev = 20117.479
[info]   CI (99.9%): [55822.869, 210753.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.702 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.112, 0.437), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.802 ±(99.9%) 80.057 B/op [Average]
[info]   (min, avg, max) = (2.352, 12.802, 49.817), stdev = 20.791
[info]   CI (99.9%): [≈ 0, 92.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95724.332 ops/s
[info] # Warmup Iteration   2: 205658.489 ops/s
[info] # Warmup Iteration   3: 230450.528 ops/s
[info] Iteration   1: 330974.724 ops/s
[info]                  ·gc.alloc.rate:                   1982.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              9414.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1934.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9188.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.926 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 341985.334 ops/s
[info]                  ·gc.alloc.rate:                   2028.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              9330.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8917.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.235 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 338632.387 ops/s
[info]                  ·gc.alloc.rate:                   2010.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              9340.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1924.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8942.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 343693.303 ops/s
[info]                  ·gc.alloc.rate:                   2065.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              9457.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8885.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 344690.997 ops/s
[info]                  ·gc.alloc.rate:                   2072.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              9460.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8985.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   339995.349 ±(99.9%) 21345.331 ops/s [Average]
[info]   (min, avg, max) = (330974.724, 339995.349, 344690.997), stdev = 5543.315
[info]   CI (99.9%): [318650.018, 361340.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2031.660 ±(99.9%) 145.413 MB/sec [Average]
[info]   (min, avg, max) = (1982.364, 2031.660, 2072.340), stdev = 37.763
[info]   CI (99.9%): [1886.247, 2177.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9400.840 ±(99.9%) 239.897 B/op [Average]
[info]   (min, avg, max) = (9330.779, 9400.840, 9460.937), stdev = 62.300
[info]   CI (99.9%): [9160.943, 9640.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1941.262 ±(99.9%) 62.495 MB/sec [Average]
[info]   (min, avg, max) = (1924.469, 1941.262, 1968.104), stdev = 16.230
[info]   CI (99.9%): [1878.767, 2003.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8984.026 ±(99.9%) 462.619 B/op [Average]
[info]   (min, avg, max) = (8885.927, 8984.026, 9188.924), stdev = 120.141
[info]   CI (99.9%): [8521.407, 9446.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.336 ±(99.9%) 8.693 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.336, 5.268), stdev = 2.257
[info]   CI (99.9%): [≈ 0, 10.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.186 ±(99.9%) 39.988 B/op [Average]
[info]   (min, avg, max) = (0.190, 6.186, 24.235), stdev = 10.385
[info]   CI (99.9%): [≈ 0, 46.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.600, 29.000), stdev = 8.989
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 448.612 ops/s
[info] # Warmup Iteration   2: 4865.231 ops/s
[info] # Warmup Iteration   3: 7972.730 ops/s
[info] Iteration   1: 12925.573 ops/s
[info]                  ·gc.alloc.rate:                   1597.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              194441.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198904.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.682 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 13317.153 ops/s
[info]                  ·gc.alloc.rate:                   1549.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              183022.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154873.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 225.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 12987.505 ops/s
[info]                  ·gc.alloc.rate:                   1513.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              183402.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198560.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75.671 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 13632.806 ops/s
[info]                  ·gc.alloc.rate:                   1572.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              181565.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151807.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.629 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 13541.692 ops/s
[info]                  ·gc.alloc.rate:                   1586.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              184338.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192040.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.839 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   13280.946 ±(99.9%) 1226.028 ops/s [Average]
[info]   (min, avg, max) = (12925.573, 13280.946, 13632.806), stdev = 318.396
[info]   CI (99.9%): [12054.918, 14506.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1563.781 ±(99.9%) 128.050 MB/sec [Average]
[info]   (min, avg, max) = (1513.615, 1563.781, 1597.056), stdev = 33.254
[info]   CI (99.9%): [1435.731, 1691.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   185354.198 ±(99.9%) 19935.236 B/op [Average]
[info]   (min, avg, max) = (181565.757, 185354.198, 194441.578), stdev = 5177.118
[info]   CI (99.9%): [165418.962, 205289.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1510.174 ±(99.9%) 693.645 MB/sec [Average]
[info]   (min, avg, max) = (1310.884, 1510.174, 1652.457), stdev = 180.137
[info]   CI (99.9%): [816.529, 2203.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   179237.109 ±(99.9%) 91732.702 B/op [Average]
[info]   (min, avg, max) = (151807.042, 179237.109, 198904.218), stdev = 23822.691
[info]   CI (99.9%): [87504.407, 270969.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.806 ±(99.9%) 2.998 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.806, 1.905), stdev = 0.779
[info]   CI (99.9%): [≈ 0, 3.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   96.388 ±(99.9%) 356.933 B/op [Average]
[info]   (min, avg, max) = (4.839, 96.388, 225.118), stdev = 92.694
[info]   CI (99.9%): [≈ 0, 453.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 17.000), stdev = 4.147
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:50:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6695.633 ops/s
[info] # Warmup Iteration   2: 22555.887 ops/s
[info] # Warmup Iteration   3: 30045.550 ops/s
[info] Iteration   1: 35489.521 ops/s
[info]                  ·gc.alloc.rate:               1424.256 MB/sec
[info]                  ·gc.alloc.rate.norm:          63141.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1589.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70448.569 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   2: 33470.747 ops/s
[info]                  ·gc.alloc.rate:                   1780.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              83670.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1598.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75124.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.511 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.010 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 32944.280 ops/s
[info]                  ·gc.alloc.rate:                   1682.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              80361.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1861.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88885.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.543 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 312.453 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   4: 32069.737 ops/s
[info]                  ·gc.alloc.rate:                   1487.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              72985.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1227.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60203.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.448 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   5: 34596.755 ops/s
[info]                  ·gc.alloc.rate:                   1376.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              62620.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1481.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67363.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   33714.208 ±(99.9%) 5197.289 ops/s [Average]
[info]   (min, avg, max) = (32069.737, 33714.208, 35489.521), stdev = 1349.719
[info]   CI (99.9%): [28516.919, 38911.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1550.350 ±(99.9%) 667.918 MB/sec [Average]
[info]   (min, avg, max) = (1376.764, 1550.350, 1780.151), stdev = 173.456
[info]   CI (99.9%): [882.431, 2218.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   72555.959 ±(99.9%) 37133.140 B/op [Average]
[info]   (min, avg, max) = (62620.988, 72555.959, 83670.014), stdev = 9643.358
[info]   CI (99.9%): [35422.820, 109689.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1551.395 ±(99.9%) 881.997 MB/sec [Average]
[info]   (min, avg, max) = (1227.100, 1551.395, 1861.423), stdev = 229.052
[info]   CI (99.9%): [669.398, 2433.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   72404.910 ±(99.9%) 41163.903 B/op [Average]
[info]   (min, avg, max) = (60203.052, 72404.910, 88885.027), stdev = 10690.135
[info]   CI (99.9%): [31241.006, 113568.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.229 ±(99.9%) 10.511 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.229, 6.543), stdev = 2.730
[info]   CI (99.9%): [≈ 0, 12.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   106.886 ±(99.9%) 504.754 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 106.886, 312.453), stdev = 131.083
[info]   CI (99.9%): [≈ 0, 611.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   138.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 27.600, 38.000), stdev = 10.761
[info]   CI (99.9%): [138.000, 138.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19783.095 ops/s
[info] # Warmup Iteration   2: 60616.947 ops/s
[info] # Warmup Iteration   3: 109471.007 ops/s
[info] Iteration   1: 130940.894 ops/s
[info]                  ·gc.alloc.rate:                   2458.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              29544.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2282.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27433.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 129317.128 ops/s
[info]                  ·gc.alloc.rate:                   2415.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              29394.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31936.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.502 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 130449.508 ops/s
[info]                  ·gc.alloc.rate:               2452.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          29582.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2304.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27807.505 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 126618.350 ops/s
[info]                  ·gc.alloc.rate:                   2403.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              29860.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2326.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28903.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.035 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 125078.534 ops/s
[info]                  ·gc.alloc.rate:                   2383.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              29983.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29520.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.310 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   128480.883 ±(99.9%) 9755.029 ops/s [Average]
[info]   (min, avg, max) = (125078.534, 128480.883, 130940.894), stdev = 2533.350
[info]   CI (99.9%): [118725.853, 138235.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2422.365 ±(99.9%) 123.818 MB/sec [Average]
[info]   (min, avg, max) = (2383.064, 2422.365, 2458.247), stdev = 32.155
[info]   CI (99.9%): [2298.547, 2546.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   29673.049 ±(99.9%) 930.717 B/op [Average]
[info]   (min, avg, max) = (29394.918, 29673.049, 29983.583), stdev = 241.704
[info]   CI (99.9%): [28742.333, 30603.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2376.825 ±(99.9%) 540.438 MB/sec [Average]
[info]   (min, avg, max) = (2282.627, 2376.825, 2624.286), stdev = 140.350
[info]   CI (99.9%): [1836.387, 2917.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29120.259 ±(99.9%) 6863.071 B/op [Average]
[info]   (min, avg, max) = (27433.558, 29120.259, 31936.551), stdev = 1782.318
[info]   CI (99.9%): [22257.188, 35983.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 3.664 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 2.178), stdev = 0.952
[info]   CI (99.9%): [≈ 0, 4.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.819 ±(99.9%) 44.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.819, 26.502), stdev = 11.575
[info]   CI (99.9%): [≈ 0, 50.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 15.000), stdev = 2.588
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 418176.308 ops/s
[info] # Warmup Iteration   2: 701797.175 ops/s
[info] # Warmup Iteration   3: 852079.998 ops/s
[info] Iteration   1: 869853.958 ops/s
[info]                  ·gc.alloc.rate:                   1234.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              2233.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2386.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 869874.716 ops/s
[info]                  ·gc.alloc.rate:                   1215.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1793.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.692 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 873415.909 ops/s
[info]                  ·gc.alloc.rate:                   1237.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              2229.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2367.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.763 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 852805.284 ops/s
[info]                  ·gc.alloc.rate:                   1243.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              2294.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2415.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 868259.422 ops/s
[info]                  ·gc.alloc.rate:                   1219.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              2209.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1784.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   866841.858 ±(99.9%) 31076.154 ops/s [Average]
[info]   (min, avg, max) = (852805.284, 866841.858, 873415.909), stdev = 8070.378
[info]   CI (99.9%): [835765.704, 897918.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1230.203 ±(99.9%) 46.531 MB/sec [Average]
[info]   (min, avg, max) = (1215.719, 1230.203, 1243.643), stdev = 12.084
[info]   CI (99.9%): [1183.672, 1276.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2233.391 ±(99.9%) 143.162 B/op [Average]
[info]   (min, avg, max) = (2199.302, 2233.391, 2294.938), stdev = 37.179
[info]   CI (99.9%): [2090.229, 2376.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1183.659 ±(99.9%) 688.231 MB/sec [Average]
[info]   (min, avg, max) = (984.533, 1183.659, 1319.386), stdev = 178.731
[info]   CI (99.9%): [495.427, 1871.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2149.410 ±(99.9%) 1269.793 B/op [Average]
[info]   (min, avg, max) = (1784.019, 2149.410, 2415.595), stdev = 329.761
[info]   CI (99.9%): [879.617, 3419.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.838 ±(99.9%) 5.219 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.838, 3.146), stdev = 1.355
[info]   CI (99.9%): [≈ 0, 6.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.515 ±(99.9%) 9.440 B/op [Average]
[info]   (min, avg, max) = (0.038, 1.515, 5.692), stdev = 2.451
[info]   CI (99.9%): [≈ 0, 10.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 15.000), stdev = 4.301
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 524781.545 ops/s
[info] # Warmup Iteration   2: 793384.261 ops/s
[info] # Warmup Iteration   3: 974787.727 ops/s
[info] Iteration   1: 974214.124 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 974650.408 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 973262.896 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 972774.673 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 974743.873 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   973929.195 ±(99.9%) 3357.966 ops/s [Average]
[info]   (min, avg, max) = (972774.673, 973929.195, 974743.873), stdev = 872.053
[info]   CI (99.9%): [970571.229, 977287.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12531.719 ops/s
[info] # Warmup Iteration   2: 77118.234 ops/s
[info] # Warmup Iteration   3: 97197.470 ops/s
[info] Iteration   1: 120797.016 ops/s
[info]                  ·gc.alloc.rate:                   2712.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              35330.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2593.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33782.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.383 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 122653.239 ops/s
[info]                  ·gc.alloc.rate:                   2742.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              35183.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2610.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33487.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.427 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 118516.788 ops/s
[info]                  ·gc.alloc.rate:                   2666.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              35405.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2628.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34893.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 124062.934 ops/s
[info]                  ·gc.alloc.rate:                   2814.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              35698.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2660.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33747.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 121846.735 ops/s
[info]                  ·gc.alloc.rate:                   2767.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              35740.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34699.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   121575.342 ±(99.9%) 8027.502 ops/s [Average]
[info]   (min, avg, max) = (118516.788, 121575.342, 124062.934), stdev = 2084.717
[info]   CI (99.9%): [113547.841, 129602.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2740.489 ±(99.9%) 214.731 MB/sec [Average]
[info]   (min, avg, max) = (2666.562, 2740.489, 2814.197), stdev = 55.765
[info]   CI (99.9%): [2525.758, 2955.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35471.676 ±(99.9%) 925.143 B/op [Average]
[info]   (min, avg, max) = (35183.862, 35471.676, 35740.552), stdev = 240.257
[info]   CI (99.9%): [34546.532, 36396.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2635.707 ±(99.9%) 146.076 MB/sec [Average]
[info]   (min, avg, max) = (2593.163, 2635.707, 2686.868), stdev = 37.935
[info]   CI (99.9%): [2489.632, 2781.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34122.273 ±(99.9%) 2425.819 B/op [Average]
[info]   (min, avg, max) = (33487.832, 34122.273, 34893.861), stdev = 629.978
[info]   CI (99.9%): [31696.454, 36548.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 4.534 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.881, 2.371), stdev = 1.177
[info]   CI (99.9%): [≈ 0, 5.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   11.379 ±(99.9%) 58.497 B/op [Average]
[info]   (min, avg, max) = (0.264, 11.379, 30.427), stdev = 15.192
[info]   CI (99.9%): [≈ 0, 69.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 14.800, 23.000), stdev = 4.817
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3533.991 ops/s
[info] # Warmup Iteration   2: 9338.820 ops/s
[info] # Warmup Iteration   3: 16771.596 ops/s
[info] Iteration   1: 17665.153 ops/s
[info]                  ·gc.alloc.rate:                   893.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              79587.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          937.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83499.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.418 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 17079.308 ops/s
[info]                  ·gc.alloc.rate:                   1316.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              121307.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1242.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114537.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 197.421 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 16530.648 ops/s
[info]                  ·gc.alloc.rate:                   836.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              79589.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          927.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88279.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 17206.559 ops/s
[info]                  ·gc.alloc.rate:                   866.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              79281.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          622.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56907.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 16028.949 ops/s
[info]                  ·gc.alloc.rate:                   1090.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              107092.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1240.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121751.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.839 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 671.335 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   16902.123 ±(99.9%) 2440.468 ops/s [Average]
[info]   (min, avg, max) = (16028.949, 16902.123, 17665.153), stdev = 633.782
[info]   CI (99.9%): [14461.655, 19342.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   1000.741 ±(99.9%) 780.509 MB/sec [Average]
[info]   (min, avg, max) = (836.108, 1000.741, 1316.418), stdev = 202.696
[info]   CI (99.9%): [220.232, 1781.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   93371.817 ±(99.9%) 75729.720 B/op [Average]
[info]   (min, avg, max) = (79281.726, 93371.817, 121307.352), stdev = 19666.768
[info]   CI (99.9%): [17642.097, 169101.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   994.027 ±(99.9%) 997.664 MB/sec [Average]
[info]   (min, avg, max) = (622.197, 994.027, 1242.951), stdev = 259.090
[info]   CI (99.9%): [≈ 0, 1991.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   92995.027 ±(99.9%) 100149.568 B/op [Average]
[info]   (min, avg, max) = (56907.030, 92995.027, 121751.760), stdev = 26008.525
[info]   CI (99.9%): [≈ 0, 193144.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.692 ±(99.9%) 9.657 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.692, 6.839), stdev = 2.508
[info]   CI (99.9%): [≈ 0, 12.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   256.948 ±(99.9%) 954.229 B/op [Average]
[info]   (min, avg, max) = (7.418, 256.948, 671.335), stdev = 247.810
[info]   CI (99.9%): [≈ 0, 1211.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 19.200, 28.000), stdev = 5.975
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3848.581 ops/s
[info] # Warmup Iteration   2: 16563.096 ops/s
[info] # Warmup Iteration   3: 18551.915 ops/s
[info] Iteration   1: 18928.807 ops/s
[info]                  ·gc.alloc.rate:               792.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          65847.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53943.539 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 16856.571 ops/s
[info]                  ·gc.alloc.rate:                   1536.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              143434.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150880.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.887 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         46.000 ms
[info] Iteration   3: 18054.144 ops/s
[info]                  ·gc.alloc.rate:                        726.670 MB/sec
[info]                  ·gc.alloc.rate.norm:                   66077.769 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.022 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.003 B/op
[info]                  ·gc.churn.Metaspace:                   0.061 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              5.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:               688.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          62571.196 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  25.669 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             2334.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           10.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      994.515 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              68.000 ms
[info] Iteration   4: 17845.580 ops/s
[info]                  ·gc.alloc.rate:                   1174.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              103536.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1191.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105033.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.836 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 17170.942 ops/s
[info]                  ·gc.alloc.rate:                   1161.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              106368.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1169.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107129.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1114.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   17771.209 ±(99.9%) 3117.891 ops/s [Average]
[info]   (min, avg, max) = (16856.571, 17771.209, 18928.807), stdev = 809.706
[info]   CI (99.9%): [14653.317, 20889.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1078.123 ±(99.9%) 1264.758 MB/sec [Average]
[info]   (min, avg, max) = (726.670, 1078.123, 1536.370), stdev = 328.454
[info]   CI (99.9%): [≈ 0, 2342.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   97052.674 ±(99.9%) 124972.514 B/op [Average]
[info]   (min, avg, max) = (65847.040, 97052.674, 143434.224), stdev = 32454.965
[info]   CI (99.9%): [≈ 0, 222025.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.038 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.022), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.401 ±(99.9%) 3.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 2.003), stdev = 0.896
[info]   CI (99.9%): [≈ 0, 3.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.061), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.102 ±(99.9%) 9.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.102, 5.512), stdev = 2.465
[info]   CI (99.9%): [≈ 0, 10.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1062.786 ±(99.9%) 1547.269 MB/sec [Average]
[info]   (min, avg, max) = (648.845, 1062.786, 1616.129), stdev = 401.821
[info]   CI (99.9%): [≈ 0, 2610.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   95911.618 ±(99.9%) 150415.920 B/op [Average]
[info]   (min, avg, max) = (53943.539, 95911.618, 150880.509), stdev = 39062.537
[info]   CI (99.9%): [≈ 0, 246327.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   5.134 ±(99.9%) 44.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 5.134, 25.669), stdev = 11.480
[info]   CI (99.9%): [≈ 0, 49.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   466.832 ±(99.9%) 4019.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 466.832, 2334.159), stdev = 1043.868
[info]   CI (99.9%): [≈ 0, 4486.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.632 ±(99.9%) 24.372 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.632, 12.162), stdev = 6.329
[info]   CI (99.9%): [≈ 0, 29.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   422.876 ±(99.9%) 2225.616 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 422.876, 1114.141), stdev = 577.985
[info]   CI (99.9%): [≈ 0, 2648.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   167.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 33.400, 68.000), stdev = 24.765
[info]   CI (99.9%): [167.000, 167.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64517.497 ops/s
[info] # Warmup Iteration   2: 113581.491 ops/s
[info] # Warmup Iteration   3: 148762.602 ops/s
[info] Iteration   1: 157116.975 ops/s
[info]                  ·gc.alloc.rate:                   406.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              4067.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6445.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.893 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 166045.430 ops/s
[info]                  ·gc.alloc.rate:               425.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          4030.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3043.322 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 165503.676 ops/s
[info]                  ·gc.alloc.rate:                   427.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              4060.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3053.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 165912.688 ops/s
[info]                  ·gc.alloc.rate:               425.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          4040.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3048.921 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 162688.085 ops/s
[info]                  ·gc.alloc.rate:               429.743 MB/sec
[info]                  ·gc.alloc.rate.norm:          4157.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6221.923 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   163453.371 ±(99.9%) 14625.648 ops/s [Average]
[info]   (min, avg, max) = (157116.975, 163453.371, 166045.430), stdev = 3798.234
[info]   CI (99.9%): [148827.723, 178079.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   422.814 ±(99.9%) 36.526 MB/sec [Average]
[info]   (min, avg, max) = (406.128, 422.814, 429.743), stdev = 9.486
[info]   CI (99.9%): [386.288, 459.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4071.157 ±(99.9%) 193.888 B/op [Average]
[info]   (min, avg, max) = (4030.072, 4071.157, 4157.051), stdev = 50.352
[info]   CI (99.9%): [3877.269, 4265.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   450.075 ±(99.9%) 679.499 MB/sec [Average]
[info]   (min, avg, max) = (321.094, 450.075, 643.560), stdev = 176.464
[info]   CI (99.9%): [≈ 0, 1129.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4362.613 ±(99.9%) 6935.920 B/op [Average]
[info]   (min, avg, max) = (3043.322, 4362.613, 6445.795), stdev = 1801.237
[info]   CI (99.9%): [≈ 0, 11298.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 7.013 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.825, 4.083), stdev = 1.821
[info]   CI (99.9%): [≈ 0, 7.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.258 ±(99.9%) 70.253 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.258, 40.893), stdev = 18.244
[info]   CI (99.9%): [≈ 0, 78.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.871
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 957.676 ops/s
[info] # Warmup Iteration   2: 8370.849 ops/s
[info] # Warmup Iteration   3: 16637.403 ops/s
[info] Iteration   1: 17312.104 ops/s
[info]                  ·gc.alloc.rate:                   1166.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              106062.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117053.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 17431.582 ops/s
[info]                  ·gc.alloc.rate:                   1165.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              105250.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87271.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 16518.672 ops/s
[info]                  ·gc.alloc.rate:                   1352.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              128803.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154062.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 405.824 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 17017.489 ops/s
[info]                  ·gc.alloc.rate:                   1162.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              107488.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89598.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.987 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 276.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 16100.301 ops/s
[info]                  ·gc.alloc.rate:               1281.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          125213.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1291.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 126188.542 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   16876.029 ±(99.9%) 2151.085 ops/s [Average]
[info]   (min, avg, max) = (16100.301, 16876.029, 17431.582), stdev = 558.630
[info]   CI (99.9%): [14724.944, 19027.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1225.702 ±(99.9%) 333.956 MB/sec [Average]
[info]   (min, avg, max) = (1162.602, 1225.702, 1352.066), stdev = 86.727
[info]   CI (99.9%): [891.746, 1559.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   114563.432 ±(99.9%) 44125.854 B/op [Average]
[info]   (min, avg, max) = (105250.276, 114563.432, 128803.492), stdev = 11459.344
[info]   CI (99.9%): [70437.577, 158689.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1226.381 ±(99.9%) 1044.551 MB/sec [Average]
[info]   (min, avg, max) = (966.681, 1226.381, 1617.212), stdev = 271.267
[info]   CI (99.9%): [181.830, 2270.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   114834.877 ±(99.9%) 106664.177 B/op [Average]
[info]   (min, avg, max) = (87271.067, 114834.877, 154062.356), stdev = 27700.348
[info]   CI (99.9%): [8170.700, 221499.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.464 ±(99.9%) 7.787 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.464, 4.260), stdev = 2.022
[info]   CI (99.9%): [≈ 0, 9.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   137.692 ±(99.9%) 736.102 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 137.692, 405.824), stdev = 191.163
[info]   CI (99.9%): [≈ 0, 873.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 15.000), stdev = 3.768
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:48:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10516.918 ops/s
[info] # Warmup Iteration   2: 45551.678 ops/s
[info] # Warmup Iteration   3: 59950.939 ops/s
[info] Iteration   1: 62357.950 ops/s
[info]                  ·gc.alloc.rate:                   1896.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              47856.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49595.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.654 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.666 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 65447.558 ops/s
[info]                  ·gc.alloc.rate:                   1884.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              45309.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46903.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 65449.996 ops/s
[info]                  ·gc.alloc.rate:                   1861.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              44748.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39202.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.003 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 64688.855 ops/s
[info]                  ·gc.alloc.rate:                   1863.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              45328.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48035.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.013 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 65548.615 ops/s
[info]                  ·gc.alloc.rate:                   1894.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              45482.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39862.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   64698.595 ±(99.9%) 5211.472 ops/s [Average]
[info]   (min, avg, max) = (62357.950, 64698.595, 65548.615), stdev = 1353.403
[info]   CI (99.9%): [59487.123, 69910.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1879.964 ±(99.9%) 64.929 MB/sec [Average]
[info]   (min, avg, max) = (1861.067, 1879.964, 1896.500), stdev = 16.862
[info]   CI (99.9%): [1815.035, 1944.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   45745.147 ±(99.9%) 4670.086 B/op [Average]
[info]   (min, avg, max) = (44748.356, 45745.147, 47856.513), stdev = 1212.807
[info]   CI (99.9%): [41075.061, 50415.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1836.314 ±(99.9%) 673.160 MB/sec [Average]
[info]   (min, avg, max) = (1630.416, 1836.314, 1974.613), stdev = 174.818
[info]   CI (99.9%): [1163.154, 2509.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44719.978 ±(99.9%) 18624.430 B/op [Average]
[info]   (min, avg, max) = (39202.471, 44719.978, 49595.947), stdev = 4836.705
[info]   CI (99.9%): [26095.548, 63344.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.202 ±(99.9%) 9.586 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.202, 5.654), stdev = 2.490
[info]   CI (99.9%): [≈ 0, 10.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   30.237 ±(99.9%) 242.073 B/op [Average]
[info]   (min, avg, max) = (0.500, 30.237, 142.666), stdev = 62.866
[info]   CI (99.9%): [≈ 0, 272.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 19.000), stdev = 5.020
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17956.747 ops/s
[info] # Warmup Iteration   2: 62663.144 ops/s
[info] # Warmup Iteration   3: 87659.907 ops/s
[info] Iteration   1: 96330.782 ops/s
[info]                  ·gc.alloc.rate:                   1826.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              29843.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26619.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.888 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 97662.329 ops/s
[info]                  ·gc.alloc.rate:                   1870.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              30142.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31747.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.975 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 101908.808 ops/s
[info]                  ·gc.alloc.rate:                   1929.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              29794.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30661.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 101416.310 ops/s
[info]                  ·gc.alloc.rate:                   1925.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              29872.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25874.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 100866.208 ops/s
[info]                  ·gc.alloc.rate:                   1949.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              30409.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31419.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   99636.887 ±(99.9%) 9562.555 ops/s [Average]
[info]   (min, avg, max) = (96330.782, 99636.887, 101908.808), stdev = 2483.365
[info]   CI (99.9%): [90074.333, 109199.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1900.249 ±(99.9%) 193.540 MB/sec [Average]
[info]   (min, avg, max) = (1826.778, 1900.249, 1949.022), stdev = 50.262
[info]   CI (99.9%): [1706.709, 2093.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   30012.341 ±(99.9%) 1001.596 B/op [Average]
[info]   (min, avg, max) = (29794.378, 30012.341, 30409.631), stdev = 260.111
[info]   CI (99.9%): [29010.745, 31013.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1853.347 ±(99.9%) 724.552 MB/sec [Average]
[info]   (min, avg, max) = (1629.439, 1853.347, 2013.744), stdev = 188.164
[info]   CI (99.9%): [1128.795, 2577.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29264.316 ±(99.9%) 10762.963 B/op [Average]
[info]   (min, avg, max) = (25874.302, 29264.316, 31747.543), stdev = 2795.107
[info]   CI (99.9%): [18501.353, 40027.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.209 ±(99.9%) 1.551 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.209, 0.930), stdev = 0.403
[info]   CI (99.9%): [≈ 0, 1.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.366 ±(99.9%) 25.007 B/op [Average]
[info]   (min, avg, max) = (0.321, 3.366, 14.975), stdev = 6.494
[info]   CI (99.9%): [≈ 0, 28.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 9.000), stdev = 0.894
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151421.711 ops/s
[info] # Warmup Iteration   2: 269489.268 ops/s
[info] # Warmup Iteration   3: 347005.705 ops/s
[info] Iteration   1: 329913.003 ops/s
[info]                  ·gc.alloc.rate:                   650.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              3105.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3139.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 331524.289 ops/s
[info]                  ·gc.alloc.rate:                   654.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              3107.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3130.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 345575.993 ops/s
[info]                  ·gc.alloc.rate:               684.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          3117.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3003.316 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 348500.720 ops/s
[info]                  ·gc.alloc.rate:                   692.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              3128.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2984.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 349915.743 ops/s
[info]                  ·gc.alloc.rate:                   686.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              3087.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2972.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.364 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   341085.950 ±(99.9%) 37002.496 ops/s [Average]
[info]   (min, avg, max) = (329913.003, 341085.950, 349915.743), stdev = 9609.431
[info]   CI (99.9%): [304083.454, 378088.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   673.923 ±(99.9%) 75.239 MB/sec [Average]
[info]   (min, avg, max) = (650.957, 673.923, 692.781), stdev = 19.539
[info]   CI (99.9%): [598.684, 749.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3109.277 ±(99.9%) 57.852 B/op [Average]
[info]   (min, avg, max) = (3087.962, 3109.277, 3128.335), stdev = 15.024
[info]   CI (99.9%): [3051.425, 3167.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   659.797 ±(99.9%) 4.405 MB/sec [Average]
[info]   (min, avg, max) = (658.178, 659.797, 660.913), stdev = 1.144
[info]   CI (99.9%): [655.392, 664.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3045.982 ±(99.9%) 316.141 B/op [Average]
[info]   (min, avg, max) = (2972.210, 3045.982, 3139.497), stdev = 82.101
[info]   CI (99.9%): [2729.841, 3362.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.618 ±(99.9%) 5.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.618, 2.972), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.783 ±(99.9%) 22.779 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.783, 13.364), stdev = 5.916
[info]   CI (99.9%): [≈ 0, 25.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 163609.280 ops/s
[info] # Warmup Iteration   2: 332480.401 ops/s
[info] # Warmup Iteration   3: 383949.427 ops/s
[info] Iteration   1: 383531.704 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 383802.217 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 383177.699 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 380249.417 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 383639.231 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   382880.054 ±(99.9%) 5730.939 ops/s [Average]
[info]   (min, avg, max) = (380249.417, 382880.054, 383802.217), stdev = 1488.307
[info]   CI (99.9%): [377149.115, 388610.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16460.632 ops/s
[info] # Warmup Iteration   2: 64449.170 ops/s
[info] # Warmup Iteration   3: 74140.155 ops/s
[info] Iteration   1: 88268.011 ops/s
[info]                  ·gc.alloc.rate:                   2162.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              38550.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2277.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40596.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.648 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 95391.020 ops/s
[info]                  ·gc.alloc.rate:                   1984.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              32733.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31993.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.778 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 95809.663 ops/s
[info]                  ·gc.alloc.rate:                   1973.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              32412.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26714.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 94841.560 ops/s
[info]                  ·gc.alloc.rate:                   1956.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              32450.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32728.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.691 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 94796.704 ops/s
[info]                  ·gc.alloc.rate:                   1993.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              33091.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33110.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.346 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   93821.392 ±(99.9%) 12061.949 ops/s [Average]
[info]   (min, avg, max) = (88268.011, 93821.392, 95809.663), stdev = 3132.450
[info]   CI (99.9%): [81759.442, 105883.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2013.971 ±(99.9%) 323.799 MB/sec [Average]
[info]   (min, avg, max) = (1956.181, 2013.971, 2162.297), stdev = 84.089
[info]   CI (99.9%): [1690.173, 2337.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33847.835 ±(99.9%) 10177.269 B/op [Average]
[info]   (min, avg, max) = (32412.342, 33847.835, 38550.679), stdev = 2643.004
[info]   CI (99.9%): [23670.566, 44025.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1962.151 ±(99.9%) 889.723 MB/sec [Average]
[info]   (min, avg, max) = (1626.476, 1962.151, 2277.028), stdev = 231.058
[info]   CI (99.9%): [1072.428, 2851.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   33028.826 ±(99.9%) 19088.654 B/op [Average]
[info]   (min, avg, max) = (26714.998, 33028.826, 40596.169), stdev = 4957.263
[info]   CI (99.9%): [13940.172, 52117.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.121 ±(99.9%) 8.899 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.121, 5.253), stdev = 2.311
[info]   CI (99.9%): [≈ 0, 10.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.898 ±(99.9%) 158.839 B/op [Average]
[info]   (min, avg, max) = (0.346, 19.898, 93.648), stdev = 41.250
[info]   CI (99.9%): [≈ 0, 178.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.200, 21.000), stdev = 5.586
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:47:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15583.902 ops/s
[info] # Warmup Iteration   2: 147415.230 ops/s
[info] # Warmup Iteration   3: 174100.207 ops/s
[info] Iteration   1: 205676.429 ops/s
[info]                  ·gc.alloc.rate:                   2646.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              20247.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2576.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19711.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.602 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 209009.279 ops/s
[info]                  ·gc.alloc.rate:                   2671.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              20109.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2593.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19521.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.572 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 209577.646 ops/s
[info]                  ·gc.alloc.rate:                   2723.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              20448.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19708.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.469 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 206686.683 ops/s
[info]                  ·gc.alloc.rate:                   2669.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              20326.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2660.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20253.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.476 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 207579.126 ops/s
[info]                  ·gc.alloc.rate:                   2680.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              20324.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20379.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   207705.833 ±(99.9%) 6201.767 ops/s [Average]
[info]   (min, avg, max) = (205676.429, 207705.833, 209577.646), stdev = 1610.579
[info]   CI (99.9%): [201504.066, 213907.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   2678.206 ±(99.9%) 108.643 MB/sec [Average]
[info]   (min, avg, max) = (2646.108, 2678.206, 2723.193), stdev = 28.214
[info]   CI (99.9%): [2569.563, 2786.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20291.374 ±(99.9%) 479.828 B/op [Average]
[info]   (min, avg, max) = (20109.513, 20291.374, 20448.694), stdev = 124.610
[info]   CI (99.9%): [19811.546, 20771.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2628.385 ±(99.9%) 178.189 MB/sec [Average]
[info]   (min, avg, max) = (2576.071, 2628.385, 2688.106), stdev = 46.275
[info]   CI (99.9%): [2450.196, 2806.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19914.870 ±(99.9%) 1452.454 B/op [Average]
[info]   (min, avg, max) = (19521.268, 19914.870, 20379.382), stdev = 377.198
[info]   CI (99.9%): [18462.416, 21367.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.512 ±(99.9%) 2.418 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.512, 1.271), stdev = 0.628
[info]   CI (99.9%): [≈ 0, 2.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.887 ±(99.9%) 18.328 B/op [Average]
[info]   (min, avg, max) = (0.316, 3.887, 9.572), stdev = 4.760
[info]   CI (99.9%): [≈ 0, 22.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 14.000, 20.000), stdev = 3.937
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.836 ops/s
[info] # Warmup Iteration   2: 545152.333 ops/s
[info] # Warmup Iteration   3: 789037.658 ops/s
[info] Iteration   1: 777621.274 ops/s
[info]                  ·gc.alloc.rate:                   442.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              895.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 796544.123 ops/s
[info]                  ·gc.alloc.rate:               448.792 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 640.990 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 807017.014 ops/s
[info]                  ·gc.alloc.rate:                   465.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              908.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 772523.424 ops/s
[info]                  ·gc.alloc.rate:               440.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          896.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 662.238 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 791660.187 ops/s
[info]                  ·gc.alloc.rate:               452.085 MB/sec
[info]                  ·gc.alloc.rate.norm:          898.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 646.265 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   789073.204 ±(99.9%) 54098.784 ops/s [Average]
[info]   (min, avg, max) = (772523.424, 789073.204, 807017.014), stdev = 14049.282
[info]   CI (99.9%): [734974.421, 843171.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   449.916 ±(99.9%) 39.113 MB/sec [Average]
[info]   (min, avg, max) = (440.228, 449.916, 465.975), stdev = 10.158
[info]   CI (99.9%): [410.803, 489.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   897.265 ±(99.9%) 30.257 B/op [Average]
[info]   (min, avg, max) = (886.686, 897.265, 908.661), stdev = 7.858
[info]   CI (99.9%): [867.008, 927.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   454.470 ±(99.9%) 683.320 MB/sec [Average]
[info]   (min, avg, max) = (324.434, 454.470, 649.527), stdev = 177.456
[info]   CI (99.9%): [≈ 0, 1137.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   905.571 ±(99.9%) 1350.182 B/op [Average]
[info]   (min, avg, max) = (640.990, 905.571, 1311.772), stdev = 350.638
[info]   CI (99.9%): [≈ 0, 2255.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 1.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.619), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.268 ±(99.9%) 2.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.268, 1.252), stdev = 0.551
[info]   CI (99.9%): [≈ 0, 2.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88110.878 ops/s
[info] # Warmup Iteration   2: 326331.808 ops/s
[info] # Warmup Iteration   3: 385847.670 ops/s
[info] Iteration   1: 392797.022 ops/s
[info]                  ·gc.alloc.rate:                   333.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              1337.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1299.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 402650.952 ops/s
[info]                  ·gc.alloc.rate:               343.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          1341.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1265.440 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 397460.436 ops/s
[info]                  ·gc.alloc.rate:                   343.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1359.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1281.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 393646.292 ops/s
[info]                  ·gc.alloc.rate:               339.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          1358.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1294.367 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 391480.968 ops/s
[info]                  ·gc.alloc.rate:               339.087 MB/sec
[info]                  ·gc.alloc.rate.norm:          1363.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1301.541 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   395607.134 ±(99.9%) 17415.064 ops/s [Average]
[info]   (min, avg, max) = (391480.968, 395607.134, 402650.952), stdev = 4522.637
[info]   CI (99.9%): [378192.070, 413022.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   339.803 ±(99.9%) 14.987 MB/sec [Average]
[info]   (min, avg, max) = (333.708, 339.803, 343.252), stdev = 3.892
[info]   CI (99.9%): [324.815, 354.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1351.846 ±(99.9%) 45.358 B/op [Average]
[info]   (min, avg, max) = (1337.251, 1351.846, 1363.186), stdev = 11.779
[info]   CI (99.9%): [1306.488, 1397.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   323.884 ±(99.9%) 1.049 MB/sec [Average]
[info]   (min, avg, max) = (323.753, 323.884, 324.371), stdev = 0.272
[info]   CI (99.9%): [322.835, 324.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1288.614 ±(99.9%) 58.027 B/op [Average]
[info]   (min, avg, max) = (1265.440, 1288.614, 1301.541), stdev = 15.069
[info]   CI (99.9%): [1230.587, 1346.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.034), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.136), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 322966.827 ops/s
[info] # Warmup Iteration   2: 915267.258 ops/s
[info] # Warmup Iteration   3: 1065008.394 ops/s
[info] Iteration   1: 1020572.868 ops/s
[info]                  ·gc.alloc.rate:               358.710 MB/sec
[info]                  ·gc.alloc.rate.norm:          552.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 504.878 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1024858.803 ops/s
[info]                  ·gc.alloc.rate:               363.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          558.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 502.776 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1073154.662 ops/s
[info]                  ·gc.alloc.rate:                   384.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              563.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1078248.847 ops/s
[info]                  ·gc.alloc.rate:               381.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          556.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 478.389 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1083895.553 ops/s
[info]                  ·gc.alloc.rate:               382.294 MB/sec
[info]                  ·gc.alloc.rate.norm:          555.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 476.863 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1056146.147 ±(99.9%) 118563.017 ops/s [Average]
[info]   (min, avg, max) = (1020572.868, 1056146.147, 1083895.553), stdev = 30790.439
[info]   CI (99.9%): [937583.129, 1174709.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   374.142 ±(99.9%) 45.999 MB/sec [Average]
[info]   (min, avg, max) = (358.710, 374.142, 384.506), stdev = 11.946
[info]   CI (99.9%): [328.143, 420.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   557.425 ±(99.9%) 15.956 B/op [Average]
[info]   (min, avg, max) = (552.981, 557.425, 563.873), stdev = 4.144
[info]   CI (99.9%): [541.470, 573.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   327.786 ±(99.9%) 1.455 MB/sec [Average]
[info]   (min, avg, max) = (327.497, 327.786, 328.424), stdev = 0.378
[info]   CI (99.9%): [326.331, 329.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   488.708 ±(99.9%) 53.473 B/op [Average]
[info]   (min, avg, max) = (476.863, 488.708, 504.878), stdev = 13.887
[info]   CI (99.9%): [435.236, 542.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.092), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4636.009 ops/s
[info] # Warmup Iteration   2: 70594.681 ops/s
[info] # Warmup Iteration   3: 103439.513 ops/s
[info] Iteration   1: 109515.557 ops/s
[info]                  ·gc.alloc.rate:                   3584.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              51494.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3636.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52250.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.446 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 108737.617 ops/s
[info]                  ·gc.alloc.rate:                   3577.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              51772.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3342.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48368.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.904 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 107086.856 ops/s
[info]                  ·gc.alloc.rate:                   3545.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              52107.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3372.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49558.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 108610.199 ops/s
[info]                  ·gc.alloc.rate:                   3609.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              52286.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3729.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54034.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.508 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 109219.686 ops/s
[info]                  ·gc.alloc.rate:                   3614.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              52088.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48955.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.900 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   108633.983 ±(99.9%) 3614.855 ops/s [Average]
[info]   (min, avg, max) = (107086.856, 108633.983, 109515.557), stdev = 938.766
[info]   CI (99.9%): [105019.128, 112248.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3586.281 ±(99.9%) 106.441 MB/sec [Average]
[info]   (min, avg, max) = (3545.762, 3586.281, 3614.875), stdev = 27.642
[info]   CI (99.9%): [3479.840, 3692.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51949.865 ±(99.9%) 1211.870 B/op [Average]
[info]   (min, avg, max) = (51494.517, 51949.865, 52286.615), stdev = 314.719
[info]   CI (99.9%): [50737.995, 53161.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3495.721 ±(99.9%) 675.152 MB/sec [Average]
[info]   (min, avg, max) = (3342.477, 3495.721, 3729.686), stdev = 175.335
[info]   CI (99.9%): [2820.569, 4170.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50633.566 ±(99.9%) 9289.437 B/op [Average]
[info]   (min, avg, max) = (48368.969, 50633.566, 54034.487), stdev = 2412.437
[info]   CI (99.9%): [41344.129, 59923.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.516 ±(99.9%) 3.903 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.516, 2.328), stdev = 1.014
[info]   CI (99.9%): [≈ 0, 4.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.413 ±(99.9%) 56.063 B/op [Average]
[info]   (min, avg, max) = (0.306, 7.413, 33.446), stdev = 14.559
[info]   CI (99.9%): [≈ 0, 63.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   52.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.200, 17.000), stdev = 1.643
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54059.074 ops/s
[info] # Warmup Iteration   2: 277872.462 ops/s
[info] # Warmup Iteration   3: 299906.873 ops/s
[info] Iteration   1: 304905.662 ops/s
[info]                  ·gc.alloc.rate:                   1798.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              9278.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8368.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.381 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 307985.545 ops/s
[info]                  ·gc.alloc.rate:                   1808.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              9239.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9939.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.589 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 313202.018 ops/s
[info]                  ·gc.alloc.rate:                   1837.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              9234.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8157.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.111 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 309227.369 ops/s
[info]                  ·gc.alloc.rate:                   1841.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              9371.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9981.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 310745.866 ops/s
[info]                  ·gc.alloc.rate:                   1845.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              9344.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8351.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   309213.292 ±(99.9%) 11918.655 ops/s [Average]
[info]   (min, avg, max) = (304905.662, 309213.292, 313202.018), stdev = 3095.237
[info]   CI (99.9%): [297294.637, 321131.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1826.239 ±(99.9%) 82.662 MB/sec [Average]
[info]   (min, avg, max) = (1798.262, 1826.239, 1845.207), stdev = 21.467
[info]   CI (99.9%): [1743.577, 1908.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9293.714 ±(99.9%) 238.310 B/op [Average]
[info]   (min, avg, max) = (9234.727, 9293.714, 9371.731), stdev = 61.888
[info]   CI (99.9%): [9055.403, 9532.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1760.271 ±(99.9%) 680.443 MB/sec [Average]
[info]   (min, avg, max) = (1621.932, 1760.271, 1961.479), stdev = 176.709
[info]   CI (99.9%): [1079.828, 2440.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8959.799 ±(99.9%) 3532.712 B/op [Average]
[info]   (min, avg, max) = (8157.428, 8959.799, 9981.304), stdev = 917.434
[info]   CI (99.9%): [5427.087, 12492.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.807 ±(99.9%) 2.780 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.807, 1.624), stdev = 0.722
[info]   CI (99.9%): [≈ 0, 3.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.122 ±(99.9%) 14.275 B/op [Average]
[info]   (min, avg, max) = (0.212, 4.122, 8.381), stdev = 3.707
[info]   CI (99.9%): [≈ 0, 18.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 16.000), stdev = 3.975
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.581 ops/s
[info] # Warmup Iteration   2: 1690949.191 ops/s
[info] # Warmup Iteration   3: 1790320.399 ops/s
[info] Iteration   1: 1947986.786 ops/s
[info]                  ·gc.alloc.rate:                   679.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     524.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1899584.081 ops/s
[info]                  ·gc.alloc.rate:               672.962 MB/sec
[info]                  ·gc.alloc.rate.norm:          557.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 538.660 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1897401.221 ops/s
[info]                  ·gc.alloc.rate:                   664.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2008003.089 ops/s
[info]                  ·gc.alloc.rate:                   703.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     510.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2019184.591 ops/s
[info]                  ·gc.alloc.rate:                   703.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1954431.953 ±(99.9%) 222581.744 ops/s [Average]
[info]   (min, avg, max) = (1897401.221, 1954431.953, 2019184.591), stdev = 57803.772
[info]   CI (99.9%): [1731850.209, 2177013.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   684.761 ±(99.9%) 69.412 MB/sec [Average]
[info]   (min, avg, max) = (664.415, 684.761, 703.992), stdev = 18.026
[info]   CI (99.9%): [615.348, 754.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   551.376 ±(99.9%) 13.957 B/op [Average]
[info]   (min, avg, max) = (548.619, 551.376, 557.491), stdev = 3.625
[info]   CI (99.9%): [537.419, 565.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   651.056 ±(99.9%) 5.005 MB/sec [Average]
[info]   (min, avg, max) = (649.526, 651.056, 652.861), stdev = 1.300
[info]   CI (99.9%): [646.051, 656.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   524.539 ±(99.9%) 56.943 B/op [Average]
[info]   (min, avg, max) = (508.815, 524.539, 539.860), stdev = 14.788
[info]   CI (99.9%): [467.596, 581.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.717 ±(99.9%) 5.983 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.717, 3.497), stdev = 1.554
[info]   CI (99.9%): [≈ 0, 6.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.560 ±(99.9%) 4.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.560, 2.725), stdev = 1.211
[info]   CI (99.9%): [≈ 0, 5.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 494825.354 ops/s
[info] # Warmup Iteration   2: 1684691.868 ops/s
[info] # Warmup Iteration   3: 1830497.321 ops/s
[info] Iteration   1: 1880812.299 ops/s
[info]                  ·gc.alloc.rate:                   657.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     540.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1897302.377 ops/s
[info]                  ·gc.alloc.rate:               664.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          551.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 535.969 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1881788.061 ops/s
[info]                  ·gc.alloc.rate:                   662.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     540.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1913567.637 ops/s
[info]                  ·gc.alloc.rate:                   671.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1930499.500 ops/s
[info]                  ·gc.alloc.rate:               673.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          548.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 530.587 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1900793.975 ±(99.9%) 82097.952 ops/s [Average]
[info]   (min, avg, max) = (1880812.299, 1900793.975, 1930499.500), stdev = 21320.577
[info]   CI (99.9%): [1818696.023, 1982891.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   665.984 ±(99.9%) 24.068 MB/sec [Average]
[info]   (min, avg, max) = (657.989, 665.984, 673.272), stdev = 6.250
[info]   CI (99.9%): [641.916, 690.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   551.348 ±(99.9%) 7.500 B/op [Average]
[info]   (min, avg, max) = (548.774, 551.348, 554.080), stdev = 1.948
[info]   CI (99.9%): [543.849, 558.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   647.582 ±(99.9%) 7.988 MB/sec [Average]
[info]   (min, avg, max) = (646.188, 647.582, 650.958), stdev = 2.075
[info]   CI (99.9%): [639.594, 655.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   536.143 ±(99.9%) 17.084 B/op [Average]
[info]   (min, avg, max) = (530.587, 536.143, 540.671), stdev = 4.437
[info]   CI (99.9%): [519.059, 553.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.027), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.022), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1249495.667 ops/s
[info] # Warmup Iteration   2: 1941815.820 ops/s
[info] # Warmup Iteration   3: 2207666.672 ops/s
[info] Iteration   1: 2252646.265 ops/s
[info]                  ·gc.alloc.rate:                   795.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2234753.241 ops/s
[info]                  ·gc.alloc.rate:                   784.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     463.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2212600.739 ops/s
[info]                  ·gc.alloc.rate:                   771.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2190272.635 ops/s
[info]                  ·gc.alloc.rate:                   772.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     710.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.373 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2206333.851 ops/s
[info]                  ·gc.alloc.rate:                   796.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              567.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.505 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2219321.346 ±(99.9%) 94446.076 ops/s [Average]
[info]   (min, avg, max) = (2190272.635, 2219321.346, 2252646.265), stdev = 24527.346
[info]   CI (99.9%): [2124875.270, 2313767.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   784.084 ±(99.9%) 46.342 MB/sec [Average]
[info]   (min, avg, max) = (771.604, 784.084, 796.425), stdev = 12.035
[info]   CI (99.9%): [737.743, 830.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   555.986 ±(99.9%) 27.830 B/op [Average]
[info]   (min, avg, max) = (548.792, 555.986, 567.971), stdev = 7.227
[info]   CI (99.9%): [528.156, 583.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.720 ±(99.9%) 695.025 MB/sec [Average]
[info]   (min, avg, max) = (657.006, 789.720, 989.293), stdev = 180.496
[info]   CI (99.9%): [94.695, 1484.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   559.955 ±(99.9%) 492.157 B/op [Average]
[info]   (min, avg, max) = (463.267, 559.955, 710.812), stdev = 127.812
[info]   CI (99.9%): [67.798, 1052.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.827 ±(99.9%) 5.445 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.827, 3.302), stdev = 1.414
[info]   CI (99.9%): [≈ 0, 6.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.593 ±(99.9%) 3.913 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.593, 2.373), stdev = 1.016
[info]   CI (99.9%): [≈ 0, 4.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 11.000), stdev = 2.966
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:45:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 683307.260 ops/s
[info] # Warmup Iteration   2: 1821845.724 ops/s
[info] # Warmup Iteration   3: 2259402.708 ops/s
[info] Iteration   1: 2264128.201 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2263571.012 ops/s
[info]                  ·gc.alloc.rate:      0.345 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.240 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2363852.087 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2355660.356 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2359027.416 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2321247.814 ±(99.9%) 202075.441 ops/s [Average]
[info]   (min, avg, max) = (2263571.012, 2321247.814, 2363852.087), stdev = 52478.350
[info]   CI (99.9%): [2119172.373, 2523323.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.069 ±(99.9%) 0.593 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.069, 0.345), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.048 ±(99.9%) 0.412 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.048, 0.240), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6434.336 ops/s
[info] # Warmup Iteration   2: 30067.576 ops/s
[info] # Warmup Iteration   3: 45123.551 ops/s
[info] Iteration   1: 41714.680 ops/s
[info]                  ·gc.alloc.rate:                   1880.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              70948.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61398.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.529 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 42745.722 ops/s
[info]                  ·gc.alloc.rate:                   2066.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              76095.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2265.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83389.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 453.480 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 48862.605 ops/s
[info]                  ·gc.alloc.rate:                   1910.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              61510.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1926.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62044.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.563 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 47858.597 ops/s
[info]                  ·gc.alloc.rate:                   1885.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              61977.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53119.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 47738.657 ops/s
[info]                  ·gc.alloc.rate:                   1874.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              61807.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64630.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.686 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   45784.052 ±(99.9%) 12682.736 ops/s [Average]
[info]   (min, avg, max) = (41714.680, 45784.052, 48862.605), stdev = 3293.666
[info]   CI (99.9%): [33101.317, 58466.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1923.568 ±(99.9%) 312.988 MB/sec [Average]
[info]   (min, avg, max) = (1874.925, 1923.568, 2066.975), stdev = 81.282
[info]   CI (99.9%): [1610.580, 2236.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   66467.877 ±(99.9%) 25775.284 B/op [Average]
[info]   (min, avg, max) = (61510.312, 66467.877, 76095.394), stdev = 6693.759
[info]   CI (99.9%): [40692.593, 92243.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1879.121 ±(99.9%) 1037.753 MB/sec [Average]
[info]   (min, avg, max) = (1615.846, 1879.121, 2265.109), stdev = 269.501
[info]   CI (99.9%): [841.368, 2916.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64916.507 ±(99.9%) 43099.916 B/op [Average]
[info]   (min, avg, max) = (53119.906, 64916.507, 83389.666), stdev = 11192.911
[info]   CI (99.9%): [21816.591, 108016.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.307 ±(99.9%) 19.946 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.307, 12.318), stdev = 5.180
[info]   CI (99.9%): [≈ 0, 23.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   121.199 ±(99.9%) 736.570 B/op [Average]
[info]   (min, avg, max) = (0.686, 121.199, 453.480), stdev = 191.285
[info]   CI (99.9%): [≈ 0, 857.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.400, 23.000), stdev = 7.127
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3220.666 ops/s
[info] # Warmup Iteration   2: 7793.935 ops/s
[info] # Warmup Iteration   3: 12343.449 ops/s
[info] Iteration   1: 17823.596 ops/s
[info]                  ·gc.alloc.rate:                   2001.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              176691.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1755.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154998.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 330.874 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 18334.724 ops/s
[info]                  ·gc.alloc.rate:                   2068.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              177577.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2088.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179222.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.147 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 16763.518 ops/s
[info]                  ·gc.alloc.rate:                   2259.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              212135.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2172.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203967.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 654.567 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 18572.254 ops/s
[info]                  ·gc.alloc.rate:                   2099.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              177861.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2237.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189608.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.528 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 17763.955 ops/s
[info]                  ·gc.alloc.rate:                   2333.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              206627.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202243.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.230 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   17851.609 ±(99.9%) 2685.213 ops/s [Average]
[info]   (min, avg, max) = (16763.518, 17851.609, 18572.254), stdev = 697.341
[info]   CI (99.9%): [15166.397, 20536.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   2152.524 ±(99.9%) 533.167 MB/sec [Average]
[info]   (min, avg, max) = (2001.739, 2152.524, 2333.161), stdev = 138.462
[info]   CI (99.9%): [1619.357, 2685.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   190178.581 ±(99.9%) 67936.748 B/op [Average]
[info]   (min, avg, max) = (176691.133, 190178.581, 212135.458), stdev = 17642.958
[info]   CI (99.9%): [122241.832, 258115.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2107.633 ±(99.9%) 808.129 MB/sec [Average]
[info]   (min, avg, max) = (1755.979, 2107.633, 2283.661), stdev = 209.868
[info]   CI (99.9%): [1299.504, 2915.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   186008.205 ±(99.9%) 77175.863 B/op [Average]
[info]   (min, avg, max) = (154998.191, 186008.205, 203967.950), stdev = 20042.327
[info]   CI (99.9%): [108832.342, 263184.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.680 ±(99.9%) 11.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.680, 6.972), stdev = 2.885
[info]   CI (99.9%): [≈ 0, 13.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   244.469 ±(99.9%) 1037.449 B/op [Average]
[info]   (min, avg, max) = (3.528, 244.469, 654.567), stdev = 269.422
[info]   CI (99.9%): [≈ 0, 1281.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.400, 17.000), stdev = 3.050
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23260.509 ops/s
[info] # Warmup Iteration   2: 79759.535 ops/s
[info] # Warmup Iteration   3: 96777.596 ops/s
[info] Iteration   1: 93055.360 ops/s
[info]                  ·gc.alloc.rate:                   1019.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              17240.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16516.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.281 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 91617.412 ops/s
[info]                  ·gc.alloc.rate:                   1014.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              17422.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16797.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 92704.118 ops/s
[info]                  ·gc.alloc.rate:                   1032.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              17527.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16646.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.225 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 94728.805 ops/s
[info]                  ·gc.alloc.rate:                   1040.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              17288.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16301.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 91418.026 ops/s
[info]                  ·gc.alloc.rate:               1001.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          17239.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16938.227 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   92704.744 ±(99.9%) 5114.871 ops/s [Average]
[info]   (min, avg, max) = (91418.026, 92704.744, 94728.805), stdev = 1328.316
[info]   CI (99.9%): [87589.874, 97819.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1021.698 ±(99.9%) 59.152 MB/sec [Average]
[info]   (min, avg, max) = (1001.499, 1021.698, 1040.650), stdev = 15.362
[info]   CI (99.9%): [962.546, 1080.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17343.766 ±(99.9%) 489.167 B/op [Average]
[info]   (min, avg, max) = (17239.795, 17343.766, 17527.691), stdev = 127.035
[info]   CI (99.9%): [16854.599, 17832.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   980.103 ±(99.9%) 11.001 MB/sec [Average]
[info]   (min, avg, max) = (976.755, 980.103, 983.980), stdev = 2.857
[info]   CI (99.9%): [969.102, 991.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   16640.226 ±(99.9%) 950.116 B/op [Average]
[info]   (min, avg, max) = (16301.517, 16640.226, 16938.227), stdev = 246.742
[info]   CI (99.9%): [15690.110, 17590.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.693 ±(99.9%) 3.329 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.693, 1.672), stdev = 0.864
[info]   CI (99.9%): [≈ 0, 4.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.731 ±(99.9%) 56.409 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.731, 28.281), stdev = 14.649
[info]   CI (99.9%): [≈ 0, 68.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96366.179 ops/s
[info] # Warmup Iteration   2: 233821.870 ops/s
[info] # Warmup Iteration   3: 275615.689 ops/s
[info] Iteration   1: 271244.453 ops/s
[info]                  ·gc.alloc.rate:                   911.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              5288.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5633.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 262186.975 ops/s
[info]                  ·gc.alloc.rate:               885.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          5318.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      973.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5844.105 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   3: 269942.841 ops/s
[info]                  ·gc.alloc.rate:                   901.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              5258.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3794.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.582 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 267896.307 ops/s
[info]                  ·gc.alloc.rate:                   905.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              5318.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5713.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.577 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 279179.972 ops/s
[info]                  ·gc.alloc.rate:                   928.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              5231.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5460.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   270090.110 ±(99.9%) 23678.494 ops/s [Average]
[info]   (min, avg, max) = (262186.975, 270090.110, 279179.972), stdev = 6149.230
[info]   CI (99.9%): [246411.615, 293768.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   906.641 ±(99.9%) 59.029 MB/sec [Average]
[info]   (min, avg, max) = (885.994, 906.641, 928.266), stdev = 15.330
[info]   CI (99.9%): [847.612, 965.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5282.849 ±(99.9%) 145.943 B/op [Average]
[info]   (min, avg, max) = (5231.457, 5282.849, 5318.115), stdev = 37.901
[info]   CI (99.9%): [5136.906, 5428.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   907.427 ±(99.9%) 552.341 MB/sec [Average]
[info]   (min, avg, max) = (650.853, 907.427, 973.637), stdev = 143.441
[info]   CI (99.9%): [355.086, 1459.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5289.119 ±(99.9%) 3261.645 B/op [Average]
[info]   (min, avg, max) = (3794.446, 5289.119, 5844.105), stdev = 847.039
[info]   CI (99.9%): [2027.474, 8550.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.124 ±(99.9%) 5.595 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.124, 2.844), stdev = 1.453
[info]   CI (99.9%): [≈ 0, 6.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.570 ±(99.9%) 32.750 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.570, 16.582), stdev = 8.505
[info]   CI (99.9%): [≈ 0, 39.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 15.000), stdev = 5.079
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:44:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1264.391 ops/s
[info] # Warmup Iteration   2: 10378.332 ops/s
[info] # Warmup Iteration   3: 12747.516 ops/s
[info] Iteration   1: 15551.305 ops/s
[info]                  ·gc.alloc.rate:                   2167.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              219326.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2106.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213220.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1714.524 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 17072.592 ops/s
[info]                  ·gc.alloc.rate:                   2162.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              199305.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2125.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195936.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.838 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 17002.177 ops/s
[info]                  ·gc.alloc.rate:                   2149.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              198934.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2186.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202365.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.488 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 16616.892 ops/s
[info]                  ·gc.alloc.rate:                   2109.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              199800.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1928.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182638.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.914 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 16636.570 ops/s
[info]                  ·gc.alloc.rate:                        2325.958 MB/sec
[info]                  ·gc.alloc.rate.norm:                   219971.738 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.018 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.675 B/op
[info]                  ·gc.churn.Metaspace:                   0.052 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              4.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2493.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          235822.238 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  24.368 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             2304.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.551 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      430.400 B/op
[info]                  ·gc.count:                             9.000 counts
[info]                  ·gc.time:                              67.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   16575.907 ±(99.9%) 2345.079 ops/s [Average]
[info]   (min, avg, max) = (15551.305, 16575.907, 17072.592), stdev = 609.010
[info]   CI (99.9%): [14230.828, 18920.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2182.906 ±(99.9%) 319.954 MB/sec [Average]
[info]   (min, avg, max) = (2109.756, 2182.906, 2325.958), stdev = 83.091
[info]   CI (99.9%): [1862.952, 2502.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   207467.882 ±(99.9%) 42844.264 B/op [Average]
[info]   (min, avg, max) = (198934.397, 207467.882, 219971.738), stdev = 11126.519
[info]   CI (99.9%): [164623.618, 250312.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.335 ±(99.9%) 2.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.335, 1.675), stdev = 0.749
[info]   CI (99.9%): [≈ 0, 3.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace.norm":
[info]   0.983 ±(99.9%) 8.465 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.983, 4.915), stdev = 2.198
[info]   CI (99.9%): [≈ 0, 9.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2168.216 ±(99.9%) 791.927 MB/sec [Average]
[info]   (min, avg, max) = (1928.530, 2168.216, 2493.559), stdev = 205.661
[info]   CI (99.9%): [1376.289, 2960.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   205996.543 ±(99.9%) 77055.411 B/op [Average]
[info]   (min, avg, max) = (182638.080, 205996.543, 235822.238), stdev = 20011.046
[info]   CI (99.9%): [128941.132, 283051.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen":
[info]   4.874 ±(99.9%) 41.963 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.874, 24.368), stdev = 10.898
[info]   CI (99.9%): [≈ 0, 46.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   460.906 ±(99.9%) 3968.537 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 460.906, 2304.528), stdev = 1030.616
[info]   CI (99.9%): [≈ 0, 4429.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.349 ±(99.9%) 28.114 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 4.349, 16.942), stdev = 7.301
[info]   CI (99.9%): [≈ 0, 32.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   433.633 ±(99.9%) 2845.885 B/op [Average]
[info]   (min, avg, max) = (3.838, 433.633, 1714.524), stdev = 739.067
[info]   CI (99.9%): [≈ 0, 3279.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.095
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   126.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 25.200, 67.000), stdev = 24.438
[info]   CI (99.9%): [126.000, 126.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6137.534 ops/s
[info] # Warmup Iteration   2: 34858.543 ops/s
[info] # Warmup Iteration   3: 40111.250 ops/s
[info] Iteration   1: 39023.469 ops/s
[info]                  ·gc.alloc.rate:                   3222.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              129934.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3268.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131770.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.598 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.436 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 40357.267 ops/s
[info]                  ·gc.alloc.rate:                   3241.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              126401.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2983.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116352.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.843 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 42282.108 ops/s
[info]                  ·gc.alloc.rate:                   3313.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              123343.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3347.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124594.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.325 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 43059.572 ops/s
[info]                  ·gc.alloc.rate:                   3410.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              124624.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3375.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123317.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.804 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 42610.763 ops/s
[info]                  ·gc.alloc.rate:                   3362.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              124191.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112686.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.769 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   41466.636 ±(99.9%) 6588.775 ops/s [Average]
[info]   (min, avg, max) = (39023.469, 41466.636, 43059.572), stdev = 1711.084
[info]   CI (99.9%): [34877.861, 48055.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   3310.452 ±(99.9%) 305.698 MB/sec [Average]
[info]   (min, avg, max) = (3222.966, 3310.452, 3410.851), stdev = 79.389
[info]   CI (99.9%): [3004.754, 3616.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   125699.061 ±(99.9%) 10079.838 B/op [Average]
[info]   (min, avg, max) = (123343.390, 125699.061, 129934.490), stdev = 2617.702
[info]   CI (99.9%): [115619.224, 135778.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   3205.281 ±(99.9%) 682.821 MB/sec [Average]
[info]   (min, avg, max) = (2983.981, 3205.281, 3375.077), stdev = 177.326
[info]   CI (99.9%): [2522.460, 3888.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121744.298 ±(99.9%) 28701.777 B/op [Average]
[info]   (min, avg, max) = (112686.613, 121744.298, 131770.478), stdev = 7453.760
[info]   CI (99.9%): [93042.521, 150446.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.690 ±(99.9%) 3.311 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.690, 1.663), stdev = 0.860
[info]   CI (99.9%): [≈ 0, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27.235 ±(99.9%) 131.547 B/op [Average]
[info]   (min, avg, max) = (0.769, 27.235, 64.843), stdev = 34.162
[info]   CI (99.9%): [≈ 0, 158.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 15.000), stdev = 1.095
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47893.510 ops/s
[info] # Warmup Iteration   2: 108381.056 ops/s
[info] # Warmup Iteration   3: 131036.088 ops/s
[info] Iteration   1: 142957.653 ops/s
[info]                  ·gc.alloc.rate:                   1996.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              21974.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21574.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.188 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 146217.820 ops/s
[info]                  ·gc.alloc.rate:                   2011.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              21650.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21267.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.569 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 143934.959 ops/s
[info]                  ·gc.alloc.rate:                   1983.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              21683.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21792.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.455 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 146618.946 ops/s
[info]                  ·gc.alloc.rate:                   2052.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              22034.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21555.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.670 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 144926.665 ops/s
[info]                  ·gc.alloc.rate:                   2017.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              21901.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18273.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   144931.208 ±(99.9%) 5900.188 ops/s [Average]
[info]   (min, avg, max) = (142957.653, 144931.208, 146618.946), stdev = 1532.260
[info]   CI (99.9%): [139031.021, 150831.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2012.316 ±(99.9%) 101.602 MB/sec [Average]
[info]   (min, avg, max) = (1983.256, 2012.316, 2052.950), stdev = 26.386
[info]   CI (99.9%): [1910.713, 2113.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21848.930 ±(99.9%) 666.044 B/op [Average]
[info]   (min, avg, max) = (21650.776, 21848.930, 22034.500), stdev = 172.970
[info]   CI (99.9%): [21182.885, 22514.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1924.156 ±(99.9%) 523.404 MB/sec [Average]
[info]   (min, avg, max) = (1683.190, 1924.156, 2008.316), stdev = 135.926
[info]   CI (99.9%): [1400.752, 2447.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20892.669 ±(99.9%) 5684.570 B/op [Average]
[info]   (min, avg, max) = (18273.092, 20892.669, 21792.975), stdev = 1476.265
[info]   CI (99.9%): [15208.099, 26577.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.871 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.167, 0.562), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.822 ±(99.9%) 9.600 B/op [Average]
[info]   (min, avg, max) = (0.226, 1.822, 6.188), stdev = 2.493
[info]   CI (99.9%): [≈ 0, 11.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126252.422 ops/s
[info] # Warmup Iteration   2: 211399.067 ops/s
[info] # Warmup Iteration   3: 247687.280 ops/s
[info] Iteration   1: 248054.209 ops/s
[info]                  ·gc.alloc.rate:                   808.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              5130.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4169.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 247655.870 ops/s
[info]                  ·gc.alloc.rate:                   821.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              5218.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6271.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 250927.286 ops/s
[info]                  ·gc.alloc.rate:                   822.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              5156.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4131.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 246906.685 ops/s
[info]                  ·gc.alloc.rate:                   836.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              5328.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4203.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.915 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 241192.065 ops/s
[info]                  ·gc.alloc.rate:                   844.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              5508.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6420.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.483 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   246947.223 ±(99.9%) 13707.966 ops/s [Average]
[info]   (min, avg, max) = (241192.065, 246947.223, 250927.286), stdev = 3559.915
[info]   CI (99.9%): [233239.257, 260655.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   826.494 ±(99.9%) 53.654 MB/sec [Average]
[info]   (min, avg, max) = (808.602, 826.494, 844.345), stdev = 13.934
[info]   CI (99.9%): [772.841, 880.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5268.582 ±(99.9%) 594.416 B/op [Average]
[info]   (min, avg, max) = (5130.208, 5268.582, 5508.410), stdev = 154.368
[info]   CI (99.9%): [4674.166, 5862.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.295 ±(99.9%) 689.664 MB/sec [Average]
[info]   (min, avg, max) = (657.134, 789.295, 986.881), stdev = 179.104
[info]   CI (99.9%): [99.631, 1478.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5039.277 ±(99.9%) 4597.997 B/op [Average]
[info]   (min, avg, max) = (4131.986, 5039.277, 6420.128), stdev = 1194.085
[info]   CI (99.9%): [441.280, 9637.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.815 ±(99.9%) 5.421 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.815, 3.281), stdev = 1.408
[info]   CI (99.9%): [≈ 0, 6.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.211 ±(99.9%) 34.546 B/op [Average]
[info]   (min, avg, max) = (0.083, 5.211, 20.915), stdev = 8.971
[info]   CI (99.9%): [≈ 0, 39.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.302
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 149196.204 ops/s
[info] # Warmup Iteration   2: 250388.000 ops/s
[info] # Warmup Iteration   3: 275212.611 ops/s
[info] Iteration   1: 280372.120 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 280885.929 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 279245.871 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 279088.211 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 279107.151 ops/s
[info]                  ·gc.alloc.rate:      0.829 MB/sec
[info]                  ·gc.alloc.rate.norm: 4.674 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   279739.856 ±(99.9%) 3211.433 ops/s [Average]
[info]   (min, avg, max) = (279088.211, 279739.856, 280885.929), stdev = 833.999
[info]   CI (99.9%): [276528.423, 282951.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.166 ±(99.9%) 1.427 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.166, 0.829), stdev = 0.371
[info]   CI (99.9%): [≈ 0, 1.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.936 ±(99.9%) 8.047 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.936, 4.674), stdev = 2.090
[info]   CI (99.9%): [≈ 0, 8.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8447.382 ops/s
[info] # Warmup Iteration   2: 47046.854 ops/s
[info] # Warmup Iteration   3: 56862.628 ops/s
[info] Iteration   1: 59285.874 ops/s
[info]                  ·gc.alloc.rate:                   3963.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              105214.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3936.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104486.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.196 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 60400.352 ops/s
[info]                  ·gc.alloc.rate:                   3949.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              102879.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4005.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104331.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.254 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 60243.349 ops/s
[info]                  ·gc.alloc.rate:                   3957.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              103391.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3712.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96981.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.175 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 60015.141 ops/s
[info]                  ·gc.alloc.rate:                   3944.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              103427.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3731.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97824.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.638 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 60560.487 ops/s
[info]                  ·gc.alloc.rate:                   3979.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              103403.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97145.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   60101.041 ±(99.9%) 1918.383 ops/s [Average]
[info]   (min, avg, max) = (59285.874, 60101.041, 60560.487), stdev = 498.198
[info]   CI (99.9%): [58182.658, 62019.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3959.083 ±(99.9%) 51.411 MB/sec [Average]
[info]   (min, avg, max) = (3944.848, 3959.083, 3979.013), stdev = 13.351
[info]   CI (99.9%): [3907.672, 4010.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   103663.345 ±(99.9%) 3454.323 B/op [Average]
[info]   (min, avg, max) = (102879.457, 103663.345, 105214.927), stdev = 897.077
[info]   CI (99.9%): [100209.023, 107117.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3824.769 ±(99.9%) 523.780 MB/sec [Average]
[info]   (min, avg, max) = (3712.465, 3824.769, 4005.473), stdev = 136.024
[info]   CI (99.9%): [3300.989, 4348.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   100153.986 ±(99.9%) 15007.812 B/op [Average]
[info]   (min, avg, max) = (96981.447, 100153.986, 104486.266), stdev = 3897.481
[info]   CI (99.9%): [85146.174, 115161.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.512 ±(99.9%) 3.783 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.512, 2.268), stdev = 0.982
[info]   CI (99.9%): [≈ 0, 4.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   13.561 ±(99.9%) 100.457 B/op [Average]
[info]   (min, avg, max) = (0.541, 13.561, 60.196), stdev = 26.088
[info]   CI (99.9%): [≈ 0, 114.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 16.800, 18.000), stdev = 0.837
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2403.757 ops/s
[info] # Warmup Iteration   2: 17561.644 ops/s
[info] # Warmup Iteration   3: 27435.689 ops/s
[info] Iteration   1: 36301.409 ops/s
[info]                  ·gc.alloc.rate:                   1961.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              85023.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1857.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80546.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 131.950 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 37845.186 ops/s
[info]                  ·gc.alloc.rate:                   1823.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              75799.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1874.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77949.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.841 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 36422.975 ops/s
[info]                  ·gc.alloc.rate:                   2099.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              90698.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1907.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82404.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 418.555 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 35618.289 ops/s
[info]                  ·gc.alloc.rate:                   1725.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              76222.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1923.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84972.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.493 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.323 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 37546.444 ops/s
[info]                  ·gc.alloc.rate:                   1593.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              66786.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54252.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.873 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   36746.861 ±(99.9%) 3561.926 ops/s [Average]
[info]   (min, avg, max) = (35618.289, 36746.861, 37845.186), stdev = 925.021
[info]   CI (99.9%): [33184.934, 40308.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1840.415 ±(99.9%) 760.868 MB/sec [Average]
[info]   (min, avg, max) = (1593.445, 1840.415, 2099.325), stdev = 197.595
[info]   CI (99.9%): [1079.546, 2601.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   78906.144 ±(99.9%) 35513.680 B/op [Average]
[info]   (min, avg, max) = (66786.215, 78906.144, 90698.984), stdev = 9222.790
[info]   CI (99.9%): [43392.465, 114419.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1771.504 ±(99.9%) 1031.822 MB/sec [Average]
[info]   (min, avg, max) = (1294.395, 1771.504, 1923.223), stdev = 267.961
[info]   CI (99.9%): [739.683, 2803.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   76024.978 ±(99.9%) 47900.045 B/op [Average]
[info]   (min, avg, max) = (54252.095, 76024.978, 84972.742), stdev = 12439.490
[info]   CI (99.9%): [28124.932, 123925.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.503 ±(99.9%) 14.353 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.503, 9.688), stdev = 3.727
[info]   CI (99.9%): [≈ 0, 17.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   151.708 ±(99.9%) 621.288 B/op [Average]
[info]   (min, avg, max) = (0.873, 151.708, 418.555), stdev = 161.347
[info]   CI (99.9%): [≈ 0, 772.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.200, 18.000), stdev = 4.324
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1871.253 ops/s
[info] # Warmup Iteration   2: 27409.212 ops/s
[info] # Warmup Iteration   3: 40067.081 ops/s
[info] Iteration   1: 40786.117 ops/s
[info]                  ·gc.alloc.rate:                        1617.784 MB/sec
[info]                  ·gc.alloc.rate.norm:                   62400.195 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.018 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.712 B/op
[info]                  ·gc.churn.Metaspace:                   0.052 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1773.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          68389.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           7.201 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      277.737 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              55.000 ms
[info] Iteration   2: 37573.450 ops/s
[info]                  ·gc.alloc.rate:                   1491.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              62485.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1271.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53267.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 228.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 36325.435 ops/s
[info]                  ·gc.alloc.rate:                   1147.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              49716.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55297.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.801 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 36364.067 ops/s
[info]                  ·gc.alloc.rate:                   1137.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              49227.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41587.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 36207.003 ops/s
[info]                  ·gc.alloc.rate:                   1142.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              49648.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56026.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   37451.215 ±(99.9%) 7489.936 ops/s [Average]
[info]   (min, avg, max) = (36207.003, 37451.215, 40786.117), stdev = 1945.112
[info]   CI (99.9%): [29961.279, 44941.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1307.443 ±(99.9%) 886.615 MB/sec [Average]
[info]   (min, avg, max) = (1137.553, 1307.443, 1617.784), stdev = 230.251
[info]   CI (99.9%): [420.828, 2194.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   54695.574 ±(99.9%) 27241.739 B/op [Average]
[info]   (min, avg, max) = (49227.811, 54695.574, 62485.046), stdev = 7074.593
[info]   CI (99.9%): [27453.835, 81937.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.032 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.142 ±(99.9%) 1.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.712), stdev = 0.318
[info]   CI (99.9%): [≈ 0, 1.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.089 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.398 ±(99.9%) 3.423 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.398, 1.988), stdev = 0.889
[info]   CI (99.9%): [≈ 0, 3.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1314.281 ±(99.9%) 1121.257 MB/sec [Average]
[info]   (min, avg, max) = (960.996, 1314.281, 1773.063), stdev = 291.187
[info]   CI (99.9%): [193.025, 2435.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   54913.605 ±(99.9%) 36696.818 B/op [Average]
[info]   (min, avg, max) = (41587.278, 54913.605, 68389.517), stdev = 9530.047
[info]   CI (99.9%): [18216.787, 91610.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.118 ±(99.9%) 12.288 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.118, 7.201), stdev = 3.191
[info]   CI (99.9%): [≈ 0, 15.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   126.688 ±(99.9%) 485.709 B/op [Average]
[info]   (min, avg, max) = (0.901, 126.688, 277.737), stdev = 126.137
[info]   CI (99.9%): [≈ 0, 612.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 16.800, 55.000), stdev = 21.476
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 252095.263 ops/s
[info] # Warmup Iteration   2: 519504.952 ops/s
[info] # Warmup Iteration   3: 652128.609 ops/s
[info] Iteration   1: 641062.003 ops/s
[info]                  ·gc.alloc.rate:                   1724.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              4233.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4022.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.403 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 663789.782 ops/s
[info]                  ·gc.alloc.rate:                   1766.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              4186.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3865.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 620489.059 ops/s
[info]                  ·gc.alloc.rate:                   1673.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              4244.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4145.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 626267.242 ops/s
[info]                  ·gc.alloc.rate:                   1695.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              4260.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4140.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 648486.625 ops/s
[info]                  ·gc.alloc.rate:                   1754.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              4257.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4029.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   640018.942 ±(99.9%) 66927.249 ops/s [Average]
[info]   (min, avg, max) = (620489.059, 640018.942, 663789.782), stdev = 17380.794
[info]   CI (99.9%): [573091.693, 706946.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1722.824 ±(99.9%) 149.850 MB/sec [Average]
[info]   (min, avg, max) = (1673.455, 1722.824, 1766.032), stdev = 38.916
[info]   CI (99.9%): [1572.975, 1872.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4236.574 ±(99.9%) 114.476 B/op [Average]
[info]   (min, avg, max) = (4186.888, 4236.574, 4260.369), stdev = 29.729
[info]   CI (99.9%): [4122.098, 4351.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1642.394 ±(99.9%) 46.231 MB/sec [Average]
[info]   (min, avg, max) = (1630.438, 1642.394, 1660.510), stdev = 12.006
[info]   CI (99.9%): [1596.163, 1688.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4040.753 ±(99.9%) 439.599 B/op [Average]
[info]   (min, avg, max) = (3865.423, 4040.753, 4145.374), stdev = 114.163
[info]   CI (99.9%): [3601.154, 4480.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 6.450 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.837, 3.830), stdev = 1.675
[info]   CI (99.9%): [≈ 0, 7.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.051 ±(99.9%) 15.838 B/op [Average]
[info]   (min, avg, max) = (0.053, 2.051, 9.403), stdev = 4.113
[info]   CI (99.9%): [≈ 0, 17.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 13.000), stdev = 2.950
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:42:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 579.592 ops/s
[info] # Warmup Iteration   2: 16510.132 ops/s
[info] # Warmup Iteration   3: 27956.331 ops/s
[info] Iteration   1: 35337.877 ops/s
[info]                  ·gc.alloc.rate:                   2278.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              101459.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2254.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100401.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.464 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243.312 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 36847.944 ops/s
[info]                  ·gc.alloc.rate:                   2325.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              99329.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2258.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96450.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.780 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 31628.826 ops/s
[info]                  ·gc.alloc.rate:                   2376.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              118179.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130124.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.152 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 33354.317 ops/s
[info]                  ·gc.alloc.rate:                   2083.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              98306.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93730.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.865 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 34604.548 ops/s
[info]                  ·gc.alloc.rate:                   2026.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              92170.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90882.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.840 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   34354.702 ±(99.9%) 7623.031 ops/s [Average]
[info]   (min, avg, max) = (31628.826, 34354.702, 36847.944), stdev = 1979.677
[info]   CI (99.9%): [26731.671, 41977.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2218.266 ±(99.9%) 593.419 MB/sec [Average]
[info]   (min, avg, max) = (2026.840, 2218.266, 2376.443), stdev = 154.109
[info]   CI (99.9%): [1624.847, 2811.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   101889.067 ±(99.9%) 37502.587 B/op [Average]
[info]   (min, avg, max) = (92170.201, 101889.067, 118179.811), stdev = 9739.303
[info]   CI (99.9%): [64386.480, 139391.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2223.009 ±(99.9%) 988.235 MB/sec [Average]
[info]   (min, avg, max) = (1986.663, 2223.009, 2616.640), stdev = 256.641
[info]   CI (99.9%): [1234.774, 3211.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   102317.927 ±(99.9%) 61363.808 B/op [Average]
[info]   (min, avg, max) = (90882.847, 102317.927, 130124.691), stdev = 15935.986
[info]   CI (99.9%): [40954.118, 163681.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.259 ±(99.9%) 9.383 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.259, 5.464), stdev = 2.437
[info]   CI (99.9%): [≈ 0, 11.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   105.590 ±(99.9%) 434.647 B/op [Average]
[info]   (min, avg, max) = (2.840, 105.590, 243.312), stdev = 112.876
[info]   CI (99.9%): [≈ 0, 540.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.000, 17.000), stdev = 3.742
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16715.907 ops/s
[info] # Warmup Iteration   2: 84290.203 ops/s
[info] # Warmup Iteration   3: 86014.594 ops/s
[info] Iteration   1: 90253.116 ops/s
[info]                  ·gc.alloc.rate:                   2015.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              35139.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34185.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.298 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.070 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 90201.221 ops/s
[info]                  ·gc.alloc.rate:                   1999.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              34885.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34482.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.816 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 91333.272 ops/s
[info]                  ·gc.alloc.rate:                   2038.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              35104.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34368.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 92955.237 ops/s
[info]                  ·gc.alloc.rate:                   2093.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              35426.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34028.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.057 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 93036.989 ops/s
[info]                  ·gc.alloc.rate:                   2103.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              35582.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34187.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.761 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   91555.967 ±(99.9%) 5354.242 ops/s [Average]
[info]   (min, avg, max) = (90201.221, 91555.967, 93036.989), stdev = 1390.480
[info]   CI (99.9%): [86201.725, 96910.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2049.967 ±(99.9%) 179.133 MB/sec [Average]
[info]   (min, avg, max) = (1999.636, 2049.967, 2103.789), stdev = 46.520
[info]   CI (99.9%): [1870.834, 2229.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   35227.774 ±(99.9%) 1063.542 B/op [Average]
[info]   (min, avg, max) = (34885.739, 35227.774, 35582.280), stdev = 276.199
[info]   CI (99.9%): [34164.231, 36291.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1992.848 ±(99.9%) 95.232 MB/sec [Average]
[info]   (min, avg, max) = (1960.475, 1992.848, 2021.319), stdev = 24.731
[info]   CI (99.9%): [1897.617, 2088.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34250.667 ±(99.9%) 681.338 B/op [Average]
[info]   (min, avg, max) = (34028.782, 34250.667, 34482.997), stdev = 176.941
[info]   CI (99.9%): [33569.330, 34932.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.518 ±(99.9%) 3.834 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.518, 2.298), stdev = 0.996
[info]   CI (99.9%): [≈ 0, 4.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.013 ±(99.9%) 66.893 B/op [Average]
[info]   (min, avg, max) = (0.359, 9.013, 40.070), stdev = 17.372
[info]   CI (99.9%): [≈ 0, 75.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41571.912 ops/s
[info] # Warmup Iteration   2: 172068.122 ops/s
[info] # Warmup Iteration   3: 219344.583 ops/s
[info] Iteration   1: 243123.245 ops/s
[info]                  ·gc.alloc.rate:                   1681.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              10882.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10581.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 249963.393 ops/s
[info]                  ·gc.alloc.rate:                   1714.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              10791.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10229.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.243 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 251814.306 ops/s
[info]                  ·gc.alloc.rate:                   1722.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              10763.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10150.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 252080.178 ops/s
[info]                  ·gc.alloc.rate:                   1751.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              10926.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12247.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 249213.823 ops/s
[info]                  ·gc.alloc.rate:                   1732.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              10937.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10450.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   249238.989 ±(99.9%) 13967.853 ops/s [Average]
[info]   (min, avg, max) = (243123.245, 249238.989, 252080.178), stdev = 3627.407
[info]   CI (99.9%): [235271.136, 263206.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1720.113 ±(99.9%) 99.082 MB/sec [Average]
[info]   (min, avg, max) = (1681.252, 1720.113, 1751.009), stdev = 25.731
[info]   CI (99.9%): [1621.031, 1819.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10860.297 ±(99.9%) 303.957 B/op [Average]
[info]   (min, avg, max) = (10763.279, 10860.297, 10937.625), stdev = 78.937
[info]   CI (99.9%): [10556.340, 11164.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1700.265 ±(99.9%) 567.017 MB/sec [Average]
[info]   (min, avg, max) = (1624.095, 1700.265, 1962.732), stdev = 147.253
[info]   CI (99.9%): [1133.248, 2267.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10731.929 ±(99.9%) 3328.079 B/op [Average]
[info]   (min, avg, max) = (10150.357, 10731.929, 12247.168), stdev = 864.291
[info]   CI (99.9%): [7403.850, 14060.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.927 ±(99.9%) 6.157 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.927, 3.718), stdev = 1.599
[info]   CI (99.9%): [≈ 0, 7.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.967 ±(99.9%) 39.874 B/op [Average]
[info]   (min, avg, max) = (0.130, 5.967, 24.069), stdev = 10.355
[info]   CI (99.9%): [≈ 0, 45.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 19.000), stdev = 4.930
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 640323.881 ops/s
[info] # Warmup Iteration   2: 857998.111 ops/s
[info] # Warmup Iteration   3: 1090455.737 ops/s
[info] Iteration   1: 1059978.318 ops/s
[info]                  ·gc.alloc.rate:                   898.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              1334.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1048535.999 ops/s
[info]                  ·gc.alloc.rate:                   900.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              1351.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1483.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1104316.858 ops/s
[info]                  ·gc.alloc.rate:                   936.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              1334.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1411.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.676 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1086851.027 ops/s
[info]                  ·gc.alloc.rate:                   914.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              1324.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     951.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.296 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1066899.109 ops/s
[info]                  ·gc.alloc.rate:                   909.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              1341.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1449.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1073316.262 ±(99.9%) 85614.477 ops/s [Average]
[info]   (min, avg, max) = (1048535.999, 1073316.262, 1104316.858), stdev = 22233.808
[info]   CI (99.9%): [987701.785, 1158930.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   912.097 ±(99.9%) 58.337 MB/sec [Average]
[info]   (min, avg, max) = (898.955, 912.097, 936.650), stdev = 15.150
[info]   CI (99.9%): [853.760, 970.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1337.437 ±(99.9%) 38.761 B/op [Average]
[info]   (min, avg, max) = (1324.610, 1337.437, 1351.984), stdev = 10.066
[info]   CI (99.9%): [1298.676, 1376.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   855.381 ±(99.9%) 695.630 MB/sec [Average]
[info]   (min, avg, max) = (656.837, 855.381, 990.612), stdev = 180.653
[info]   CI (99.9%): [159.751, 1551.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1254.627 ±(99.9%) 1026.470 B/op [Average]
[info]   (min, avg, max) = (951.093, 1254.627, 1483.826), stdev = 266.571
[info]   CI (99.9%): [228.157, 2281.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.855 ±(99.9%) 5.417 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.855, 3.281), stdev = 1.407
[info]   CI (99.9%): [≈ 0, 6.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.224 ±(99.9%) 7.717 B/op [Average]
[info]   (min, avg, max) = (0.031, 1.224, 4.676), stdev = 2.004
[info]   CI (99.9%): [≈ 0, 8.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 917382.329 ops/s
[info] # Warmup Iteration   2: 978367.163 ops/s
[info] # Warmup Iteration   3: 1140411.922 ops/s
[info] Iteration   1: 1141579.468 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1145581.774 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1144638.019 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1147745.007 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1150668.915 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1146042.637 ±(99.9%) 13115.631 ops/s [Average]
[info]   (min, avg, max) = (1141579.468, 1146042.637, 1150668.915), stdev = 3406.088
[info]   CI (99.9%): [1132927.006, 1159158.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:41:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15113.687 ops/s
[info] # Warmup Iteration   2: 144592.665 ops/s
[info] # Warmup Iteration   3: 195159.308 ops/s
[info] Iteration   1: 225441.639 ops/s
[info]                  ·gc.alloc.rate:                   2383.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              16638.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16010.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.846 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 232256.111 ops/s
[info]                  ·gc.alloc.rate:                   2434.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              16493.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15630.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 232438.540 ops/s
[info]                  ·gc.alloc.rate:               2461.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          16666.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2329.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15772.299 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 233374.365 ops/s
[info]                  ·gc.alloc.rate:                   2496.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              16834.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15842.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.421 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 234003.099 ops/s
[info]                  ·gc.alloc.rate:                   2498.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              16800.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2362.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15889.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   231502.751 ±(99.9%) 13329.988 ops/s [Average]
[info]   (min, avg, max) = (225441.639, 231502.751, 234003.099), stdev = 3461.755
[info]   CI (99.9%): [218172.763, 244832.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2454.941 ±(99.9%) 183.965 MB/sec [Average]
[info]   (min, avg, max) = (2383.636, 2454.941, 2498.151), stdev = 47.775
[info]   CI (99.9%): [2270.976, 2638.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   16687.058 ±(99.9%) 526.390 B/op [Average]
[info]   (min, avg, max) = (16493.998, 16687.058, 16834.828), stdev = 136.702
[info]   CI (99.9%): [16160.668, 17213.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2328.498 ±(99.9%) 109.942 MB/sec [Average]
[info]   (min, avg, max) = (2293.645, 2328.498, 2362.658), stdev = 28.552
[info]   CI (99.9%): [2218.556, 2438.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   15829.126 ±(99.9%) 542.130 B/op [Average]
[info]   (min, avg, max) = (15630.986, 15829.126, 16010.746), stdev = 140.789
[info]   CI (99.9%): [15286.997, 16371.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.360 ±(99.9%) 2.879 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 1.697), stdev = 0.748
[info]   CI (99.9%): [≈ 0, 3.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.510 ±(99.9%) 20.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.510, 11.846), stdev = 5.221
[info]   CI (99.9%): [≈ 0, 22.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1896.032 ops/s
[info] # Warmup Iteration   2: 31085.497 ops/s
[info] # Warmup Iteration   3: 54084.616 ops/s
[info] Iteration   1: 61704.484 ops/s
[info]                  ·gc.alloc.rate:                   1958.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              49952.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1921.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49017.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 52255.983 ops/s
[info]                  ·gc.alloc.rate:                   1726.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              52008.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1929.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58101.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.317 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 310.707 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 55286.142 ops/s
[info]                  ·gc.alloc.rate:                   1512.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              43054.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1283.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36541.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.778 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 55453.072 ops/s
[info]                  ·gc.alloc.rate:                   1521.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              43182.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1604.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45544.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.363 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 56944.523 ops/s
[info]                  ·gc.alloc.rate:                   1556.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              43018.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44763.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.151 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   56328.841 ±(99.9%) 13299.916 ops/s [Average]
[info]   (min, avg, max) = (52255.983, 56328.841, 61704.484), stdev = 3453.946
[info]   CI (99.9%): [43028.925, 69628.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1655.235 ±(99.9%) 732.950 MB/sec [Average]
[info]   (min, avg, max) = (1512.584, 1655.235, 1958.314), stdev = 190.345
[info]   CI (99.9%): [922.285, 2388.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   46243.438 ±(99.9%) 16886.826 B/op [Average]
[info]   (min, avg, max) = (43018.901, 46243.438, 52008.503), stdev = 4385.455
[info]   CI (99.9%): [29356.613, 63130.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1671.881 ±(99.9%) 1030.564 MB/sec [Average]
[info]   (min, avg, max) = (1283.763, 1671.881, 1929.323), stdev = 267.634
[info]   CI (99.9%): [641.317, 2702.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46793.826 ±(99.9%) 30049.868 B/op [Average]
[info]   (min, avg, max) = (36541.630, 46793.826, 58101.523), stdev = 7803.855
[info]   CI (99.9%): [16743.957, 76843.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.105 ±(99.9%) 17.678 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.105, 10.317), stdev = 4.591
[info]   CI (99.9%): [≈ 0, 19.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   63.306 ±(99.9%) 532.557 B/op [Average]
[info]   (min, avg, max) = (0.531, 63.306, 310.707), stdev = 138.303
[info]   CI (99.9%): [≈ 0, 595.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.200, 21.000), stdev = 7.596
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 294881.012 ops/s
[info] # Warmup Iteration   2: 666121.884 ops/s
[info] # Warmup Iteration   3: 783526.402 ops/s
[info] Iteration   1: 791991.715 ops/s
[info]                  ·gc.alloc.rate:                   1579.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              3138.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2623.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.941 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 765266.105 ops/s
[info]                  ·gc.alloc.rate:                   1561.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              3210.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3375.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.183 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 781594.402 ops/s
[info]                  ·gc.alloc.rate:                   1586.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              3194.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3301.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 793217.589 ops/s
[info]                  ·gc.alloc.rate:               1586.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          3148.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2611.580 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 792514.660 ops/s
[info]                  ·gc.alloc.rate:                   1595.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              3168.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3290.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   784916.894 ±(99.9%) 46122.338 ops/s [Average]
[info]   (min, avg, max) = (765266.105, 784916.894, 793217.589), stdev = 11977.825
[info]   CI (99.9%): [738794.557, 831039.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1581.849 ±(99.9%) 49.515 MB/sec [Average]
[info]   (min, avg, max) = (1561.203, 1581.849, 1595.424), stdev = 12.859
[info]   CI (99.9%): [1532.334, 1631.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3171.872 ±(99.9%) 116.722 B/op [Average]
[info]   (min, avg, max) = (3138.467, 3171.872, 3210.438), stdev = 30.312
[info]   CI (99.9%): [3055.150, 3288.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1514.932 ±(99.9%) 691.459 MB/sec [Average]
[info]   (min, avg, max) = (1316.417, 1514.932, 1657.029), stdev = 179.570
[info]   CI (99.9%): [823.473, 2206.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3040.456 ±(99.9%) 1491.887 B/op [Average]
[info]   (min, avg, max) = (2611.580, 3040.456, 3375.442), stdev = 387.438
[info]   CI (99.9%): [1548.569, 4532.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 4.978 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.823, 2.990), stdev = 1.293
[info]   CI (99.9%): [≈ 0, 5.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.650 ±(99.9%) 9.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.650, 5.941), stdev = 2.572
[info]   CI (99.9%): [≈ 0, 11.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 510.700 ops/s
[info] # Warmup Iteration   2: 25003.348 ops/s
[info] # Warmup Iteration   3: 45522.512 ops/s
[info] Iteration   1: 51238.296 ops/s
[info]                  ·gc.alloc.rate:                   2873.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              88249.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2940.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90305.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.479 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 48059.078 ops/s
[info]                  ·gc.alloc.rate:                   2882.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              94391.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2956.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96823.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.111 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 363.843 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 45570.743 ops/s
[info]                  ·gc.alloc.rate:                   2611.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              90174.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79502.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133.224 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 46829.505 ops/s
[info]                  ·gc.alloc.rate:                   2562.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              86101.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88862.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.498 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 44826.941 ops/s
[info]                  ·gc.alloc.rate:                   2432.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              85371.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81984.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.923 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   47304.913 ±(99.9%) 9705.984 ops/s [Average]
[info]   (min, avg, max) = (44826.941, 47304.913, 51238.296), stdev = 2520.613
[info]   CI (99.9%): [37598.928, 57010.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2672.387 ±(99.9%) 765.464 MB/sec [Average]
[info]   (min, avg, max) = (2432.399, 2672.387, 2882.616), stdev = 198.788
[info]   CI (99.9%): [1906.924, 3437.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   88857.783 ±(99.9%) 13946.844 B/op [Average]
[info]   (min, avg, max) = (85371.864, 88857.783, 94391.211), stdev = 3621.951
[info]   CI (99.9%): [74910.940, 102804.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2635.951 ±(99.9%) 1213.267 MB/sec [Average]
[info]   (min, avg, max) = (2302.266, 2635.951, 2956.891), stdev = 315.082
[info]   CI (99.9%): [1422.684, 3849.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   87495.715 ±(99.9%) 26610.764 B/op [Average]
[info]   (min, avg, max) = (79502.406, 87495.715, 96823.346), stdev = 6910.731
[info]   CI (99.9%): [60884.951, 114106.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.243 ±(99.9%) 17.948 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 3.243, 11.111), stdev = 4.661
[info]   CI (99.9%): [≈ 0, 21.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   107.193 ±(99.9%) 589.518 B/op [Average]
[info]   (min, avg, max) = (2.923, 107.193, 363.843), stdev = 153.096
[info]   CI (99.9%): [≈ 0, 696.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 1.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   76.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 15.200, 21.000), stdev = 4.147
[info]   CI (99.9%): [76.000, 76.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103634.734 ops/s
[info] # Warmup Iteration   2: 295747.686 ops/s
[info] # Warmup Iteration   3: 413788.610 ops/s
[info] Iteration   1: 407466.658 ops/s
[info]                  ·gc.alloc.rate:                   1064.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              4109.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3784.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 399930.949 ops/s
[info]                  ·gc.alloc.rate:               1074.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          4228.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3864.041 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 414700.591 ops/s
[info]                  ·gc.alloc.rate:                   1078.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              4091.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3728.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 414541.449 ops/s
[info]                  ·gc.alloc.rate:                   1094.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              4155.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4941.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.474 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 416358.367 ops/s
[info]                  ·gc.alloc.rate:                   1077.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              4071.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3688.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   410599.603 ±(99.9%) 26479.662 ops/s [Average]
[info]   (min, avg, max) = (399930.949, 410599.603, 416358.367), stdev = 6876.684
[info]   CI (99.9%): [384119.941, 437079.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1077.785 ±(99.9%) 42.319 MB/sec [Average]
[info]   (min, avg, max) = (1064.086, 1077.785, 1094.668), stdev = 10.990
[info]   CI (99.9%): [1035.466, 1120.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4131.556 ±(99.9%) 241.062 B/op [Average]
[info]   (min, avg, max) = (4071.778, 4131.556, 4228.823), stdev = 62.603
[info]   CI (99.9%): [3890.495, 4372.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1044.418 ±(99.9%) 553.864 MB/sec [Average]
[info]   (min, avg, max) = (975.945, 1044.418, 1301.679), stdev = 143.837
[info]   CI (99.9%): [490.553, 1598.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4001.567 ±(99.9%) 2039.268 B/op [Average]
[info]   (min, avg, max) = (3688.800, 4001.567, 4941.592), stdev = 529.591
[info]   CI (99.9%): [1962.299, 6040.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.910 ±(99.9%) 7.392 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.910, 4.343), stdev = 1.920
[info]   CI (99.9%): [≈ 0, 8.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.455 ±(99.9%) 28.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.455, 16.481), stdev = 7.284
[info]   CI (99.9%): [≈ 0, 31.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 829077.382 ops/s
[info] # Warmup Iteration   2: 1263136.840 ops/s
[info] # Warmup Iteration   3: 1572616.252 ops/s
[info] Iteration   1: 1547882.645 ops/s
[info]                  ·gc.alloc.rate:                   920.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     669.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1514239.128 ops/s
[info]                  ·gc.alloc.rate:                   948.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              985.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1026.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1529780.344 ops/s
[info]                  ·gc.alloc.rate:                   928.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1018.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1640163.142 ops/s
[info]                  ·gc.alloc.rate:                   988.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              948.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     944.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.779 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1654754.992 ops/s
[info]                  ·gc.alloc.rate:                   987.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              939.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     933.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1577364.050 ±(99.9%) 251409.026 ops/s [Average]
[info]   (min, avg, max) = (1514239.128, 1577364.050, 1654754.992), stdev = 65290.126
[info]   CI (99.9%): [1325955.024, 1828773.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   954.737 ±(99.9%) 123.319 MB/sec [Average]
[info]   (min, avg, max) = (920.851, 954.737, 988.268), stdev = 32.025
[info]   CI (99.9%): [831.418, 1078.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   952.918 ±(99.9%) 76.335 B/op [Average]
[info]   (min, avg, max) = (936.210, 952.918, 985.845), stdev = 19.824
[info]   CI (99.9%): [876.583, 1029.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.524 ±(99.9%) 564.787 MB/sec [Average]
[info]   (min, avg, max) = (658.204, 920.524, 989.914), stdev = 146.673
[info]   CI (99.9%): [355.737, 1485.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   918.579 ±(99.9%) 560.559 B/op [Average]
[info]   (min, avg, max) = (669.182, 918.579, 1026.713), stdev = 145.575
[info]   CI (99.9%): [358.021, 1479.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 5.299 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.820, 3.206), stdev = 1.376
[info]   CI (99.9%): [≈ 0, 6.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.832 ±(99.9%) 5.455 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.832, 3.298), stdev = 1.417
[info]   CI (99.9%): [≈ 0, 6.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 604154.172 ops/s
[info] # Warmup Iteration   2: 1415149.112 ops/s
[info] # Warmup Iteration   3: 1715403.755 ops/s
[info] Iteration   1: 1717050.137 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1715644.697 ops/s
[info]                  ·gc.alloc.rate:      0.926 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.849 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1712771.807 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1651183.396 ops/s
[info]                  ·gc.alloc.rate:      16.001 MB/sec
[info]                  ·gc.alloc.rate.norm: 15.250 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1707865.599 ops/s
[info]                  ·gc.alloc.rate:      3.543 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.265 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1700903.127 ±(99.9%) 107877.029 ops/s [Average]
[info]   (min, avg, max) = (1651183.396, 1700903.127, 1717050.137), stdev = 28015.322
[info]   CI (99.9%): [1593026.099, 1808780.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.094 ±(99.9%) 26.233 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.094, 16.001), stdev = 6.813
[info]   CI (99.9%): [≈ 0, 30.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   3.873 ±(99.9%) 25.026 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.873, 15.250), stdev = 6.499
[info]   CI (99.9%): [≈ 0, 28.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25327.706 ops/s
[info] # Warmup Iteration   2: 237717.818 ops/s
[info] # Warmup Iteration   3: 324040.654 ops/s
[info] Iteration   1: 359837.945 ops/s
[info]                  ·gc.alloc.rate:                   2297.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              10049.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10052.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.621 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 367391.363 ops/s
[info]                  ·gc.alloc.rate:                   2304.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              9871.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9877.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.357 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 371442.934 ops/s
[info]                  ·gc.alloc.rate:               2347.777 MB/sec
[info]                  ·gc.alloc.rate.norm:          9947.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2325.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9851.674 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 365018.763 ops/s
[info]                  ·gc.alloc.rate:                   2329.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              10043.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10115.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 369134.062 ops/s
[info]                  ·gc.alloc.rate:                   2348.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              10009.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8622.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   366565.013 ±(99.9%) 17082.424 ops/s [Average]
[info]   (min, avg, max) = (359837.945, 366565.013, 371442.934), stdev = 4436.251
[info]   CI (99.9%): [349482.589, 383647.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2325.606 ±(99.9%) 91.290 MB/sec [Average]
[info]   (min, avg, max) = (2297.762, 2325.606, 2348.422), stdev = 23.708
[info]   CI (99.9%): [2234.316, 2416.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9984.216 ±(99.9%) 288.819 B/op [Average]
[info]   (min, avg, max) = (9871.297, 9984.216, 10049.325), stdev = 75.005
[info]   CI (99.9%): [9695.397, 10273.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2259.802 ±(99.9%) 514.531 MB/sec [Average]
[info]   (min, avg, max) = (2023.072, 2259.802, 2346.247), stdev = 133.622
[info]   CI (99.9%): [1745.270, 2774.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9704.050 ±(99.9%) 2367.572 B/op [Average]
[info]   (min, avg, max) = (8622.705, 9704.050, 10115.546), stdev = 614.851
[info]   CI (99.9%): [7336.478, 12071.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 3.710 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 2.200), stdev = 0.963
[info]   CI (99.9%): [≈ 0, 4.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.085 ±(99.9%) 16.231 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.085, 9.621), stdev = 4.215
[info]   CI (99.9%): [≈ 0, 18.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.600, 14.000), stdev = 2.191
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17521.354 ops/s
[info] # Warmup Iteration   2: 32088.500 ops/s
[info] # Warmup Iteration   3: 77075.861 ops/s
[info] Iteration   1: 75464.351 ops/s
[info]                  ·gc.alloc.rate:                   1950.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              40669.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40676.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.274 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.679 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 83739.413 ops/s
[info]                  ·gc.alloc.rate:                   1853.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              34837.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36481.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.731 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 85026.181 ops/s
[info]                  ·gc.alloc.rate:                   1738.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              32176.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29913.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.156 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 86710.112 ops/s
[info]                  ·gc.alloc.rate:                   1788.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              32451.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35445.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.511 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 85614.004 ops/s
[info]                  ·gc.alloc.rate:                   1750.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              32177.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30239.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.765 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   83310.812 ±(99.9%) 17386.955 ops/s [Average]
[info]   (min, avg, max) = (75464.351, 83310.812, 86710.112), stdev = 4515.337
[info]   CI (99.9%): [65923.857, 100697.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1816.343 ±(99.9%) 335.922 MB/sec [Average]
[info]   (min, avg, max) = (1738.957, 1816.343, 1950.248), stdev = 87.238
[info]   CI (99.9%): [1480.421, 2152.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34462.566 ±(99.9%) 14037.968 B/op [Average]
[info]   (min, avg, max) = (32176.586, 34462.566, 40669.638), stdev = 3645.616
[info]   CI (99.9%): [20424.598, 48500.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1821.348 ±(99.9%) 670.679 MB/sec [Average]
[info]   (min, avg, max) = (1616.671, 1821.348, 1953.060), stdev = 174.173
[info]   CI (99.9%): [1150.669, 2492.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34551.279 ±(99.9%) 17449.194 B/op [Average]
[info]   (min, avg, max) = (29913.867, 34551.279, 40676.619), stdev = 4531.500
[info]   CI (99.9%): [17102.085, 52000.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.543 ±(99.9%) 13.365 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.543, 7.274), stdev = 3.471
[info]   CI (99.9%): [≈ 0, 15.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   50.769 ±(99.9%) 271.405 B/op [Average]
[info]   (min, avg, max) = (0.765, 50.769, 151.679), stdev = 70.483
[info]   CI (99.9%): [≈ 0, 322.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.400, 27.000), stdev = 8.414
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25054.219 ops/s
[info] # Warmup Iteration   2: 69457.886 ops/s
[info] # Warmup Iteration   3: 88226.332 ops/s
[info] Iteration   1: 92798.113 ops/s
[info]                  ·gc.alloc.rate:                   1198.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              20330.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16448.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 92211.050 ops/s
[info]                  ·gc.alloc.rate:                   1204.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              20559.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22102.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 94504.248 ops/s
[info]                  ·gc.alloc.rate:                   1239.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              20639.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21654.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.773 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 94741.878 ops/s
[info]                  ·gc.alloc.rate:                   1220.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              20268.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16266.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 95141.781 ops/s
[info]                  ·gc.alloc.rate:               1230.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          20354.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21740.195 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   93879.414 ±(99.9%) 4976.308 ops/s [Average]
[info]   (min, avg, max) = (92211.050, 93879.414, 95141.781), stdev = 1292.331
[info]   CI (99.9%): [88903.106, 98855.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1218.752 ±(99.9%) 65.556 MB/sec [Average]
[info]   (min, avg, max) = (1198.887, 1218.752, 1239.378), stdev = 17.025
[info]   CI (99.9%): [1153.197, 1284.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20430.576 ±(99.9%) 615.769 B/op [Average]
[info]   (min, avg, max) = (20268.814, 20430.576, 20639.573), stdev = 159.913
[info]   CI (99.9%): [19814.807, 21046.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1171.808 ±(99.9%) 693.764 MB/sec [Average]
[info]   (min, avg, max) = (969.968, 1171.808, 1314.346), stdev = 180.168
[info]   CI (99.9%): [478.044, 1865.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19642.480 ±(99.9%) 11567.611 B/op [Average]
[info]   (min, avg, max) = (16266.771, 19642.480, 22102.571), stdev = 3004.072
[info]   CI (99.9%): [8074.869, 31210.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 3.852 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 2.363), stdev = 1.000
[info]   CI (99.9%): [≈ 0, 4.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.305 ±(99.9%) 65.364 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.305, 40.076), stdev = 16.975
[info]   CI (99.9%): [≈ 0, 76.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33142.107 ops/s
[info] # Warmup Iteration   2: 75567.449 ops/s
[info] # Warmup Iteration   3: 93156.643 ops/s
[info] Iteration   1: 98833.962 ops/s
[info]                  ·gc.alloc.rate:                   1579.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              25145.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25475.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.673 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 101363.234 ops/s
[info]                  ·gc.alloc.rate:                   1246.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              19354.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19889.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.814 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 100109.623 ops/s
[info]                  ·gc.alloc.rate:                   1240.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              19490.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1272.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20002.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.236 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.427 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 104201.654 ops/s
[info]                  ·gc.alloc.rate:                   1288.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              19453.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1269.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19165.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 103675.837 ops/s
[info]                  ·gc.alloc.rate:                   1278.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              19413.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19374.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   101636.862 ±(99.9%) 8822.758 ops/s [Average]
[info]   (min, avg, max) = (98833.962, 101636.862, 104201.654), stdev = 2291.242
[info]   CI (99.9%): [92814.104, 110459.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1326.687 ±(99.9%) 549.928 MB/sec [Average]
[info]   (min, avg, max) = (1240.155, 1326.687, 1579.527), stdev = 142.815
[info]   CI (99.9%): [776.760, 1876.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20571.488 ±(99.9%) 9848.612 B/op [Average]
[info]   (min, avg, max) = (19354.372, 20571.488, 25145.864), stdev = 2557.653
[info]   CI (99.9%): [10722.876, 30420.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1339.923 ±(99.9%) 560.604 MB/sec [Average]
[info]   (min, avg, max) = (1269.108, 1339.923, 1600.235), stdev = 145.587
[info]   CI (99.9%): [779.319, 1900.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20781.645 ±(99.9%) 10192.576 B/op [Average]
[info]   (min, avg, max) = (19165.993, 20781.645, 25475.540), stdev = 2646.980
[info]   CI (99.9%): [10589.069, 30974.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.746 ±(99.9%) 8.629 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.746, 5.463), stdev = 2.241
[info]   CI (99.9%): [≈ 0, 10.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   27.309 ±(99.9%) 134.018 B/op [Average]
[info]   (min, avg, max) = (0.314, 27.309, 84.814), stdev = 34.804
[info]   CI (99.9%): [≈ 0, 161.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.000, 26.000), stdev = 8.944
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3565.720 ops/s
[info] # Warmup Iteration   2: 37729.883 ops/s
[info] # Warmup Iteration   3: 61649.129 ops/s
[info] Iteration   1: 55203.796 ops/s
[info]                  ·gc.alloc.rate:                   2320.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              66153.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64821.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.266 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.622 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 59271.227 ops/s
[info]                  ·gc.alloc.rate:                   2328.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              61806.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60926.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.764 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 58114.102 ops/s
[info]                  ·gc.alloc.rate:                   2288.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              61974.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53831.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.128 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 57697.988 ops/s
[info]                  ·gc.alloc.rate:                   2298.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              62702.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63859.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.703 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 56926.763 ops/s
[info]                  ·gc.alloc.rate:                   2256.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              62388.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55837.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   57442.775 ±(99.9%) 5820.190 ops/s [Average]
[info]   (min, avg, max) = (55203.796, 57442.775, 59271.227), stdev = 1511.485
[info]   CI (99.9%): [51622.585, 63262.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2298.653 ±(99.9%) 109.302 MB/sec [Average]
[info]   (min, avg, max) = (2256.724, 2298.653, 2328.270), stdev = 28.385
[info]   CI (99.9%): [2189.351, 2407.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63004.857 ±(99.9%) 6910.238 B/op [Average]
[info]   (min, avg, max) = (61806.602, 63004.857, 66153.129), stdev = 1794.567
[info]   CI (99.9%): [56094.619, 69915.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2183.635 ±(99.9%) 640.397 MB/sec [Average]
[info]   (min, avg, max) = (1987.906, 2183.635, 2341.390), stdev = 166.309
[info]   CI (99.9%): [1543.237, 2824.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   59855.282 ±(99.9%) 18693.943 B/op [Average]
[info]   (min, avg, max) = (53831.411, 59855.282, 64821.511), stdev = 4854.758
[info]   CI (99.9%): [41161.338, 78549.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.299 ±(99.9%) 10.693 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.299, 6.266), stdev = 2.777
[info]   CI (99.9%): [≈ 0, 11.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.958 ±(99.9%) 304.958 B/op [Average]
[info]   (min, avg, max) = (0.576, 36.958, 178.622), stdev = 79.197
[info]   CI (99.9%): [≈ 0, 341.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 14.000), stdev = 2.449
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38755.894 ops/s
[info] # Warmup Iteration   2: 133708.938 ops/s
[info] # Warmup Iteration   3: 143463.688 ops/s
[info] Iteration   1: 163501.319 ops/s
[info]                  ·gc.alloc.rate:                   1532.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              14742.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12529.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.511 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 164054.099 ops/s
[info]                  ·gc.alloc.rate:                   1551.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              14883.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15609.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 165257.685 ops/s
[info]                  ·gc.alloc.rate:                   1561.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              14868.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15577.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 166827.471 ops/s
[info]                  ·gc.alloc.rate:                   1561.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              14725.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12398.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 166072.228 ops/s
[info]                  ·gc.alloc.rate:                   1580.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              14975.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15637.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   165142.560 ±(99.9%) 5305.958 ops/s [Average]
[info]   (min, avg, max) = (163501.319, 165142.560, 166827.471), stdev = 1377.940
[info]   CI (99.9%): [159836.602, 170448.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1557.319 ±(99.9%) 67.514 MB/sec [Average]
[info]   (min, avg, max) = (1532.082, 1557.319, 1580.389), stdev = 17.533
[info]   CI (99.9%): [1489.804, 1624.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14838.985 ±(99.9%) 402.395 B/op [Average]
[info]   (min, avg, max) = (14725.622, 14838.985, 14975.534), stdev = 104.501
[info]   CI (99.9%): [14436.590, 15241.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1505.979 ±(99.9%) 696.089 MB/sec [Average]
[info]   (min, avg, max) = (1302.083, 1505.979, 1650.224), stdev = 180.772
[info]   CI (99.9%): [809.890, 2202.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14350.307 ±(99.9%) 6634.238 B/op [Average]
[info]   (min, avg, max) = (12398.512, 14350.307, 15637.284), stdev = 1722.890
[info]   CI (99.9%): [7716.069, 20984.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.615 ±(99.9%) 3.097 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.615, 1.511), stdev = 0.804
[info]   CI (99.9%): [≈ 0, 3.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.887 ±(99.9%) 29.655 B/op [Average]
[info]   (min, avg, max) = (0.196, 5.887, 14.535), stdev = 7.701
[info]   CI (99.9%): [≈ 0, 35.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93417.149 ops/s
[info] # Warmup Iteration   2: 295993.491 ops/s
[info] # Warmup Iteration   3: 321666.295 ops/s
[info] Iteration   1: 334791.752 ops/s
[info]                  ·gc.alloc.rate:                   430.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              2021.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3003.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 334941.579 ops/s
[info]                  ·gc.alloc.rate:               425.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          2001.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1507.132 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 335547.404 ops/s
[info]                  ·gc.alloc.rate:                   424.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              1989.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1504.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 336256.232 ops/s
[info]                  ·gc.alloc.rate:               425.331 MB/sec
[info]                  ·gc.alloc.rate.norm:          1990.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1507.426 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 336857.705 ops/s
[info]                  ·gc.alloc.rate:               434.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          2031.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3015.850 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   335678.934 ±(99.9%) 3373.907 ops/s [Average]
[info]   (min, avg, max) = (334791.752, 335678.934, 336857.705), stdev = 876.193
[info]   CI (99.9%): [332305.027, 339052.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   428.089 ±(99.9%) 17.037 MB/sec [Average]
[info]   (min, avg, max) = (424.182, 428.089, 434.923), stdev = 4.424
[info]   CI (99.9%): [411.053, 445.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2006.980 ±(99.9%) 73.405 B/op [Average]
[info]   (min, avg, max) = (1989.423, 2006.980, 2031.950), stdev = 19.063
[info]   CI (99.9%): [1933.575, 2080.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.595 ±(99.9%) 677.016 MB/sec [Average]
[info]   (min, avg, max) = (320.757, 449.595, 645.519), stdev = 175.819
[info]   CI (99.9%): [≈ 0, 1126.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2107.560 ±(99.9%) 3170.296 B/op [Average]
[info]   (min, avg, max) = (1504.357, 2107.560, 3015.850), stdev = 823.316
[info]   CI (99.9%): [≈ 0, 5277.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.195), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:38:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 487180.326 ops/s
[info] # Warmup Iteration   2: 795700.239 ops/s
[info] # Warmup Iteration   3: 947198.761 ops/s
[info] Iteration   1: 929349.785 ops/s
[info]                  ·gc.alloc.rate:               1192.807 MB/sec
[info]                  ·gc.alloc.rate.norm:          2019.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2232.523 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   2: 964327.785 ops/s
[info]                  ·gc.alloc.rate:                   1223.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              1997.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1616.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.797 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 944045.853 ops/s
[info]                  ·gc.alloc.rate:                   1217.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2028.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2185.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 939379.440 ops/s
[info]                  ·gc.alloc.rate:                   1204.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              2016.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2191.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 944393.982 ops/s
[info]                  ·gc.alloc.rate:                   1229.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              2049.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1637.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   944299.369 ±(99.9%) 49044.962 ops/s [Average]
[info]   (min, avg, max) = (929349.785, 944299.369, 964327.785), stdev = 12736.821
[info]   CI (99.9%): [895254.407, 993344.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1213.532 ±(99.9%) 57.914 MB/sec [Average]
[info]   (min, avg, max) = (1192.807, 1213.532, 1229.808), stdev = 15.040
[info]   CI (99.9%): [1155.617, 1271.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2022.362 ±(99.9%) 72.707 B/op [Average]
[info]   (min, avg, max) = (1997.393, 2022.362, 2049.229), stdev = 18.882
[info]   CI (99.9%): [1949.656, 2095.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.354 ±(99.9%) 687.673 MB/sec [Average]
[info]   (min, avg, max) = (982.981, 1182.354, 1318.409), stdev = 178.586
[info]   CI (99.9%): [494.681, 1870.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1972.887 ±(99.9%) 1217.287 B/op [Average]
[info]   (min, avg, max) = (1616.561, 1972.887, 2232.523), stdev = 316.126
[info]   CI (99.9%): [755.599, 3190.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 5.901 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 3.552), stdev = 1.532
[info]   CI (99.9%): [≈ 0, 6.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.451 ±(99.9%) 9.628 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.451, 5.797), stdev = 2.500
[info]   CI (99.9%): [≈ 0, 11.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 15.000), stdev = 4.528
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 557537.870 ops/s
[info] # Warmup Iteration   2: 1033818.851 ops/s
[info] # Warmup Iteration   3: 1153233.014 ops/s
[info] Iteration   1: 1152362.414 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1154724.381 ops/s
[info]                  ·gc.alloc.rate:      0.228 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.311 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1144024.372 ops/s
[info]                  ·gc.alloc.rate:      5.062 MB/sec
[info]                  ·gc.alloc.rate.norm: 6.963 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1149984.924 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1147416.912 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   1149702.601 ±(99.9%) 16089.891 ops/s [Average]
[info]   (min, avg, max) = (1144024.372, 1149702.601, 1154724.381), stdev = 4178.494
[info]   CI (99.9%): [1133612.709, 1165792.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.058 ±(99.9%) 8.627 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.058, 5.062), stdev = 2.240
[info]   CI (99.9%): [≈ 0, 9.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.455 ±(99.9%) 11.868 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 1.455, 6.963), stdev = 3.082
[info]   CI (99.9%): [≈ 0, 13.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51005.377 ops/s
[info] # Warmup Iteration   2: 156157.469 ops/s
[info] # Warmup Iteration   3: 209099.001 ops/s
[info] Iteration   1: 306769.507 ops/s
[info]                  ·gc.alloc.rate:                   930.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              4774.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3294.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 305464.810 ops/s
[info]                  ·gc.alloc.rate:                   932.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              4802.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4962.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.861 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 304298.023 ops/s
[info]                  ·gc.alloc.rate:                   935.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              4836.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4988.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.599 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 302608.225 ops/s
[info]                  ·gc.alloc.rate:                   952.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              4951.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5016.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 308706.856 ops/s
[info]                  ·gc.alloc.rate:                   945.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              4818.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4896.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   305569.484 ±(99.9%) 8964.598 ops/s [Average]
[info]   (min, avg, max) = (302608.225, 305569.484, 308706.856), stdev = 2328.078
[info]   CI (99.9%): [296604.886, 314534.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   939.097 ±(99.9%) 35.563 MB/sec [Average]
[info]   (min, avg, max) = (930.665, 939.097, 952.210), stdev = 9.236
[info]   CI (99.9%): [903.534, 974.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4836.604 ±(99.9%) 261.844 B/op [Average]
[info]   (min, avg, max) = (4774.382, 4836.604, 4951.273), stdev = 68.000
[info]   CI (99.9%): [4574.761, 5098.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   899.093 ±(99.9%) 553.079 MB/sec [Average]
[info]   (min, avg, max) = (642.172, 899.093, 964.798), stdev = 143.633
[info]   CI (99.9%): [346.014, 1452.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4631.835 ±(99.9%) 2884.016 B/op [Average]
[info]   (min, avg, max) = (3294.389, 4631.835, 5016.729), stdev = 748.970
[info]   CI (99.9%): [1747.819, 7515.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.046 ±(99.9%) 4.506 MB/sec [Average]
[info]   (min, avg, max) = (0.031, 1.046, 2.962), stdev = 1.170
[info]   CI (99.9%): [≈ 0, 5.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.413 ±(99.9%) 23.441 B/op [Average]
[info]   (min, avg, max) = (0.158, 5.413, 15.400), stdev = 6.088
[info]   CI (99.9%): [≈ 0, 28.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.449
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11979.910 ops/s
[info] # Warmup Iteration   2: 83070.713 ops/s
[info] # Warmup Iteration   3: 139132.226 ops/s
[info] Iteration   1: 145714.068 ops/s
[info]                  ·gc.alloc.rate:                   2215.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              23919.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24543.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.452 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 143311.783 ops/s
[info]                  ·gc.alloc.rate:                   1794.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              19708.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17755.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.774 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 143164.838 ops/s
[info]                  ·gc.alloc.rate:                   1793.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              19711.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21383.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.601 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 141558.548 ops/s
[info]                  ·gc.alloc.rate:                   1780.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              19789.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18214.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 141289.807 ops/s
[info]                  ·gc.alloc.rate:                   1759.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              19600.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18413.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   143007.809 ±(99.9%) 6805.077 ops/s [Average]
[info]   (min, avg, max) = (141289.807, 143007.809, 145714.068), stdev = 1767.257
[info]   CI (99.9%): [136202.732, 149812.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1868.729 ±(99.9%) 748.464 MB/sec [Average]
[info]   (min, avg, max) = (1759.621, 1868.729, 2215.509), stdev = 194.374
[info]   CI (99.9%): [1120.265, 2617.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20545.742 ±(99.9%) 7265.883 B/op [Average]
[info]   (min, avg, max) = (19600.149, 20545.742, 23919.033), stdev = 1886.927
[info]   CI (99.9%): [13279.859, 27811.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1825.517 ±(99.9%) 1094.548 MB/sec [Average]
[info]   (min, avg, max) = (1617.036, 1825.517, 2273.362), stdev = 284.251
[info]   CI (99.9%): [730.969, 2920.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20062.178 ±(99.9%) 11107.066 B/op [Average]
[info]   (min, avg, max) = (17755.611, 20062.178, 24543.621), stdev = 2884.470
[info]   CI (99.9%): [8955.112, 31169.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.837 ±(99.9%) 12.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.837, 7.359), stdev = 3.159
[info]   CI (99.9%): [≈ 0, 14.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19.904 ±(99.9%) 131.296 B/op [Average]
[info]   (min, avg, max) = (0.232, 19.904, 79.452), stdev = 34.097
[info]   CI (99.9%): [≈ 0, 151.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.400, 22.000), stdev = 6.580
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54148.664 ops/s
[info] # Warmup Iteration   2: 175986.918 ops/s
[info] # Warmup Iteration   3: 185243.034 ops/s
[info] Iteration   1: 208505.919 ops/s
[info]                  ·gc.alloc.rate:                   1182.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              8924.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          958.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7235.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.629 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 210390.663 ops/s
[info]                  ·gc.alloc.rate:                   1215.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              9090.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1275.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9542.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.447 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 213299.214 ops/s
[info]                  ·gc.alloc.rate:                   1214.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              8958.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1273.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9397.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.229 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 215217.682 ops/s
[info]                  ·gc.alloc.rate:                   1211.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              8859.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6995.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.651 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 215529.839 ops/s
[info]                  ·gc.alloc.rate:                   1218.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              8899.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9320.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   212588.663 ±(99.9%) 11800.691 ops/s [Average]
[info]   (min, avg, max) = (208505.919, 212588.663, 215529.839), stdev = 3064.602
[info]   CI (99.9%): [200787.972, 224389.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1208.447 ±(99.9%) 56.855 MB/sec [Average]
[info]   (min, avg, max) = (1182.441, 1208.447, 1218.756), stdev = 14.765
[info]   CI (99.9%): [1151.591, 1265.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8946.627 ±(99.9%) 340.089 B/op [Average]
[info]   (min, avg, max) = (8859.519, 8946.627, 9090.879), stdev = 88.320
[info]   CI (99.9%): [8606.538, 9286.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1148.200 ±(99.9%) 669.965 MB/sec [Average]
[info]   (min, avg, max) = (956.624, 1148.200, 1276.315), stdev = 173.988
[info]   CI (99.9%): [478.234, 1818.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8498.230 ±(99.9%) 4881.900 B/op [Average]
[info]   (min, avg, max) = (6995.248, 8498.230, 9542.702), stdev = 1267.814
[info]   CI (99.9%): [3616.330, 13380.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.677 ±(99.9%) 8.027 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.677, 4.739), stdev = 2.085
[info]   CI (99.9%): [≈ 0, 9.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.429 ±(99.9%) 59.805 B/op [Average]
[info]   (min, avg, max) = (0.629, 12.429, 35.447), stdev = 15.531
[info]   CI (99.9%): [≈ 0, 72.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.000, 21.000), stdev = 6.403
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:37:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141779.810 ops/s
[info] # Warmup Iteration   2: 447319.458 ops/s
[info] # Warmup Iteration   3: 577552.314 ops/s
[info] Iteration   1: 578534.419 ops/s
[info]                  ·gc.alloc.rate:                   1164.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              3166.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2663.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 582117.429 ops/s
[info]                  ·gc.alloc.rate:                   1169.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              3158.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3525.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 558406.568 ops/s
[info]                  ·gc.alloc.rate:                   1125.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              3171.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2750.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.349 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 579077.680 ops/s
[info]                  ·gc.alloc.rate:                   1154.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              3136.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2650.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 552571.700 ops/s
[info]                  ·gc.alloc.rate:                   1100.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              3133.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3714.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   570141.559 ±(99.9%) 52378.870 ops/s [Average]
[info]   (min, avg, max) = (552571.700, 570141.559, 582117.429), stdev = 13602.626
[info]   CI (99.9%): [517762.689, 622520.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1142.638 ±(99.9%) 112.511 MB/sec [Average]
[info]   (min, avg, max) = (1100.077, 1142.638, 1169.201), stdev = 29.219
[info]   CI (99.9%): [1030.127, 1255.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3153.107 ±(99.9%) 67.579 B/op [Average]
[info]   (min, avg, max) = (3133.017, 3153.107, 3171.459), stdev = 17.550
[info]   CI (99.9%): [3085.528, 3220.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1108.015 ±(99.9%) 690.659 MB/sec [Average]
[info]   (min, avg, max) = (975.589, 1108.015, 1304.890), stdev = 179.362
[info]   CI (99.9%): [417.355, 1798.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3060.842 ±(99.9%) 1986.282 B/op [Average]
[info]   (min, avg, max) = (2650.548, 3060.842, 3714.042), stdev = 515.831
[info]   CI (99.9%): [1074.560, 5047.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.786 ±(99.9%) 5.656 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.786, 3.389), stdev = 1.469
[info]   CI (99.9%): [≈ 0, 6.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.136 ±(99.9%) 15.266 B/op [Average]
[info]   (min, avg, max) = (0.057, 2.136, 9.157), stdev = 3.964
[info]   CI (99.9%): [≈ 0, 17.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 13.000), stdev = 3.847
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3320.617 ops/s
[info] # Warmup Iteration   2: 61763.931 ops/s
[info] # Warmup Iteration   3: 96256.829 ops/s
[info] Iteration   1: 94756.462 ops/s
[info]                  ·gc.alloc.rate:                   3134.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              52039.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2954.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49053.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.157 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 95837.181 ops/s
[info]                  ·gc.alloc.rate:                   3158.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              51843.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3311.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54367.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.051 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 96017.304 ops/s
[info]                  ·gc.alloc.rate:                   3172.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              51989.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3015.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49423.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.024 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 95984.722 ops/s
[info]                  ·gc.alloc.rate:                   3200.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              52470.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3038.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49815.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 94863.427 ops/s
[info]                  ·gc.alloc.rate:                   3169.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              52563.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50617.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   95491.819 ±(99.9%) 2415.484 ops/s [Average]
[info]   (min, avg, max) = (94756.462, 95491.819, 96017.304), stdev = 627.294
[info]   CI (99.9%): [93076.335, 97907.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3166.944 ±(99.9%) 92.273 MB/sec [Average]
[info]   (min, avg, max) = (3134.430, 3166.944, 3200.461), stdev = 23.963
[info]   CI (99.9%): [3074.671, 3259.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52181.262 ±(99.9%) 1219.458 B/op [Average]
[info]   (min, avg, max) = (51843.020, 52181.262, 52563.478), stdev = 316.689
[info]   CI (99.9%): [50961.805, 53400.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3074.559 ±(99.9%) 530.524 MB/sec [Average]
[info]   (min, avg, max) = (2954.603, 3074.559, 3311.818), stdev = 137.775
[info]   CI (99.9%): [2544.035, 3605.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50655.584 ±(99.9%) 8297.059 B/op [Average]
[info]   (min, avg, max) = (49053.631, 50655.584, 54367.771), stdev = 2154.720
[info]   CI (99.9%): [42358.525, 58952.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.397 ±(99.9%) 2.930 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.397, 1.756), stdev = 0.761
[info]   CI (99.9%): [≈ 0, 3.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.584 ±(99.9%) 48.665 B/op [Average]
[info]   (min, avg, max) = (0.341, 6.584, 29.157), stdev = 12.638
[info]   CI (99.9%): [≈ 0, 55.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.600, 16.000), stdev = 1.140
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61110.831 ops/s
[info] # Warmup Iteration   2: 212542.525 ops/s
[info] # Warmup Iteration   3: 209726.172 ops/s
[info] Iteration   1: 235884.731 ops/s
[info]                  ·gc.alloc.rate:                   1504.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              10034.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8724.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.199 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 235459.516 ops/s
[info]                  ·gc.alloc.rate:                   1504.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              10052.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10868.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.792 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 240057.368 ops/s
[info]                  ·gc.alloc.rate:                   1515.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              9933.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8518.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 239788.931 ops/s
[info]                  ·gc.alloc.rate:                   1532.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              10055.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10713.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 237889.171 ops/s
[info]                  ·gc.alloc.rate:                   1520.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              10056.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8717.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   237815.944 ±(99.9%) 8214.687 ops/s [Average]
[info]   (min, avg, max) = (235459.516, 237815.944, 240057.368), stdev = 2133.328
[info]   CI (99.9%): [229601.256, 246030.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1515.360 ±(99.9%) 45.302 MB/sec [Average]
[info]   (min, avg, max) = (1504.238, 1515.360, 1532.202), stdev = 11.765
[info]   CI (99.9%): [1470.059, 1560.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10026.471 ±(99.9%) 202.804 B/op [Average]
[info]   (min, avg, max) = (9933.688, 10026.471, 10056.755), stdev = 52.668
[info]   CI (99.9%): [9823.667, 10229.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1436.901 ±(99.9%) 677.383 MB/sec [Average]
[info]   (min, avg, max) = (1299.714, 1436.901, 1632.519), stdev = 175.914
[info]   CI (99.9%): [759.518, 2114.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9508.553 ±(99.9%) 4525.299 B/op [Average]
[info]   (min, avg, max) = (8518.067, 9508.553, 10868.864), stdev = 1175.206
[info]   CI (99.9%): [4983.254, 14033.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 5.288 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.885, 3.178), stdev = 1.373
[info]   CI (99.9%): [≈ 0, 6.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.908 ±(99.9%) 35.277 B/op [Average]
[info]   (min, avg, max) = (0.137, 5.908, 21.199), stdev = 9.161
[info]   CI (99.9%): [≈ 0, 41.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 14.000), stdev = 3.347
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232723.293 ops/s
[info] # Warmup Iteration   2: 606251.863 ops/s
[info] # Warmup Iteration   3: 674467.393 ops/s
[info] Iteration   1: 778646.013 ops/s
[info]                  ·gc.alloc.rate:                   595.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              1203.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1300.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 772846.504 ops/s
[info]                  ·gc.alloc.rate:                   601.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1314.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 779617.320 ops/s
[info]                  ·gc.alloc.rate:               599.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          1210.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1305.781 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 746645.719 ops/s
[info]                  ·gc.alloc.rate:                   566.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              1194.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 745718.621 ops/s
[info]                  ·gc.alloc.rate:                   572.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1373.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   764694.835 ±(99.9%) 65845.813 ops/s [Average]
[info]   (min, avg, max) = (745718.621, 764694.835, 779617.320), stdev = 17099.948
[info]   CI (99.9%): [698849.023, 830540.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   587.283 ±(99.9%) 62.892 MB/sec [Average]
[info]   (min, avg, max) = (566.685, 587.283, 601.720), stdev = 16.333
[info]   CI (99.9%): [524.391, 650.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1208.519 ±(99.9%) 43.384 B/op [Average]
[info]   (min, avg, max) = (1194.431, 1208.519, 1225.276), stdev = 11.267
[info]   CI (99.9%): [1165.135, 1251.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   582.310 ±(99.9%) 554.512 MB/sec [Average]
[info]   (min, avg, max) = (324.751, 582.310, 650.853), stdev = 144.005
[info]   CI (99.9%): [27.798, 1136.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1195.777 ±(99.9%) 1106.325 B/op [Average]
[info]   (min, avg, max) = (684.493, 1195.777, 1373.512), stdev = 287.309
[info]   CI (99.9%): [89.453, 2302.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.120 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.088), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 753083.065 ops/s
[info] # Warmup Iteration   2: 1064767.468 ops/s
[info] # Warmup Iteration   3: 1338702.790 ops/s
[info] Iteration   1: 1342182.588 ops/s
[info]                  ·gc.alloc.rate:               1027.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          1204.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1144.278 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1354919.303 ops/s
[info]                  ·gc.alloc.rate:               1078.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          1252.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1135.476 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1418838.971 ops/s
[info]                  ·gc.alloc.rate:                   1083.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              1202.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1088.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1392948.421 ops/s
[info]                  ·gc.alloc.rate:                   1061.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              1198.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1113.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1398279.809 ops/s
[info]                  ·gc.alloc.rate:                   1064.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              1198.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1488.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1381433.819 ±(99.9%) 122665.789 ops/s [Average]
[info]   (min, avg, max) = (1342182.588, 1381433.819, 1418838.971), stdev = 31855.916
[info]   CI (99.9%): [1258768.029, 1504099.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1063.188 ±(99.9%) 84.700 MB/sec [Average]
[info]   (min, avg, max) = (1027.555, 1063.188, 1083.878), stdev = 21.996
[info]   CI (99.9%): [978.487, 1147.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1211.366 ±(99.9%) 89.197 B/op [Average]
[info]   (min, avg, max) = (1198.386, 1211.366, 1252.541), stdev = 23.164
[info]   CI (99.9%): [1122.169, 1300.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1048.601 ±(99.9%) 590.708 MB/sec [Average]
[info]   (min, avg, max) = (975.941, 1048.601, 1322.941), stdev = 153.405
[info]   CI (99.9%): [457.893, 1639.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1193.999 ±(99.9%) 639.885 B/op [Average]
[info]   (min, avg, max) = (1088.008, 1193.999, 1488.705), stdev = 166.176
[info]   CI (99.9%): [554.115, 1833.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.116 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.069), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 527351.991 ops/s
[info] # Warmup Iteration   2: 1292903.513 ops/s
[info] # Warmup Iteration   3: 1480119.018 ops/s
[info] Iteration   1: 1511013.179 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1500883.386 ops/s
[info]                  ·gc.alloc.rate:      4.968 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.209 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1499460.475 ops/s
[info]                  ·gc.alloc.rate:      2.369 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.486 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1511464.448 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1509337.685 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1506431.834 ±(99.9%) 22299.269 ops/s [Average]
[info]   (min, avg, max) = (1499460.475, 1506431.834, 1511464.448), stdev = 5791.049
[info]   CI (99.9%): [1484132.565, 1528731.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.468 ±(99.9%) 8.508 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.468, 4.968), stdev = 2.209
[info]   CI (99.9%): [≈ 0, 9.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.539 ±(99.9%) 8.921 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.539, 5.209), stdev = 2.317
[info]   CI (99.9%): [≈ 0, 10.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43938.628 ops/s
[info] # Warmup Iteration   2: 544946.048 ops/s
[info] # Warmup Iteration   3: 564273.510 ops/s
[info] Iteration   1: 626010.277 ops/s
[info]                  ·gc.alloc.rate:                   1533.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              3855.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3265.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 622691.906 ops/s
[info]                  ·gc.alloc.rate:                   1521.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              3845.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4142.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.210 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 623354.641 ops/s
[info]                  ·gc.alloc.rate:                   1515.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              3825.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3335.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 610274.057 ops/s
[info]                  ·gc.alloc.rate:                   1511.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              3897.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4288.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 613342.747 ops/s
[info]                  ·gc.alloc.rate:               1512.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          3880.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3434.154 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   619134.726 ±(99.9%) 26524.264 ops/s [Average]
[info]   (min, avg, max) = (610274.057, 619134.726, 626010.277), stdev = 6888.267
[info]   CI (99.9%): [592610.462, 645658.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1518.908 ±(99.9%) 35.244 MB/sec [Average]
[info]   (min, avg, max) = (1511.382, 1518.908, 1533.695), stdev = 9.153
[info]   CI (99.9%): [1483.664, 1554.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3860.843 ±(99.9%) 109.801 B/op [Average]
[info]   (min, avg, max) = (3825.279, 3860.843, 3897.175), stdev = 28.515
[info]   CI (99.9%): [3751.041, 3970.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1452.228 ±(99.9%) 702.347 MB/sec [Average]
[info]   (min, avg, max) = (1299.061, 1452.228, 1663.313), stdev = 182.397
[info]   CI (99.9%): [749.881, 2154.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3693.282 ±(99.9%) 1861.535 B/op [Average]
[info]   (min, avg, max) = (3265.726, 3693.282, 4288.937), stdev = 483.435
[info]   CI (99.9%): [1831.747, 5554.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.150 ±(99.9%) 0.738 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.479), stdev = 0.192
[info]   CI (99.9%): [≈ 0, 0.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.379 ±(99.9%) 1.864 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.379, 1.210), stdev = 0.484
[info]   CI (99.9%): [≈ 0, 2.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100.944 ops/s
[info] # Warmup Iteration   2: 524.638 ops/s
[info] # Warmup Iteration   3: 852.407 ops/s
[info] Iteration   1: 910.789 ops/s
[info]                  ·gc.alloc.rate:                   1945.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              3357655.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3323549.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11028.744 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 938.451 ops/s
[info]                  ·gc.alloc.rate:                   1994.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              3344757.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1912.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3206587.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 593.244 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 937.033 ops/s
[info]                  ·gc.alloc.rate:                   2001.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              3359874.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1928.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3237394.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.934 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 916.469 ops/s
[info]                  ·gc.alloc.rate:                   1985.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              3408132.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3361846.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.734 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 862.279 ops/s
[info]                  ·gc.alloc.rate:                   1946.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              3550610.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3012681.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1346.160 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   913.004 ±(99.9%) 118.917 ops/s [Average]
[info]   (min, avg, max) = (862.279, 913.004, 938.451), stdev = 30.882
[info]   CI (99.9%): [794.087, 1031.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1974.532 ±(99.9%) 103.734 MB/sec [Average]
[info]   (min, avg, max) = (1945.367, 1974.532, 2001.177), stdev = 26.939
[info]   CI (99.9%): [1870.798, 2078.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3404206.051 ±(99.9%) 328525.069 B/op [Average]
[info]   (min, avg, max) = (3344757.853, 3404206.051, 3550610.030), stdev = 85316.917
[info]   CI (99.9%): [3075680.982, 3732731.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1875.150 ±(99.9%) 486.331 MB/sec [Average]
[info]   (min, avg, max) = (1651.199, 1875.150, 1958.146), stdev = 126.299
[info]   CI (99.9%): [1388.819, 2361.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3228412.131 ±(99.9%) 523576.634 B/op [Average]
[info]   (min, avg, max) = (3012681.567, 3228412.131, 3361846.718), stdev = 135971.189
[info]   CI (99.9%): [2704835.497, 3751988.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.505 ±(99.9%) 10.577 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.505, 6.390), stdev = 2.747
[info]   CI (99.9%): [≈ 0, 12.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2607.763 ±(99.9%) 18244.662 B/op [Average]
[info]   (min, avg, max) = (34.934, 2607.763, 11028.744), stdev = 4738.081
[info]   CI (99.9%): [≈ 0, 20852.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 19.000), stdev = 4.970
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128.633 ops/s
[info] # Warmup Iteration   2: 602.855 ops/s
[info] # Warmup Iteration   3: 938.376 ops/s
[info] Iteration   1: 935.493 ops/s
[info]                  ·gc.alloc.rate:                   1992.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              3352038.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1920.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3229748.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.017 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 950.877 ops/s
[info]                  ·gc.alloc.rate:                   2026.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              3352538.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3223930.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309.782 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 933.282 ops/s
[info]                  ·gc.alloc.rate:               1996.591 MB/sec
[info]                  ·gc.alloc.rate.norm:          3365768.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3330968.942 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 865.883 ops/s
[info]                  ·gc.alloc.rate:                        1932.698 MB/sec
[info]                  ·gc.alloc.rate.norm:                   3489754.908 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.013 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 22.741 B/op
[info]                  ·gc.churn.Metaspace:                   0.036 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              64.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2003.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          3618354.165 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  1.790 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             3232.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.579 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1044.657 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              87.000 ms
[info] Iteration   5: 921.100 ops/s
[info]                  ·gc.alloc.rate:                   2061.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              3515768.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3397114.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.650 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   921.327 ±(99.9%) 126.118 ops/s [Average]
[info]   (min, avg, max) = (865.883, 921.327, 950.877), stdev = 32.753
[info]   CI (99.9%): [795.209, 1047.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2001.965 ±(99.9%) 182.905 MB/sec [Average]
[info]   (min, avg, max) = (1932.698, 2001.965, 2061.232), stdev = 47.500
[info]   CI (99.9%): [1819.061, 2184.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3415173.913 ±(99.9%) 310638.691 B/op [Average]
[info]   (min, avg, max) = (3352038.983, 3415173.913, 3515768.924), stdev = 80671.882
[info]   CI (99.9%): [3104535.222, 3725812.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   4.548 ±(99.9%) 39.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.548, 22.741), stdev = 10.170
[info]   CI (99.9%): [≈ 0, 43.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.007 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   12.849 ±(99.9%) 110.633 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.849, 64.245), stdev = 28.731
[info]   CI (99.9%): [≈ 0, 123.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1968.079 ±(99.9%) 130.262 MB/sec [Average]
[info]   (min, avg, max) = (1920.108, 1968.079, 2003.919), stdev = 33.829
[info]   CI (99.9%): [1837.818, 2098.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3360023.343 ±(99.9%) 622232.021 B/op [Average]
[info]   (min, avg, max) = (3223930.622, 3360023.343, 3618354.165), stdev = 161591.680
[info]   CI (99.9%): [2737791.322, 3982255.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.358 ±(99.9%) 3.083 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.358, 1.790), stdev = 0.801
[info]   CI (99.9%): [≈ 0, 3.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   646.596 ±(99.9%) 5567.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 646.596, 3232.978), stdev = 1445.832
[info]   CI (99.9%): [≈ 0, 6213.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.168 ±(99.9%) 0.927 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.168, 0.579), stdev = 0.241
[info]   CI (99.9%): [≈ 0, 1.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   295.621 ±(99.9%) 1676.351 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 295.621, 1044.657), stdev = 435.343
[info]   CI (99.9%): [≈ 0, 1971.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 26.000, 87.000), stdev = 34.191
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:35:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16046.694 ops/s
[info] # Warmup Iteration   2: 32626.371 ops/s
[info] # Warmup Iteration   3: 48609.447 ops/s
[info] Iteration   1: 43824.973 ops/s
[info]                  ·gc.alloc.rate:                   1076.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              38642.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          896.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32197.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.565 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 235.725 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 46289.537 ops/s
[info]                  ·gc.alloc.rate:                   777.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              26432.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          890.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30279.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.613 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 45961.588 ops/s
[info]                  ·gc.alloc.rate:                   759.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              26002.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          600.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20551.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.841 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 46306.763 ops/s
[info]                  ·gc.alloc.rate:                   782.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              26580.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          908.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30879.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 46822.211 ops/s
[info]                  ·gc.alloc.rate:                   778.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              26169.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          605.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20352.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.351 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   45841.015 ±(99.9%) 4498.749 ops/s [Average]
[info]   (min, avg, max) = (43824.973, 45841.015, 46822.211), stdev = 1168.311
[info]   CI (99.9%): [41342.265, 50339.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   834.783 ±(99.9%) 520.736 MB/sec [Average]
[info]   (min, avg, max) = (759.437, 834.783, 1076.180), stdev = 135.233
[info]   CI (99.9%): [314.047, 1355.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   28765.589 ±(99.9%) 21277.705 B/op [Average]
[info]   (min, avg, max) = (26002.514, 28765.589, 38642.187), stdev = 5525.752
[info]   CI (99.9%): [7487.883, 50043.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   780.358 ±(99.9%) 624.372 MB/sec [Average]
[info]   (min, avg, max) = (600.229, 780.358, 908.635), stdev = 162.147
[info]   CI (99.9%): [155.986, 1404.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26852.072 ±(99.9%) 22656.812 B/op [Average]
[info]   (min, avg, max) = (20352.656, 26852.072, 32197.634), stdev = 5883.902
[info]   CI (99.9%): [4195.260, 49508.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   3.191 ±(99.9%) 9.887 MB/sec [Average]
[info]   (min, avg, max) = (0.229, 3.191, 6.565), stdev = 2.568
[info]   CI (99.9%): [≈ 0, 13.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   110.777 ±(99.9%) 352.445 B/op [Average]
[info]   (min, avg, max) = (7.841, 110.777, 235.725), stdev = 91.529
[info]   CI (99.9%): [≈ 0, 463.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 19.400, 32.000), stdev = 8.961
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148.678 ops/s
[info] # Warmup Iteration   2: 462.791 ops/s
[info] # Warmup Iteration   3: 840.073 ops/s
[info] Iteration   1: 893.861 ops/s
[info]                  ·gc.alloc.rate:                   1953.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              3438069.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3402892.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.612 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 864.479 ops/s
[info]                  ·gc.alloc.rate:                   1977.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              3599313.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3549399.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5554.997 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 908.154 ops/s
[info]                  ·gc.alloc.rate:                   1993.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              3453082.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3404122.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.145 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 881.638 ops/s
[info]                  ·gc.alloc.rate:                   1926.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              3437759.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3541618.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.608 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 843.132 ops/s
[info]                  ·gc.alloc.rate:                   1956.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              3650593.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3733377.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1922.445 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   878.253 ±(99.9%) 97.649 ops/s [Average]
[info]   (min, avg, max) = (843.132, 878.253, 908.154), stdev = 25.359
[info]   CI (99.9%): [780.604, 975.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1961.395 ±(99.9%) 98.239 MB/sec [Average]
[info]   (min, avg, max) = (1926.147, 1961.395, 1993.148), stdev = 25.512
[info]   CI (99.9%): [1863.156, 2059.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3515763.543 ±(99.9%) 390843.909 B/op [Average]
[info]   (min, avg, max) = (3437759.057, 3515763.543, 3650593.573), stdev = 101500.922
[info]   CI (99.9%): [3124919.635, 3906607.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1966.772 ±(99.9%) 102.710 MB/sec [Average]
[info]   (min, avg, max) = (1933.542, 1966.772, 2000.800), stdev = 26.673
[info]   CI (99.9%): [1864.062, 2069.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3526282.381 ±(99.9%) 523057.427 B/op [Average]
[info]   (min, avg, max) = (3402892.728, 3526282.381, 3733377.820), stdev = 135836.353
[info]   CI (99.9%): [3003224.954, 4049339.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.850 ±(99.9%) 5.013 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.850, 3.052), stdev = 1.302
[info]   CI (99.9%): [≈ 0, 5.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1554.161 ±(99.9%) 9135.001 B/op [Average]
[info]   (min, avg, max) = (36.612, 1554.161, 5554.997), stdev = 2372.331
[info]   CI (99.9%): [≈ 0, 10689.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 13.000), stdev = 1.643
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3572.151 ops/s
[info] # Warmup Iteration   2: 12416.162 ops/s
[info] # Warmup Iteration   3: 14696.112 ops/s
[info] Iteration   1: 16774.678 ops/s
[info]                  ·gc.alloc.rate:                   1265.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              118730.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1252.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117494.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.865 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 16816.459 ops/s
[info]                  ·gc.alloc.rate:                   1268.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              118742.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117575.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.636 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 17436.619 ops/s
[info]                  ·gc.alloc.rate:                   1315.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              118677.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1257.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113515.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 284.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 17366.725 ops/s
[info]                  ·gc.alloc.rate:               1301.425 MB/sec
[info]                  ·gc.alloc.rate.norm:          117938.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1258.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114093.762 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 15730.912 ops/s
[info]                  ·gc.alloc.rate:                   1638.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              163872.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1591.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     159145.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.152 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.186 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   16825.079 ±(99.9%) 2630.851 ops/s [Average]
[info]   (min, avg, max) = (15730.912, 16825.079, 17436.619), stdev = 683.224
[info]   CI (99.9%): [14194.227, 19455.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1357.888 ±(99.9%) 609.447 MB/sec [Average]
[info]   (min, avg, max) = (1265.602, 1357.888, 1638.478), stdev = 158.271
[info]   CI (99.9%): [748.442, 1967.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   127592.267 ±(99.9%) 78106.288 B/op [Average]
[info]   (min, avg, max) = (117938.584, 127592.267, 163872.275), stdev = 20283.955
[info]   CI (99.9%): [49485.979, 205698.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1323.381 ±(99.9%) 576.622 MB/sec [Average]
[info]   (min, avg, max) = (1252.430, 1323.381, 1591.219), stdev = 149.747
[info]   CI (99.9%): [746.760, 1900.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   124364.955 ±(99.9%) 75216.189 B/op [Average]
[info]   (min, avg, max) = (113515.567, 124364.955, 159145.766), stdev = 19533.405
[info]   CI (99.9%): [49148.766, 199581.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.585 ±(99.9%) 5.672 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.585, 3.149), stdev = 1.473
[info]   CI (99.9%): [≈ 0, 7.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   146.536 ±(99.9%) 519.895 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 146.536, 284.124), stdev = 135.015
[info]   CI (99.9%): [≈ 0, 666.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.200, 18.000), stdev = 4.764
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3163.428 ops/s
[info] # Warmup Iteration   2: 12814.137 ops/s
[info] # Warmup Iteration   3: 16793.861 ops/s
[info] Iteration   1: 19511.113 ops/s
[info]                  ·gc.alloc.rate:                   1103.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              89035.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:          910.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73443.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 359.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 19082.686 ops/s
[info]                  ·gc.alloc.rate:                   1098.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              90545.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1225.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101061.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 19514.406 ops/s
[info]                  ·gc.alloc.rate:                   1111.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              89640.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          927.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74756.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.555 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 286.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 18714.373 ops/s
[info]                  ·gc.alloc.rate:                   1373.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              115527.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1537.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129293.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 616.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 18563.118 ops/s
[info]                  ·gc.alloc.rate:                   1366.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              115829.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1218.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103214.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 933.059 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   19077.139 ±(99.9%) 1695.359 ops/s [Average]
[info]   (min, avg, max) = (18563.118, 19077.139, 19514.406), stdev = 440.279
[info]   CI (99.9%): [17381.781, 20772.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1210.884 ±(99.9%) 560.906 MB/sec [Average]
[info]   (min, avg, max) = (1098.023, 1210.884, 1373.803), stdev = 145.666
[info]   CI (99.9%): [649.978, 1771.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   100115.846 ±(99.9%) 54746.722 B/op [Average]
[info]   (min, avg, max) = (89035.805, 100115.846, 115829.693), stdev = 14217.550
[info]   CI (99.9%): [45369.124, 154862.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1163.768 ±(99.9%) 993.904 MB/sec [Average]
[info]   (min, avg, max) = (910.564, 1163.768, 1537.495), stdev = 258.114
[info]   CI (99.9%): [169.864, 2157.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   96353.775 ±(99.9%) 89181.232 B/op [Average]
[info]   (min, avg, max) = (73443.838, 96353.775, 129293.376), stdev = 23160.083
[info]   CI (99.9%): [7172.543, 185535.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.271 ±(99.9%) 15.932 MB/sec [Average]
[info]   (min, avg, max) = (0.009, 5.271, 11.011), stdev = 4.137
[info]   CI (99.9%): [≈ 0, 21.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   439.113 ±(99.9%) 1357.513 B/op [Average]
[info]   (min, avg, max) = (0.728, 439.113, 933.059), stdev = 352.542
[info]   CI (99.9%): [≈ 0, 1796.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   85.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 17.000, 24.000), stdev = 5.788
[info]   CI (99.9%): [85.000, 85.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161734.407 ops/s
[info] # Warmup Iteration   2: 279350.361 ops/s
[info] # Warmup Iteration   3: 323526.656 ops/s
[info] Iteration   1: 320542.892 ops/s
[info]                  ·gc.alloc.rate:                   1163.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              5714.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6420.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 330444.508 ops/s
[info]                  ·gc.alloc.rate:                   1192.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              5681.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4676.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.360 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 334559.739 ops/s
[info]                  ·gc.alloc.rate:                   1219.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              5735.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6098.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.309 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 339315.815 ops/s
[info]                  ·gc.alloc.rate:               1229.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          5700.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1289.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5981.270 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 340979.692 ops/s
[info]                  ·gc.alloc.rate:               1241.651 MB/sec
[info]                  ·gc.alloc.rate.norm:          5729.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4481.094 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   333168.529 ±(99.9%) 31493.338 ops/s [Average]
[info]   (min, avg, max) = (320542.892, 333168.529, 340979.692), stdev = 8178.720
[info]   CI (99.9%): [301675.191, 364661.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1209.365 ±(99.9%) 119.815 MB/sec [Average]
[info]   (min, avg, max) = (1163.819, 1209.365, 1241.651), stdev = 31.116
[info]   CI (99.9%): [1089.549, 1329.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5712.049 ±(99.9%) 84.471 B/op [Average]
[info]   (min, avg, max) = (5681.293, 5712.049, 5735.488), stdev = 21.937
[info]   CI (99.9%): [5627.578, 5796.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1169.364 ±(99.9%) 678.333 MB/sec [Average]
[info]   (min, avg, max) = (971.189, 1169.364, 1307.656), stdev = 176.161
[info]   CI (99.9%): [491.031, 1847.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5531.414 ±(99.9%) 3416.135 B/op [Average]
[info]   (min, avg, max) = (4481.094, 5531.414, 6420.340), stdev = 887.160
[info]   CI (99.9%): [2115.278, 8947.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.177 ±(99.9%) 8.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.177, 4.905), stdev = 2.120
[info]   CI (99.9%): [≈ 0, 9.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.595 ±(99.9%) 38.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.595, 23.360), stdev = 10.097
[info]   CI (99.9%): [≈ 0, 44.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 18.000), stdev = 5.916
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:34:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 182355.743 ops/s
[info] # Warmup Iteration   2: 400047.555 ops/s
[info] # Warmup Iteration   3: 427917.261 ops/s
[info] Iteration   1: 429037.337 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 428265.240 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 428598.689 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 428013.905 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 428153.361 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   428413.706 ±(99.9%) 1579.230 ops/s [Average]
[info]   (min, avg, max) = (428013.905, 428413.706, 429037.337), stdev = 410.121
[info]   CI (99.9%): [426834.476, 429992.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3078.634 ops/s
[info] # Warmup Iteration   2: 11030.455 ops/s
[info] # Warmup Iteration   3: 11369.973 ops/s
[info] Iteration   1: 12999.112 ops/s
[info]                  ·gc.alloc.rate:                   1886.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              228308.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246719.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      24.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3015.111 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         78.000 ms
[info] Iteration   2: 16711.488 ops/s
[info]                  ·gc.alloc.rate:                   1333.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              125565.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1377.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129738.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      22.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2076.519 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   3: 19610.058 ops/s
[info]                  ·gc.alloc.rate:                   1189.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              95441.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1094.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87862.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.671 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 19688.597 ops/s
[info]                  ·gc.alloc.rate:                   1208.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              96598.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1105.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88393.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 18397.387 ops/s
[info]                  ·gc.alloc.rate:               1384.292 MB/sec
[info]                  ·gc.alloc.rate.norm:          118416.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1431.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122425.037 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17481.328 ±(99.9%) 10706.868 ops/s [Average]
[info]   (min, avg, max) = (12999.112, 17481.328, 19688.597), stdev = 2780.540
[info]   CI (99.9%): [6774.460, 28188.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1400.423 ±(99.9%) 1093.253 MB/sec [Average]
[info]   (min, avg, max) = (1189.341, 1400.423, 1886.511), stdev = 283.914
[info]   CI (99.9%): [307.170, 2493.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   132865.934 ±(99.9%) 211674.234 B/op [Average]
[info]   (min, avg, max) = (95441.335, 132865.934, 228308.396), stdev = 54971.126
[info]   CI (99.9%): [≈ 0, 344540.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1409.667 ±(99.9%) 1476.983 MB/sec [Average]
[info]   (min, avg, max) = (1094.897, 1409.667, 2038.638), stdev = 383.568
[info]   CI (99.9%): [≈ 0, 2886.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   135027.690 ±(99.9%) 251481.968 B/op [Average]
[info]   (min, avg, max) = (87862.479, 135027.690, 246719.020), stdev = 65309.069
[info]   CI (99.9%): [≈ 0, 386509.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   9.406 ±(99.9%) 49.638 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 9.406, 24.914), stdev = 12.891
[info]   CI (99.9%): [≈ 0, 59.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1019.326 ±(99.9%) 5515.877 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1019.326, 3015.111), stdev = 1432.456
[info]   CI (99.9%): [≈ 0, 6535.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   138.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 27.600, 78.000), stdev = 30.468
[info]   CI (99.9%): [138.000, 138.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 781253.356 ops/s
[info] # Warmup Iteration   2: 1009332.195 ops/s
[info] # Warmup Iteration   3: 1341954.709 ops/s
[info] Iteration   1: 1347677.000 ops/s
[info]                  ·gc.alloc.rate:      54.805 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1354861.179 ops/s
[info]                  ·gc.alloc.rate:      55.100 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1344366.036 ops/s
[info]                  ·gc.alloc.rate:      55.519 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.982 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1341258.179 ops/s
[info]                  ·gc.alloc.rate:                   58.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              69.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     300.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1351928.635 ops/s
[info]                  ·gc.alloc.rate:      54.979 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1348018.206 ±(99.9%) 21202.197 ops/s [Average]
[info]   (min, avg, max) = (1341258.179, 1348018.206, 1354861.179), stdev = 5506.143
[info]   CI (99.9%): [1326816.009, 1369220.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   55.862 ±(99.9%) 6.629 MB/sec [Average]
[info]   (min, avg, max) = (54.805, 55.862, 58.905), stdev = 1.721
[info]   CI (99.9%): [49.233, 62.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   65.220 ±(99.9%) 8.548 B/op [Average]
[info]   (min, avg, max) = (64.000, 65.220, 69.118), stdev = 2.220
[info]   CI (99.9%): [56.672, 73.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.514 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.806), stdev = 114.400
[info]   CI (99.9%): [≈ 0, 491.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   60.032 ±(99.9%) 516.890 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.032, 300.158), stdev = 134.235
[info]   CI (99.9%): [≈ 0, 576.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.096), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.195 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.113), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3322.791 ops/s
[info] # Warmup Iteration   2: 64449.547 ops/s
[info] # Warmup Iteration   3: 113946.141 ops/s
[info] Iteration   1: 119591.176 ops/s
[info]                  ·gc.alloc.rate:                   4395.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              57846.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4301.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56608.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.099 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 116573.552 ops/s
[info]                  ·gc.alloc.rate:                   4119.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              55614.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4005.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54078.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.679 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 115842.559 ops/s
[info]                  ·gc.alloc.rate:                   4098.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              55669.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4038.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54858.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.131 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 115954.700 ops/s
[info]                  ·gc.alloc.rate:                   4149.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              56314.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4065.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55162.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 117017.526 ops/s
[info]                  ·gc.alloc.rate:                   4171.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              56105.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3737.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50262.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   116995.902 ±(99.9%) 5880.462 ops/s [Average]
[info]   (min, avg, max) = (115842.559, 116995.902, 119591.176), stdev = 1527.137
[info]   CI (99.9%): [111115.440, 122876.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4187.033 ±(99.9%) 461.779 MB/sec [Average]
[info]   (min, avg, max) = (4098.077, 4187.033, 4395.558), stdev = 119.922
[info]   CI (99.9%): [3725.254, 4648.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56310.104 ±(99.9%) 3494.656 B/op [Average]
[info]   (min, avg, max) = (55614.909, 56310.104, 57846.018), stdev = 907.551
[info]   CI (99.9%): [52815.448, 59804.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4029.653 ±(99.9%) 773.244 MB/sec [Average]
[info]   (min, avg, max) = (3737.292, 4029.653, 4301.556), stdev = 200.809
[info]   CI (99.9%): [3256.409, 4802.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54194.136 ±(99.9%) 9169.410 B/op [Average]
[info]   (min, avg, max) = (50262.410, 54194.136, 56608.936), stdev = 2381.267
[info]   CI (99.9%): [45024.727, 63363.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.961 ±(99.9%) 5.558 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.961, 3.351), stdev = 1.443
[info]   CI (99.9%): [≈ 0, 6.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   12.750 ±(99.9%) 73.215 B/op [Average]
[info]   (min, avg, max) = (0.283, 12.750, 44.099), stdev = 19.014
[info]   CI (99.9%): [≈ 0, 85.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   60.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   98.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 19.600, 26.000), stdev = 3.782
[info]   CI (99.9%): [98.000, 98.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 269551.474 ops/s
[info] # Warmup Iteration   2: 1698804.577 ops/s
[info] # Warmup Iteration   3: 2131803.803 ops/s
[info] Iteration   1: 2160900.632 ops/s
[info]                  ·gc.alloc.rate:                   598.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2195221.312 ops/s
[info]                  ·gc.alloc.rate:               613.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          439.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 465.148 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 2210203.205 ops/s
[info]                  ·gc.alloc.rate:                   604.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              430.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2087450.966 ops/s
[info]                  ·gc.alloc.rate:                   583.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2178587.707 ops/s
[info]                  ·gc.alloc.rate:                   607.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   2166472.765 ±(99.9%) 184279.520 ops/s [Average]
[info]   (min, avg, max) = (2087450.966, 2166472.765, 2210203.205), stdev = 47856.806
[info]   CI (99.9%): [1982193.244, 2350752.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   601.563 ±(99.9%) 42.934 MB/sec [Average]
[info]   (min, avg, max) = (583.933, 601.563, 613.054), stdev = 11.150
[info]   CI (99.9%): [558.629, 644.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   436.999 ±(99.9%) 15.638 B/op [Average]
[info]   (min, avg, max) = (430.331, 436.999, 440.222), stdev = 4.061
[info]   CI (99.9%): [421.361, 452.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   584.787 ±(99.9%) 559.747 MB/sec [Average]
[info]   (min, avg, max) = (324.773, 584.787, 652.219), stdev = 145.365
[info]   CI (99.9%): [25.040, 1144.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   425.900 ±(99.9%) 420.674 B/op [Average]
[info]   (min, avg, max) = (231.232, 425.900, 490.670), stdev = 109.248
[info]   CI (99.9%): [5.227, 846.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.044), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 9.000), stdev = 1.643
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 555168.555 ops/s
[info] # Warmup Iteration   2: 1473906.509 ops/s
[info] # Warmup Iteration   3: 1919885.152 ops/s
[info] Iteration   1: 1827003.946 ops/s
[info]                  ·gc.alloc.rate:                   552.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              475.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     564.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1867223.606 ops/s
[info]                  ·gc.alloc.rate:               538.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          454.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.523 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1834183.401 ops/s
[info]                  ·gc.alloc.rate:                   515.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     563.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1811301.759 ops/s
[info]                  ·gc.alloc.rate:               498.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 285.350 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1847781.331 ops/s
[info]                  ·gc.alloc.rate:                   515.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1837498.809 ±(99.9%) 81609.884 ops/s [Average]
[info]   (min, avg, max) = (1811301.759, 1837498.809, 1867223.606), stdev = 21193.828
[info]   CI (99.9%): [1755888.925, 1919108.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   524.201 ±(99.9%) 81.713 MB/sec [Average]
[info]   (min, avg, max) = (498.486, 524.201, 552.160), stdev = 21.221
[info]   CI (99.9%): [442.487, 605.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   448.929 ±(99.9%) 64.619 B/op [Average]
[info]   (min, avg, max) = (433.119, 448.929, 475.627), stdev = 16.781
[info]   CI (99.9%): [384.310, 513.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.214 ±(99.9%) 692.346 MB/sec [Average]
[info]   (min, avg, max) = (328.099, 525.214, 658.169), stdev = 179.800
[info]   CI (99.9%): [≈ 0, 1217.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   449.958 ±(99.9%) 594.276 B/op [Average]
[info]   (min, avg, max) = (276.523, 449.958, 564.082), stdev = 154.332
[info]   CI (99.9%): [≈ 0, 1044.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.029), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 912642.724 ops/s
[info] # Warmup Iteration   2: 1608503.868 ops/s
[info] # Warmup Iteration   3: 2015594.212 ops/s
[info] Iteration   1: 2013965.603 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2015440.300 ops/s
[info]                  ·gc.alloc.rate:      0.081 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.063 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2014329.283 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2012002.738 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2009766.403 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2013100.866 ±(99.9%) 8621.974 ops/s [Average]
[info]   (min, avg, max) = (2009766.403, 2013100.866, 2015440.300), stdev = 2239.099
[info]   CI (99.9%): [2004478.892, 2021722.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.016 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.081), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.013 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.013, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5800.675 ops/s
[info] # Warmup Iteration   2: 35742.294 ops/s
[info] # Warmup Iteration   3: 54454.918 ops/s
[info] Iteration   1: 52843.214 ops/s
[info]                  ·gc.alloc.rate:                   2310.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              68792.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67886.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.783 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 57126.695 ops/s
[info]                  ·gc.alloc.rate:                   2115.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              58281.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54221.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.356 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 55352.850 ops/s
[info]                  ·gc.alloc.rate:                   1935.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              55020.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56259.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.327 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 56791.770 ops/s
[info]                  ·gc.alloc.rate:                   1982.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              54905.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55267.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 56019.307 ops/s
[info]                  ·gc.alloc.rate:                   1968.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              55289.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46994.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   55626.767 ±(99.9%) 6552.971 ops/s [Average]
[info]   (min, avg, max) = (52843.214, 55626.767, 57126.695), stdev = 1701.786
[info]   CI (99.9%): [49073.796, 62179.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2062.412 ±(99.9%) 596.685 MB/sec [Average]
[info]   (min, avg, max) = (1935.240, 2062.412, 2310.774), stdev = 154.957
[info]   CI (99.9%): [1465.728, 2659.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   58457.878 ±(99.9%) 22886.184 B/op [Average]
[info]   (min, avg, max) = (54905.502, 58457.878, 68792.120), stdev = 5943.469
[info]   CI (99.9%): [35571.694, 81344.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1979.127 ±(99.9%) 827.828 MB/sec [Average]
[info]   (min, avg, max) = (1672.925, 1979.127, 2280.365), stdev = 214.984
[info]   CI (99.9%): [1151.299, 2806.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56126.112 ±(99.9%) 28948.893 B/op [Average]
[info]   (min, avg, max) = (46994.741, 56126.112, 67886.845), stdev = 7517.935
[info]   CI (99.9%): [27177.220, 85075.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 4.341 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.904, 2.227), stdev = 1.127
[info]   CI (99.9%): [≈ 0, 5.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   25.841 ±(99.9%) 124.036 B/op [Average]
[info]   (min, avg, max) = (0.585, 25.841, 61.356), stdev = 32.212
[info]   CI (99.9%): [≈ 0, 149.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 18.000), stdev = 4.087
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48569.956 ops/s
[info] # Warmup Iteration   2: 368310.102 ops/s
[info] # Warmup Iteration   3: 960945.620 ops/s
[info] Iteration   1: 1197529.257 ops/s
[info]                  ·gc.alloc.rate:                   3428.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              4505.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3229.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4244.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.724 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 1193395.065 ops/s
[info]                  ·gc.alloc.rate:                   3460.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              4562.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3259.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4296.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1194619.076 ops/s
[info]                  ·gc.alloc.rate:                   3432.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              4520.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3322.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4375.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 1180761.225 ops/s
[info]                  ·gc.alloc.rate:                   3428.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              4569.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3364.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4483.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1192378.834 ops/s
[info]                  ·gc.alloc.rate:                   3468.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              4578.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4468.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   1191736.692 ±(99.9%) 24767.557 ops/s [Average]
[info]   (min, avg, max) = (1180761.225, 1191736.692, 1197529.257), stdev = 6432.056
[info]   CI (99.9%): [1166969.135, 1216504.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   3443.849 ±(99.9%) 74.408 MB/sec [Average]
[info]   (min, avg, max) = (3428.315, 3443.849, 3468.881), stdev = 19.324
[info]   CI (99.9%): [3369.441, 3518.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4547.157 ±(99.9%) 124.225 B/op [Average]
[info]   (min, avg, max) = (4505.022, 4547.157, 4578.055), stdev = 32.261
[info]   CI (99.9%): [4422.933, 4671.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3312.393 ±(99.9%) 257.312 MB/sec [Average]
[info]   (min, avg, max) = (3229.921, 3312.393, 3386.148), stdev = 66.823
[info]   CI (99.9%): [3055.081, 3569.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4373.844 ±(99.9%) 403.021 B/op [Average]
[info]   (min, avg, max) = (4244.318, 4373.844, 4483.712), stdev = 104.663
[info]   CI (99.9%): [3970.824, 4776.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.460 ±(99.9%) 3.471 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.460, 2.073), stdev = 0.902
[info]   CI (99.9%): [≈ 0, 3.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.605 ±(99.9%) 4.561 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.605, 2.724), stdev = 1.184
[info]   CI (99.9%): [≈ 0, 5.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.000, 10.000), stdev = 0.001
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   72.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.400, 19.000), stdev = 2.608
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:32:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.691 ops/s
[info] # Warmup Iteration   2: 3634600.504 ops/s
[info] # Warmup Iteration   3: 4531393.801 ops/s
[info] Iteration   1: 5161272.365 ops/s
[info]                  ·gc.alloc.rate:               320.038 MB/sec
[info]                  ·gc.alloc.rate.norm:          97.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.121 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 5168548.508 ops/s
[info]                  ·gc.alloc.rate:               324.569 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.981 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5184141.157 ops/s
[info]                  ·gc.alloc.rate:                   324.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5199200.489 ops/s
[info]                  ·gc.alloc.rate:                   323.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              97.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5204953.145 ops/s
[info]                  ·gc.alloc.rate:                   325.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5183623.133 ±(99.9%) 72671.479 ops/s [Average]
[info]   (min, avg, max) = (5161272.365, 5183623.133, 5204953.145), stdev = 18872.552
[info]   CI (99.9%): [5110951.654, 5256294.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   323.574 ±(99.9%) 8.066 MB/sec [Average]
[info]   (min, avg, max) = (320.038, 323.574, 325.203), stdev = 2.095
[info]   CI (99.9%): [315.508, 331.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   98.233 ±(99.9%) 1.956 B/op [Average]
[info]   (min, avg, max) = (97.580, 98.233, 98.821), stdev = 0.508
[info]   CI (99.9%): [96.277, 100.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   325.094 ±(99.9%) 0.016 MB/sec [Average]
[info]   (min, avg, max) = (325.090, 325.094, 325.099), stdev = 0.004
[info]   CI (99.9%): [325.078, 325.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   98.696 ±(99.9%) 1.380 B/op [Average]
[info]   (min, avg, max) = (98.289, 98.696, 99.121), stdev = 0.358
[info]   CI (99.9%): [97.316, 100.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31808.151 ops/s
[info] # Warmup Iteration   2: 548746.477 ops/s
[info] # Warmup Iteration   3: 947641.731 ops/s
[info] Iteration   1: 1060589.663 ops/s
[info]                  ·gc.alloc.rate:               1192.044 MB/sec
[info]                  ·gc.alloc.rate.norm:          1768.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1293.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1919.566 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 1031100.065 ops/s
[info]                  ·gc.alloc.rate:               1168.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          1783.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1492.092 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1070186.590 ops/s
[info]                  ·gc.alloc.rate:                   1208.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              1776.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1928.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.378 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1082740.981 ops/s
[info]                  ·gc.alloc.rate:                   1209.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1757.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1435.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.454 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1092835.964 ops/s
[info]                  ·gc.alloc.rate:               1227.881 MB/sec
[info]                  ·gc.alloc.rate.norm:          1768.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1903.333 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1067490.652 ±(99.9%) 91409.696 ops/s [Average]
[info]   (min, avg, max) = (1031100.065, 1067490.652, 1092835.964), stdev = 23738.808
[info]   CI (99.9%): [976080.957, 1158900.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1201.270 ±(99.9%) 85.584 MB/sec [Average]
[info]   (min, avg, max) = (1168.637, 1201.270, 1227.881), stdev = 22.226
[info]   CI (99.9%): [1115.686, 1286.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1770.995 ±(99.9%) 37.279 B/op [Average]
[info]   (min, avg, max) = (1757.894, 1770.995, 1783.654), stdev = 9.681
[info]   CI (99.9%): [1733.716, 1808.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.503 ±(99.9%) 689.396 MB/sec [Average]
[info]   (min, avg, max) = (977.608, 1178.503, 1321.668), stdev = 179.034
[info]   CI (99.9%): [489.107, 1867.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1735.859 ±(99.9%) 960.233 B/op [Average]
[info]   (min, avg, max) = (1435.420, 1735.859, 1928.885), stdev = 249.370
[info]   CI (99.9%): [775.626, 2696.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.250 ±(99.9%) 1.568 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.250, 0.937), stdev = 0.407
[info]   CI (99.9%): [≈ 0, 1.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.366 ±(99.9%) 2.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.366, 1.378), stdev = 0.599
[info]   CI (99.9%): [≈ 0, 2.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1780637.952 ops/s
[info] # Warmup Iteration   2: 9164474.470 ops/s
[info] # Warmup Iteration   3: 10296938.377 ops/s
[info] Iteration   1: 10505932.256 ops/s
[info]                  ·gc.alloc.rate:               487.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.145 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 10455418.211 ops/s
[info]                  ·gc.alloc.rate:                   492.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              74.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 10494053.806 ops/s
[info]                  ·gc.alloc.rate:               488.796 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.250 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 10466234.926 ops/s
[info]                  ·gc.alloc.rate:                   501.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 10512350.794 ops/s
[info]                  ·gc.alloc.rate:                   492.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              73.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   10486797.998 ±(99.9%) 95865.625 ops/s [Average]
[info]   (min, avg, max) = (10455418.211, 10486797.998, 10512350.794), stdev = 24895.998
[info]   CI (99.9%): [10390932.374, 10582663.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   492.342 ±(99.9%) 20.554 MB/sec [Average]
[info]   (min, avg, max) = (487.317, 492.342, 501.061), stdev = 5.338
[info]   CI (99.9%): [471.788, 512.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   73.902 ±(99.9%) 3.418 B/op [Average]
[info]   (min, avg, max) = (73.082, 73.902, 75.338), stdev = 0.888
[info]   CI (99.9%): [70.484, 77.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.045 ±(99.9%) 693.540 MB/sec [Average]
[info]   (min, avg, max) = (327.702, 460.045, 658.192), stdev = 180.110
[info]   CI (99.9%): [≈ 0, 1153.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   69.098 ±(99.9%) 104.722 B/op [Average]
[info]   (min, avg, max) = (49.145, 69.098, 98.964), stdev = 27.196
[info]   CI (99.9%): [≈ 0, 173.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 826.643 ops/s
[info] # Warmup Iteration   2: 233729.238 ops/s
[info] # Warmup Iteration   3: 676330.600 ops/s
[info] Iteration   1: 772995.201 ops/s
[info]                  ·gc.alloc.rate:                   2831.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              5763.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2622.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5338.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.256 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 796866.378 ops/s
[info]                  ·gc.alloc.rate:                   2932.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              5791.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2964.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5855.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 788689.194 ops/s
[info]                  ·gc.alloc.rate:                   2943.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              5872.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3000.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5987.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 792726.925 ops/s
[info]                  ·gc.alloc.rate:                   2944.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              5846.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2692.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5345.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 794843.676 ops/s
[info]                  ·gc.alloc.rate:                   2942.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              5826.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5357.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   789224.275 ±(99.9%) 36829.406 ops/s [Average]
[info]   (min, avg, max) = (772995.201, 789224.275, 796866.378), stdev = 9564.480
[info]   CI (99.9%): [752394.869, 826053.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2918.992 ±(99.9%) 188.981 MB/sec [Average]
[info]   (min, avg, max) = (2831.630, 2918.992, 2944.867), stdev = 49.078
[info]   CI (99.9%): [2730.011, 3107.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   5819.973 ±(99.9%) 167.475 B/op [Average]
[info]   (min, avg, max) = (5763.270, 5819.973, 5872.888), stdev = 43.493
[info]   CI (99.9%): [5652.497, 5987.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2797.462 ±(99.9%) 664.807 MB/sec [Average]
[info]   (min, avg, max) = (2622.833, 2797.462, 3000.900), stdev = 172.648
[info]   CI (99.9%): [2132.654, 3462.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5576.913 ±(99.9%) 1224.582 B/op [Average]
[info]   (min, avg, max) = (5338.301, 5576.913, 5987.719), stdev = 318.020
[info]   CI (99.9%): [4352.331, 6801.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.550 ±(99.9%) 4.375 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.550, 2.582), stdev = 1.136
[info]   CI (99.9%): [≈ 0, 4.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.117 ±(99.9%) 8.909 B/op [Average]
[info]   (min, avg, max) = (0.041, 1.117, 5.256), stdev = 2.314
[info]   CI (99.9%): [≈ 0, 10.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.400, 16.000), stdev = 1.949
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 393.028 ops/s
[info] # Warmup Iteration   2: 2877.674 ops/s
[info] # Warmup Iteration   3: 4459.603 ops/s
[info] Iteration   1: 5096.411 ops/s
[info]                  ·gc.alloc.rate:                   2277.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              703150.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     601727.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1315.410 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 5152.164 ops/s
[info]                  ·gc.alloc.rate:                   2283.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              697517.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     691116.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.018 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5181.401 ops/s
[info]                  ·gc.alloc.rate:                   2308.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              701073.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2278.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     692003.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.255 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 5132.259 ops/s
[info]                  ·gc.alloc.rate:                   2307.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              707458.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     707594.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.503 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 5114.066 ops/s
[info]                  ·gc.alloc.rate:                   2300.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              707975.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2336.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     719038.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.235 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.382 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   5135.260 ±(99.9%) 127.452 ops/s [Average]
[info]   (min, avg, max) = (5096.411, 5135.260, 5181.401), stdev = 33.099
[info]   CI (99.9%): [5007.809, 5262.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2295.706 ±(99.9%) 55.485 MB/sec [Average]
[info]   (min, avg, max) = (2277.251, 2295.706, 2308.853), stdev = 14.409
[info]   CI (99.9%): [2240.221, 2351.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   703435.091 ±(99.9%) 16947.409 B/op [Average]
[info]   (min, avg, max) = (697517.532, 703435.091, 707975.306), stdev = 4401.188
[info]   CI (99.9%): [686487.682, 720382.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2227.125 ±(99.9%) 609.002 MB/sec [Average]
[info]   (min, avg, max) = (1948.781, 2227.125, 2336.816), stdev = 158.156
[info]   CI (99.9%): [1618.124, 2836.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   682296.115 ±(99.9%) 179099.009 B/op [Average]
[info]   (min, avg, max) = (601727.950, 682296.115, 719038.186), stdev = 46511.444
[info]   CI (99.9%): [503197.106, 861395.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.116 ±(99.9%) 6.798 MB/sec [Average]
[info]   (min, avg, max) = (0.146, 1.116, 4.260), stdev = 1.765
[info]   CI (99.9%): [≈ 0, 7.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   343.714 ±(99.9%) 2100.516 B/op [Average]
[info]   (min, avg, max) = (44.255, 343.714, 1315.410), stdev = 545.497
[info]   CI (99.9%): [≈ 0, 2444.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 17.000), stdev = 2.915
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:31:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386.718 ops/s
[info] # Warmup Iteration   2: 4959.220 ops/s
[info] # Warmup Iteration   3: 6705.164 ops/s
[info] Iteration   1: 7267.478 ops/s
[info]                  ·gc.alloc.rate:                   2956.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              640118.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2945.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637727.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.262 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 7352.397 ops/s
[info]                  ·gc.alloc.rate:                   3013.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              644889.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2974.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     636630.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.821 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 7592.849 ops/s
[info]                  ·gc.alloc.rate:                   3129.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              648669.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3010.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623968.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.943 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 7626.719 ops/s
[info]                  ·gc.alloc.rate:                   3144.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              648846.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626355.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.592 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 7649.932 ops/s
[info]                  ·gc.alloc.rate:                   3154.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              648897.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627405.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.565 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   7497.875 ±(99.9%) 675.205 ops/s [Average]
[info]   (min, avg, max) = (7267.478, 7497.875, 7649.932), stdev = 175.349
[info]   CI (99.9%): [6822.670, 8173.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3079.697 ±(99.9%) 344.290 MB/sec [Average]
[info]   (min, avg, max) = (2956.335, 3079.697, 3154.361), stdev = 89.411
[info]   CI (99.9%): [2735.407, 3423.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   646284.508 ±(99.9%) 14793.757 B/op [Average]
[info]   (min, avg, max) = (640118.895, 646284.508, 648897.583), stdev = 3841.892
[info]   CI (99.9%): [631490.751, 661078.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3003.236 ±(99.9%) 166.425 MB/sec [Average]
[info]   (min, avg, max) = (2945.290, 3003.236, 3049.885), stdev = 43.220
[info]   CI (99.9%): [2836.810, 3169.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   630417.296 ±(99.9%) 24292.961 B/op [Average]
[info]   (min, avg, max) = (623968.299, 630417.296, 637727.481), stdev = 6308.805
[info]   CI (99.9%): [606124.335, 654710.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 1.194 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.196, 0.749), stdev = 0.310
[info]   CI (99.9%): [≈ 0, 1.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   42.037 ±(99.9%) 259.212 B/op [Average]
[info]   (min, avg, max) = (8.565, 42.037, 162.262), stdev = 67.316
[info]   CI (99.9%): [≈ 0, 301.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 15.000), stdev = 1.000
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20362.018 ops/s
[info] # Warmup Iteration   2: 44594.824 ops/s
[info] # Warmup Iteration   3: 54256.774 ops/s
[info] Iteration   1: 57301.009 ops/s
[info]                  ·gc.alloc.rate:                   954.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              26204.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27077.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.457 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 56656.932 ops/s
[info]                  ·gc.alloc.rate:                   943.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              26189.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27422.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 56462.534 ops/s
[info]                  ·gc.alloc.rate:                   934.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              26035.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18381.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.951 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 55895.618 ops/s
[info]                  ·gc.alloc.rate:                   928.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              26149.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27702.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.342 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 56419.308 ops/s
[info]                  ·gc.alloc.rate:                   962.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              26840.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27370.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   56547.080 ±(99.9%) 1952.426 ops/s [Average]
[info]   (min, avg, max) = (55895.618, 56547.080, 57301.009), stdev = 507.039
[info]   CI (99.9%): [54594.654, 58499.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   944.470 ±(99.9%) 53.304 MB/sec [Average]
[info]   (min, avg, max) = (928.789, 944.470, 962.277), stdev = 13.843
[info]   CI (99.9%): [891.166, 997.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26284.015 ±(99.9%) 1225.394 B/op [Average]
[info]   (min, avg, max) = (26035.196, 26284.015, 26840.749), stdev = 318.231
[info]   CI (99.9%): [25058.621, 27509.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.605 ±(99.9%) 559.968 MB/sec [Average]
[info]   (min, avg, max) = (659.499, 919.605, 987.400), stdev = 145.422
[info]   CI (99.9%): [359.637, 1479.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25590.697 ±(99.9%) 15542.017 B/op [Average]
[info]   (min, avg, max) = (18381.412, 25590.697, 27702.197), stdev = 4036.212
[info]   CI (99.9%): [10048.680, 41132.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 5.081 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.941, 3.227), stdev = 1.319
[info]   CI (99.9%): [≈ 0, 6.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   26.214 ±(99.9%) 141.623 B/op [Average]
[info]   (min, avg, max) = (1.156, 26.214, 89.951), stdev = 36.779
[info]   CI (99.9%): [≈ 0, 167.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 3.899
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 749.513 ops/s
[info] # Warmup Iteration   2: 4174.076 ops/s
[info] # Warmup Iteration   3: 4938.910 ops/s
[info] Iteration   1: 5295.241 ops/s
[info]                  ·gc.alloc.rate:                   944.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              280755.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289412.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 5428.459 ops/s
[info]                  ·gc.alloc.rate:               963.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          279168.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188473.329 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5378.497 ops/s
[info]                  ·gc.alloc.rate:                   963.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              281969.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282803.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.181 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5338.767 ops/s
[info]                  ·gc.alloc.rate:               955.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          281579.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:      965.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 284529.330 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 5363.457 ops/s
[info]                  ·gc.alloc.rate:                   954.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              279981.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283692.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.740 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   5360.884 ±(99.9%) 189.440 ops/s [Average]
[info]   (min, avg, max) = (5295.241, 5360.884, 5428.459), stdev = 49.197
[info]   CI (99.9%): [5171.444, 5550.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   956.261 ±(99.9%) 29.856 MB/sec [Average]
[info]   (min, avg, max) = (944.690, 956.261, 963.708), stdev = 7.754
[info]   CI (99.9%): [926.405, 986.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   280690.835 ±(99.9%) 4411.384 B/op [Average]
[info]   (min, avg, max) = (279168.552, 280690.835, 281969.199), stdev = 1145.622
[info]   CI (99.9%): [276279.450, 285102.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   904.611 ±(99.9%) 547.766 MB/sec [Average]
[info]   (min, avg, max) = (650.209, 904.611, 973.821), stdev = 142.253
[info]   CI (99.9%): [356.845, 1452.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   265782.189 ±(99.9%) 166704.458 B/op [Average]
[info]   (min, avg, max) = (188473.329, 265782.189, 289412.519), stdev = 43292.618
[info]   CI (99.9%): [99077.731, 432486.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.035 ±(99.9%) 0.178 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.112), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.434 ±(99.9%) 52.899 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.434, 33.247), stdev = 13.738
[info]   CI (99.9%): [≈ 0, 63.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 15.000), stdev = 5.099
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1018.653 ops/s
[info] # Warmup Iteration   2: 4376.142 ops/s
[info] # Warmup Iteration   3: 5029.285 ops/s
[info] Iteration   1: 5349.821 ops/s
[info]                  ·gc.alloc.rate:                   572.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              168320.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94746.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.124 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5331.039 ops/s
[info]                  ·gc.alloc.rate:               589.146 MB/sec
[info]                  ·gc.alloc.rate.norm:          173907.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190560.792 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 5321.756 ops/s
[info]                  ·gc.alloc.rate:                   579.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              171252.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191670.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5269.648 ops/s
[info]                  ·gc.alloc.rate:               573.879 MB/sec
[info]                  ·gc.alloc.rate.norm:          171370.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 194283.852 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 5206.157 ops/s
[info]                  ·gc.alloc.rate:                   560.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              169462.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98757.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.876 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5295.684 ±(99.9%) 224.144 ops/s [Average]
[info]   (min, avg, max) = (5206.157, 5295.684, 5349.821), stdev = 58.210
[info]   CI (99.9%): [5071.540, 5519.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   574.995 ±(99.9%) 40.069 MB/sec [Average]
[info]   (min, avg, max) = (560.620, 574.995, 589.146), stdev = 10.406
[info]   CI (99.9%): [534.926, 615.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   170862.724 ±(99.9%) 8191.181 B/op [Average]
[info]   (min, avg, max) = (168320.957, 170862.724, 173907.095), stdev = 2127.224
[info]   CI (99.9%): [162671.543, 179053.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   518.630 ±(99.9%) 682.820 MB/sec [Average]
[info]   (min, avg, max) = (322.083, 518.630, 650.611), stdev = 177.326
[info]   CI (99.9%): [≈ 0, 1201.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   154003.745 ±(99.9%) 201390.795 B/op [Average]
[info]   (min, avg, max) = (94746.121, 154003.745, 194283.852), stdev = 52300.550
[info]   CI (99.9%): [≈ 0, 355394.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.231 ±(99.9%) 29.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.231, 18.876), stdev = 7.706
[info]   CI (99.9%): [≈ 0, 35.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 2.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2378.707 ops/s
[info] # Warmup Iteration   2: 5625.850 ops/s
[info] # Warmup Iteration   3: 6547.379 ops/s
[info] Iteration   1: 6746.512 ops/s
[info]                  ·gc.alloc.rate:               222.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          51939.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59670.004 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 6857.327 ops/s
[info]                  ·gc.alloc.rate:      221.158 MB/sec
[info]                  ·gc.alloc.rate.norm: 50752.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6822.038 ops/s
[info]                  ·gc.alloc.rate:                   227.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              52574.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74986.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.434 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6791.709 ops/s
[info]                  ·gc.alloc.rate:                   229.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              53101.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75328.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6820.256 ops/s
[info]                  ·gc.alloc.rate:               227.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          52410.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75084.928 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6807.568 ±(99.9%) 159.065 ops/s [Average]
[info]   (min, avg, max) = (6746.512, 6807.568, 6857.327), stdev = 41.309
[info]   CI (99.9%): [6648.504, 6966.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   225.619 ±(99.9%) 13.475 MB/sec [Average]
[info]   (min, avg, max) = (221.158, 225.619, 229.186), stdev = 3.499
[info]   CI (99.9%): [212.145, 239.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   52155.504 ±(99.9%) 3417.346 B/op [Average]
[info]   (min, avg, max) = (50752.068, 52155.504, 53101.123), stdev = 887.474
[info]   CI (99.9%): [48738.157, 55572.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   246.290 ±(99.9%) 542.641 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.290, 325.439), stdev = 140.922
[info]   CI (99.9%): [≈ 0, 788.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   57013.863 ±(99.9%) 125406.587 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57013.863, 75328.292), stdev = 32567.692
[info]   CI (99.9%): [≈ 0, 182420.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.890 ±(99.9%) 5.165 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.890, 3.017), stdev = 1.341
[info]   CI (99.9%): [≈ 0, 6.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3401.513 ops/s
[info] # Warmup Iteration   2: 5638.141 ops/s
[info] # Warmup Iteration   3: 6794.110 ops/s
[info] Iteration   1: 6813.527 ops/s
[info]                  ·gc.alloc.rate:      170.055 MB/sec
[info]                  ·gc.alloc.rate.norm: 39278.784 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6804.703 ops/s
[info]                  ·gc.alloc.rate:               175.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          40607.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59161.502 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 6942.979 ops/s
[info]                  ·gc.alloc.rate:      173.153 MB/sec
[info]                  ·gc.alloc.rate.norm: 39248.084 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6923.009 ops/s
[info]                  ·gc.alloc.rate:                   178.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              40639.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74346.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.732 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6793.638 ops/s
[info]                  ·gc.alloc.rate:               223.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          51744.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75769.068 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6855.571 ±(99.9%) 274.849 ops/s [Average]
[info]   (min, avg, max) = (6793.638, 6855.571, 6942.979), stdev = 71.378
[info]   CI (99.9%): [6580.722, 7130.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   184.194 ±(99.9%) 85.272 MB/sec [Average]
[info]   (min, avg, max) = (170.055, 184.194, 223.391), stdev = 22.145
[info]   CI (99.9%): [98.922, 269.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   42303.649 ±(99.9%) 20490.634 B/op [Average]
[info]   (min, avg, max) = (39248.084, 42303.649, 51744.701), stdev = 5321.352
[info]   CI (99.9%): [21813.015, 62794.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   181.999 ±(99.9%) 649.491 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 181.999, 327.109), stdev = 168.671
[info]   CI (99.9%): [≈ 0, 831.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   41855.452 ±(99.9%) 149247.487 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41855.452, 75769.068), stdev = 38759.099
[info]   CI (99.9%): [≈ 0, 191102.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.946 ±(99.9%) 8.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.946, 4.732), stdev = 2.116
[info]   CI (99.9%): [≈ 0, 9.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 4.000), stdev = 2.191
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 646.084 ops/s
[info] # Warmup Iteration   2: 4118.995 ops/s
[info] # Warmup Iteration   3: 7579.016 ops/s
[info] Iteration   1: 8718.685 ops/s
[info]                  ·gc.alloc.rate:                   1819.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              328393.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1606.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289888.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.545 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 820.292 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 8860.882 ops/s
[info]                  ·gc.alloc.rate:                   1878.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              333539.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     340967.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.760 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 8810.296 ops/s
[info]                  ·gc.alloc.rate:                   1842.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              329111.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287338.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.671 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 8929.127 ops/s
[info]                  ·gc.alloc.rate:                   1889.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              332931.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344359.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.193 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 8735.192 ops/s
[info]                  ·gc.alloc.rate:                   1873.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              337562.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356724.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.724 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   8810.836 ±(99.9%) 337.407 ops/s [Average]
[info]   (min, avg, max) = (8718.685, 8810.836, 8929.127), stdev = 87.624
[info]   CI (99.9%): [8473.430, 9148.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1860.689 ±(99.9%) 110.592 MB/sec [Average]
[info]   (min, avg, max) = (1819.676, 1860.689, 1889.206), stdev = 28.720
[info]   CI (99.9%): [1750.097, 1971.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   332307.666 ±(99.9%) 14284.933 B/op [Average]
[info]   (min, avg, max) = (328393.808, 332307.666, 337562.309), stdev = 3709.752
[info]   CI (99.9%): [318022.733, 346592.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1813.851 ±(99.9%) 730.004 MB/sec [Average]
[info]   (min, avg, max) = (1606.312, 1813.851, 1980.322), stdev = 189.580
[info]   CI (99.9%): [1083.847, 2543.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   323855.628 ±(99.9%) 125970.995 B/op [Average]
[info]   (min, avg, max) = (287338.141, 323855.628, 356724.619), stdev = 32714.267
[info]   CI (99.9%): [197884.632, 449826.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.062 ±(99.9%) 7.502 MB/sec [Average]
[info]   (min, avg, max) = (0.137, 1.062, 4.545), stdev = 1.948
[info]   CI (99.9%): [≈ 0, 8.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   191.328 ±(99.9%) 1354.578 B/op [Average]
[info]   (min, avg, max) = (24.193, 191.328, 820.292), stdev = 351.780
[info]   CI (99.9%): [≈ 0, 1545.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 20.000), stdev = 5.215
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.848 ops/s
[info] # Warmup Iteration   2: 13872.349 ops/s
[info] # Warmup Iteration   3: 18277.579 ops/s
[info] Iteration   1: 18390.131 ops/s
[info]                  ·gc.alloc.rate:                   462.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              39545.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27705.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 18336.820 ops/s
[info]                  ·gc.alloc.rate:               469.999 MB/sec
[info]                  ·gc.alloc.rate.norm:          40334.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55570.355 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 18402.028 ops/s
[info]                  ·gc.alloc.rate:                   465.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              39842.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27715.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.944 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 17353.890 ops/s
[info]                  ·gc.alloc.rate:                   511.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              46427.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58807.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.888 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 17666.424 ops/s
[info]                  ·gc.alloc.rate:               527.289 MB/sec
[info]                  ·gc.alloc.rate.norm:          46957.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28899.633 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   18029.859 ±(99.9%) 1878.102 ops/s [Average]
[info]   (min, avg, max) = (17353.890, 18029.859, 18402.028), stdev = 487.737
[info]   CI (99.9%): [16151.757, 19907.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   487.460 ±(99.9%) 115.520 MB/sec [Average]
[info]   (min, avg, max) = (462.127, 487.460, 527.289), stdev = 30.000
[info]   CI (99.9%): [371.940, 602.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   42621.554 ±(99.9%) 14369.732 B/op [Average]
[info]   (min, avg, max) = (39545.537, 42621.554, 46957.801), stdev = 3731.774
[info]   CI (99.9%): [28251.821, 56991.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   453.683 ±(99.9%) 683.141 MB/sec [Average]
[info]   (min, avg, max) = (323.761, 453.683, 648.521), stdev = 177.410
[info]   CI (99.9%): [≈ 0, 1136.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   39739.723 ±(99.9%) 61523.819 B/op [Average]
[info]   (min, avg, max) = (27705.118, 39739.723, 58807.970), stdev = 15977.540
[info]   CI (99.9%): [≈ 0, 101263.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.076 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.046), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.243 ±(99.9%) 6.541 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.243, 3.944), stdev = 1.699
[info]   CI (99.9%): [≈ 0, 7.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.817
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2202.086 ops/s
[info] # Warmup Iteration   2: 10853.878 ops/s
[info] # Warmup Iteration   3: 13890.601 ops/s
[info] Iteration   1: 13965.227 ops/s
[info]                  ·gc.alloc.rate:                   377.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              42493.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36106.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.352 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 14103.551 ops/s
[info]                  ·gc.alloc.rate:               387.840 MB/sec
[info]                  ·gc.alloc.rate.norm:          43275.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71728.634 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 14010.148 ops/s
[info]                  ·gc.alloc.rate:                   382.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              42899.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36179.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.338 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 13354.229 ops/s
[info]                  ·gc.alloc.rate:               368.190 MB/sec
[info]                  ·gc.alloc.rate.norm:          43385.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37956.614 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 13359.268 ops/s
[info]                  ·gc.alloc.rate:               365.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          43018.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38096.509 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   13758.485 ±(99.9%) 1425.187 ops/s [Average]
[info]   (min, avg, max) = (13354.229, 13758.485, 14103.551), stdev = 370.116
[info]   CI (99.9%): [12333.298, 15183.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   376.087 ±(99.9%) 36.237 MB/sec [Average]
[info]   (min, avg, max) = (365.263, 376.087, 387.840), stdev = 9.411
[info]   CI (99.9%): [339.850, 412.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43014.533 ±(99.9%) 1349.269 B/op [Average]
[info]   (min, avg, max) = (42493.189, 43014.533, 43385.693), stdev = 350.401
[info]   CI (99.9%): [41665.263, 44363.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   386.208 ±(99.9%) 552.426 MB/sec [Average]
[info]   (min, avg, max) = (320.409, 386.208, 642.835), stdev = 143.463
[info]   CI (99.9%): [≈ 0, 938.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44013.501 ±(99.9%) 59769.433 B/op [Average]
[info]   (min, avg, max) = (36106.024, 44013.501, 71728.634), stdev = 15521.932
[info]   CI (99.9%): [≈ 0, 103782.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.026 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.110), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.938 ±(99.9%) 20.637 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.938, 12.352), stdev = 5.359
[info]   CI (99.9%): [≈ 0, 23.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7867.670 ops/s
[info] # Warmup Iteration   2: 18242.826 ops/s
[info] # Warmup Iteration   3: 23629.879 ops/s
[info] Iteration   1: 22919.681 ops/s
[info]                  ·gc.alloc.rate:               595.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          40914.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44731.193 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 22646.594 ops/s
[info]                  ·gc.alloc.rate:                   421.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              29321.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22636.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.530 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 21145.388 ops/s
[info]                  ·gc.alloc.rate:               583.312 MB/sec
[info]                  ·gc.alloc.rate.norm:          43411.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48487.344 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 23078.306 ops/s
[info]                  ·gc.alloc.rate:                   438.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              29897.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44519.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.879 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.919 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 22131.120 ops/s
[info]                  ·gc.alloc.rate:               417.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          29654.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23234.845 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22384.218 ±(99.9%) 3005.031 ops/s [Average]
[info]   (min, avg, max) = (21145.388, 22384.218, 23078.306), stdev = 780.397
[info]   CI (99.9%): [19379.187, 25389.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   491.338 ±(99.9%) 347.246 MB/sec [Average]
[info]   (min, avg, max) = (417.041, 491.338, 595.927), stdev = 90.179
[info]   CI (99.9%): [144.092, 838.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   34640.005 ±(99.9%) 26674.394 B/op [Average]
[info]   (min, avg, max) = (29321.033, 34640.005, 43411.957), stdev = 6927.255
[info]   CI (99.9%): [7965.610, 61314.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   521.686 ±(99.9%) 686.978 MB/sec [Average]
[info]   (min, avg, max) = (325.749, 521.686, 652.895), stdev = 178.406
[info]   CI (99.9%): [≈ 0, 1208.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   36721.849 ±(99.9%) 48847.439 B/op [Average]
[info]   (min, avg, max) = (22636.132, 36721.849, 48487.344), stdev = 12685.525
[info]   CI (99.9%): [≈ 0, 85569.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.445 ±(99.9%) 2.431 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.445, 1.346), stdev = 0.631
[info]   CI (99.9%): [≈ 0, 2.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   30.690 ±(99.9%) 168.163 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 30.690, 93.530), stdev = 43.671
[info]   CI (99.9%): [≈ 0, 198.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.408
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118.771 ops/s
[info] # Warmup Iteration   2: 2710.266 ops/s
[info] # Warmup Iteration   3: 5900.936 ops/s
[info] Iteration   1: 6861.957 ops/s
[info]                  ·gc.alloc.rate:                   2665.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              611187.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2605.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     597614.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.675 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 613.527 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 6996.468 ops/s
[info]                  ·gc.alloc.rate:                   2680.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              602979.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2620.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     589383.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.636 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 7145.339 ops/s
[info]                  ·gc.alloc.rate:                   2773.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              610914.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2651.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     583927.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.585 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 7182.169 ops/s
[info]                  ·gc.alloc.rate:                   2797.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              613041.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2679.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587123.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.806 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 7092.236 ops/s
[info]                  ·gc.alloc.rate:                   2767.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              614001.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     598932.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.619 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   7055.634 ±(99.9%) 496.155 ops/s [Average]
[info]   (min, avg, max) = (6861.957, 7055.634, 7182.169), stdev = 128.850
[info]   CI (99.9%): [6559.478, 7551.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2737.039 ±(99.9%) 230.109 MB/sec [Average]
[info]   (min, avg, max) = (2665.176, 2737.039, 2797.901), stdev = 59.759
[info]   CI (99.9%): [2506.930, 2967.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   610424.784 ±(99.9%) 16772.649 B/op [Average]
[info]   (min, avg, max) = (602979.436, 610424.784, 614001.405), stdev = 4355.804
[info]   CI (99.9%): [593652.135, 627197.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2651.365 ±(99.9%) 150.444 MB/sec [Average]
[info]   (min, avg, max) = (2605.992, 2651.365, 2699.298), stdev = 39.070
[info]   CI (99.9%): [2500.921, 2801.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   591396.682 ±(99.9%) 25364.195 B/op [Average]
[info]   (min, avg, max) = (583927.869, 591396.682, 598932.894), stdev = 6587.001
[info]   CI (99.9%): [566032.486, 616760.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.647 ±(99.9%) 4.410 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.647, 2.675), stdev = 1.145
[info]   CI (99.9%): [≈ 0, 5.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   147.835 ±(99.9%) 1012.342 B/op [Average]
[info]   (min, avg, max) = (4.585, 147.835, 613.527), stdev = 262.902
[info]   CI (99.9%): [≈ 0, 1160.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 17.000), stdev = 1.949
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1464.391 ops/s
[info] # Warmup Iteration   2: 8112.009 ops/s
[info] # Warmup Iteration   3: 10430.256 ops/s
[info] Iteration   1: 11751.704 ops/s
[info]                  ·gc.alloc.rate:                   2236.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              299492.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2226.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298159.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 593.654 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 11893.058 ops/s
[info]                  ·gc.alloc.rate:                   2251.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              297911.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2218.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293523.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.618 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 11884.613 ops/s
[info]                  ·gc.alloc.rate:                   2280.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              301900.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2244.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297073.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.026 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 11040.586 ops/s
[info]                  ·gc.alloc.rate:                   2268.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              323277.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326042.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 293.267 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 11669.245 ops/s
[info]                  ·gc.alloc.rate:                   2217.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              299074.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267579.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.037 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   11647.841 ±(99.9%) 1356.220 ops/s [Average]
[info]   (min, avg, max) = (11040.586, 11647.841, 11893.058), stdev = 352.206
[info]   CI (99.9%): [10291.621, 13004.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2250.876 ±(99.9%) 96.051 MB/sec [Average]
[info]   (min, avg, max) = (2217.676, 2250.876, 2280.627), stdev = 24.944
[info]   CI (99.9%): [2154.825, 2346.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   304331.437 ±(99.9%) 41165.022 B/op [Average]
[info]   (min, avg, max) = (297911.553, 304331.437, 323277.852), stdev = 10690.425
[info]   CI (99.9%): [263166.416, 345496.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2192.130 ±(99.9%) 459.371 MB/sec [Average]
[info]   (min, avg, max) = (1984.134, 2192.130, 2287.445), stdev = 119.297
[info]   CI (99.9%): [1732.759, 2651.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   296475.516 ±(99.9%) 79874.077 B/op [Average]
[info]   (min, avg, max) = (267579.131, 296475.516, 326042.193), stdev = 20743.044
[info]   CI (99.9%): [216601.438, 376349.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.444 ±(99.9%) 7.145 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.444, 4.433), stdev = 1.856
[info]   CI (99.9%): [≈ 0, 8.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   196.720 ±(99.9%) 963.401 B/op [Average]
[info]   (min, avg, max) = (11.026, 196.720, 593.654), stdev = 250.192
[info]   CI (99.9%): [≈ 0, 1160.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.000, 27.000), stdev = 7.416
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.677 ops/s
[info] # Warmup Iteration   2: 52528.998 ops/s
[info] # Warmup Iteration   3: 67438.320 ops/s
[info] Iteration   1: 64729.892 ops/s
[info]                  ·gc.alloc.rate:                   760.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              18467.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23545.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 68531.182 ops/s
[info]                  ·gc.alloc.rate:                   659.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              15146.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14876.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 67555.362 ops/s
[info]                  ·gc.alloc.rate:                   648.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              15096.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15107.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.802 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 68197.247 ops/s
[info]                  ·gc.alloc.rate:                   652.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              15062.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14988.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 69115.924 ops/s
[info]                  ·gc.alloc.rate:                   668.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              15209.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14788.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.421 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   67625.922 ±(99.9%) 6601.912 ops/s [Average]
[info]   (min, avg, max) = (64729.892, 67625.922, 69115.924), stdev = 1714.496
[info]   CI (99.9%): [61024.009, 74227.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   677.746 ±(99.9%) 179.518 MB/sec [Average]
[info]   (min, avg, max) = (648.052, 677.746, 760.032), stdev = 46.620
[info]   CI (99.9%): [498.228, 857.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15796.539 ±(99.9%) 5753.968 B/op [Average]
[info]   (min, avg, max) = (15062.566, 15796.539, 18467.763), stdev = 1494.287
[info]   CI (99.9%): [10042.571, 21550.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   712.945 ±(99.9%) 551.209 MB/sec [Average]
[info]   (min, avg, max) = (648.042, 712.945, 969.012), stdev = 143.147
[info]   CI (99.9%): [161.735, 1264.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   16661.350 ±(99.9%) 14826.216 B/op [Average]
[info]   (min, avg, max) = (14788.972, 16661.350, 23545.699), stdev = 3850.321
[info]   CI (99.9%): [1835.133, 31487.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.280 ±(99.9%) 8.470 MB/sec [Average]
[info]   (min, avg, max) = (0.028, 1.280, 5.114), stdev = 2.200
[info]   CI (99.9%): [≈ 0, 9.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   29.206 ±(99.9%) 192.758 B/op [Average]
[info]   (min, avg, max) = (0.681, 29.206, 116.421), stdev = 50.059
[info]   CI (99.9%): [≈ 0, 221.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10244.079 ops/s
[info] # Warmup Iteration   2: 38183.295 ops/s
[info] # Warmup Iteration   3: 46867.497 ops/s
[info] Iteration   1: 42914.003 ops/s
[info]                  ·gc.alloc.rate:                   926.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              33986.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35337.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.476 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 43533.401 ops/s
[info]                  ·gc.alloc.rate:                   646.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              23365.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23335.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 42751.180 ops/s
[info]                  ·gc.alloc.rate:                   630.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              23195.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23860.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.471 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 45263.803 ops/s
[info]                  ·gc.alloc.rate:                   671.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              23351.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22616.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.724 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 45133.341 ops/s
[info]                  ·gc.alloc.rate:                   666.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              23234.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22740.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   43919.145 ±(99.9%) 4639.039 ops/s [Average]
[info]   (min, avg, max) = (42751.180, 43919.145, 45263.803), stdev = 1204.744
[info]   CI (99.9%): [39280.107, 48558.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   708.248 ±(99.9%) 474.585 MB/sec [Average]
[info]   (min, avg, max) = (630.119, 708.248, 926.729), stdev = 123.248
[info]   CI (99.9%): [233.663, 1182.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   25426.505 ±(99.9%) 18427.317 B/op [Average]
[info]   (min, avg, max) = (23195.321, 25426.505, 33986.092), stdev = 4785.516
[info]   CI (99.9%): [6999.188, 43853.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   712.003 ±(99.9%) 541.635 MB/sec [Average]
[info]   (min, avg, max) = (645.535, 712.003, 963.584), stdev = 140.661
[info]   CI (99.9%): [170.368, 1253.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   25577.970 ±(99.9%) 21095.827 B/op [Average]
[info]   (min, avg, max) = (22616.391, 25577.970, 35337.710), stdev = 5478.519
[info]   CI (99.9%): [4482.143, 46673.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.698 ±(99.9%) 4.067 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.698, 2.418), stdev = 1.056
[info]   CI (99.9%): [≈ 0, 4.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.592 ±(99.9%) 142.191 B/op [Average]
[info]   (min, avg, max) = (0.471, 24.592, 84.326), stdev = 36.926
[info]   CI (99.9%): [≈ 0, 166.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:28:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57050.721 ops/s
[info] # Warmup Iteration   2: 95198.572 ops/s
[info] # Warmup Iteration   3: 110544.613 ops/s
[info] Iteration   1: 118676.120 ops/s
[info]                  ·gc.alloc.rate:                   953.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              12649.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13021.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.174 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 120505.130 ops/s
[info]                  ·gc.alloc.rate:                   941.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              12292.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12850.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 118952.168 ops/s
[info]                  ·gc.alloc.rate:                   913.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              12087.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8689.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 120004.362 ops/s
[info]                  ·gc.alloc.rate:                   936.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              12275.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12859.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.561 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 118239.999 ops/s
[info]                  ·gc.alloc.rate:                   919.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              12240.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13016.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.879 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   119275.556 ±(99.9%) 3642.520 ops/s [Average]
[info]   (min, avg, max) = (118239.999, 119275.556, 120505.130), stdev = 945.951
[info]   CI (99.9%): [115633.035, 122918.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   932.913 ±(99.9%) 62.850 MB/sec [Average]
[info]   (min, avg, max) = (913.688, 932.913, 953.886), stdev = 16.322
[info]   CI (99.9%): [870.063, 995.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12309.174 ±(99.9%) 795.409 B/op [Average]
[info]   (min, avg, max) = (12087.814, 12309.174, 12649.094), stdev = 206.565
[info]   CI (99.9%): [11513.765, 13104.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   916.254 ±(99.9%) 558.468 MB/sec [Average]
[info]   (min, avg, max) = (656.841, 916.254, 983.925), stdev = 145.032
[info]   CI (99.9%): [357.786, 1474.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12087.413 ±(99.9%) 7320.463 B/op [Average]
[info]   (min, avg, max) = (8689.808, 12087.413, 13021.509), stdev = 1901.101
[info]   CI (99.9%): [4766.950, 19407.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.101 ±(99.9%) 4.357 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.101, 2.948), stdev = 1.132
[info]   CI (99.9%): [≈ 0, 5.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.541 ±(99.9%) 57.628 B/op [Average]
[info]   (min, avg, max) = (1.088, 14.541, 39.002), stdev = 14.966
[info]   CI (99.9%): [≈ 0, 72.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 11.000), stdev = 2.683
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54220.327 ops/s
[info] # Warmup Iteration   2: 104789.431 ops/s
[info] # Warmup Iteration   3: 125021.750 ops/s
[info] Iteration   1: 135090.166 ops/s
[info]                  ·gc.alloc.rate:      0.253 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.947 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 137421.278 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 136536.582 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 137134.164 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 137231.853 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   136682.809 ±(99.9%) 3657.301 ops/s [Average]
[info]   (min, avg, max) = (135090.166, 136682.809, 137421.278), stdev = 949.790
[info]   CI (99.9%): [133025.507, 140340.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.051 ±(99.9%) 0.435 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.051, 0.253), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.592 ±(99.9%) 5.069 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.592, 2.947), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 537.263 ops/s
[info] # Warmup Iteration   2: 5649.850 ops/s
[info] # Warmup Iteration   3: 7952.464 ops/s
[info] Iteration   1: 8939.701 ops/s
[info]                  ·gc.alloc.rate:                   2332.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              410622.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404678.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 399.492 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 9044.777 ops/s
[info]                  ·gc.alloc.rate:                   2373.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              412919.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     400793.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.305 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 9117.708 ops/s
[info]                  ·gc.alloc.rate:                   2393.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              413119.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2322.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     400760.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.593 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 9069.236 ops/s
[info]                  ·gc.alloc.rate:                   2399.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              416319.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406276.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.224 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 9314.118 ops/s
[info]                  ·gc.alloc.rate:                   2415.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              408168.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2357.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398337.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.035 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   9097.108 ±(99.9%) 530.111 ops/s [Average]
[info]   (min, avg, max) = (8939.701, 9097.108, 9314.118), stdev = 137.668
[info]   CI (99.9%): [8566.997, 9627.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2382.975 ±(99.9%) 122.906 MB/sec [Average]
[info]   (min, avg, max) = (2332.755, 2382.975, 2415.767), stdev = 31.918
[info]   CI (99.9%): [2260.069, 2505.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   412229.767 ±(99.9%) 11722.133 B/op [Average]
[info]   (min, avg, max) = (408168.690, 412229.767, 416319.371), stdev = 3044.201
[info]   CI (99.9%): [400507.635, 423951.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2324.748 ±(99.9%) 95.812 MB/sec [Average]
[info]   (min, avg, max) = (2298.989, 2324.748, 2357.580), stdev = 24.882
[info]   CI (99.9%): [2228.937, 2420.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   402169.292 ±(99.9%) 12437.650 B/op [Average]
[info]   (min, avg, max) = (398337.319, 402169.292, 406276.966), stdev = 3230.018
[info]   CI (99.9%): [389731.642, 414606.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.570 ±(99.9%) 3.732 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.570, 2.270), stdev = 0.969
[info]   CI (99.9%): [≈ 0, 4.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   100.130 ±(99.9%) 657.204 B/op [Average]
[info]   (min, avg, max) = (3.593, 100.130, 399.492), stdev = 170.674
[info]   CI (99.9%): [≈ 0, 757.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 15.000), stdev = 1.924
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 578000.457 ops/s
[info] # Warmup Iteration   2: 8310192.655 ops/s
[info] # Warmup Iteration   3: 13065200.990 ops/s
[info] Iteration   1: 13047715.269 ops/s
[info]                  ·gc.alloc.rate:                   5795.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5661.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     682.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 12885010.469 ops/s
[info]                  ·gc.alloc.rate:                   5669.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              692.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5414.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     661.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        16.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 13024882.986 ops/s
[info]                  ·gc.alloc.rate:                   5795.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              700.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5776.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     697.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 13186699.912 ops/s
[info]                  ·gc.alloc.rate:                   5858.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5448.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     650.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        16.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 13082696.770 ops/s
[info]                  ·gc.alloc.rate:                   5738.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              690.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5787.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     696.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   13045401.081 ±(99.9%) 419648.751 ops/s [Average]
[info]   (min, avg, max) = (12885010.469, 13045401.081, 13186699.912), stdev = 108981.448
[info]   CI (99.9%): [12625752.330, 13465049.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   5771.491 ±(99.9%) 274.150 MB/sec [Average]
[info]   (min, avg, max) = (5669.605, 5771.491, 5858.897), stdev = 71.196
[info]   CI (99.9%): [5497.341, 6045.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   696.180 ±(99.9%) 17.270 B/op [Average]
[info]   (min, avg, max) = (690.257, 696.180, 700.139), stdev = 4.485
[info]   CI (99.9%): [678.910, 713.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   5617.743 ±(99.9%) 683.660 MB/sec [Average]
[info]   (min, avg, max) = (5414.447, 5617.743, 5787.180), stdev = 177.544
[info]   CI (99.9%): [4934.083, 6301.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   677.661 ±(99.9%) 81.936 B/op [Average]
[info]   (min, avg, max) = (650.014, 677.661, 697.909), stdev = 21.278
[info]   CI (99.9%): [595.726, 759.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.146), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.012, 0.018), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   83.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (16.000, 16.600, 17.000), stdev = 0.548
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   106.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (20.000, 21.200, 23.000), stdev = 1.304
[info]   CI (99.9%): [106.000, 106.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.579 ops/s
[info] # Warmup Iteration   2: 35444793.817 ops/s
[info] # Warmup Iteration   3: 40786432.603 ops/s
[info] Iteration   1: 42595855.353 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 42614771.020 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 42692805.329 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 42807504.226 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 42793319.519 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   42700851.089 ±(99.9%) 377401.999 ops/s [Average]
[info]   (min, avg, max) = (42595855.353, 42700851.089, 42807504.226), stdev = 98010.101
[info]   CI (99.9%): [42323449.090, 43078253.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 436139.432 ops/s
[info] # Warmup Iteration   2: 19156843.964 ops/s
[info] # Warmup Iteration   3: 24650721.905 ops/s
[info] Iteration   1: 24286612.512 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 24723552.543 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 24756328.788 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 24783067.990 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 24053902.692 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   24520692.905 ±(99.9%) 1274504.566 ops/s [Average]
[info]   (min, avg, max) = (24053902.692, 24520692.905, 24783067.990), stdev = 330984.788
[info]   CI (99.9%): [23246188.339, 25795197.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11854726.614 ops/s
[info] # Warmup Iteration   2: 44321216.682 ops/s
[info] # Warmup Iteration   3: 48103730.543 ops/s
[info] Iteration   1: 48110832.952 ops/s
[info]                  ·gc.alloc.rate:      0.130 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 47926345.685 ops/s
[info]                  ·gc.alloc.rate:      4.358 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.143 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48120437.964 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48122808.491 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48136941.097 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48083473.238 ±(99.9%) 340134.632 ops/s [Average]
[info]   (min, avg, max) = (47926345.685, 48083473.238, 48136941.097), stdev = 88331.884
[info]   CI (99.9%): [47743338.606, 48423607.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.898 ±(99.9%) 7.451 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.898, 4.358), stdev = 1.935
[info]   CI (99.9%): [≈ 0, 8.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.029 ±(99.9%) 0.245 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.029, 0.143), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5426619.288 ops/s
[info] # Warmup Iteration   2: 26458584.401 ops/s
[info] # Warmup Iteration   3: 29759033.833 ops/s
[info] Iteration   1: 30970085.486 ops/s
[info]                  ·gc.alloc.rate:                   808.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 30590270.375 ops/s
[info]                  ·gc.alloc.rate:                   821.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              42.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 31216323.795 ops/s
[info]                  ·gc.alloc.rate:                   808.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 30756154.133 ops/s
[info]                  ·gc.alloc.rate:                   816.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 31218393.542 ops/s
[info]                  ·gc.alloc.rate:                   815.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   30950245.466 ±(99.9%) 1072575.778 ops/s [Average]
[info]   (min, avg, max) = (30590270.375, 30950245.466, 31218393.542), stdev = 278544.523
[info]   CI (99.9%): [29877669.688, 32022821.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   814.153 ±(99.9%) 21.316 MB/sec [Average]
[info]   (min, avg, max) = (808.310, 814.153, 821.508), stdev = 5.536
[info]   CI (99.9%): [792.837, 835.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.400 ±(99.9%) 2.321 B/op [Average]
[info]   (min, avg, max) = (40.770, 41.400, 42.262), stdev = 0.603
[info]   CI (99.9%): [39.079, 43.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   791.696 ±(99.9%) 694.439 MB/sec [Average]
[info]   (min, avg, max) = (658.158, 791.696, 989.564), stdev = 180.344
[info]   CI (99.9%): [97.257, 1486.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.267 ±(99.9%) 35.589 B/op [Average]
[info]   (min, avg, max) = (33.298, 40.267, 50.908), stdev = 9.242
[info]   CI (99.9%): [4.678, 75.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 4.530 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.762, 2.727), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.232 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.039, 0.140), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.191
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 742967.268 ops/s
[info] # Warmup Iteration   2: 21111158.717 ops/s
[info] # Warmup Iteration   3: 25371845.639 ops/s
[info] Iteration   1: 25310815.277 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 25289220.823 ops/s
[info]                  ·gc.alloc.rate:      0.880 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.055 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 25275445.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 24233829.621 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 25226887.278 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   25067239.691 ±(99.9%) 1797898.212 ops/s [Average]
[info]   (min, avg, max) = (24233829.621, 25067239.691, 25310815.277), stdev = 466908.456
[info]   CI (99.9%): [23269341.479, 26865137.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   0.176 ±(99.9%) 1.515 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.176, 0.880), stdev = 0.393
[info]   CI (99.9%): [≈ 0, 1.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   0.011 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.011, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1829912.231 ops/s
[info] # Warmup Iteration   2: 20134935.146 ops/s
[info] # Warmup Iteration   3: 21689589.753 ops/s
[info] Iteration   1: 21699479.428 ops/s
[info]                  ·gc.alloc.rate:                   1702.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 22201084.310 ops/s
[info]                  ·gc.alloc.rate:                   1743.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 21994842.860 ops/s
[info]                  ·gc.alloc.rate:               1735.180 MB/sec
[info]                  ·gc.alloc.rate.norm:          124.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.991 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 21920732.349 ops/s
[info]                  ·gc.alloc.rate:                   1736.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 21712301.601 ops/s
[info]                  ·gc.alloc.rate:                   1773.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   21905688.110 ±(99.9%) 806234.581 ops/s [Average]
[info]   (min, avg, max) = (21699479.428, 21905688.110, 22201084.310), stdev = 209376.560
[info]   CI (99.9%): [21099453.529, 22711922.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1738.006 ±(99.9%) 97.557 MB/sec [Average]
[info]   (min, avg, max) = (1702.285, 1738.006, 1773.420), stdev = 25.335
[info]   CI (99.9%): [1640.449, 1835.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124.866 ±(99.9%) 8.112 B/op [Average]
[info]   (min, avg, max) = (123.455, 124.866, 128.537), stdev = 2.107
[info]   CI (99.9%): [116.755, 132.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1643.646 ±(99.9%) 41.416 MB/sec [Average]
[info]   (min, avg, max) = (1633.456, 1643.646, 1660.447), stdev = 10.756
[info]   CI (99.9%): [1602.229, 1685.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   118.093 ±(99.9%) 6.896 B/op [Average]
[info]   (min, avg, max) = (115.785, 118.093, 120.348), stdev = 1.791
[info]   CI (99.9%): [111.197, 124.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 6.977 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.831, 4.072), stdev = 1.812
[info]   CI (99.9%): [≈ 0, 7.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.295), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 19.000), stdev = 5.718
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.699 ops/s
[info] # Warmup Iteration   2: 44541984.011 ops/s
[info] # Warmup Iteration   3: 55169260.213 ops/s
[info] Iteration   1: 58187317.531 ops/s
[info]                  ·gc.alloc.rate:               1216.774 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1298.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.132 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 57973227.279 ops/s
[info]                  ·gc.alloc.rate:                   1210.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.079 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 58373772.664 ops/s
[info]                  ·gc.alloc.rate:                   1207.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 58686812.575 ops/s
[info]                  ·gc.alloc.rate:                   1224.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 58682867.302 ops/s
[info]                  ·gc.alloc.rate:                   1232.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   58380799.470 ±(99.9%) 1200031.301 ops/s [Average]
[info]   (min, avg, max) = (57973227.279, 58380799.470, 58686812.575), stdev = 311644.318
[info]   CI (99.9%): [57180768.169, 59580830.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1218.650 ±(99.9%) 39.699 MB/sec [Average]
[info]   (min, avg, max) = (1207.810, 1218.650, 1232.996), stdev = 10.310
[info]   CI (99.9%): [1178.951, 1258.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   32.850 ±(99.9%) 0.703 B/op [Average]
[info]   (min, avg, max) = (32.562, 32.850, 33.066), stdev = 0.183
[info]   CI (99.9%): [32.146, 33.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1234.088 ±(99.9%) 557.145 MB/sec [Average]
[info]   (min, avg, max) = (975.323, 1234.088, 1303.686), stdev = 144.689
[info]   CI (99.9%): [676.944, 1791.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   33.267 ±(99.9%) 15.044 B/op [Average]
[info]   (min, avg, max) = (26.294, 33.267, 35.388), stdev = 3.907
[info]   CI (99.9%): [18.223, 48.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.961 ±(99.9%) 6.796 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.961, 4.079), stdev = 1.765
[info]   CI (99.9%): [≈ 0, 7.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.184 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.111), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 14.000), stdev = 4.324
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 762915.741 ops/s
[info] # Warmup Iteration   2: 12052879.450 ops/s
[info] # Warmup Iteration   3: 26040999.209 ops/s
[info] Iteration   1: 25453618.696 ops/s
[info]                  ·gc.alloc.rate:               571.130 MB/sec
[info]                  ·gc.alloc.rate.norm:          35.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40.322 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 25527948.050 ops/s
[info]                  ·gc.alloc.rate:                        537.853 MB/sec
[info]                  ·gc.alloc.rate.norm:                   33.157 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.024 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.001 B/op
[info]                  ·gc.churn.Metaspace:                   0.064 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:               658.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          40.579 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  3.102 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             0.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.284 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              42.000 ms
[info] Iteration   3: 28030471.396 ops/s
[info]                  ·gc.alloc.rate:               579.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18.252 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 27509357.945 ops/s
[info]                  ·gc.alloc.rate:                   577.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27910869.536 ops/s
[info]                  ·gc.alloc.rate:               582.362 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.511 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   26886453.125 ±(99.9%) 4962988.490 ops/s [Average]
[info]   (min, avg, max) = (25453618.696, 26886453.125, 28030471.396), stdev = 1288872.350
[info]   CI (99.9%): [21923464.634, 31849441.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   569.611 ±(99.9%) 70.210 MB/sec [Average]
[info]   (min, avg, max) = (537.853, 569.611, 582.362), stdev = 18.233
[info]   CI (99.9%): [499.401, 639.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33.372 ±(99.9%) 4.265 B/op [Average]
[info]   (min, avg, max) = (32.545, 33.372, 35.311), stdev = 1.108
[info]   CI (99.9%): [29.107, 37.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.013 ±(99.9%) 0.111 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.376 ±(99.9%) 562.655 MB/sec [Average]
[info]   (min, avg, max) = (325.094, 586.376, 658.244), stdev = 146.120
[info]   CI (99.9%): [23.721, 1149.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   34.556 ±(99.9%) 35.799 B/op [Average]
[info]   (min, avg, max) = (18.252, 34.556, 40.579), stdev = 9.297
[info]   CI (99.9%): [≈ 0, 70.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.620 ±(99.9%) 5.343 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.620, 3.102), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 5.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.038 ±(99.9%) 0.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.191), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.931 ±(99.9%) 7.928 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.931, 4.614), stdev = 2.059
[info]   CI (99.9%): [≈ 0, 8.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.057, 0.284), stdev = 0.127
[info]   CI (99.9%): [≈ 0, 0.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 11.600, 42.000), stdev = 17.257
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9078927.129 ops/s
[info] # Warmup Iteration   2: 42279192.661 ops/s
[info] # Warmup Iteration   3: 49158303.586 ops/s
[info] Iteration   1: 49883947.155 ops/s
[info]                  ·gc.alloc.rate:               1048.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.074 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 49345975.757 ops/s
[info]                  ·gc.alloc.rate:                   1029.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 50448436.068 ops/s
[info]                  ·gc.alloc.rate:                   1051.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 50531817.666 ops/s
[info]                  ·gc.alloc.rate:                   1066.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 50044573.556 ops/s
[info]                  ·gc.alloc.rate:                   1049.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   50050950.040 ±(99.9%) 1840821.443 ops/s [Average]
[info]   (min, avg, max) = (49345975.757, 50050950.040, 50531817.666), stdev = 478055.483
[info]   CI (99.9%): [48210128.598, 51891771.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1049.127 ±(99.9%) 51.302 MB/sec [Average]
[info]   (min, avg, max) = (1029.480, 1049.127, 1066.927), stdev = 13.323
[info]   CI (99.9%): [997.825, 1100.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.982 ±(99.9%) 0.655 B/op [Average]
[info]   (min, avg, max) = (32.801, 32.982, 33.211), stdev = 0.170
[info]   CI (99.9%): [32.327, 33.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1049.811 ±(99.9%) 556.746 MB/sec [Average]
[info]   (min, avg, max) = (979.673, 1049.811, 1308.379), stdev = 144.585
[info]   CI (99.9%): [493.065, 1606.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   32.987 ±(99.9%) 16.693 B/op [Average]
[info]   (min, avg, max) = (30.807, 32.987, 40.726), stdev = 4.335
[info]   CI (99.9%): [16.293, 49.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 7.000 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.840, 4.091), stdev = 1.818
[info]   CI (99.9%): [≈ 0, 7.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.218 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.128), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9472272.202 ops/s
[info] # Warmup Iteration   2: 60352103.614 ops/s
[info] # Warmup Iteration   3: 65429730.900 ops/s
[info] Iteration   1: 65303331.540 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 65418697.805 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 65396817.197 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 65461515.013 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 65420607.345 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   65400193.780 ±(99.9%) 227099.058 ops/s [Average]
[info]   (min, avg, max) = (65303331.540, 65400193.780, 65461515.013), stdev = 58976.904
[info]   CI (99.9%): [65173094.722, 65627292.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6716021.329 ops/s
[info] # Warmup Iteration   2: 22903564.368 ops/s
[info] # Warmup Iteration   3: 26077843.535 ops/s
[info] Iteration   1: 25795172.034 ops/s
[info]                  ·gc.alloc.rate:                   2021.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 26258671.466 ops/s
[info]                  ·gc.alloc.rate:                   2054.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 26400228.609 ops/s
[info]                  ·gc.alloc.rate:                   2079.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 26438827.799 ops/s
[info]                  ·gc.alloc.rate:                   2095.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 26245247.009 ops/s
[info]                  ·gc.alloc.rate:                   2082.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   26227629.384 ±(99.9%) 986788.296 ops/s [Average]
[info]   (min, avg, max) = (25795172.034, 26227629.384, 26438827.799), stdev = 256265.787
[info]   CI (99.9%): [25240841.088, 27214417.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2066.805 ±(99.9%) 112.445 MB/sec [Average]
[info]   (min, avg, max) = (2021.908, 2066.805, 2095.888), stdev = 29.202
[info]   CI (99.9%): [1954.360, 2179.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   123.995 ±(99.9%) 2.977 B/op [Average]
[info]   (min, avg, max) = (123.128, 123.995, 124.813), stdev = 0.773
[info]   CI (99.9%): [121.018, 126.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1998.455 ±(99.9%) 54.781 MB/sec [Average]
[info]   (min, avg, max) = (1983.882, 1998.455, 2018.930), stdev = 14.226
[info]   CI (99.9%): [1943.674, 2053.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   119.905 ±(99.9%) 4.639 B/op [Average]
[info]   (min, avg, max) = (118.811, 119.905, 121.354), stdev = 1.205
[info]   CI (99.9%): [115.265, 124.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.669 ±(99.9%) 5.310 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.669, 3.136), stdev = 1.379
[info]   CI (99.9%): [≈ 0, 5.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.041, 0.191), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 10.000), stdev = 1.225
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 337971.368 ops/s
[info] # Warmup Iteration   2: 1468492.244 ops/s
[info] # Warmup Iteration   3: 3680444.856 ops/s
[info] Iteration   1: 3607804.725 ops/s
[info]                  ·gc.alloc.rate:                   1491.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              650.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     567.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 3692933.032 ops/s
[info]                  ·gc.alloc.rate:                   1530.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              652.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.160 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.347 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 3673006.921 ops/s
[info]                  ·gc.alloc.rate:                   1508.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              646.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.928 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3719311.785 ops/s
[info]                  ·gc.alloc.rate:                   1553.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              657.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3756807.105 ops/s
[info]                  ·gc.alloc.rate:               1547.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          648.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1625.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 681.066 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   3689972.714 ±(99.9%) 214185.444 ops/s [Average]
[info]   (min, avg, max) = (3607804.725, 3689972.714, 3756807.105), stdev = 55623.280
[info]   CI (99.9%): [3475787.270, 3904158.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1526.269 ±(99.9%) 101.037 MB/sec [Average]
[info]   (min, avg, max) = (1491.487, 1526.269, 1553.338), stdev = 26.239
[info]   CI (99.9%): [1425.232, 1627.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   650.882 ±(99.9%) 16.223 B/op [Average]
[info]   (min, avg, max) = (646.060, 650.882, 657.233), stdev = 4.213
[info]   CI (99.9%): [634.659, 667.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1494.326 ±(99.9%) 685.963 MB/sec [Average]
[info]   (min, avg, max) = (1298.025, 1494.326, 1630.140), stdev = 178.142
[info]   CI (99.9%): [808.363, 2180.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   636.643 ±(99.9%) 264.880 B/op [Average]
[info]   (min, avg, max) = (555.998, 636.643, 694.671), stdev = 68.789
[info]   CI (99.9%): [371.762, 901.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.074 ±(99.9%) 5.749 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.074, 3.160), stdev = 1.493
[info]   CI (99.9%): [≈ 0, 6.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.458 ±(99.9%) 2.453 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 1.347), stdev = 0.637
[info]   CI (99.9%): [≈ 0, 2.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 17.000), stdev = 5.215
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32709.191 ops/s
[info] # Warmup Iteration   2: 156327.824 ops/s
[info] # Warmup Iteration   3: 181103.667 ops/s
[info] Iteration   1: 203330.676 ops/s
[info]                  ·gc.alloc.rate:                   3836.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              29695.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3933.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30448.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.806 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 205192.165 ops/s
[info]                  ·gc.alloc.rate:                   3890.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              29838.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3670.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28145.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 200388.701 ops/s
[info]                  ·gc.alloc.rate:                   3830.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              30084.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3710.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29141.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.981 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 203782.551 ops/s
[info]                  ·gc.alloc.rate:                   3887.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              30021.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3730.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28809.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.322 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 204474.635 ops/s
[info]                  ·gc.alloc.rate:                   3900.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              30020.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28774.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   203433.746 ±(99.9%) 7095.033 ops/s [Average]
[info]   (min, avg, max) = (200388.701, 203433.746, 205192.165), stdev = 1842.558
[info]   CI (99.9%): [196338.712, 210528.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3869.376 ±(99.9%) 126.448 MB/sec [Average]
[info]   (min, avg, max) = (3830.929, 3869.376, 3900.459), stdev = 32.838
[info]   CI (99.9%): [3742.928, 3995.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29932.037 ±(99.9%) 620.354 B/op [Average]
[info]   (min, avg, max) = (29695.653, 29932.037, 30084.890), stdev = 161.104
[info]   CI (99.9%): [29311.683, 30552.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3756.893 ±(99.9%) 394.635 MB/sec [Average]
[info]   (min, avg, max) = (3670.145, 3756.893, 3933.969), stdev = 102.485
[info]   CI (99.9%): [3362.258, 4151.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   29063.818 ±(99.9%) 3286.590 B/op [Average]
[info]   (min, avg, max) = (28145.662, 29063.818, 30448.167), stdev = 853.517
[info]   CI (99.9%): [25777.227, 32350.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.614 ±(99.9%) 1.042 B/op [Average]
[info]   (min, avg, max) = (0.322, 0.614, 0.981), stdev = 0.271
[info]   CI (99.9%): [≈ 0, 1.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   56.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.200, 12.000), stdev = 0.447
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.600, 16.000), stdev = 0.894
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1803.255 ops/s
[info] # Warmup Iteration   2: 20428.628 ops/s
[info] # Warmup Iteration   3: 41507.871 ops/s
[info] Iteration   1: 42711.177 ops/s
[info]                  ·gc.alloc.rate:                   2817.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              103804.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2931.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108011.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.091 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 42783.632 ops/s
[info]                  ·gc.alloc.rate:                   2781.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              102300.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2632.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96815.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.183 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 44803.873 ops/s
[info]                  ·gc.alloc.rate:                   2766.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              97160.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93345.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.656 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 44537.016 ops/s
[info]                  ·gc.alloc.rate:                   2762.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              97606.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2682.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94794.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.471 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 43182.151 ops/s
[info]                  ·gc.alloc.rate:                   2708.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              98697.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98395.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.517 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   43603.570 ±(99.9%) 3830.523 ops/s [Average]
[info]   (min, avg, max) = (42711.177, 43603.570, 44803.873), stdev = 994.775
[info]   CI (99.9%): [39773.047, 47434.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2767.145 ±(99.9%) 151.369 MB/sec [Average]
[info]   (min, avg, max) = (2708.526, 2767.145, 2817.363), stdev = 39.310
[info]   CI (99.9%): [2615.776, 2918.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   99913.740 ±(99.9%) 11425.509 B/op [Average]
[info]   (min, avg, max) = (97160.287, 99913.740, 103804.257), stdev = 2967.168
[info]   CI (99.9%): [88488.231, 111339.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2720.863 ±(99.9%) 464.225 MB/sec [Average]
[info]   (min, avg, max) = (2632.124, 2720.863, 2931.557), stdev = 120.558
[info]   CI (99.9%): [2256.638, 3185.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   98272.463 ±(99.9%) 22233.842 B/op [Average]
[info]   (min, avg, max) = (93345.843, 98272.463, 108011.673), stdev = 5774.058
[info]   CI (99.9%): [76038.620, 120506.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.707 ±(99.9%) 3.527 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.707, 2.017), stdev = 0.916
[info]   CI (99.9%): [≈ 0, 4.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   25.984 ±(99.9%) 129.942 B/op [Average]
[info]   (min, avg, max) = (1.471, 25.984, 74.183), stdev = 33.746
[info]   CI (99.9%): [≈ 0, 155.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 16.000), stdev = 1.643
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33689.744 ops/s
[info] # Warmup Iteration   2: 153754.214 ops/s
[info] # Warmup Iteration   3: 204946.112 ops/s
[info] Iteration   1: 225793.590 ops/s
[info]                  ·gc.alloc.rate:               818.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          5705.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4494.368 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 222866.353 ops/s
[info]                  ·gc.alloc.rate:                   820.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              5791.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6856.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 225527.832 ops/s
[info]                  ·gc.alloc.rate:                   823.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              5749.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4541.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 219535.635 ops/s
[info]                  ·gc.alloc.rate:                   795.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              5699.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4684.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.223 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 224991.629 ops/s
[info]                  ·gc.alloc.rate:                   826.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              5781.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6882.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.874 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   223743.008 ±(99.9%) 10081.786 ops/s [Average]
[info]   (min, avg, max) = (219535.635, 223743.008, 225793.590), stdev = 2618.208
[info]   CI (99.9%): [213661.221, 233824.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   816.885 ±(99.9%) 48.403 MB/sec [Average]
[info]   (min, avg, max) = (795.109, 816.885, 826.561), stdev = 12.570
[info]   CI (99.9%): [768.482, 865.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5745.464 ±(99.9%) 162.555 B/op [Average]
[info]   (min, avg, max) = (5699.401, 5745.464, 5791.321), stdev = 42.215
[info]   CI (99.9%): [5582.908, 5908.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   780.840 ±(99.9%) 691.541 MB/sec [Average]
[info]   (min, avg, max) = (644.836, 780.840, 984.004), stdev = 179.591
[info]   CI (99.9%): [89.298, 1472.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5491.866 ±(99.9%) 4849.407 B/op [Average]
[info]   (min, avg, max) = (4494.368, 5491.866, 6882.493), stdev = 1259.376
[info]   CI (99.9%): [642.459, 10341.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.179 ±(99.9%) 1.198 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.179, 0.729), stdev = 0.311
[info]   CI (99.9%): [≈ 0, 1.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.278 ±(99.9%) 8.594 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.278, 5.223), stdev = 2.232
[info]   CI (99.9%): [≈ 0, 9.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185291.084 ops/s
[info] # Warmup Iteration   2: 403151.432 ops/s
[info] # Warmup Iteration   3: 516140.107 ops/s
[info] Iteration   1: 532307.973 ops/s
[info]                  ·gc.alloc.rate:                   984.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              2910.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2918.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 531397.033 ops/s
[info]                  ·gc.alloc.rate:                   977.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2895.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2925.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.361 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 522402.006 ops/s
[info]                  ·gc.alloc.rate:                   980.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              2954.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2966.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 537429.801 ops/s
[info]                  ·gc.alloc.rate:                   982.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              2875.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2875.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.707 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 536278.162 ops/s
[info]                  ·gc.alloc.rate:                   977.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              2867.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2880.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   531962.995 ±(99.9%) 22809.864 ops/s [Average]
[info]   (min, avg, max) = (522402.006, 531962.995, 537429.801), stdev = 5923.649
[info]   CI (99.9%): [509153.131, 554772.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   980.464 ±(99.9%) 11.749 MB/sec [Average]
[info]   (min, avg, max) = (977.372, 980.464, 984.504), stdev = 3.051
[info]   CI (99.9%): [968.715, 992.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2900.594 ±(99.9%) 131.849 B/op [Average]
[info]   (min, avg, max) = (2867.953, 2900.594, 2954.004), stdev = 34.241
[info]   CI (99.9%): [2768.745, 3032.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   984.757 ±(99.9%) 10.826 MB/sec [Average]
[info]   (min, avg, max) = (981.728, 984.757, 987.934), stdev = 2.812
[info]   CI (99.9%): [973.931, 995.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2913.321 ±(99.9%) 142.407 B/op [Average]
[info]   (min, avg, max) = (2875.355, 2913.321, 2966.093), stdev = 36.983
[info]   CI (99.9%): [2770.914, 3055.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 4.439 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.837, 2.823), stdev = 1.153
[info]   CI (99.9%): [≈ 0, 5.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.481 ±(99.9%) 13.146 B/op [Average]
[info]   (min, avg, max) = (0.023, 2.481, 8.361), stdev = 3.414
[info]   CI (99.9%): [≈ 0, 15.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 12.000), stdev = 3.647
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 182972.678 ops/s
[info] # Warmup Iteration   2: 486202.307 ops/s
[info] # Warmup Iteration   3: 566836.895 ops/s
[info] Iteration   1: 567311.288 ops/s
[info]                  ·gc.alloc.rate:                   398.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              1106.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 566930.317 ops/s
[info]                  ·gc.alloc.rate:                   405.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              1124.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 567349.044 ops/s
[info]                  ·gc.alloc.rate:                   399.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              1106.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 557874.392 ops/s
[info]                  ·gc.alloc.rate:               396.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          1118.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 927.376 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 558639.396 ops/s
[info]                  ·gc.alloc.rate:                   400.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     927.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   563620.888 ±(99.9%) 18894.462 ops/s [Average]
[info]   (min, avg, max) = (557874.392, 563620.888, 567349.044), stdev = 4906.832
[info]   CI (99.9%): [544726.425, 582515.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   399.987 ±(99.9%) 12.540 MB/sec [Average]
[info]   (min, avg, max) = (396.321, 399.987, 405.115), stdev = 3.257
[info]   CI (99.9%): [387.447, 412.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1116.891 ±(99.9%) 38.944 B/op [Average]
[info]   (min, avg, max) = (1106.415, 1116.891, 1128.642), stdev = 10.114
[info]   CI (99.9%): [1077.947, 1155.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   394.370 ±(99.9%) 565.006 MB/sec [Average]
[info]   (min, avg, max) = (328.413, 394.370, 656.849), stdev = 146.730
[info]   CI (99.9%): [≈ 0, 959.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1100.154 ±(99.9%) 1557.035 B/op [Average]
[info]   (min, avg, max) = (911.066, 1100.154, 1823.353), stdev = 404.357
[info]   CI (99.9%): [≈ 0, 2657.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.023 ±(99.9%) 0.073 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.049), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.203 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.137), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5677.458 ops/s
[info] # Warmup Iteration   2: 58934.551 ops/s
[info] # Warmup Iteration   3: 71131.961 ops/s
[info] Iteration   1: 76697.024 ops/s
[info]                  ·gc.alloc.rate:                   1558.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              31984.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33552.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.948 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 79750.690 ops/s
[info]                  ·gc.alloc.rate:                   1310.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              25858.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25672.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.229 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 80019.433 ops/s
[info]                  ·gc.alloc.rate:                   1317.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              25903.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25716.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 83836.927 ops/s
[info]                  ·gc.alloc.rate:                   1372.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              25753.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24658.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.378 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 82354.974 ops/s
[info]                  ·gc.alloc.rate:                   1357.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              25939.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25180.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.896 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   80531.810 ±(99.9%) 10514.795 ops/s [Average]
[info]   (min, avg, max) = (76697.024, 80531.810, 83836.927), stdev = 2730.659
[info]   CI (99.9%): [70017.015, 91046.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1383.328 ±(99.9%) 391.240 MB/sec [Average]
[info]   (min, avg, max) = (1310.596, 1383.328, 1558.941), stdev = 101.604
[info]   CI (99.9%): [992.088, 1774.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   27087.885 ±(99.9%) 10544.758 B/op [Average]
[info]   (min, avg, max) = (25753.192, 27087.885, 31984.962), stdev = 2738.440
[info]   CI (99.9%): [16543.127, 37632.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1375.220 ±(99.9%) 560.490 MB/sec [Average]
[info]   (min, avg, max) = (1301.162, 1375.220, 1635.354), stdev = 145.558
[info]   CI (99.9%): [814.730, 1935.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   26956.270 ±(99.9%) 14295.360 B/op [Average]
[info]   (min, avg, max) = (24658.548, 26956.270, 33552.737), stdev = 3712.459
[info]   CI (99.9%): [12660.911, 41251.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.633 ±(99.9%) 4.691 MB/sec [Average]
[info]   (min, avg, max) = (0.416, 1.633, 3.357), stdev = 1.218
[info]   CI (99.9%): [≈ 0, 6.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   32.195 ±(99.9%) 93.297 B/op [Average]
[info]   (min, avg, max) = (8.188, 32.195, 66.229), stdev = 24.229
[info]   CI (99.9%): [≈ 0, 125.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 18.000), stdev = 3.564
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55698.249 ops/s
[info] # Warmup Iteration   2: 320218.870 ops/s
[info] # Warmup Iteration   3: 320502.346 ops/s
[info] Iteration   1: 369387.410 ops/s
[info]                  ·gc.alloc.rate:                   2671.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              11383.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2601.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11083.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.585 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.752 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 369982.713 ops/s
[info]                  ·gc.alloc.rate:                   2664.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              11332.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2610.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11104.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.792 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 371644.264 ops/s
[info]                  ·gc.alloc.rate:                   2721.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              11525.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11181.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 361356.767 ops/s
[info]                  ·gc.alloc.rate:                   2657.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              11572.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2672.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11639.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.363 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 374355.008 ops/s
[info]                  ·gc.alloc.rate:                   2745.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              11538.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11330.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   369345.233 ±(99.9%) 18726.876 ops/s [Average]
[info]   (min, avg, max) = (361356.767, 369345.233, 374355.008), stdev = 4863.310
[info]   CI (99.9%): [350618.357, 388072.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2692.098 ±(99.9%) 150.806 MB/sec [Average]
[info]   (min, avg, max) = (2657.210, 2692.098, 2745.459), stdev = 39.164
[info]   CI (99.9%): [2541.292, 2842.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11470.396 ±(99.9%) 407.161 B/op [Average]
[info]   (min, avg, max) = (11332.118, 11470.396, 11572.114), stdev = 105.738
[info]   CI (99.9%): [11063.235, 11877.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2644.288 ±(99.9%) 154.846 MB/sec [Average]
[info]   (min, avg, max) = (2601.352, 2644.288, 2695.981), stdev = 40.213
[info]   CI (99.9%): [2489.442, 2799.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11268.060 ±(99.9%) 883.409 B/op [Average]
[info]   (min, avg, max) = (11083.083, 11268.060, 11639.884), stdev = 229.418
[info]   CI (99.9%): [10384.651, 12151.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.430 ±(99.9%) 2.563 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.430, 1.585), stdev = 0.666
[info]   CI (99.9%): [≈ 0, 2.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.834 ±(99.9%) 10.917 B/op [Average]
[info]   (min, avg, max) = (0.088, 1.834, 6.752), stdev = 2.835
[info]   CI (99.9%): [≈ 0, 12.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 16.000), stdev = 2.510
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85101.372 ops/s
[info] # Warmup Iteration   2: 553235.863 ops/s
[info] # Warmup Iteration   3: 822701.631 ops/s
[info] Iteration   1: 830386.871 ops/s
[info]                  ·gc.alloc.rate:                   1818.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              3445.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3704.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 825626.169 ops/s
[info]                  ·gc.alloc.rate:                   1785.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              3402.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3109.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.572 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 826230.653 ops/s
[info]                  ·gc.alloc.rate:                   1796.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              3422.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3105.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 792161.431 ops/s
[info]                  ·gc.alloc.rate:                   1744.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              3465.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3260.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 815016.972 ops/s
[info]                  ·gc.alloc.rate:                   1814.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              3504.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3838.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   817884.419 ±(99.9%) 59523.283 ops/s [Average]
[info]   (min, avg, max) = (792161.431, 817884.419, 830386.871), stdev = 15458.008
[info]   CI (99.9%): [758361.136, 877407.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1792.012 ±(99.9%) 114.152 MB/sec [Average]
[info]   (min, avg, max) = (1744.697, 1792.012, 1818.162), stdev = 29.645
[info]   CI (99.9%): [1677.860, 1906.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3448.196 ±(99.9%) 151.873 B/op [Average]
[info]   (min, avg, max) = (3402.324, 3448.196, 3504.316), stdev = 39.441
[info]   CI (99.9%): [3296.323, 3600.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1769.240 ±(99.9%) 712.161 MB/sec [Average]
[info]   (min, avg, max) = (1630.469, 1769.240, 1987.869), stdev = 184.946
[info]   CI (99.9%): [1057.079, 2481.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3403.744 ±(99.9%) 1327.690 B/op [Average]
[info]   (min, avg, max) = (3105.577, 3403.744, 3838.290), stdev = 344.797
[info]   CI (99.9%): [2076.053, 4731.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.750 ±(99.9%) 3.738 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.750, 1.875), stdev = 0.971
[info]   CI (99.9%): [≈ 0, 4.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.426 ±(99.9%) 7.102 B/op [Average]
[info]   (min, avg, max) = (0.040, 1.426, 3.572), stdev = 1.844
[info]   CI (99.9%): [≈ 0, 8.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 16.000), stdev = 3.899
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 588345.112 ops/s
[info] # Warmup Iteration   2: 1390325.414 ops/s
[info] # Warmup Iteration   3: 1597394.477 ops/s
[info] Iteration   1: 1614195.499 ops/s
[info]                  ·gc.alloc.rate:                   3267.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              3185.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3288.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3205.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1625498.122 ops/s
[info]                  ·gc.alloc.rate:                   3292.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              3186.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2998.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2902.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1621715.815 ops/s
[info]                  ·gc.alloc.rate:                   3299.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              3201.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3366.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3266.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1565878.129 ops/s
[info]                  ·gc.alloc.rate:                   3208.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              3224.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3047.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3062.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1622163.445 ops/s
[info]                  ·gc.alloc.rate:                   3243.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              3146.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3056.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2965.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1609890.202 ±(99.9%) 96067.256 ops/s [Average]
[info]   (min, avg, max) = (1565878.129, 1609890.202, 1625498.122), stdev = 24948.361
[info]   CI (99.9%): [1513822.946, 1705957.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3262.187 ±(99.9%) 144.457 MB/sec [Average]
[info]   (min, avg, max) = (3208.019, 3262.187, 3299.488), stdev = 37.515
[info]   CI (99.9%): [3117.730, 3406.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3188.978 ±(99.9%) 109.154 B/op [Average]
[info]   (min, avg, max) = (3146.517, 3188.978, 3224.044), stdev = 28.347
[info]   CI (99.9%): [3079.825, 3298.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3151.449 ±(99.9%) 632.978 MB/sec [Average]
[info]   (min, avg, max) = (2998.490, 3151.449, 3366.238), stdev = 164.383
[info]   CI (99.9%): [2518.470, 3784.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3080.584 ±(99.9%) 595.753 B/op [Average]
[info]   (min, avg, max) = (2902.247, 3080.584, 3266.638), stdev = 154.715
[info]   CI (99.9%): [2484.830, 3676.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.061, 0.081), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.200, 14.000), stdev = 1.304
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11702.739 ops/s
[info] # Warmup Iteration   2: 117637.702 ops/s
[info] # Warmup Iteration   3: 173681.120 ops/s
[info] Iteration   1: 181066.016 ops/s
[info]                  ·gc.alloc.rate:                   4704.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              40899.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4631.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40264.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.448 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 181083.243 ops/s
[info]                  ·gc.alloc.rate:                   4722.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              41031.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4709.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40913.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 186482.778 ops/s
[info]                  ·gc.alloc.rate:                   4838.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              40833.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4406.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37191.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.878 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 183013.686 ops/s
[info]                  ·gc.alloc.rate:                   4766.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              40983.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4759.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40923.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.895 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 186093.285 ops/s
[info]                  ·gc.alloc.rate:                   4830.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              40850.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37423.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   183547.802 ±(99.9%) 10117.042 ops/s [Average]
[info]   (min, avg, max) = (181066.016, 183547.802, 186482.778), stdev = 2627.364
[info]   CI (99.9%): [173430.760, 193664.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4772.566 ±(99.9%) 234.432 MB/sec [Average]
[info]   (min, avg, max) = (4704.858, 4772.566, 4838.564), stdev = 60.881
[info]   CI (99.9%): [4538.134, 5006.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   40919.664 ±(99.9%) 329.177 B/op [Average]
[info]   (min, avg, max) = (40833.463, 40919.664, 41031.741), stdev = 85.486
[info]   CI (99.9%): [40590.487, 41248.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4586.496 ±(99.9%) 624.283 MB/sec [Average]
[info]   (min, avg, max) = (4406.990, 4586.496, 4759.334), stdev = 162.124
[info]   CI (99.9%): [3962.213, 5210.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39343.360 ±(99.9%) 7236.576 B/op [Average]
[info]   (min, avg, max) = (37191.341, 39343.360, 40923.839), stdev = 1879.316
[info]   CI (99.9%): [32106.784, 46579.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.167), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.752 ±(99.9%) 1.929 B/op [Average]
[info]   (min, avg, max) = (0.176, 0.752, 1.448), stdev = 0.501
[info]   CI (99.9%): [≈ 0, 2.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   68.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 14.000), stdev = 0.548
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 19.200, 22.000), stdev = 1.789
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111744.462 ops/s
[info] # Warmup Iteration   2: 354811.554 ops/s
[info] # Warmup Iteration   3: 439097.868 ops/s
[info] Iteration   1: 434870.523 ops/s
[info]                  ·gc.alloc.rate:                   1428.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              5169.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4745.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.865 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 449214.642 ops/s
[info]                  ·gc.alloc.rate:                   1468.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              5146.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4582.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.251 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 447762.547 ops/s
[info]                  ·gc.alloc.rate:                   1465.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              5151.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5717.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 440168.504 ops/s
[info]                  ·gc.alloc.rate:               1442.066 MB/sec
[info]                  ·gc.alloc.rate.norm:          5155.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4668.160 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 451075.596 ops/s
[info]                  ·gc.alloc.rate:                   1497.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              5220.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5730.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   444618.362 ±(99.9%) 26365.607 ops/s [Average]
[info]   (min, avg, max) = (434870.523, 444618.362, 451075.596), stdev = 6847.064
[info]   CI (99.9%): [418252.756, 470983.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1460.539 ±(99.9%) 102.487 MB/sec [Average]
[info]   (min, avg, max) = (1428.476, 1460.539, 1497.508), stdev = 26.616
[info]   CI (99.9%): [1358.052, 1563.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5168.624 ±(99.9%) 117.186 B/op [Average]
[info]   (min, avg, max) = (5146.144, 5168.624, 5220.847), stdev = 30.433
[info]   CI (99.9%): [5051.437, 5285.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1439.115 ±(99.9%) 689.715 MB/sec [Average]
[info]   (min, avg, max) = (1305.729, 1439.115, 1643.643), stdev = 179.117
[info]   CI (99.9%): [749.399, 2128.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5088.777 ±(99.9%) 2243.604 B/op [Average]
[info]   (min, avg, max) = (4582.384, 5088.777, 5730.323), stdev = 582.657
[info]   CI (99.9%): [2845.173, 7332.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 4.937 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.881, 2.865), stdev = 1.282
[info]   CI (99.9%): [≈ 0, 5.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.153 ±(99.9%) 17.790 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.153, 10.368), stdev = 4.620
[info]   CI (99.9%): [≈ 0, 20.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 4.278
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 327189.935 ops/s
[info] # Warmup Iteration   2: 1052750.858 ops/s
[info] # Warmup Iteration   3: 950048.198 ops/s
[info] Iteration   1: 999786.107 ops/s
[info]                  ·gc.alloc.rate:                   478.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1000662.886 ops/s
[info]                  ·gc.alloc.rate:               469.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          738.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 503.428 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 998324.306 ops/s
[info]                  ·gc.alloc.rate:               472.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          745.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 504.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 995403.747 ops/s
[info]                  ·gc.alloc.rate:                   481.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 968449.716 ops/s
[info]                  ·gc.alloc.rate:               457.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 524.484 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   992525.352 ±(99.9%) 52391.661 ops/s [Average]
[info]   (min, avg, max) = (968449.716, 992525.352, 1000662.886), stdev = 13605.948
[info]   CI (99.9%): [940133.691, 1044917.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   472.075 ±(99.9%) 35.274 MB/sec [Average]
[info]   (min, avg, max) = (457.936, 472.075, 481.273), stdev = 9.160
[info]   CI (99.9%): [436.801, 507.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   748.402 ±(99.9%) 33.340 B/op [Average]
[info]   (min, avg, max) = (738.589, 748.402, 760.662), stdev = 8.658
[info]   CI (99.9%): [715.062, 781.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   448.882 ±(99.9%) 674.361 MB/sec [Average]
[info]   (min, avg, max) = (320.100, 448.882, 643.040), stdev = 175.129
[info]   CI (99.9%): [≈ 0, 1123.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   710.685 ±(99.9%) 1054.379 B/op [Average]
[info]   (min, avg, max) = (503.428, 710.685, 1016.339), stdev = 273.819
[info]   CI (99.9%): [≈ 0, 1765.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.131), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:22:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1047428.228 ops/s
[info] # Warmup Iteration   2: 2071511.777 ops/s
[info] # Warmup Iteration   3: 2594005.559 ops/s
[info] Iteration   1: 2574486.695 ops/s
[info]                  ·gc.alloc.rate:                   1235.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              755.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     804.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2583807.164 ops/s
[info]                  ·gc.alloc.rate:                   1227.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2698704.472 ops/s
[info]                  ·gc.alloc.rate:                   1276.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2734360.546 ops/s
[info]                  ·gc.alloc.rate:                   1296.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     751.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2730320.646 ops/s
[info]                  ·gc.alloc.rate:                   1334.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              769.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2664335.905 ±(99.9%) 304398.174 ops/s [Average]
[info]   (min, avg, max) = (2574486.695, 2664335.905, 2734360.546), stdev = 79051.239
[info]   CI (99.9%): [2359937.731, 2968734.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1273.920 ±(99.9%) 170.081 MB/sec [Average]
[info]   (min, avg, max) = (1227.570, 1273.920, 1334.479), stdev = 44.170
[info]   CI (99.9%): [1103.839, 1444.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.400 ±(99.9%) 39.391 B/op [Average]
[info]   (min, avg, max) = (744.134, 752.400, 769.104), stdev = 10.230
[info]   CI (99.9%): [713.009, 791.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1246.792 ±(99.9%) 555.166 MB/sec [Average]
[info]   (min, avg, max) = (988.962, 1246.792, 1316.382), stdev = 144.175
[info]   CI (99.9%): [691.626, 1801.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   735.816 ±(99.9%) 298.463 B/op [Average]
[info]   (min, avg, max) = (602.346, 735.816, 804.674), stdev = 77.510
[info]   CI (99.9%): [437.353, 1034.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 5.462 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.854, 3.310), stdev = 1.418
[info]   CI (99.9%): [≈ 0, 6.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.515 ±(99.9%) 3.328 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.515, 2.016), stdev = 0.864
[info]   CI (99.9%): [≈ 0, 3.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 14.000), stdev = 3.834
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1524838.538 ops/s
[info] # Warmup Iteration   2: 2446148.196 ops/s
[info] # Warmup Iteration   3: 2937231.981 ops/s
[info] Iteration   1: 2929836.472 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2944745.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2941798.749 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2925037.161 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2943576.895 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2936998.911 ±(99.9%) 34478.778 ops/s [Average]
[info]   (min, avg, max) = (2925037.161, 2936998.911, 2944745.279), stdev = 8954.029
[info]   CI (99.9%): [2902520.134, 2971477.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70684.613 ops/s
[info] # Warmup Iteration   2: 508789.311 ops/s
[info] # Warmup Iteration   3: 487991.440 ops/s
[info] Iteration   1: 586433.595 ops/s
[info]                  ·gc.alloc.rate:                   1300.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              3488.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1282.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3439.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.100 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.682 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 666087.342 ops/s
[info]                  ·gc.alloc.rate:                   987.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              2332.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          950.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2246.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.588 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 661058.240 ops/s
[info]                  ·gc.alloc.rate:                   925.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              2202.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          953.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2269.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.545 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 657815.924 ops/s
[info]                  ·gc.alloc.rate:                   916.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              2192.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1525.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.345 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 631251.994 ops/s
[info]                  ·gc.alloc.rate:                   888.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              2215.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          958.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2390.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.754 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   640529.419 ±(99.9%) 127506.501 ops/s [Average]
[info]   (min, avg, max) = (586433.595, 640529.419, 666087.342), stdev = 33113.033
[info]   CI (99.9%): [513022.918, 768035.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1003.700 ±(99.9%) 653.390 MB/sec [Average]
[info]   (min, avg, max) = (888.655, 1003.700, 1300.346), stdev = 169.683
[info]   CI (99.9%): [350.310, 1657.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2486.225 ±(99.9%) 2168.029 B/op [Average]
[info]   (min, avg, max) = (2192.454, 2486.225, 3488.361), stdev = 563.030
[info]   CI (99.9%): [318.196, 4654.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   956.614 ±(99.9%) 877.477 MB/sec [Average]
[info]   (min, avg, max) = (637.790, 956.614, 1282.216), stdev = 227.878
[info]   CI (99.9%): [79.138, 1834.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2374.129 ±(99.9%) 2642.392 B/op [Average]
[info]   (min, avg, max) = (1525.295, 2374.129, 3439.724), stdev = 686.221
[info]   CI (99.9%): [≈ 0, 5016.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.367 ±(99.9%) 7.917 MB/sec [Average]
[info]   (min, avg, max) = (0.229, 2.367, 5.100), stdev = 2.056
[info]   CI (99.9%): [≈ 0, 10.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.983 ±(99.9%) 20.843 B/op [Average]
[info]   (min, avg, max) = (0.545, 5.983, 13.682), stdev = 5.413
[info]   CI (99.9%): [≈ 0, 26.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.000, 26.000), stdev = 6.708
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8018.717 ops/s
[info] # Warmup Iteration   2: 47006.865 ops/s
[info] # Warmup Iteration   3: 71287.709 ops/s
[info] Iteration   1: 72467.435 ops/s
[info]                  ·gc.alloc.rate:                   2270.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              49298.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2276.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49418.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.673 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 77748.836 ops/s
[info]                  ·gc.alloc.rate:                   2264.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              45829.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2269.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45927.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.792 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 78590.787 ops/s
[info]                  ·gc.alloc.rate:                   2277.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              45608.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45906.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.834 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 76504.496 ops/s
[info]                  ·gc.alloc.rate:                   2243.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              46143.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40896.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.285 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 77174.785 ops/s
[info]                  ·gc.alloc.rate:                   2251.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              45914.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2342.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47764.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   76497.268 ±(99.9%) 9162.567 ops/s [Average]
[info]   (min, avg, max) = (72467.435, 76497.268, 78590.787), stdev = 2379.489
[info]   CI (99.9%): [67334.701, 85659.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2261.473 ±(99.9%) 53.998 MB/sec [Average]
[info]   (min, avg, max) = (2243.202, 2261.473, 2277.695), stdev = 14.023
[info]   CI (99.9%): [2207.475, 2315.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46558.785 ±(99.9%) 5942.618 B/op [Average]
[info]   (min, avg, max) = (45608.439, 46558.785, 49298.102), stdev = 1543.279
[info]   CI (99.9%): [40616.167, 52501.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2233.660 ±(99.9%) 539.890 MB/sec [Average]
[info]   (min, avg, max) = (1988.128, 2233.660, 2342.346), stdev = 140.208
[info]   CI (99.9%): [1693.770, 2773.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   45982.730 ±(99.9%) 12305.733 B/op [Average]
[info]   (min, avg, max) = (40896.944, 45982.730, 49418.278), stdev = 3195.760
[info]   CI (99.9%): [33676.997, 58288.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.460 ±(99.9%) 11.899 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.460, 6.986), stdev = 3.090
[info]   CI (99.9%): [≈ 0, 13.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   31.602 ±(99.9%) 258.511 B/op [Average]
[info]   (min, avg, max) = (0.425, 31.602, 151.673), stdev = 67.135
[info]   CI (99.9%): [≈ 0, 290.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 18.000), stdev = 3.899
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13346.319 ops/s
[info] # Warmup Iteration   2: 70898.885 ops/s
[info] # Warmup Iteration   3: 94951.315 ops/s
[info] Iteration   1: 103352.116 ops/s
[info]                  ·gc.alloc.rate:                   1882.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              28661.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29644.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.230 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 105027.990 ops/s
[info]                  ·gc.alloc.rate:                   1905.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              28557.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29397.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.679 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 103208.304 ops/s
[info]                  ·gc.alloc.rate:                   1879.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              28662.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25141.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.317 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 103136.205 ops/s
[info]                  ·gc.alloc.rate:                   1896.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              28942.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30443.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.635 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 104381.583 ops/s
[info]                  ·gc.alloc.rate:                   1920.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              28955.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25250.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   103821.239 ±(99.9%) 3241.907 ops/s [Average]
[info]   (min, avg, max) = (103136.205, 103821.239, 105027.990), stdev = 841.913
[info]   CI (99.9%): [100579.332, 107063.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1897.047 ±(99.9%) 65.261 MB/sec [Average]
[info]   (min, avg, max) = (1879.724, 1897.047, 1920.599), stdev = 16.948
[info]   CI (99.9%): [1831.786, 1962.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28755.738 ±(99.9%) 698.569 B/op [Average]
[info]   (min, avg, max) = (28557.008, 28755.738, 28955.179), stdev = 181.416
[info]   CI (99.9%): [28057.169, 29454.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1845.519 ±(99.9%) 650.183 MB/sec [Average]
[info]   (min, avg, max) = (1648.793, 1845.519, 1995.230), stdev = 168.850
[info]   CI (99.9%): [1195.337, 2495.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27975.454 ±(99.9%) 9884.754 B/op [Average]
[info]   (min, avg, max) = (25141.201, 27975.454, 30443.742), stdev = 2567.039
[info]   CI (99.9%): [18090.700, 37860.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.093 ±(99.9%) 8.577 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.093, 5.072), stdev = 2.227
[info]   CI (99.9%): [≈ 0, 9.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.635 ±(99.9%) 130.628 B/op [Average]
[info]   (min, avg, max) = (0.314, 16.635, 77.230), stdev = 33.924
[info]   CI (99.9%): [≈ 0, 147.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29413.480 ops/s
[info] # Warmup Iteration   2: 126179.369 ops/s
[info] # Warmup Iteration   3: 154566.438 ops/s
[info] Iteration   1: 157867.005 ops/s
[info]                  ·gc.alloc.rate:                   2489.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              24813.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22648.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.925 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 157330.529 ops/s
[info]                  ·gc.alloc.rate:                   2462.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              24630.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22973.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.562 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 159378.893 ops/s
[info]                  ·gc.alloc.rate:                   2516.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              24848.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25916.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.047 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 161100.419 ops/s
[info]                  ·gc.alloc.rate:                   2556.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              24969.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22507.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 158210.074 ops/s
[info]                  ·gc.alloc.rate:                   2533.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              25193.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2661.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26471.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   158777.384 ±(99.9%) 5776.713 ops/s [Average]
[info]   (min, avg, max) = (157330.529, 158777.384, 161100.419), stdev = 1500.194
[info]   CI (99.9%): [153000.672, 164554.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2511.505 ±(99.9%) 141.741 MB/sec [Average]
[info]   (min, avg, max) = (2462.257, 2511.505, 2556.109), stdev = 36.810
[info]   CI (99.9%): [2369.764, 2653.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24891.072 ±(99.9%) 802.308 B/op [Average]
[info]   (min, avg, max) = (24630.182, 24891.072, 25193.890), stdev = 208.357
[info]   CI (99.9%): [24088.764, 25693.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2431.870 ±(99.9%) 746.535 MB/sec [Average]
[info]   (min, avg, max) = (2271.947, 2431.870, 2661.838), stdev = 193.873
[info]   CI (99.9%): [1685.334, 3178.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24103.487 ±(99.9%) 7416.465 B/op [Average]
[info]   (min, avg, max) = (22507.231, 24103.487, 26471.527), stdev = 1926.032
[info]   CI (99.9%): [16687.023, 31519.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.536 ±(99.9%) 6.312 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.536, 3.905), stdev = 1.639
[info]   CI (99.9%): [≈ 0, 7.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.270 ±(99.9%) 62.824 B/op [Average]
[info]   (min, avg, max) = (0.207, 15.270, 38.925), stdev = 16.315
[info]   CI (99.9%): [≈ 0, 78.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 14.200, 20.000), stdev = 4.970
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2058.067 ops/s
[info] # Warmup Iteration   2: 22309.300 ops/s
[info] # Warmup Iteration   3: 39262.008 ops/s
[info] Iteration   1: 43952.195 ops/s
[info]                  ·gc.alloc.rate:                   2615.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              93667.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93956.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.939 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 42591.244 ops/s
[info]                  ·gc.alloc.rate:                   2483.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              91766.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85229.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.877 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.364 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 45252.964 ops/s
[info]                  ·gc.alloc.rate:                   2546.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              88567.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2656.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92383.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.448 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 44430.650 ops/s
[info]                  ·gc.alloc.rate:                   2528.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              89556.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83041.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.212 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 45364.332 ops/s
[info]                  ·gc.alloc.rate:                   2542.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              88206.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81846.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.444 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   44318.277 ±(99.9%) 4346.777 ops/s [Average]
[info]   (min, avg, max) = (42591.244, 44318.277, 45364.332), stdev = 1128.844
[info]   CI (99.9%): [39971.500, 48665.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2543.531 ±(99.9%) 183.492 MB/sec [Average]
[info]   (min, avg, max) = (2483.555, 2543.531, 2615.985), stdev = 47.652
[info]   CI (99.9%): [2360.039, 2727.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90353.187 ±(99.9%) 8909.387 B/op [Average]
[info]   (min, avg, max) = (88206.782, 90353.187, 93667.802), stdev = 2313.740
[info]   CI (99.9%): [81443.800, 99262.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2458.247 ±(99.9%) 645.924 MB/sec [Average]
[info]   (min, avg, max) = (2306.635, 2458.247, 2656.655), stdev = 167.744
[info]   CI (99.9%): [1812.323, 3104.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   87291.532 ±(99.9%) 21293.003 B/op [Average]
[info]   (min, avg, max) = (81846.335, 87291.532, 93956.799), stdev = 5529.725
[info]   CI (99.9%): [65998.529, 108584.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.913 ±(99.9%) 4.644 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.913, 2.540), stdev = 1.206
[info]   CI (99.9%): [≈ 0, 5.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   33.081 ±(99.9%) 168.049 B/op [Average]
[info]   (min, avg, max) = (1.444, 33.081, 90.939), stdev = 43.642
[info]   CI (99.9%): [≈ 0, 201.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 17.000), stdev = 2.775
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30087.405 ops/s
[info] # Warmup Iteration   2: 160359.644 ops/s
[info] # Warmup Iteration   3: 227532.255 ops/s
[info] Iteration   1: 233124.133 ops/s
[info]                  ·gc.alloc.rate:                   1065.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              7193.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6558.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 233440.132 ops/s
[info]                  ·gc.alloc.rate:               1060.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          7147.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:      973.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6563.592 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 238573.480 ops/s
[info]                  ·gc.alloc.rate:                   1087.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              7171.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8617.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.454 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 241773.494 ops/s
[info]                  ·gc.alloc.rate:                   1099.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              7151.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6400.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.813 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 235349.616 ops/s
[info]                  ·gc.alloc.rate:                   1065.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              7127.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6601.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   236452.171 ±(99.9%) 14171.766 ops/s [Average]
[info]   (min, avg, max) = (233124.133, 236452.171, 241773.494), stdev = 3680.363
[info]   CI (99.9%): [222280.405, 250623.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1075.644 ±(99.9%) 64.038 MB/sec [Average]
[info]   (min, avg, max) = (1060.318, 1075.644, 1099.036), stdev = 16.630
[info]   CI (99.9%): [1011.606, 1139.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7158.435 ±(99.9%) 97.247 B/op [Average]
[info]   (min, avg, max) = (7127.275, 7158.435, 7193.960), stdev = 25.255
[info]   CI (99.9%): [7061.187, 7255.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1044.530 ±(99.9%) 564.332 MB/sec [Average]
[info]   (min, avg, max) = (971.700, 1044.530, 1306.434), stdev = 146.555
[info]   CI (99.9%): [480.198, 1608.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6948.436 ±(99.9%) 3605.393 B/op [Average]
[info]   (min, avg, max) = (6400.128, 6948.436, 8617.614), stdev = 936.309
[info]   CI (99.9%): [3343.043, 10553.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.624 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 0.978), stdev = 0.422
[info]   CI (99.9%): [≈ 0, 1.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.509 ±(99.9%) 10.714 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.509, 6.454), stdev = 2.782
[info]   CI (99.9%): [≈ 0, 12.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 191318.810 ops/s
[info] # Warmup Iteration   2: 362687.761 ops/s
[info] # Warmup Iteration   3: 579441.141 ops/s
[info] Iteration   1: 580269.573 ops/s
[info]                  ·gc.alloc.rate:               652.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          1770.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1775.043 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 575406.837 ops/s
[info]                  ·gc.alloc.rate:               650.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          1778.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1791.801 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 570898.907 ops/s
[info]                  ·gc.alloc.rate:                   648.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              1786.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1806.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 576698.552 ops/s
[info]                  ·gc.alloc.rate:                   655.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              1790.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1790.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.500 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 578214.052 ops/s
[info]                  ·gc.alloc.rate:                   655.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              1783.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1784.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   576297.584 ±(99.9%) 13552.608 ops/s [Average]
[info]   (min, avg, max) = (570898.907, 576297.584, 580269.573), stdev = 3519.569
[info]   CI (99.9%): [562744.976, 589850.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   652.432 ±(99.9%) 12.789 MB/sec [Average]
[info]   (min, avg, max) = (648.049, 652.432, 655.984), stdev = 3.321
[info]   CI (99.9%): [639.643, 665.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1781.624 ±(99.9%) 29.678 B/op [Average]
[info]   (min, avg, max) = (1770.168, 1781.624, 1790.055), stdev = 7.707
[info]   CI (99.9%): [1751.946, 1811.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   655.385 ±(99.9%) 2.358 MB/sec [Average]
[info]   (min, avg, max) = (654.503, 655.385, 656.179), stdev = 0.612
[info]   CI (99.9%): [653.027, 657.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1789.722 ±(99.9%) 45.140 B/op [Average]
[info]   (min, avg, max) = (1775.043, 1789.722, 1806.997), stdev = 11.723
[info]   CI (99.9%): [1744.582, 1834.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.777 ±(99.9%) 5.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.777, 3.115), stdev = 1.346
[info]   CI (99.9%): [≈ 0, 5.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.119 ±(99.9%) 14.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.119, 8.500), stdev = 3.673
[info]   CI (99.9%): [≈ 0, 16.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 210695.275 ops/s
[info] # Warmup Iteration   2: 385707.175 ops/s
[info] # Warmup Iteration   3: 590060.086 ops/s
[info] Iteration   1: 588653.377 ops/s
[info]                  ·gc.alloc.rate:      5.985 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 588373.973 ops/s
[info]                  ·gc.alloc.rate:      11.367 MB/sec
[info]                  ·gc.alloc.rate.norm: 30.402 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 588846.034 ops/s
[info]                  ·gc.alloc.rate:      5.987 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 587295.949 ops/s
[info]                  ·gc.alloc.rate:      5.971 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 585521.308 ops/s
[info]                  ·gc.alloc.rate:      5.953 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   587738.128 ±(99.9%) 5300.496 ops/s [Average]
[info]   (min, avg, max) = (585521.308, 587738.128, 588846.034), stdev = 1376.522
[info]   CI (99.9%): [582437.632, 593038.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.053 ±(99.9%) 9.287 MB/sec [Average]
[info]   (min, avg, max) = (5.953, 7.053, 11.367), stdev = 2.412
[info]   CI (99.9%): [≈ 0, 16.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18.881 ±(99.9%) 24.800 B/op [Average]
[info]   (min, avg, max) = (16.001, 18.881, 30.402), stdev = 6.440
[info]   CI (99.9%): [≈ 0, 43.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3319.841 ops/s
[info] # Warmup Iteration   2: 43201.888 ops/s
[info] # Warmup Iteration   3: 76382.983 ops/s
[info] Iteration   1: 84609.943 ops/s
[info]                  ·gc.alloc.rate:                   1650.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              30692.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30129.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.407 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 92292.924 ops/s
[info]                  ·gc.alloc.rate:                   1453.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              24791.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22219.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.875 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 92608.447 ops/s
[info]                  ·gc.alloc.rate:                   1462.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              24831.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22157.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 91881.378 ops/s
[info]                  ·gc.alloc.rate:                   1468.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              25151.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28126.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 91580.526 ops/s
[info]                  ·gc.alloc.rate:                   1445.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              24836.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22741.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   90594.643 ±(99.9%) 12970.421 ops/s [Average]
[info]   (min, avg, max) = (84609.943, 90594.643, 92608.447), stdev = 3368.377
[info]   CI (99.9%): [77624.223, 103565.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1496.208 ±(99.9%) 333.945 MB/sec [Average]
[info]   (min, avg, max) = (1445.753, 1496.208, 1650.585), stdev = 86.725
[info]   CI (99.9%): [1162.263, 1830.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   26060.920 ±(99.9%) 9985.818 B/op [Average]
[info]   (min, avg, max) = (24791.573, 26060.920, 30692.697), stdev = 2593.285
[info]   CI (99.9%): [16075.103, 36046.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1438.828 ±(99.9%) 677.720 MB/sec [Average]
[info]   (min, avg, max) = (1303.040, 1438.828, 1642.161), stdev = 176.002
[info]   CI (99.9%): [761.109, 2116.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   25074.921 ±(99.9%) 14533.063 B/op [Average]
[info]   (min, avg, max) = (22157.393, 25074.921, 30129.785), stdev = 3774.190
[info]   CI (99.9%): [10541.858, 39607.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.438 ±(99.9%) 10.524 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.438, 6.314), stdev = 2.733
[info]   CI (99.9%): [≈ 0, 11.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.460 ±(99.9%) 196.201 B/op [Average]
[info]   (min, avg, max) = (0.358, 26.460, 117.407), stdev = 50.953
[info]   CI (99.9%): [≈ 0, 222.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 12.000), stdev = 2.490
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199950.384 ops/s
[info] # Warmup Iteration   2: 1654287.358 ops/s
[info] # Warmup Iteration   3: 7781123.355 ops/s
[info] Iteration   1: 8150165.156 ops/s
[info]                  ·gc.alloc.rate:                   7177.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              1386.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7249.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1399.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        22.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 8138296.355 ops/s
[info]                  ·gc.alloc.rate:                   7107.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              1374.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6763.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1307.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 8322816.727 ops/s
[info]                  ·gc.alloc.rate:                   7350.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              1389.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7141.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1350.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 8218799.441 ops/s
[info]                  ·gc.alloc.rate:                   7187.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6807.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1303.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   5: 8210137.277 ops/s
[info]                  ·gc.alloc.rate:                   7257.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7149.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1370.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   8208042.992 ±(99.9%) 282357.080 ops/s [Average]
[info]   (min, avg, max) = (8138296.355, 8208042.992, 8322816.727), stdev = 73327.237
[info]   CI (99.9%): [7925685.911, 8490400.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   7216.275 ±(99.9%) 354.162 MB/sec [Average]
[info]   (min, avg, max) = (7107.926, 7216.275, 7350.669), stdev = 91.975
[info]   CI (99.9%): [6862.113, 7570.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1383.485 ±(99.9%) 29.506 B/op [Average]
[info]   (min, avg, max) = (1374.490, 1383.485, 1390.817), stdev = 7.663
[info]   CI (99.9%): [1353.979, 1412.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   7022.487 ±(99.9%) 850.109 MB/sec [Average]
[info]   (min, avg, max) = (6763.750, 7022.487, 7249.920), stdev = 220.771
[info]   CI (99.9%): [6172.378, 7872.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1346.368 ±(99.9%) 158.163 B/op [Average]
[info]   (min, avg, max) = (1303.620, 1346.368, 1399.897), stdev = 41.074
[info]   CI (99.9%): [1188.204, 1504.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (0.146, 0.196, 0.271), stdev = 0.048
[info]   CI (99.9%): [0.011, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.037, 0.052), stdev = 0.009
[info]   CI (99.9%): [0.003, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   104.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (20.000, 20.800, 22.000), stdev = 0.837
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   142.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 28.400, 32.000), stdev = 2.608
[info]   CI (99.9%): [142.000, 142.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.661 ops/s
[info] # Warmup Iteration   2: 594945.796 ops/s
[info] # Warmup Iteration   3: 825257.536 ops/s
[info] Iteration   1: 978914.424 ops/s
[info]                  ·gc.alloc.rate:                   625.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              1004.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1045.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 986051.656 ops/s
[info]                  ·gc.alloc.rate:                   622.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              993.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1038.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 938182.122 ops/s
[info]                  ·gc.alloc.rate:                   593.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              995.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1092.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 914076.177 ops/s
[info]                  ·gc.alloc.rate:               586.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          1010.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1122.308 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 947414.107 ops/s
[info]                  ·gc.alloc.rate:                   595.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              988.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1083.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   952927.697 ±(99.9%) 114387.118 ops/s [Average]
[info]   (min, avg, max) = (914076.177, 952927.697, 986051.656), stdev = 29705.971
[info]   CI (99.9%): [838540.579, 1067314.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   604.601 ±(99.9%) 68.706 MB/sec [Average]
[info]   (min, avg, max) = (586.698, 604.601, 625.180), stdev = 17.843
[info]   CI (99.9%): [535.895, 673.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   998.491 ±(99.9%) 33.543 B/op [Average]
[info]   (min, avg, max) = (988.864, 998.491, 1010.057), stdev = 8.711
[info]   CI (99.9%): [964.948, 1032.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   651.299 ±(99.9%) 3.579 MB/sec [Average]
[info]   (min, avg, max) = (650.307, 651.299, 652.527), stdev = 0.929
[info]   CI (99.9%): [647.720, 654.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1076.400 ±(99.9%) 134.040 B/op [Average]
[info]   (min, avg, max) = (1038.210, 1076.400, 1122.308), stdev = 34.810
[info]   CI (99.9%): [942.361, 1210.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.046), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.047 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.077), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14662.814 ops/s
[info] # Warmup Iteration   2: 183515.296 ops/s
[info] # Warmup Iteration   3: 265228.079 ops/s
[info] Iteration   1: 423277.185 ops/s
[info]                  ·gc.alloc.rate:                   937.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              3484.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3568.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.234 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 445532.302 ops/s
[info]                  ·gc.alloc.rate:                   994.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              3514.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3401.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.221 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 421642.248 ops/s
[info]                  ·gc.alloc.rate:                   926.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3619.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 433395.712 ops/s
[info]                  ·gc.alloc.rate:                   958.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3540.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 443462.685 ops/s
[info]                  ·gc.alloc.rate:                   977.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              3469.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3478.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.870 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   433462.027 ±(99.9%) 42581.719 ops/s [Average]
[info]   (min, avg, max) = (421642.248, 433462.027, 445532.302), stdev = 11058.337
[info]   CI (99.9%): [390880.307, 476043.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   958.973 ±(99.9%) 108.335 MB/sec [Average]
[info]   (min, avg, max) = (926.150, 958.973, 994.801), stdev = 28.134
[info]   CI (99.9%): [850.638, 1067.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3481.146 ±(99.9%) 82.435 B/op [Average]
[info]   (min, avg, max) = (3456.624, 3481.146, 3514.027), stdev = 21.408
[info]   CI (99.9%): [3398.711, 3563.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   969.573 ±(99.9%) 32.148 MB/sec [Average]
[info]   (min, avg, max) = (960.041, 969.573, 980.268), stdev = 8.349
[info]   CI (99.9%): [937.425, 1001.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3521.485 ±(99.9%) 323.938 B/op [Average]
[info]   (min, avg, max) = (3401.366, 3521.485, 3619.080), stdev = 84.126
[info]   CI (99.9%): [3197.547, 3845.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.775 ±(99.9%) 10.471 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.775, 6.251), stdev = 2.719
[info]   CI (99.9%): [≈ 0, 12.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.511 ±(99.9%) 38.822 B/op [Average]
[info]   (min, avg, max) = (0.076, 6.511, 23.234), stdev = 10.082
[info]   CI (99.9%): [≈ 0, 45.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 329836.240 ops/s
[info] # Warmup Iteration   2: 631150.128 ops/s
[info] # Warmup Iteration   3: 725019.967 ops/s
[info] Iteration   1: 758675.153 ops/s
[info]                  ·gc.alloc.rate:                   686.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              1423.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1367.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 757598.435 ops/s
[info]                  ·gc.alloc.rate:                   700.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              1455.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2057.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 758495.629 ops/s
[info]                  ·gc.alloc.rate:                   700.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              1453.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1371.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 716160.548 ops/s
[info]                  ·gc.alloc.rate:               682.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          1499.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1455.085 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 723125.724 ops/s
[info]                  ·gc.alloc.rate:                   647.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              1409.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1441.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.566 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   742811.098 ±(99.9%) 82003.886 ops/s [Average]
[info]   (min, avg, max) = (716160.548, 742811.098, 758675.153), stdev = 21296.149
[info]   CI (99.9%): [660807.212, 824814.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   683.563 ±(99.9%) 83.120 MB/sec [Average]
[info]   (min, avg, max) = (647.856, 683.563, 700.665), stdev = 21.586
[info]   CI (99.9%): [600.442, 766.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1448.387 ±(99.9%) 133.973 B/op [Average]
[info]   (min, avg, max) = (1409.898, 1448.387, 1499.916), stdev = 34.792
[info]   CI (99.9%): [1314.415, 1582.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.007 ±(99.9%) 567.495 MB/sec [Average]
[info]   (min, avg, max) = (659.179, 727.007, 990.633), stdev = 147.377
[info]   CI (99.9%): [159.513, 1294.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1538.457 ±(99.9%) 1128.146 B/op [Average]
[info]   (min, avg, max) = (1367.316, 1538.457, 2057.697), stdev = 292.976
[info]   CI (99.9%): [410.311, 2666.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.709 ±(99.9%) 5.957 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.709, 3.477), stdev = 1.547
[info]   CI (99.9%): [≈ 0, 6.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.542 ±(99.9%) 12.967 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.542, 7.566), stdev = 3.367
[info]   CI (99.9%): [≈ 0, 14.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 10.000), stdev = 1.732
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 803909.247 ops/s
[info] # Warmup Iteration   2: 3819678.985 ops/s
[info] # Warmup Iteration   3: 4284650.196 ops/s
[info] Iteration   1: 4347929.842 ops/s
[info]                  ·gc.alloc.rate:                   2629.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 4387813.457 ops/s
[info]                  ·gc.alloc.rate:                   2624.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              941.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2642.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     947.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 4313596.375 ops/s
[info]                  ·gc.alloc.rate:                   2627.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              958.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2669.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     973.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4364979.410 ops/s
[info]                  ·gc.alloc.rate:                   2645.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              953.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     849.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4225771.467 ops/s
[info]                  ·gc.alloc.rate:                   2577.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              959.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1007.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   4328018.110 ±(99.9%) 243539.611 ops/s [Average]
[info]   (min, avg, max) = (4225771.467, 4328018.110, 4387813.457), stdev = 63246.464
[info]   CI (99.9%): [4084478.499, 4571557.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2620.957 ±(99.9%) 97.941 MB/sec [Average]
[info]   (min, avg, max) = (2577.767, 2620.957, 2645.336), stdev = 25.435
[info]   CI (99.9%): [2523.016, 2718.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   953.073 ±(99.9%) 28.384 B/op [Average]
[info]   (min, avg, max) = (941.395, 953.073, 959.965), stdev = 7.371
[info]   CI (99.9%): [924.689, 981.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2534.864 ±(99.9%) 731.845 MB/sec [Average]
[info]   (min, avg, max) = (2302.906, 2534.864, 2704.726), stdev = 190.058
[info]   CI (99.9%): [1803.018, 3266.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   922.272 ±(99.9%) 296.665 B/op [Average]
[info]   (min, avg, max) = (833.525, 922.272, 1007.244), stdev = 77.043
[info]   CI (99.9%): [625.607, 1218.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.110 ±(99.9%) 0.457 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.110, 0.302), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.041, 0.113), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 12.000), stdev = 1.140
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1444984.010 ops/s
[info] # Warmup Iteration   2: 6914407.298 ops/s
[info] # Warmup Iteration   3: 28435716.141 ops/s
[info] Iteration   1: 29498432.136 ops/s
[info]                  ·gc.alloc.rate:                   2621.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              139.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2642.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 29575788.051 ops/s
[info]                  ·gc.alloc.rate:                   2631.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              139.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 29717989.997 ops/s
[info]                  ·gc.alloc.rate:                   2673.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2651.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 29099057.763 ops/s
[info]                  ·gc.alloc.rate:                   2621.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2677.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 29967179.399 ops/s
[info]                  ·gc.alloc.rate:                   2683.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   29571689.469 ±(99.9%) 1227655.541 ops/s [Average]
[info]   (min, avg, max) = (29099057.763, 29571689.469, 29967179.399), stdev = 318818.245
[info]   CI (99.9%): [28344033.928, 30799345.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   2646.177 ±(99.9%) 115.998 MB/sec [Average]
[info]   (min, avg, max) = (2621.063, 2646.177, 2683.707), stdev = 30.124
[info]   CI (99.9%): [2530.179, 2762.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   140.813 ±(99.9%) 3.351 B/op [Average]
[info]   (min, avg, max) = (139.842, 140.813, 141.747), stdev = 0.870
[info]   CI (99.9%): [137.462, 144.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   2526.323 ±(99.9%) 695.288 MB/sec [Average]
[info]   (min, avg, max) = (2301.105, 2526.323, 2677.383), stdev = 180.564
[info]   CI (99.9%): [1831.035, 3221.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   134.493 ±(99.9%) 40.372 B/op [Average]
[info]   (min, avg, max) = (122.439, 134.493, 144.793), stdev = 10.485
[info]   CI (99.9%): [94.120, 174.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.027 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.804, 3.602), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 6.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.322 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.043, 0.192), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 17.000), stdev = 3.271
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1854.204 ops/s
[info] # Warmup Iteration   2: 52663.389 ops/s
[info] # Warmup Iteration   3: 258724.424 ops/s
[info] Iteration   1: 356524.517 ops/s
[info]                  ·gc.alloc.rate:                   2597.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              11462.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11556.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.899 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 397139.285 ops/s
[info]                  ·gc.alloc.rate:                   2703.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              10710.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2617.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10370.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.650 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 402980.292 ops/s
[info]                  ·gc.alloc.rate:                   2737.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              10690.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10312.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 388577.056 ops/s
[info]                  ·gc.alloc.rate:                   2689.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10818.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 398276.688 ops/s
[info]                  ·gc.alloc.rate:                   2694.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              10646.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9306.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   388699.568 ±(99.9%) 72093.940 ops/s [Average]
[info]   (min, avg, max) = (356524.517, 388699.568, 402980.292), stdev = 18722.567
[info]   CI (99.9%): [316605.628, 460793.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2684.293 ±(99.9%) 201.325 MB/sec [Average]
[info]   (min, avg, max) = (2597.031, 2684.293, 2737.528), stdev = 52.283
[info]   CI (99.9%): [2482.969, 2885.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10879.980 ±(99.9%) 1303.285 B/op [Average]
[info]   (min, avg, max) = (10646.986, 10879.980, 11462.697), stdev = 338.459
[info]   CI (99.9%): [9576.696, 12183.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2580.645 ±(99.9%) 492.018 MB/sec [Average]
[info]   (min, avg, max) = (2355.559, 2580.645, 2671.845), stdev = 127.776
[info]   CI (99.9%): [2088.627, 3072.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10472.786 ±(99.9%) 3157.853 B/op [Average]
[info]   (min, avg, max) = (9306.607, 10472.786, 11556.355), stdev = 820.085
[info]   CI (99.9%): [7314.933, 13630.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.027 ±(99.9%) 7.517 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.027, 4.508), stdev = 1.952
[info]   CI (99.9%): [≈ 0, 8.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.474 ±(99.9%) 33.283 B/op [Average]
[info]   (min, avg, max) = (0.169, 4.474, 19.899), stdev = 8.643
[info]   CI (99.9%): [≈ 0, 37.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 14.200, 21.000), stdev = 3.962
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 455541.396 ops/s
[info] # Warmup Iteration   2: 1143091.552 ops/s
[info] # Warmup Iteration   3: 1459627.266 ops/s
[info] Iteration   1: 1438617.503 ops/s
[info]                  ·gc.alloc.rate:                   51.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              56.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.172 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.376 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1471291.782 ops/s
[info]                  ·gc.alloc.rate:      44.877 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1472059.728 ops/s
[info]                  ·gc.alloc.rate:      44.898 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1470625.360 ops/s
[info]                  ·gc.alloc.rate:      44.857 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1403772.404 ops/s
[info]                  ·gc.alloc.rate:      42.820 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1451273.356 ±(99.9%) 115900.892 ops/s [Average]
[info]   (min, avg, max) = (1403772.404, 1451273.356, 1472059.728), stdev = 30099.094
[info]   CI (99.9%): [1335372.464, 1567174.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   45.794 ±(99.9%) 12.793 MB/sec [Average]
[info]   (min, avg, max) = (42.820, 45.794, 51.520), stdev = 3.322
[info]   CI (99.9%): [33.001, 58.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.672 ±(99.9%) 14.394 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.672, 56.359), stdev = 3.738
[info]   CI (99.9%): [35.278, 64.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.803), stdev = 114.398
[info]   CI (99.9%): [≈ 0, 491.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   55.966 ±(99.9%) 481.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 55.966, 279.828), stdev = 125.143
[info]   CI (99.9%): [≈ 0, 537.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.434 ±(99.9%) 3.741 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.434, 2.172), stdev = 0.971
[info]   CI (99.9%): [≈ 0, 4.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.475 ±(99.9%) 4.092 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.475, 2.376), stdev = 1.063
[info]   CI (99.9%): [≈ 0, 4.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2272.970 ops/s
[info] # Warmup Iteration   2: 69494.337 ops/s
[info] # Warmup Iteration   3: 104526.025 ops/s
[info] Iteration   1: 113107.428 ops/s
[info]                  ·gc.alloc.rate:                   4317.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              60082.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3964.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55166.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.328 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 104656.908 ops/s
[info]                  ·gc.alloc.rate:                   3872.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              58232.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3969.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59690.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.083 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   3: 106025.406 ops/s
[info]                  ·gc.alloc.rate:                   3883.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              57618.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3653.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54209.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.858 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 107878.463 ops/s
[info]                  ·gc.alloc.rate:                   4014.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              58558.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4013.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58553.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.518 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 107501.340 ops/s
[info]                  ·gc.alloc.rate:                   3988.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              58392.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3715.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54383.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.219 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   107833.909 ±(99.9%) 12371.090 ops/s [Average]
[info]   (min, avg, max) = (104656.908, 107833.909, 113107.428), stdev = 3212.733
[info]   CI (99.9%): [95462.819, 120204.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4015.280 ±(99.9%) 693.646 MB/sec [Average]
[info]   (min, avg, max) = (3872.878, 4015.280, 4317.491), stdev = 180.138
[info]   CI (99.9%): [3321.633, 4708.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   58576.937 ±(99.9%) 3517.706 B/op [Average]
[info]   (min, avg, max) = (57618.538, 58576.937, 60082.504), stdev = 913.537
[info]   CI (99.9%): [55059.231, 62094.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3863.204 ±(99.9%) 639.331 MB/sec [Average]
[info]   (min, avg, max) = (3653.249, 3863.204, 4013.733), stdev = 166.032
[info]   CI (99.9%): [3223.873, 4502.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56400.328 ±(99.9%) 9789.292 B/op [Average]
[info]   (min, avg, max) = (54209.072, 56400.328, 59690.083), stdev = 2542.248
[info]   CI (99.9%): [46611.037, 66189.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.328 ±(99.9%) 4.822 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.328, 3.042), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 6.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.201 ±(99.9%) 68.065 B/op [Average]
[info]   (min, avg, max) = (1.219, 19.201, 42.328), stdev = 17.676
[info]   CI (99.9%): [≈ 0, 87.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   58.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   107.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 21.400, 30.000), stdev = 5.550
[info]   CI (99.9%): [107.000, 107.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291549.048 ops/s
[info] # Warmup Iteration   2: 1683623.297 ops/s
[info] # Warmup Iteration   3: 1996143.603 ops/s
[info] Iteration   1: 2070993.912 ops/s
[info]                  ·gc.alloc.rate:                   572.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2070011.640 ops/s
[info]                  ·gc.alloc.rate:               566.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          430.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 244.116 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1995568.529 ops/s
[info]                  ·gc.alloc.rate:                   558.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2045110.353 ops/s
[info]                  ·gc.alloc.rate:                   574.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     496.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2094249.646 ops/s
[info]                  ·gc.alloc.rate:                   583.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   2055186.816 ±(99.9%) 144737.859 ops/s [Average]
[info]   (min, avg, max) = (1995568.529, 2055186.816, 2094249.646), stdev = 37587.962
[info]   CI (99.9%): [1910448.957, 2199924.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   571.026 ±(99.9%) 36.357 MB/sec [Average]
[info]   (min, avg, max) = (558.315, 571.026, 583.397), stdev = 9.442
[info]   CI (99.9%): [534.669, 607.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   437.283 ±(99.9%) 18.145 B/op [Average]
[info]   (min, avg, max) = (430.329, 437.283, 442.325), stdev = 4.712
[info]   CI (99.9%): [419.138, 455.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.243 ±(99.9%) 557.919 MB/sec [Average]
[info]   (min, avg, max) = (321.086, 580.243, 648.199), stdev = 144.890
[info]   CI (99.9%): [22.324, 1138.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   444.787 ±(99.9%) 433.178 B/op [Average]
[info]   (min, avg, max) = (244.116, 444.787, 508.011), stdev = 112.495
[info]   CI (99.9%): [11.609, 877.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.026 ±(99.9%) 0.077 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.056), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.044), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849186.267 ops/s
[info] # Warmup Iteration   2: 1525999.704 ops/s
[info] # Warmup Iteration   3: 1884772.640 ops/s
[info] Iteration   1: 1883249.221 ops/s
[info]                  ·gc.alloc.rate:                   524.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     547.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1897566.520 ops/s
[info]                  ·gc.alloc.rate:               517.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          429.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 271.277 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1938811.855 ops/s
[info]                  ·gc.alloc.rate:                   543.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     528.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1923012.795 ops/s
[info]                  ·gc.alloc.rate:               606.211 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 533.208 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2000435.379 ops/s
[info]                  ·gc.alloc.rate:               551.311 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 256.277 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1928615.154 ±(99.9%) 175569.829 ops/s [Average]
[info]   (min, avg, max) = (1883249.221, 1928615.154, 2000435.379), stdev = 45594.927
[info]   CI (99.9%): [1753045.325, 2104184.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   548.599 ±(99.9%) 134.644 MB/sec [Average]
[info]   (min, avg, max) = (517.771, 548.599, 606.211), stdev = 34.967
[info]   CI (99.9%): [413.955, 683.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   447.679 ±(99.9%) 105.509 B/op [Average]
[info]   (min, avg, max) = (429.410, 447.679, 496.054), stdev = 27.400
[info]   CI (99.9%): [342.169, 553.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   522.310 ±(99.9%) 688.576 MB/sec [Average]
[info]   (min, avg, max) = (325.763, 522.310, 655.553), stdev = 178.821
[info]   CI (99.9%): [≈ 0, 1210.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   427.483 ±(99.9%) 576.446 B/op [Average]
[info]   (min, avg, max) = (256.277, 427.483, 547.806), stdev = 149.701
[info]   CI (99.9%): [≈ 0, 1003.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 7.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 4.081), stdev = 1.823
[info]   CI (99.9%): [≈ 0, 7.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.685 ±(99.9%) 5.865 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.685, 3.410), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 6.000), stdev = 2.074
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 948267.409 ops/s
[info] # Warmup Iteration   2: 1560328.207 ops/s
[info] # Warmup Iteration   3: 1978390.447 ops/s
[info] Iteration   1: 1980469.946 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1982857.494 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1984530.619 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2026996.590 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2027367.019 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2000444.334 ±(99.9%) 94151.448 ops/s [Average]
[info]   (min, avg, max) = (1980469.946, 2000444.334, 2027367.019), stdev = 24450.832
[info]   CI (99.9%): [1906292.885, 2094595.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5149.869 ops/s
[info] # Warmup Iteration   2: 34161.005 ops/s
[info] # Warmup Iteration   3: 51850.881 ops/s
[info] Iteration   1: 51908.803 ops/s
[info]                  ·gc.alloc.rate:                   2235.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              67763.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69394.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.209 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 57301.011 ops/s
[info]                  ·gc.alloc.rate:                   2003.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              55015.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54108.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.923 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.807 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 56853.013 ops/s
[info]                  ·gc.alloc.rate:                   1981.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              54837.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54776.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.610 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 55427.129 ops/s
[info]                  ·gc.alloc.rate:                   1929.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              54778.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47153.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.364 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 55116.869 ops/s
[info]                  ·gc.alloc.rate:                   1943.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              55494.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57289.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.972 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   55321.365 ±(99.9%) 8160.169 ops/s [Average]
[info]   (min, avg, max) = (51908.803, 55321.365, 57301.011), stdev = 2119.170
[info]   CI (99.9%): [47161.196, 63481.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2018.605 ±(99.9%) 479.853 MB/sec [Average]
[info]   (min, avg, max) = (1929.345, 2018.605, 2235.275), stdev = 124.616
[info]   CI (99.9%): [1538.752, 2498.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   57577.905 ±(99.9%) 21952.488 B/op [Average]
[info]   (min, avg, max) = (54778.802, 57577.905, 67763.748), stdev = 5700.991
[info]   CI (99.9%): [35625.417, 79530.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1981.183 ±(99.9%) 857.239 MB/sec [Average]
[info]   (min, avg, max) = (1660.780, 1981.183, 2289.077), stdev = 222.622
[info]   CI (99.9%): [1123.943, 2838.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56544.468 ±(99.9%) 31219.661 B/op [Average]
[info]   (min, avg, max) = (47153.576, 56544.468, 69394.771), stdev = 8107.647
[info]   CI (99.9%): [25324.807, 87764.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.222 ±(99.9%) 6.377 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.222, 3.833), stdev = 1.656
[info]   CI (99.9%): [≈ 0, 7.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   35.792 ±(99.9%) 191.792 B/op [Average]
[info]   (min, avg, max) = (2.364, 35.792, 116.209), stdev = 49.808
[info]   CI (99.9%): [≈ 0, 227.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 18.000), stdev = 4.278
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131609.719 ops/s
[info] # Warmup Iteration   2: 218675.516 ops/s
[info] # Warmup Iteration   3: 253298.102 ops/s
[info] Iteration   1: 268499.909 ops/s
[info]                  ·gc.alloc.rate:                   1083.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              6353.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5772.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 267387.219 ops/s
[info]                  ·gc.alloc.rate:                   1080.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              6359.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5812.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.276 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 269690.431 ops/s
[info]                  ·gc.alloc.rate:                   1085.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              6334.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5755.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 269950.822 ops/s
[info]                  ·gc.alloc.rate:                   1090.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              6355.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7619.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 264736.211 ops/s
[info]                  ·gc.alloc.rate:                   1068.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              6353.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5831.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   268052.919 ±(99.9%) 8151.867 ops/s [Average]
[info]   (min, avg, max) = (264736.211, 268052.919, 269950.822), stdev = 2117.014
[info]   CI (99.9%): [259901.052, 276204.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1081.851 ±(99.9%) 30.946 MB/sec [Average]
[info]   (min, avg, max) = (1068.878, 1081.851, 1090.249), stdev = 8.037
[info]   CI (99.9%): [1050.905, 1112.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6351.192 ±(99.9%) 36.970 B/op [Average]
[info]   (min, avg, max) = (6334.541, 6351.192, 6359.040), stdev = 9.601
[info]   CI (99.9%): [6314.222, 6388.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1049.419 ±(99.9%) 554.688 MB/sec [Average]
[info]   (min, avg, max) = (981.040, 1049.419, 1307.066), stdev = 144.051
[info]   CI (99.9%): [494.732, 1604.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6158.360 ±(99.9%) 3147.781 B/op [Average]
[info]   (min, avg, max) = (5755.298, 6158.360, 7619.680), stdev = 817.469
[info]   CI (99.9%): [3010.579, 9306.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.851 ±(99.9%) 4.782 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.851, 2.936), stdev = 1.242
[info]   CI (99.9%): [≈ 0, 5.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.995 ±(99.9%) 28.138 B/op [Average]
[info]   (min, avg, max) = (0.124, 4.995, 17.276), stdev = 7.307
[info]   CI (99.9%): [≈ 0, 33.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 14.000), stdev = 4.301
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1227.467 ops/s
[info] # Warmup Iteration   2: 25119.992 ops/s
[info] # Warmup Iteration   3: 48332.668 ops/s
[info] Iteration   1: 49053.123 ops/s
[info]                  ·gc.alloc.rate:                   2189.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              70227.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2279.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73093.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.738 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 52868.676 ops/s
[info]                  ·gc.alloc.rate:                   2112.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              62866.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58725.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.167 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 52725.989 ops/s
[info]                  ·gc.alloc.rate:                   2104.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              62810.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59332.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.864 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 49675.635 ops/s
[info]                  ·gc.alloc.rate:                   1996.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              63243.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63472.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.660 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 50954.074 ops/s
[info]                  ·gc.alloc.rate:                   2032.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              62786.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62281.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.286 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   51055.500 ±(99.9%) 6670.059 ops/s [Average]
[info]   (min, avg, max) = (49053.123, 51055.500, 52868.676), stdev = 1732.193
[info]   CI (99.9%): [44385.441, 57725.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2087.061 ±(99.9%) 289.635 MB/sec [Average]
[info]   (min, avg, max) = (1996.206, 2087.061, 2189.666), stdev = 75.217
[info]   CI (99.9%): [1797.426, 2376.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64386.842 ±(99.9%) 12592.743 B/op [Average]
[info]   (min, avg, max) = (62786.214, 64386.842, 70227.514), stdev = 3270.295
[info]   CI (99.9%): [51794.099, 76979.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2051.986 ±(99.9%) 492.814 MB/sec [Average]
[info]   (min, avg, max) = (1972.944, 2051.986, 2279.038), stdev = 127.982
[info]   CI (99.9%): [1559.171, 2544.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63381.244 ±(99.9%) 22255.700 B/op [Average]
[info]   (min, avg, max) = (58725.729, 63381.244, 73093.894), stdev = 5779.735
[info]   CI (99.9%): [41125.545, 85636.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.632 ±(99.9%) 3.115 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.632, 1.520), stdev = 0.809
[info]   CI (99.9%): [≈ 0, 3.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.543 ±(99.9%) 96.486 B/op [Average]
[info]   (min, avg, max) = (0.660, 19.543, 48.738), stdev = 25.057
[info]   CI (99.9%): [≈ 0, 116.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 13.000), stdev = 1.517
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34110.770 ops/s
[info] # Warmup Iteration   2: 152275.794 ops/s
[info] # Warmup Iteration   3: 172501.565 ops/s
[info] Iteration   1: 159076.929 ops/s
[info]                  ·gc.alloc.rate:                   1605.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              15885.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16058.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.067 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 156598.632 ops/s
[info]                  ·gc.alloc.rate:                   1578.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              15860.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16466.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.440 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 156832.223 ops/s
[info]                  ·gc.alloc.rate:                   1565.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              15714.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13241.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 159073.754 ops/s
[info]                  ·gc.alloc.rate:               1594.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          15769.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1660.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16426.632 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 159255.416 ops/s
[info]                  ·gc.alloc.rate:                   1622.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              16031.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16526.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   158167.391 ±(99.9%) 5121.583 ops/s [Average]
[info]   (min, avg, max) = (156598.632, 158167.391, 159255.416), stdev = 1330.059
[info]   CI (99.9%): [153045.807, 163288.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1593.375 ±(99.9%) 85.479 MB/sec [Average]
[info]   (min, avg, max) = (1565.990, 1593.375, 1622.343), stdev = 22.199
[info]   CI (99.9%): [1507.896, 1678.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15852.272 ±(99.9%) 468.244 B/op [Average]
[info]   (min, avg, max) = (15714.123, 15852.272, 16031.521), stdev = 121.601
[info]   CI (99.9%): [15384.029, 16320.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1582.956 ±(99.9%) 571.588 MB/sec [Average]
[info]   (min, avg, max) = (1319.620, 1582.956, 1672.440), stdev = 148.439
[info]   CI (99.9%): [1011.369, 2154.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15743.959 ±(99.9%) 5431.870 B/op [Average]
[info]   (min, avg, max) = (13241.892, 15743.959, 16526.563), stdev = 1410.639
[info]   CI (99.9%): [10312.089, 21175.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.466 ±(99.9%) 2.847 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 1.725), stdev = 0.739
[info]   CI (99.9%): [≈ 0, 3.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.626 ±(99.9%) 28.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.626, 17.067), stdev = 7.316
[info]   CI (99.9%): [≈ 0, 32.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 9.000), stdev = 1.140
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168525.506 ops/s
[info] # Warmup Iteration   2: 403852.093 ops/s
[info] # Warmup Iteration   3: 523533.504 ops/s
[info] Iteration   1: 529855.634 ops/s
[info]                  ·gc.alloc.rate:               727.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1950.894 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 494815.875 ops/s
[info]                  ·gc.alloc.rate:               709.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          2256.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2091.127 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 505904.788 ops/s
[info]                  ·gc.alloc.rate:                   698.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              2172.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2047.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 518677.300 ops/s
[info]                  ·gc.alloc.rate:                   714.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2167.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2001.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 519003.776 ops/s
[info]                  ·gc.alloc.rate:                   708.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              2148.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1999.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.974 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   513651.475 ±(99.9%) 52064.629 ops/s [Average]
[info]   (min, avg, max) = (494815.875, 513651.475, 529855.634), stdev = 13521.019
[info]   CI (99.9%): [461586.845, 565716.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   711.694 ±(99.9%) 40.604 MB/sec [Average]
[info]   (min, avg, max) = (698.397, 711.694, 727.438), stdev = 10.545
[info]   CI (99.9%): [671.091, 752.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2181.050 ±(99.9%) 166.171 B/op [Average]
[info]   (min, avg, max) = (2148.872, 2181.050, 2256.663), stdev = 43.154
[info]   CI (99.9%): [2014.879, 2347.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.362 ±(99.9%) 4.546 MB/sec [Average]
[info]   (min, avg, max) = (656.861, 658.362, 659.555), stdev = 1.180
[info]   CI (99.9%): [653.817, 662.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2018.032 ±(99.9%) 204.966 B/op [Average]
[info]   (min, avg, max) = (1950.894, 2018.032, 2091.127), stdev = 53.229
[info]   CI (99.9%): [1813.066, 2222.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.669 ±(99.9%) 5.641 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.669, 3.289), stdev = 1.465
[info]   CI (99.9%): [≈ 0, 6.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.028 ±(99.9%) 17.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.028, 9.974), stdev = 4.442
[info]   CI (99.9%): [≈ 0, 19.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:16:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196024.369 ops/s
[info] # Warmup Iteration   2: 554687.519 ops/s
[info] # Warmup Iteration   3: 582275.238 ops/s
[info] Iteration   1: 582386.532 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 582529.988 ops/s
[info]                  ·gc.alloc.rate:      0.648 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.750 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 583671.224 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 565835.847 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 565603.040 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   576005.326 ±(99.9%) 36208.487 ops/s [Average]
[info]   (min, avg, max) = (565603.040, 576005.326, 583671.224), stdev = 9403.229
[info]   CI (99.9%): [539796.840, 612213.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.130 ±(99.9%) 1.115 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.130, 0.648), stdev = 0.290
[info]   CI (99.9%): [≈ 0, 1.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.351 ±(99.9%) 3.012 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.351, 1.750), stdev = 0.782
[info]   CI (99.9%): [≈ 0, 3.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5785.837 ops/s
[info] # Warmup Iteration   2: 44842.721 ops/s
[info] # Warmup Iteration   3: 66486.170 ops/s
[info] Iteration   1: 77336.976 ops/s
[info]                  ·gc.alloc.rate:                   1771.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              36041.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39625.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.794 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 86136.117 ops/s
[info]                  ·gc.alloc.rate:                   1594.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              29134.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29411.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.269 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 85429.713 ops/s
[info]                  ·gc.alloc.rate:                   1579.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              29082.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23918.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.505 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 86169.704 ops/s
[info]                  ·gc.alloc.rate:                   1599.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              29209.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29690.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.307 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 87549.151 ops/s
[info]                  ·gc.alloc.rate:                   1617.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              29075.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29127.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   84524.332 ±(99.9%) 15751.490 ops/s [Average]
[info]   (min, avg, max) = (77336.976, 84524.332, 87549.151), stdev = 4090.612
[info]   CI (99.9%): [68772.842, 100275.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1632.433 ±(99.9%) 303.636 MB/sec [Average]
[info]   (min, avg, max) = (1579.128, 1632.433, 1771.342), stdev = 78.853
[info]   CI (99.9%): [1328.797, 1936.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30508.808 ±(99.9%) 11910.767 B/op [Average]
[info]   (min, avg, max) = (29075.710, 30508.808, 36041.240), stdev = 3093.188
[info]   CI (99.9%): [18598.041, 42419.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1620.460 ±(99.9%) 883.634 MB/sec [Average]
[info]   (min, avg, max) = (1298.703, 1620.460, 1947.522), stdev = 229.477
[info]   CI (99.9%): [736.826, 2504.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30354.794 ±(99.9%) 21970.834 B/op [Average]
[info]   (min, avg, max) = (23918.013, 30354.794, 39625.946), stdev = 5705.756
[info]   CI (99.9%): [8383.960, 52325.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.457 ±(99.9%) 6.138 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.457, 3.905), stdev = 1.594
[info]   CI (99.9%): [≈ 0, 7.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.850 ±(99.9%) 111.448 B/op [Average]
[info]   (min, avg, max) = (0.374, 26.850, 71.307), stdev = 28.943
[info]   CI (99.9%): [≈ 0, 138.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.400, 29.000), stdev = 8.620
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6207.661 ops/s
[info] # Warmup Iteration   2: 76789.218 ops/s
[info] # Warmup Iteration   3: 91206.196 ops/s
[info] Iteration   1: 102964.128 ops/s
[info]                  ·gc.alloc.rate:                   1613.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              24659.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25016.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.570 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 101350.663 ops/s
[info]                  ·gc.alloc.rate:                   1599.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              24839.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25228.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.344 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 101670.629 ops/s
[info]                  ·gc.alloc.rate:                   1579.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              24450.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20096.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.322 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 103643.718 ops/s
[info]                  ·gc.alloc.rate:                   1628.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              24724.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24783.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 103629.967 ops/s
[info]                  ·gc.alloc.rate:                   1649.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              25054.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25004.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   102651.821 ±(99.9%) 4171.295 ops/s [Average]
[info]   (min, avg, max) = (101350.663, 102651.821, 103643.718), stdev = 1083.272
[info]   CI (99.9%): [98480.526, 106823.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1614.226 ±(99.9%) 103.384 MB/sec [Average]
[info]   (min, avg, max) = (1579.638, 1614.226, 1649.927), stdev = 26.848
[info]   CI (99.9%): [1510.842, 1717.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24745.686 ±(99.9%) 858.528 B/op [Average]
[info]   (min, avg, max) = (24450.595, 24745.686, 25054.148), stdev = 222.957
[info]   CI (99.9%): [23887.158, 25604.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1567.757 ±(99.9%) 580.735 MB/sec [Average]
[info]   (min, avg, max) = (1298.341, 1567.757, 1646.634), stdev = 150.815
[info]   CI (99.9%): [987.023, 2148.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24025.722 ±(99.9%) 8479.596 B/op [Average]
[info]   (min, avg, max) = (20096.512, 24025.722, 25228.134), stdev = 2202.124
[info]   CI (99.9%): [15546.126, 32505.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.305 ±(99.9%) 9.725 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.305, 5.795), stdev = 2.526
[info]   CI (99.9%): [≈ 0, 11.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19.974 ±(99.9%) 148.602 B/op [Average]
[info]   (min, avg, max) = (0.316, 19.974, 88.570), stdev = 38.592
[info]   CI (99.9%): [≈ 0, 168.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 21.000), stdev = 6.504
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10009.992 ops/s
[info] # Warmup Iteration   2: 84486.992 ops/s
[info] # Warmup Iteration   3: 132001.443 ops/s
[info] Iteration   1: 144787.014 ops/s
[info]                  ·gc.alloc.rate:                   785.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              8535.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10549.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.828 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.732 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 153091.687 ops/s
[info]                  ·gc.alloc.rate:                   835.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              8585.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6660.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.678 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.525 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 145554.577 ops/s
[info]                  ·gc.alloc.rate:                   698.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              7547.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7011.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.595 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 146051.484 ops/s
[info]                  ·gc.alloc.rate:                   697.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              7514.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6998.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 146750.558 ops/s
[info]                  ·gc.alloc.rate:                   706.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              7578.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6979.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.569 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.822 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   147247.064 ±(99.9%) 12879.800 ops/s [Average]
[info]   (min, avg, max) = (144787.014, 147247.064, 153091.687), stdev = 3344.843
[info]   CI (99.9%): [134367.264, 160126.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   744.560 ±(99.9%) 241.077 MB/sec [Average]
[info]   (min, avg, max) = (697.472, 744.560, 835.194), stdev = 62.607
[info]   CI (99.9%): [503.484, 985.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7952.216 ±(99.9%) 2140.051 B/op [Average]
[info]   (min, avg, max) = (7514.776, 7952.216, 8585.186), stdev = 555.765
[info]   CI (99.9%): [5812.165, 10092.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   713.501 ±(99.9%) 553.495 MB/sec [Average]
[info]   (min, avg, max) = (647.915, 713.501, 970.624), stdev = 143.741
[info]   CI (99.9%): [160.006, 1266.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7639.828 ±(99.9%) 6288.921 B/op [Average]
[info]   (min, avg, max) = (6660.093, 7639.828, 10549.695), stdev = 1633.213
[info]   CI (99.9%): [1350.906, 13928.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.433 ±(99.9%) 5.226 MB/sec [Average]
[info]   (min, avg, max) = (0.034, 1.433, 2.828), stdev = 1.357
[info]   CI (99.9%): [≈ 0, 6.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.207 ±(99.9%) 55.441 B/op [Average]
[info]   (min, avg, max) = (0.364, 15.207, 30.732), stdev = 14.398
[info]   CI (99.9%): [≈ 0, 70.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23578.853 ops/s
[info] # Warmup Iteration   2: 251897.895 ops/s
[info] # Warmup Iteration   3: 319784.201 ops/s
[info] Iteration   1: 341217.877 ops/s
[info]                  ·gc.alloc.rate:                   1451.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              6692.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6049.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 340715.037 ops/s
[info]                  ·gc.alloc.rate:                   1439.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              6648.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6049.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.714 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 344348.424 ops/s
[info]                  ·gc.alloc.rate:                   1451.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              6631.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5955.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.761 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 345302.672 ops/s
[info]                  ·gc.alloc.rate:                   1467.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              6687.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7437.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 347033.263 ops/s
[info]                  ·gc.alloc.rate:                   1481.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              6716.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5960.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   343723.454 ±(99.9%) 10398.136 ops/s [Average]
[info]   (min, avg, max) = (340715.037, 343723.454, 347033.263), stdev = 2700.363
[info]   CI (99.9%): [333325.318, 354121.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1458.028 ±(99.9%) 62.781 MB/sec [Average]
[info]   (min, avg, max) = (1439.489, 1458.028, 1481.205), stdev = 16.304
[info]   CI (99.9%): [1395.247, 1520.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6675.268 ±(99.9%) 133.698 B/op [Average]
[info]   (min, avg, max) = (6631.267, 6675.268, 6716.784), stdev = 34.721
[info]   CI (99.9%): [6541.571, 6808.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1374.168 ±(99.9%) 554.893 MB/sec [Average]
[info]   (min, avg, max) = (1303.133, 1374.168, 1631.841), stdev = 144.104
[info]   CI (99.9%): [819.276, 1929.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6290.360 ±(99.9%) 2474.669 B/op [Average]
[info]   (min, avg, max) = (5955.293, 6290.360, 7437.065), stdev = 642.664
[info]   CI (99.9%): [3815.691, 8765.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.860 ±(99.9%) 6.874 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.860, 4.052), stdev = 1.785
[info]   CI (99.9%): [≈ 0, 7.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.971 ±(99.9%) 31.754 B/op [Average]
[info]   (min, avg, max) = (0.094, 3.971, 18.714), stdev = 8.246
[info]   CI (99.9%): [≈ 0, 35.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 18.000), stdev = 5.263
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 652.638 ops/s
[info] # Warmup Iteration   2: 13562.463 ops/s
[info] # Warmup Iteration   3: 52303.388 ops/s
[info] Iteration   1: 51090.096 ops/s
[info]                  ·gc.alloc.rate:                   2174.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              66967.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60604.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.624 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 52608.544 ops/s
[info]                  ·gc.alloc.rate:                   2199.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              65776.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68741.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.593 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 53680.467 ops/s
[info]                  ·gc.alloc.rate:                   2176.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              63779.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58040.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.221 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 51992.008 ops/s
[info]                  ·gc.alloc.rate:                   2109.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              63854.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60411.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.521 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 52181.963 ops/s
[info]                  ·gc.alloc.rate:                   2154.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              64967.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60632.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.256 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   52310.615 ±(99.9%) 3639.309 ops/s [Average]
[info]   (min, avg, max) = (51090.096, 52310.615, 53680.467), stdev = 945.117
[info]   CI (99.9%): [48671.306, 55949.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2162.685 ±(99.9%) 129.595 MB/sec [Average]
[info]   (min, avg, max) = (2109.670, 2162.685, 2199.276), stdev = 33.655
[info]   CI (99.9%): [2033.090, 2292.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65069.180 ±(99.9%) 5184.318 B/op [Average]
[info]   (min, avg, max) = (63779.862, 65069.180, 66967.000), stdev = 1346.351
[info]   CI (99.9%): [59884.862, 70253.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2050.541 ±(99.9%) 537.186 MB/sec [Average]
[info]   (min, avg, max) = (1967.634, 2050.541, 2298.417), stdev = 139.506
[info]   CI (99.9%): [1513.355, 2587.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61686.353 ±(99.9%) 15756.833 B/op [Average]
[info]   (min, avg, max) = (58040.487, 61686.353, 68741.931), stdev = 4092.000
[info]   CI (99.9%): [45929.520, 77443.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.043 ±(99.9%) 5.963 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.043, 3.592), stdev = 1.549
[info]   CI (99.9%): [≈ 0, 7.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   31.843 ±(99.9%) 183.438 B/op [Average]
[info]   (min, avg, max) = (1.221, 31.843, 110.624), stdev = 47.638
[info]   CI (99.9%): [≈ 0, 215.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 16.000), stdev = 2.775
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31774.723 ops/s
[info] # Warmup Iteration   2: 201955.065 ops/s
[info] # Warmup Iteration   3: 226733.789 ops/s
[info] Iteration   1: 253127.647 ops/s
[info]                  ·gc.alloc.rate:               889.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          5530.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4013.216 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 257272.526 ops/s
[info]                  ·gc.alloc.rate:                   910.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5943.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 256097.991 ops/s
[info]                  ·gc.alloc.rate:                   914.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              5619.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6003.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 256804.983 ops/s
[info]                  ·gc.alloc.rate:                   908.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              5565.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6027.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.765 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 254492.458 ops/s
[info]                  ·gc.alloc.rate:                   892.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              5516.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4069.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   255559.121 ±(99.9%) 6621.582 ops/s [Average]
[info]   (min, avg, max) = (253127.647, 255559.121, 257272.526), stdev = 1719.604
[info]   CI (99.9%): [248937.539, 262180.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   902.929 ±(99.9%) 43.661 MB/sec [Average]
[info]   (min, avg, max) = (889.521, 902.929, 914.512), stdev = 11.339
[info]   CI (99.9%): [859.268, 946.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5560.076 ±(99.9%) 154.819 B/op [Average]
[info]   (min, avg, max) = (5516.222, 5560.076, 5619.665), stdev = 40.206
[info]   CI (99.9%): [5405.257, 5714.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   847.159 ±(99.9%) 686.973 MB/sec [Average]
[info]   (min, avg, max) = (645.508, 847.159, 983.578), stdev = 178.405
[info]   CI (99.9%): [160.186, 1534.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5211.453 ±(99.9%) 4114.821 B/op [Average]
[info]   (min, avg, max) = (4013.216, 5211.453, 6027.613), stdev = 1068.606
[info]   CI (99.9%): [1096.632, 9326.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.146 ±(99.9%) 0.827 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.520), stdev = 0.215
[info]   CI (99.9%): [≈ 0, 0.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.895 ±(99.9%) 5.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 3.198), stdev = 1.320
[info]   CI (99.9%): [≈ 0, 5.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 229579.425 ops/s
[info] # Warmup Iteration   2: 545517.372 ops/s
[info] # Warmup Iteration   3: 650256.896 ops/s
[info] Iteration   1: 640141.658 ops/s
[info]                  ·gc.alloc.rate:               721.240 MB/sec
[info]                  ·gc.alloc.rate.norm:          1772.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1612.985 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 673565.876 ops/s
[info]                  ·gc.alloc.rate:                   753.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1759.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1534.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 667728.960 ops/s
[info]                  ·gc.alloc.rate:               749.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          1765.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1551.211 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 656525.517 ops/s
[info]                  ·gc.alloc.rate:                   779.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              1867.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2368.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.633 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 669824.108 ops/s
[info]                  ·gc.alloc.rate:                   751.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              1765.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   661557.224 ±(99.9%) 52182.405 ops/s [Average]
[info]   (min, avg, max) = (640141.658, 661557.224, 673565.876), stdev = 13551.605
[info]   CI (99.9%): [609374.819, 713739.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   750.880 ±(99.9%) 79.180 MB/sec [Average]
[info]   (min, avg, max) = (721.240, 750.880, 779.240), stdev = 20.563
[info]   CI (99.9%): [671.700, 830.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1786.376 ±(99.9%) 176.261 B/op [Average]
[info]   (min, avg, max) = (1759.989, 1786.376, 1867.847), stdev = 45.774
[info]   CI (99.9%): [1610.115, 1962.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.332 ±(99.9%) 569.617 MB/sec [Average]
[info]   (min, avg, max) = (656.187, 723.332, 987.950), stdev = 147.928
[info]   CI (99.9%): [153.715, 1292.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1722.343 ±(99.9%) 1395.101 B/op [Average]
[info]   (min, avg, max) = (1534.624, 1722.343, 2368.128), stdev = 362.303
[info]   CI (99.9%): [327.243, 3117.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.905 ±(99.9%) 5.979 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.905, 3.602), stdev = 1.553
[info]   CI (99.9%): [≈ 0, 6.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.161 ±(99.9%) 14.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.161, 8.633), stdev = 3.722
[info]   CI (99.9%): [≈ 0, 16.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 12.000), stdev = 3.194
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 261175.141 ops/s
[info] # Warmup Iteration   2: 593773.001 ops/s
[info] # Warmup Iteration   3: 765765.295 ops/s
[info] Iteration   1: 741961.889 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 743550.807 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 765026.201 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 761095.431 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 763760.748 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   755079.015 ±(99.9%) 43712.646 ops/s [Average]
[info]   (min, avg, max) = (741961.889, 755079.015, 765026.201), stdev = 11352.035
[info]   CI (99.9%): [711366.369, 798791.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5219.900 ops/s
[info] # Warmup Iteration   2: 56320.707 ops/s
[info] # Warmup Iteration   3: 82167.090 ops/s
[info] Iteration   1: 86464.127 ops/s
[info]                  ·gc.alloc.rate:                   1788.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              32533.594 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35357.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.652 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 86574.090 ops/s
[info]                  ·gc.alloc.rate:                   1794.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              32612.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1589.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28876.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.218 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   3: 81526.843 ops/s
[info]                  ·gc.alloc.rate:                   1708.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              32972.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1863.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35951.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.933 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75.887 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   4: 81959.097 ops/s
[info]                  ·gc.alloc.rate:                   1731.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              33244.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1522.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29230.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.150 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175.629 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   5: 87806.096 ops/s
[info]                  ·gc.alloc.rate:                   1452.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              26027.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1538.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27569.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.132 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 145.733 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   84866.051 ±(99.9%) 11179.441 ops/s [Average]
[info]   (min, avg, max) = (81526.843, 84866.051, 87806.096), stdev = 2903.265
[info]   CI (99.9%): [73686.610, 96045.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1695.232 ±(99.9%) 541.477 MB/sec [Average]
[info]   (min, avg, max) = (1452.344, 1695.232, 1794.896), stdev = 140.620
[info]   CI (99.9%): [1153.756, 2236.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   31478.201 ±(99.9%) 11783.776 B/op [Average]
[info]   (min, avg, max) = (26027.846, 31478.201, 33244.365), stdev = 3060.209
[info]   CI (99.9%): [19694.426, 43261.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1691.420 ±(99.9%) 758.635 MB/sec [Average]
[info]   (min, avg, max) = (1522.850, 1691.420, 1943.391), stdev = 197.015
[info]   CI (99.9%): [932.785, 2450.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31397.310 ±(99.9%) 15174.990 B/op [Average]
[info]   (min, avg, max) = (27569.911, 31397.310, 35951.361), stdev = 3940.897
[info]   CI (99.9%): [16222.320, 46572.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.873 ±(99.9%) 13.825 MB/sec [Average]
[info]   (min, avg, max) = (1.498, 4.873, 9.150), stdev = 3.590
[info]   CI (99.9%): [≈ 0, 18.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   90.904 ±(99.9%) 259.518 B/op [Average]
[info]   (min, avg, max) = (27.218, 90.904, 175.629), stdev = 67.396
[info]   CI (99.9%): [≈ 0, 350.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   162.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (22.000, 32.400, 47.000), stdev = 9.154
[info]   CI (99.9%): [162.000, 162.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14634.652 ops/s
[info] # Warmup Iteration   2: 76011.626 ops/s
[info] # Warmup Iteration   3: 111781.126 ops/s
[info] Iteration   1: 111592.660 ops/s
[info]                  ·gc.alloc.rate:                   2093.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              29531.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27526.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.576 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 119466.814 ops/s
[info]                  ·gc.alloc.rate:                   1937.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              25520.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25605.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.034 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 120238.348 ops/s
[info]                  ·gc.alloc.rate:                   1964.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              25710.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25546.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.362 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 121037.670 ops/s
[info]                  ·gc.alloc.rate:                   1962.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              25516.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25646.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.353 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 119040.476 ops/s
[info]                  ·gc.alloc.rate:                   1943.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              25698.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21951.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.550 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   118275.194 ±(99.9%) 14681.401 ops/s [Average]
[info]   (min, avg, max) = (111592.660, 118275.194, 121037.670), stdev = 3812.713
[info]   CI (99.9%): [103593.793, 132956.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1980.407 ±(99.9%) 248.564 MB/sec [Average]
[info]   (min, avg, max) = (1937.131, 1980.407, 2093.942), stdev = 64.551
[info]   CI (99.9%): [1731.843, 2228.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   26395.562 ±(99.9%) 6758.932 B/op [Average]
[info]   (min, avg, max) = (25516.637, 26395.562, 29531.056), stdev = 1755.273
[info]   CI (99.9%): [19636.630, 33154.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1896.075 ±(99.9%) 508.837 MB/sec [Average]
[info]   (min, avg, max) = (1660.465, 1896.075, 1972.549), stdev = 132.143
[info]   CI (99.9%): [1387.239, 2404.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   25255.413 ±(99.9%) 7804.773 B/op [Average]
[info]   (min, avg, max) = (21951.753, 25255.413, 27526.611), stdev = 2026.875
[info]   CI (99.9%): [17450.640, 33060.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.015 ±(99.9%) 7.242 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.015, 4.366), stdev = 1.881
[info]   CI (99.9%): [≈ 0, 8.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.175 ±(99.9%) 102.374 B/op [Average]
[info]   (min, avg, max) = (0.550, 14.175, 61.576), stdev = 26.586
[info]   CI (99.9%): [≈ 0, 116.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 16.000), stdev = 3.647
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24066.695 ops/s
[info] # Warmup Iteration   2: 114570.840 ops/s
[info] # Warmup Iteration   3: 196405.324 ops/s
[info] Iteration   1: 197765.037 ops/s
[info]                  ·gc.alloc.rate:                   839.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              6678.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7673.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 198605.906 ops/s
[info]                  ·gc.alloc.rate:                   833.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              6607.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5114.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 199556.925 ops/s
[info]                  ·gc.alloc.rate:                   851.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              6717.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7677.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.493 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 208376.225 ops/s
[info]                  ·gc.alloc.rate:                   873.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              6597.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4925.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.503 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 209751.585 ops/s
[info]                  ·gc.alloc.rate:                   888.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              6669.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7375.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   202811.135 ±(99.9%) 22193.628 ops/s [Average]
[info]   (min, avg, max) = (197765.037, 202811.135, 209751.585), stdev = 5763.615
[info]   CI (99.9%): [180617.507, 225004.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   857.515 ±(99.9%) 89.617 MB/sec [Average]
[info]   (min, avg, max) = (833.861, 857.515, 888.888), stdev = 23.273
[info]   CI (99.9%): [767.899, 947.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6654.145 ±(99.9%) 194.292 B/op [Average]
[info]   (min, avg, max) = (6597.752, 6654.145, 6717.370), stdev = 50.457
[info]   CI (99.9%): [6459.853, 6848.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   843.729 ±(99.9%) 685.511 MB/sec [Average]
[info]   (min, avg, max) = (645.498, 843.729, 982.996), stdev = 178.025
[info]   CI (99.9%): [158.218, 1529.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6553.350 ±(99.9%) 5415.758 B/op [Average]
[info]   (min, avg, max) = (4925.585, 6553.350, 7677.940), stdev = 1406.455
[info]   CI (99.9%): [1137.592, 11969.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.155 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.229, 0.729), stdev = 0.300
[info]   CI (99.9%): [≈ 0, 1.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.736 ±(99.9%) 8.692 B/op [Average]
[info]   (min, avg, max) = (0.165, 1.736, 5.503), stdev = 2.257
[info]   CI (99.9%): [≈ 0, 10.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45226.784 ops/s
[info] # Warmup Iteration   2: 208973.694 ops/s
[info] # Warmup Iteration   3: 254613.247 ops/s
[info] Iteration   1: 283456.863 ops/s
[info]                  ·gc.alloc.rate:                   1033.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              5737.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5444.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 282467.898 ops/s
[info]                  ·gc.alloc.rate:                   1034.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              5762.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5466.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.817 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 275932.445 ops/s
[info]                  ·gc.alloc.rate:                   1011.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              5766.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5569.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.749 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 278579.614 ops/s
[info]                  ·gc.alloc.rate:                   1015.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              5734.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5501.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.941 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 289262.607 ops/s
[info]                  ·gc.alloc.rate:               1051.211 MB/sec
[info]                  ·gc.alloc.rate.norm:          5718.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5307.644 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   281939.886 ±(99.9%) 19595.109 ops/s [Average]
[info]   (min, avg, max) = (275932.445, 281939.886, 289262.607), stdev = 5088.788
[info]   CI (99.9%): [262344.777, 301534.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1029.062 ±(99.9%) 62.498 MB/sec [Average]
[info]   (min, avg, max) = (1011.178, 1029.062, 1051.211), stdev = 16.231
[info]   CI (99.9%): [966.564, 1091.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5743.803 ±(99.9%) 77.259 B/op [Average]
[info]   (min, avg, max) = (5718.924, 5743.803, 5766.417), stdev = 20.064
[info]   CI (99.9%): [5666.544, 5821.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   977.664 ±(99.9%) 12.481 MB/sec [Average]
[info]   (min, avg, max) = (973.926, 977.664, 981.249), stdev = 3.241
[info]   CI (99.9%): [965.184, 990.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5458.103 ±(99.9%) 371.695 B/op [Average]
[info]   (min, avg, max) = (5307.644, 5458.103, 5569.792), stdev = 96.528
[info]   CI (99.9%): [5086.408, 5829.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.848 ±(99.9%) 5.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.848, 3.198), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 6.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.748 ±(99.9%) 29.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.748, 17.817), stdev = 7.554
[info]   CI (99.9%): [≈ 0, 33.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.782
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3916.688 ops/s
[info] # Warmup Iteration   2: 43580.420 ops/s
[info] # Warmup Iteration   3: 90391.115 ops/s
[info] Iteration   1: 85580.875 ops/s
[info]                  ·gc.alloc.rate:                   3011.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              55376.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2927.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53821.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.935 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 97007.010 ops/s
[info]                  ·gc.alloc.rate:                   3143.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              50992.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2949.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47849.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.214 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 98293.370 ops/s
[info]                  ·gc.alloc.rate:                   3180.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              50925.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2979.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47694.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.000 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 97745.567 ops/s
[info]                  ·gc.alloc.rate:                   3210.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              51693.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3350.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53938.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.341 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 98552.486 ops/s
[info]                  ·gc.alloc.rate:                   3224.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              51481.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3041.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48560.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.665 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   95435.862 ±(99.9%) 21335.722 ops/s [Average]
[info]   (min, avg, max) = (85580.875, 95435.862, 98552.486), stdev = 5540.819
[info]   CI (99.9%): [74100.139, 116771.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3154.097 ±(99.9%) 329.061 MB/sec [Average]
[info]   (min, avg, max) = (3011.672, 3154.097, 3224.033), stdev = 85.456
[info]   CI (99.9%): [2825.036, 3483.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52093.792 ±(99.9%) 7175.441 B/op [Average]
[info]   (min, avg, max) = (50925.213, 52093.792, 55376.361), stdev = 1863.439
[info]   CI (99.9%): [44918.350, 59269.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3049.377 ±(99.9%) 667.999 MB/sec [Average]
[info]   (min, avg, max) = (2927.085, 3049.377, 3350.106), stdev = 173.477
[info]   CI (99.9%): [2381.378, 3717.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50372.841 ±(99.9%) 12393.142 B/op [Average]
[info]   (min, avg, max) = (47694.544, 50372.841, 53938.962), stdev = 3218.460
[info]   CI (99.9%): [37979.699, 62765.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.636 ±(99.9%) 8.301 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.636, 4.082), stdev = 2.156
[info]   CI (99.9%): [≈ 0, 9.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   28.231 ±(99.9%) 143.785 B/op [Average]
[info]   (min, avg, max) = (0.665, 28.231, 71.935), stdev = 37.341
[info]   CI (99.9%): [≈ 0, 172.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.800, 22.000), stdev = 4.087
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62012.163 ops/s
[info] # Warmup Iteration   2: 227622.697 ops/s
[info] # Warmup Iteration   3: 237042.956 ops/s
[info] Iteration   1: 248571.837 ops/s
[info]                  ·gc.alloc.rate:                   1693.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              10721.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10265.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.497 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 253319.199 ops/s
[info]                  ·gc.alloc.rate:                   1730.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              10753.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1937.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12034.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.880 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.680 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 248705.785 ops/s
[info]                  ·gc.alloc.rate:                   1686.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              10672.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1615.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10220.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 251583.686 ops/s
[info]                  ·gc.alloc.rate:                   1718.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              10748.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10186.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 252897.493 ops/s
[info]                  ·gc.alloc.rate:               1741.729 MB/sec
[info]                  ·gc.alloc.rate.norm:          10834.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10241.951 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   251015.600 ±(99.9%) 8712.595 ops/s [Average]
[info]   (min, avg, max) = (248571.837, 251015.600, 253319.199), stdev = 2262.633
[info]   CI (99.9%): [242303.005, 259728.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1714.247 ±(99.9%) 91.157 MB/sec [Average]
[info]   (min, avg, max) = (1686.707, 1714.247, 1741.729), stdev = 23.673
[info]   CI (99.9%): [1623.090, 1805.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10746.068 ±(99.9%) 227.481 B/op [Average]
[info]   (min, avg, max) = (10672.339, 10746.068, 10834.669), stdev = 59.076
[info]   CI (99.9%): [10518.587, 10973.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1689.807 ±(99.9%) 534.503 MB/sec [Average]
[info]   (min, avg, max) = (1615.241, 1689.807, 1937.236), stdev = 138.809
[info]   CI (99.9%): [1155.304, 2224.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10589.966 ±(99.9%) 3112.545 B/op [Average]
[info]   (min, avg, max) = (10186.924, 10589.966, 12034.997), stdev = 808.318
[info]   CI (99.9%): [7477.421, 13702.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.257 ±(99.9%) 7.331 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.257, 4.343), stdev = 1.904
[info]   CI (99.9%): [≈ 0, 8.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.914 ±(99.9%) 46.346 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.914, 27.497), stdev = 12.036
[info]   CI (99.9%): [≈ 0, 54.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 18.000), stdev = 4.817
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118320.242 ops/s
[info] # Warmup Iteration   2: 602263.324 ops/s
[info] # Warmup Iteration   3: 717106.807 ops/s
[info] Iteration   1: 779059.617 ops/s
[info]                  ·gc.alloc.rate:                   416.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              841.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 782650.197 ops/s
[info]                  ·gc.alloc.rate:               423.165 MB/sec
[info]                  ·gc.alloc.rate.norm:          850.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 644.970 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 772863.365 ops/s
[info]                  ·gc.alloc.rate:                   429.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              874.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1307.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 775158.531 ops/s
[info]                  ·gc.alloc.rate:               421.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          855.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 652.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 777738.483 ops/s
[info]                  ·gc.alloc.rate:               421.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          853.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 653.095 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   777494.038 ±(99.9%) 14407.082 ops/s [Average]
[info]   (min, avg, max) = (772863.365, 777494.038, 782650.197), stdev = 3741.473
[info]   CI (99.9%): [763086.956, 791901.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   422.511 ±(99.9%) 17.768 MB/sec [Average]
[info]   (min, avg, max) = (416.675, 422.511, 429.511), stdev = 4.614
[info]   CI (99.9%): [404.743, 440.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   855.164 ±(99.9%) 46.457 B/op [Average]
[info]   (min, avg, max) = (841.695, 855.164, 874.574), stdev = 12.065
[info]   CI (99.9%): [808.707, 901.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   385.339 ±(99.9%) 552.911 MB/sec [Average]
[info]   (min, avg, max) = (319.427, 385.339, 642.191), stdev = 143.589
[info]   CI (99.9%): [≈ 0, 938.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   780.701 ±(99.9%) 1134.365 B/op [Average]
[info]   (min, avg, max) = (644.970, 780.701, 1307.636), stdev = 294.591
[info]   CI (99.9%): [≈ 0, 1915.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.085), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 215786.517 ops/s
[info] # Warmup Iteration   2: 675657.463 ops/s
[info] # Warmup Iteration   3: 752452.827 ops/s
[info] Iteration   1: 877306.472 ops/s
[info]                  ·gc.alloc.rate:                   469.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              842.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 878694.861 ops/s
[info]                  ·gc.alloc.rate:               480.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          860.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1173.386 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 866616.880 ops/s
[info]                  ·gc.alloc.rate:                   466.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              847.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     595.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 872825.278 ops/s
[info]                  ·gc.alloc.rate:                   472.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 834689.630 ops/s
[info]                  ·gc.alloc.rate:                   465.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1238.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   866026.624 ±(99.9%) 69852.222 ops/s [Average]
[info]   (min, avg, max) = (834689.630, 866026.624, 878694.861), stdev = 18140.400
[info]   CI (99.9%): [796174.402, 935878.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   470.913 ±(99.9%) 22.357 MB/sec [Average]
[info]   (min, avg, max) = (465.707, 470.913, 480.236), stdev = 5.806
[info]   CI (99.9%): [448.556, 493.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   855.909 ±(99.9%) 53.416 B/op [Average]
[info]   (min, avg, max) = (842.740, 855.909, 877.955), stdev = 13.872
[info]   CI (99.9%): [802.493, 909.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.129 ±(99.9%) 692.126 MB/sec [Average]
[info]   (min, avg, max) = (327.423, 459.129, 656.887), stdev = 179.743
[info]   CI (99.9%): [≈ 0, 1151.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   837.286 ±(99.9%) 1298.714 B/op [Average]
[info]   (min, avg, max) = (587.352, 837.286, 1238.371), stdev = 337.272
[info]   CI (99.9%): [≈ 0, 2136.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.064), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 348206.254 ops/s
[info] # Warmup Iteration   2: 735794.548 ops/s
[info] # Warmup Iteration   3: 894073.202 ops/s
[info] Iteration   1: 871439.496 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 873349.723 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 879325.336 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 879470.741 ops/s
[info]                  ·gc.alloc.rate:      0.848 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.518 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 873996.438 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   875516.347 ±(99.9%) 14118.102 ops/s [Average]
[info]   (min, avg, max) = (871439.496, 875516.347, 879470.741), stdev = 3666.426
[info]   CI (99.9%): [861398.245, 889634.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.170 ±(99.9%) 1.460 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.170, 0.848), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.304 ±(99.9%) 2.613 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.304, 1.518), stdev = 0.678
[info]   CI (99.9%): [≈ 0, 2.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6334.743 ops/s
[info] # Warmup Iteration   2: 20858.185 ops/s
[info] # Warmup Iteration   3: 34858.794 ops/s
[info] Iteration   1: 38559.961 ops/s
[info]                  ·gc.alloc.rate:                   1783.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              72758.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66067.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.211 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 36175.584 ops/s
[info]                  ·gc.alloc.rate:                   2084.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              90636.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2254.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98035.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160.864 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 35534.658 ops/s
[info]                  ·gc.alloc.rate:                   1842.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              81595.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71397.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.430 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 329.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 37617.692 ops/s
[info]                  ·gc.alloc.rate:                   1968.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              82368.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80971.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.613 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 36479.611 ops/s
[info]                  ·gc.alloc.rate:                   1923.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              82990.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84406.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.287 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   36873.501 ±(99.9%) 4649.844 ops/s [Average]
[info]   (min, avg, max) = (35534.658, 36873.501, 38559.961), stdev = 1207.550
[info]   CI (99.9%): [32223.657, 41523.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1920.474 ±(99.9%) 447.936 MB/sec [Average]
[info]   (min, avg, max) = (1783.072, 1920.474, 2084.157), stdev = 116.327
[info]   CI (99.9%): [1472.538, 2368.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   82070.009 ±(99.9%) 24448.039 B/op [Average]
[info]   (min, avg, max) = (72758.709, 82070.009, 90636.321), stdev = 6349.078
[info]   CI (99.9%): [57621.970, 106518.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1875.545 ±(99.9%) 1034.643 MB/sec [Average]
[info]   (min, avg, max) = (1612.135, 1875.545, 2254.309), stdev = 268.694
[info]   CI (99.9%): [840.901, 2910.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80176.037 ±(99.9%) 47692.220 B/op [Average]
[info]   (min, avg, max) = (66067.874, 80176.037, 98035.944), stdev = 12385.518
[info]   CI (99.9%): [32483.817, 127868.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.082 ±(99.9%) 11.869 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 3.082, 7.430), stdev = 3.082
[info]   CI (99.9%): [≈ 0, 14.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   133.004 ±(99.9%) 521.513 B/op [Average]
[info]   (min, avg, max) = (2.613, 133.004, 329.047), stdev = 135.435
[info]   CI (99.9%): [≈ 0, 654.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.800, 24.000), stdev = 6.611
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44096.368 ops/s
[info] # Warmup Iteration   2: 355307.513 ops/s
[info] # Warmup Iteration   3: 1008941.772 ops/s
[info] Iteration   1: 1129637.441 ops/s
[info]                  ·gc.alloc.rate:                   2597.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              3618.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2588.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3606.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.601 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 1138218.120 ops/s
[info]                  ·gc.alloc.rate:                   2605.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              3602.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2588.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3578.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1099036.635 ops/s
[info]                  ·gc.alloc.rate:                   2537.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              3633.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3278.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1141579.960 ops/s
[info]                  ·gc.alloc.rate:                   2653.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              3658.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2655.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3660.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1143522.876 ops/s
[info]                  ·gc.alloc.rate:                   2652.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              3650.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2685.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3695.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   1130399.006 ±(99.9%) 70545.818 ops/s [Average]
[info]   (min, avg, max) = (1099036.635, 1130399.006, 1143522.876), stdev = 18320.525
[info]   CI (99.9%): [1059853.188, 1200944.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2609.535 ±(99.9%) 184.416 MB/sec [Average]
[info]   (min, avg, max) = (2537.672, 2609.535, 2653.873), stdev = 47.892
[info]   CI (99.9%): [2425.119, 2793.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3632.886 ±(99.9%) 88.147 B/op [Average]
[info]   (min, avg, max) = (3602.629, 3632.886, 3658.492), stdev = 22.892
[info]   CI (99.9%): [3544.739, 3721.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2561.489 ±(99.9%) 608.156 MB/sec [Average]
[info]   (min, avg, max) = (2289.308, 2561.489, 2685.582), stdev = 157.936
[info]   CI (99.9%): [1953.333, 3169.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3563.945 ±(99.9%) 639.679 B/op [Average]
[info]   (min, avg, max) = (3278.204, 3563.945, 3695.697), stdev = 166.123
[info]   CI (99.9%): [2924.265, 4203.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 6.765 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.883, 4.021), stdev = 1.757
[info]   CI (99.9%): [≈ 0, 7.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.230 ±(99.9%) 9.426 B/op [Average]
[info]   (min, avg, max) = (0.029, 1.230, 5.601), stdev = 2.448
[info]   CI (99.9%): [≈ 0, 10.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.600, 23.000), stdev = 5.413
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2073.195 ops/s
[info] # Warmup Iteration   2: 1028803.584 ops/s
[info] # Warmup Iteration   3: 1704147.514 ops/s
[info] Iteration   1: 1837919.092 ops/s
[info]                  ·gc.alloc.rate:                   1155.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              988.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1111.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1869223.937 ops/s
[info]                  ·gc.alloc.rate:                   1158.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              975.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1854804.528 ops/s
[info]                  ·gc.alloc.rate:                   1159.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              983.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1114.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.272 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1863945.698 ops/s
[info]                  ·gc.alloc.rate:                   1161.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              980.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1869636.422 ops/s
[info]                  ·gc.alloc.rate:                   1163.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              979.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1859105.936 ±(99.9%) 51087.206 ops/s [Average]
[info]   (min, avg, max) = (1837919.092, 1859105.936, 1869636.422), stdev = 13267.185
[info]   CI (99.9%): [1808018.729, 1910193.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1159.501 ±(99.9%) 12.190 MB/sec [Average]
[info]   (min, avg, max) = (1155.111, 1159.501, 1163.687), stdev = 3.166
[info]   CI (99.9%): [1147.311, 1171.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   981.338 ±(99.9%) 19.277 B/op [Average]
[info]   (min, avg, max) = (975.445, 981.338, 988.849), stdev = 5.006
[info]   CI (99.9%): [962.061, 1000.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1113.881 ±(99.9%) 677.194 MB/sec [Average]
[info]   (min, avg, max) = (978.995, 1113.881, 1314.106), stdev = 175.865
[info]   CI (99.9%): [436.687, 1791.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   943.468 ±(99.9%) 596.724 B/op [Average]
[info]   (min, avg, max) = (824.211, 943.468, 1114.604), stdev = 154.967
[info]   CI (99.9%): [346.744, 1540.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.325 ±(99.9%) 2.529 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.325, 1.499), stdev = 0.657
[info]   CI (99.9%): [≈ 0, 2.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.275 ±(99.9%) 2.145 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.275, 1.272), stdev = 0.557
[info]   CI (99.9%): [≈ 0, 2.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.643
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2567744.256 ops/s
[info] # Warmup Iteration   2: 8274777.688 ops/s
[info] # Warmup Iteration   3: 9416732.851 ops/s
[info] Iteration   1: 9371846.362 ops/s
[info]                  ·gc.alloc.rate:               293.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42.955 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 9322663.210 ops/s
[info]                  ·gc.alloc.rate:               290.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55.552 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 9111240.173 ops/s
[info]                  ·gc.alloc.rate:      277.909 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 9061801.815 ops/s
[info]                  ·gc.alloc.rate:                   282.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 9083000.970 ops/s
[info]                  ·gc.alloc.rate:               289.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57.131 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   9190110.506 ±(99.9%) 560510.936 ops/s [Average]
[info]   (min, avg, max) = (9061801.815, 9190110.506, 9371846.362), stdev = 145562.910
[info]   CI (99.9%): [8629599.570, 9750621.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   286.898 ±(99.9%) 24.378 MB/sec [Average]
[info]   (min, avg, max) = (277.909, 286.898, 293.337), stdev = 6.331
[info]   CI (99.9%): [262.520, 311.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.129 ±(99.9%) 3.038 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.129, 50.220), stdev = 0.789
[info]   CI (99.9%): [46.091, 52.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   248.744 ±(99.9%) 549.287 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.744, 329.749), stdev = 142.648
[info]   CI (99.9%): [≈ 0, 798.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   42.557 ±(99.9%) 94.428 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 42.557, 57.149), stdev = 24.523
[info]   CI (99.9%): [≈ 0, 136.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1789.337 ops/s
[info] # Warmup Iteration   2: 193151.355 ops/s
[info] # Warmup Iteration   3: 462688.246 ops/s
[info] Iteration   1: 500674.935 ops/s
[info]                  ·gc.alloc.rate:                   2255.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              7088.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7206.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.506 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 511916.745 ops/s
[info]                  ·gc.alloc.rate:                   2299.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              7070.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7055.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 503522.244 ops/s
[info]                  ·gc.alloc.rate:               2275.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          7113.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1980.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6189.882 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 499252.580 ops/s
[info]                  ·gc.alloc.rate:                   2277.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              7180.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2333.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7354.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 503450.093 ops/s
[info]                  ·gc.alloc.rate:                   2296.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              7179.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6297.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   503763.319 ±(99.9%) 18915.195 ops/s [Average]
[info]   (min, avg, max) = (499252.580, 503763.319, 511916.745), stdev = 4912.216
[info]   CI (99.9%): [484848.124, 522678.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2281.132 ±(99.9%) 69.813 MB/sec [Average]
[info]   (min, avg, max) = (2255.085, 2281.132, 2299.844), stdev = 18.130
[info]   CI (99.9%): [2211.319, 2350.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7126.345 ±(99.9%) 198.160 B/op [Average]
[info]   (min, avg, max) = (7070.120, 7126.345, 7180.414), stdev = 51.461
[info]   CI (99.9%): [6928.185, 7324.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2183.235 ±(99.9%) 657.349 MB/sec [Average]
[info]   (min, avg, max) = (1980.502, 2183.235, 2333.252), stdev = 170.711
[info]   CI (99.9%): [1525.886, 2840.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   6820.828 ±(99.9%) 2074.692 B/op [Average]
[info]   (min, avg, max) = (6189.882, 6820.828, 7354.792), stdev = 538.791
[info]   CI (99.9%): [4746.136, 8895.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.591 ±(99.9%) 4.561 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.706), stdev = 1.185
[info]   CI (99.9%): [≈ 0, 5.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.856 ±(99.9%) 14.342 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.856, 8.506), stdev = 3.724
[info]   CI (99.9%): [≈ 0, 16.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.400, 18.000), stdev = 3.782
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37927.496 ops/s
[info] # Warmup Iteration   2: 1017559.507 ops/s
[info] # Warmup Iteration   3: 1637437.772 ops/s
[info] Iteration   1: 1857466.866 ops/s
[info]                  ·gc.alloc.rate:                   1915.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1622.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1637.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.962 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 1966872.194 ops/s
[info]                  ·gc.alloc.rate:                   2002.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              1602.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1923.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1539.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.949 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1976407.365 ops/s
[info]                  ·gc.alloc.rate:                   2020.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1538.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.822 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.655 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1952324.565 ops/s
[info]                  ·gc.alloc.rate:                   2023.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              1630.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1573.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1982372.876 ops/s
[info]                  ·gc.alloc.rate:                   2053.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              1630.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1947088.773 ±(99.9%) 197806.863 ops/s [Average]
[info]   (min, avg, max) = (1857466.866, 1947088.773, 1982372.876), stdev = 51369.814
[info]   CI (99.9%): [1749281.910, 2144895.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   2002.997 ±(99.9%) 202.122 MB/sec [Average]
[info]   (min, avg, max) = (1915.001, 2002.997, 2053.643), stdev = 52.490
[info]   CI (99.9%): [1800.875, 2205.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1618.877 ±(99.9%) 49.079 B/op [Average]
[info]   (min, avg, max) = (1602.380, 1618.877, 1630.706), stdev = 12.746
[info]   CI (99.9%): [1569.798, 1667.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1943.663 ±(99.9%) 81.686 MB/sec [Average]
[info]   (min, avg, max) = (1923.976, 1943.663, 1976.652), stdev = 21.214
[info]   CI (99.9%): [1861.978, 2025.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1571.653 ±(99.9%) 154.817 B/op [Average]
[info]   (min, avg, max) = (1538.525, 1571.653, 1637.361), stdev = 40.205
[info]   CI (99.9%): [1416.837, 1726.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.362 ±(99.9%) 7.379 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.362, 4.677), stdev = 1.916
[info]   CI (99.9%): [≈ 0, 8.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.133 ±(99.9%) 6.272 B/op [Average]
[info]   (min, avg, max) = (0.050, 1.133, 3.962), stdev = 1.629
[info]   CI (99.9%): [≈ 0, 7.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.400, 26.000), stdev = 7.570
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124219.472 ops/s
[info] # Warmup Iteration   2: 2478729.024 ops/s
[info] # Warmup Iteration   3: 3003489.995 ops/s
[info] Iteration   1: 3245158.595 ops/s
[info]                  ·gc.alloc.rate:                   1271.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              616.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     621.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3192072.041 ops/s
[info]                  ·gc.alloc.rate:                   1257.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              620.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3289173.876 ops/s
[info]                  ·gc.alloc.rate:                   1289.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              616.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3145692.266 ops/s
[info]                  ·gc.alloc.rate:                   1232.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              616.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     653.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3169429.560 ops/s
[info]                  ·gc.alloc.rate:               1246.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          618.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 490.036 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   3208305.268 ±(99.9%) 224472.444 ops/s [Average]
[info]   (min, avg, max) = (3145692.266, 3208305.268, 3289173.876), stdev = 58294.781
[info]   CI (99.9%): [2983832.824, 3432777.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1259.629 ±(99.9%) 84.448 MB/sec [Average]
[info]   (min, avg, max) = (1232.794, 1259.629, 1289.220), stdev = 21.931
[info]   CI (99.9%): [1175.180, 1344.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   617.870 ±(99.9%) 5.858 B/op [Average]
[info]   (min, avg, max) = (616.723, 617.870, 620.048), stdev = 1.521
[info]   CI (99.9%): [612.012, 623.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1231.604 ±(99.9%) 527.997 MB/sec [Average]
[info]   (min, avg, max) = (986.947, 1231.604, 1307.030), stdev = 137.119
[info]   CI (99.9%): [703.607, 1759.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   603.942 ±(99.9%) 250.642 B/op [Average]
[info]   (min, avg, max) = (490.036, 603.942, 653.860), stdev = 65.091
[info]   CI (99.9%): [353.300, 854.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.655 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.396), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.313 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.189), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 766829.037 ops/s
[info] # Warmup Iteration   2: 7671202.286 ops/s
[info] # Warmup Iteration   3: 8742037.802 ops/s
[info] Iteration   1: 8766484.926 ops/s
[info]                  ·gc.alloc.rate:                   739.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              132.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 9035421.547 ops/s
[info]                  ·gc.alloc.rate:               753.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          131.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.945 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 9061403.781 ops/s
[info]                  ·gc.alloc.rate:                   758.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8762749.330 ops/s
[info]                  ·gc.alloc.rate:               761.068 MB/sec
[info]                  ·gc.alloc.rate.norm:          136.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117.845 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 9087108.676 ops/s
[info]                  ·gc.alloc.rate:                   768.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              133.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.226 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.732 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   8942633.652 ±(99.9%) 629717.786 ops/s [Average]
[info]   (min, avg, max) = (8762749.330, 8942633.652, 9087108.676), stdev = 163535.709
[info]   CI (99.9%): [8312915.866, 9572351.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   756.316 ±(99.9%) 41.667 MB/sec [Average]
[info]   (min, avg, max) = (739.685, 756.316, 768.739), stdev = 10.821
[info]   CI (99.9%): [714.649, 797.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   133.109 ±(99.9%) 8.252 B/op [Average]
[info]   (min, avg, max) = (131.194, 133.109, 136.683), stdev = 2.143
[info]   CI (99.9%): [124.857, 141.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   785.996 ±(99.9%) 688.896 MB/sec [Average]
[info]   (min, avg, max) = (654.290, 785.996, 983.944), stdev = 178.904
[info]   CI (99.9%): [97.100, 1474.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   138.389 ±(99.9%) 122.600 B/op [Average]
[info]   (min, avg, max) = (113.843, 138.389, 175.915), stdev = 31.839
[info]   CI (99.9%): [15.789, 260.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 7.241 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 4.226), stdev = 1.880
[info]   CI (99.9%): [≈ 0, 8.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.149 ±(99.9%) 1.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.149, 0.732), stdev = 0.326
[info]   CI (99.9%): [≈ 0, 1.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 11.000), stdev = 1.732
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 820653.087 ops/s
[info] # Warmup Iteration   2: 7622848.232 ops/s
[info] # Warmup Iteration   3: 8631090.527 ops/s
[info] Iteration   1: 8942438.700 ops/s
[info]                  ·gc.alloc.rate:                   279.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8959301.540 ops/s
[info]                  ·gc.alloc.rate:               282.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57.453 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 8923165.582 ops/s
[info]                  ·gc.alloc.rate:                   282.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 8959231.302 ops/s
[info]                  ·gc.alloc.rate:      273.268 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 8878369.884 ops/s
[info]                  ·gc.alloc.rate:               277.199 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.036 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   8932501.402 ±(99.9%) 129853.849 ops/s [Average]
[info]   (min, avg, max) = (8878369.884, 8932501.402, 8959301.540), stdev = 33722.632
[info]   CI (99.9%): [8802647.553, 9062355.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   279.003 ±(99.9%) 15.339 MB/sec [Average]
[info]   (min, avg, max) = (273.268, 279.003, 282.729), stdev = 3.984
[info]   CI (99.9%): [263.664, 294.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   49.155 ±(99.9%) 2.780 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.155, 49.864), stdev = 0.722
[info]   CI (99.9%): [46.375, 51.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   247.479 ±(99.9%) 545.852 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.479, 327.424), stdev = 141.756
[info]   CI (99.9%): [≈ 0, 793.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   43.639 ±(99.9%) 96.298 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43.639, 58.036), stdev = 25.008
[info]   CI (99.9%): [≈ 0, 139.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.117 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.065), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7303.544 ops/s
[info] # Warmup Iteration   2: 186106.073 ops/s
[info] # Warmup Iteration   3: 471374.916 ops/s
[info] Iteration   1: 526751.486 ops/s
[info]                  ·gc.alloc.rate:                   2720.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              8126.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2617.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7819.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.965 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 534063.967 ops/s
[info]                  ·gc.alloc.rate:                   2707.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              7976.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2625.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7735.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 523671.795 ops/s
[info]                  ·gc.alloc.rate:                   2684.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2655.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7979.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 518633.633 ops/s
[info]                  ·gc.alloc.rate:                   2666.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              8090.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7119.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 522243.053 ops/s
[info]                  ·gc.alloc.rate:                   2706.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              8154.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8133.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   525072.787 ±(99.9%) 22377.860 ops/s [Average]
[info]   (min, avg, max) = (518633.633, 525072.787, 534063.967), stdev = 5811.459
[info]   CI (99.9%): [502694.926, 547450.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2696.727 ±(99.9%) 82.461 MB/sec [Average]
[info]   (min, avg, max) = (2666.231, 2696.727, 2720.118), stdev = 21.415
[info]   CI (99.9%): [2614.266, 2779.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8082.439 ±(99.9%) 264.007 B/op [Average]
[info]   (min, avg, max) = (7976.084, 8082.439, 8154.301), stdev = 68.562
[info]   CI (99.9%): [7818.432, 8346.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2588.893 ±(99.9%) 536.645 MB/sec [Average]
[info]   (min, avg, max) = (2346.282, 2588.893, 2699.310), stdev = 139.365
[info]   CI (99.9%): [2052.248, 3125.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7757.822 ±(99.9%) 1494.477 B/op [Average]
[info]   (min, avg, max) = (7119.501, 7757.822, 8133.927), stdev = 388.111
[info]   CI (99.9%): [6263.345, 9252.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.633 ±(99.9%) 5.096 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.633, 3.001), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 5.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.892 ±(99.9%) 15.226 B/op [Average]
[info]   (min, avg, max) = (0.063, 1.892, 8.965), stdev = 3.954
[info]   CI (99.9%): [≈ 0, 17.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.800, 17.000), stdev = 2.588
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10446.906 ops/s
[info] # Warmup Iteration   2: 71973.122 ops/s
[info] # Warmup Iteration   3: 90044.916 ops/s
[info] Iteration   1: 87678.668 ops/s
[info]                  ·gc.alloc.rate:                   2729.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              48979.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2839.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50962.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.569 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.901 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   2: 94286.898 ops/s
[info]                  ·gc.alloc.rate:                   2607.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              43517.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2451.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40919.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127.403 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   3: 94974.352 ops/s
[info]                  ·gc.alloc.rate:                   2641.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              43768.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2514.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41669.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.732 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   4: 96056.520 ops/s
[info]                  ·gc.alloc.rate:                   2681.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              43923.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2512.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41167.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.682 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 95179.026 ops/s
[info]                  ·gc.alloc.rate:                   2665.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              44072.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2567.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42451.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.688 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   93635.093 ±(99.9%) 13050.288 ops/s [Average]
[info]   (min, avg, max) = (87678.668, 93635.093, 96056.520), stdev = 3389.118
[info]   CI (99.9%): [80584.804, 106685.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2664.899 ±(99.9%) 175.007 MB/sec [Average]
[info]   (min, avg, max) = (2607.178, 2664.899, 2729.123), stdev = 45.449
[info]   CI (99.9%): [2489.892, 2839.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   44852.282 ±(99.9%) 8918.552 B/op [Average]
[info]   (min, avg, max) = (43517.832, 44852.282, 48979.190), stdev = 2316.120
[info]   CI (99.9%): [35933.730, 53770.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2577.273 ±(99.9%) 586.466 MB/sec [Average]
[info]   (min, avg, max) = (2451.491, 2577.273, 2839.618), stdev = 152.303
[info]   CI (99.9%): [1990.807, 3163.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   43433.978 ±(99.9%) 16361.185 B/op [Average]
[info]   (min, avg, max) = (40919.171, 43433.978, 50962.231), stdev = 4248.948
[info]   CI (99.9%): [27072.793, 59795.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.314 ±(99.9%) 15.092 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 4.314, 7.633), stdev = 3.919
[info]   CI (99.9%): [≈ 0, 19.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   73.481 ±(99.9%) 256.233 B/op [Average]
[info]   (min, avg, max) = (0.682, 73.481, 127.403), stdev = 66.543
[info]   CI (99.9%): [≈ 0, 329.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   142.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 28.400, 44.000), stdev = 14.450
[info]   CI (99.9%): [142.000, 142.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16729.403 ops/s
[info] # Warmup Iteration   2: 91149.568 ops/s
[info] # Warmup Iteration   3: 125731.501 ops/s
[info] Iteration   1: 141447.449 ops/s
[info]                  ·gc.alloc.rate:                   2247.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              24993.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25444.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.654 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 141551.090 ops/s
[info]                  ·gc.alloc.rate:                   2216.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              24646.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25656.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.777 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 139315.999 ops/s
[info]                  ·gc.alloc.rate:               2177.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          24598.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1995.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22537.642 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 141683.327 ops/s
[info]                  ·gc.alloc.rate:                   2241.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              24892.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22323.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 141650.026 ops/s
[info]                  ·gc.alloc.rate:                   2261.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              25121.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26215.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   141129.578 ±(99.9%) 3919.951 ops/s [Average]
[info]   (min, avg, max) = (139315.999, 141129.578, 141683.327), stdev = 1017.999
[info]   CI (99.9%): [137209.627, 145049.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2228.809 ±(99.9%) 126.031 MB/sec [Average]
[info]   (min, avg, max) = (2177.691, 2228.809, 2261.081), stdev = 32.730
[info]   CI (99.9%): [2102.777, 2354.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24850.610 ±(99.9%) 862.597 B/op [Average]
[info]   (min, avg, max) = (24598.953, 24850.610, 25121.453), stdev = 224.014
[info]   CI (99.9%): [23988.013, 25713.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2192.029 ±(99.9%) 674.079 MB/sec [Average]
[info]   (min, avg, max) = (1995.207, 2192.029, 2359.569), stdev = 175.056
[info]   CI (99.9%): [1517.951, 2866.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24435.570 ±(99.9%) 7136.790 B/op [Average]
[info]   (min, avg, max) = (22323.509, 24435.570, 26215.695), stdev = 1853.402
[info]   CI (99.9%): [17298.779, 31572.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.258 ±(99.9%) 1.552 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.258, 0.958), stdev = 0.403
[info]   CI (99.9%): [≈ 0, 1.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.871 ±(99.9%) 17.267 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.871, 10.654), stdev = 4.484
[info]   CI (99.9%): [≈ 0, 20.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25737.160 ops/s
[info] # Warmup Iteration   2: 98351.063 ops/s
[info] # Warmup Iteration   3: 167453.879 ops/s
[info] Iteration   1: 169542.603 ops/s
[info]                  ·gc.alloc.rate:                   2562.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              23787.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2576.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23910.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.990 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 175309.835 ops/s
[info]                  ·gc.alloc.rate:                   2628.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              23593.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20308.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.950 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.433 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 175107.696 ops/s
[info]                  ·gc.alloc.rate:                   2662.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              23930.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2578.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23169.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 176123.748 ops/s
[info]                  ·gc.alloc.rate:                   2691.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              24050.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23358.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.744 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 173892.418 ops/s
[info]                  ·gc.alloc.rate:                   2649.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              23973.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2655.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24030.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.942 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   173995.260 ±(99.9%) 10065.736 ops/s [Average]
[info]   (min, avg, max) = (169542.603, 173995.260, 176123.748), stdev = 2614.040
[info]   CI (99.9%): [163929.524, 184060.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2638.908 ±(99.9%) 186.283 MB/sec [Average]
[info]   (min, avg, max) = (2562.757, 2638.908, 2691.607), stdev = 48.377
[info]   CI (99.9%): [2452.626, 2825.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23866.870 ±(99.9%) 695.007 B/op [Average]
[info]   (min, avg, max) = (23593.160, 23866.870, 24050.306), stdev = 180.491
[info]   CI (99.9%): [23171.864, 24561.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2537.224 ±(99.9%) 604.509 MB/sec [Average]
[info]   (min, avg, max) = (2262.421, 2537.224, 2655.430), stdev = 156.989
[info]   CI (99.9%): [1932.715, 3141.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   22955.459 ±(99.9%) 5865.253 B/op [Average]
[info]   (min, avg, max) = (20308.793, 22955.459, 24030.495), stdev = 1523.188
[info]   CI (99.9%): [17090.206, 28820.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.169 ±(99.9%) 8.193 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.169, 4.950), stdev = 2.128
[info]   CI (99.9%): [≈ 0, 9.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.534 ±(99.9%) 73.494 B/op [Average]
[info]   (min, avg, max) = (0.561, 10.534, 44.433), stdev = 19.086
[info]   CI (99.9%): [≈ 0, 84.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   86.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 17.200, 32.000), stdev = 8.871
[info]   CI (99.9%): [86.000, 86.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4509.044 ops/s
[info] # Warmup Iteration   2: 45473.883 ops/s
[info] # Warmup Iteration   3: 76712.620 ops/s
[info] Iteration   1: 83893.010 ops/s
[info]                  ·gc.alloc.rate:                   3766.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              70608.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3939.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73855.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.802 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 87177.995 ops/s
[info]                  ·gc.alloc.rate:                   3814.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              68859.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3654.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65959.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.879 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 88220.567 ops/s
[info]                  ·gc.alloc.rate:                   3872.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              69052.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3701.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66005.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 85449.008 ops/s
[info]                  ·gc.alloc.rate:                   3747.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              69009.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3724.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68598.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.150 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 86934.037 ops/s
[info]                  ·gc.alloc.rate:               3857.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          69828.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3736.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67643.451 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   86334.924 ±(99.9%) 6492.974 ops/s [Average]
[info]   (min, avg, max) = (83893.010, 86334.924, 88220.567), stdev = 1686.205
[info]   CI (99.9%): [79841.950, 92827.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3811.512 ±(99.9%) 210.750 MB/sec [Average]
[info]   (min, avg, max) = (3747.281, 3811.512, 3872.076), stdev = 54.731
[info]   CI (99.9%): [3600.762, 4022.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69471.663 ±(99.9%) 2844.987 B/op [Average]
[info]   (min, avg, max) = (68859.394, 69471.663, 70608.527), stdev = 738.834
[info]   CI (99.9%): [66626.675, 72316.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3751.253 ±(99.9%) 422.705 MB/sec [Average]
[info]   (min, avg, max) = (3654.034, 3751.253, 3939.260), stdev = 109.775
[info]   CI (99.9%): [3328.547, 4173.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68412.649 ±(99.9%) 12486.970 B/op [Average]
[info]   (min, avg, max) = (65959.899, 68412.649, 73855.691), stdev = 3242.827
[info]   CI (99.9%): [55925.679, 80899.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.771 ±(99.9%) 6.241 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.771, 3.670), stdev = 1.621
[info]   CI (99.9%): [≈ 0, 7.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   14.441 ±(99.9%) 117.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.441, 68.802), stdev = 30.398
[info]   CI (99.9%): [≈ 0, 131.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   56.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.200, 12.000), stdev = 0.447
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.000, 19.000), stdev = 1.732
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57138.399 ops/s
[info] # Warmup Iteration   2: 214854.602 ops/s
[info] # Warmup Iteration   3: 234226.736 ops/s
[info] Iteration   1: 255591.487 ops/s
[info]                  ·gc.alloc.rate:                   1757.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              10820.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10073.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.789 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 258148.939 ops/s
[info]                  ·gc.alloc.rate:                   1764.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              10757.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9899.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.888 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 254043.950 ops/s
[info]                  ·gc.alloc.rate:                   1741.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              10786.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12116.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 255913.390 ops/s
[info]                  ·gc.alloc.rate:                   1767.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              10863.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10116.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 255026.270 ops/s
[info]                  ·gc.alloc.rate:               1768.211 MB/sec
[info]                  ·gc.alloc.rate.norm:          10911.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1660.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10246.584 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   255744.807 ±(99.9%) 5852.785 ops/s [Average]
[info]   (min, avg, max) = (254043.950, 255744.807, 258148.939), stdev = 1519.950
[info]   CI (99.9%): [249892.022, 261597.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1759.706 ±(99.9%) 42.759 MB/sec [Average]
[info]   (min, avg, max) = (1741.335, 1759.706, 1768.211), stdev = 11.104
[info]   CI (99.9%): [1716.947, 1802.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10827.881 ±(99.9%) 236.367 B/op [Average]
[info]   (min, avg, max) = (10757.125, 10827.881, 10911.693), stdev = 61.384
[info]   CI (99.9%): [10591.514, 11064.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1704.415 ±(99.9%) 544.129 MB/sec [Average]
[info]   (min, avg, max) = (1623.914, 1704.415, 1956.064), stdev = 141.309
[info]   CI (99.9%): [1160.286, 2248.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10490.690 ±(99.9%) 3532.633 B/op [Average]
[info]   (min, avg, max) = (9899.698, 10490.690, 12116.731), stdev = 917.414
[info]   CI (99.9%): [6958.057, 14023.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.406 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.351), stdev = 1.923
[info]   CI (99.9%): [≈ 0, 8.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.612 ±(99.9%) 45.603 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.612, 26.789), stdev = 11.843
[info]   CI (99.9%): [≈ 0, 51.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 15.000), stdev = 3.347
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111448.146 ops/s
[info] # Warmup Iteration   2: 678172.144 ops/s
[info] # Warmup Iteration   3: 730295.548 ops/s
[info] Iteration   1: 793703.438 ops/s
[info]                  ·gc.alloc.rate:                   472.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              937.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.523 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 796368.921 ops/s
[info]                  ·gc.alloc.rate:               471.247 MB/sec
[info]                  ·gc.alloc.rate.norm:          931.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 632.535 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 801010.557 ops/s
[info]                  ·gc.alloc.rate:                   481.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1262.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 811978.017 ops/s
[info]                  ·gc.alloc.rate:               481.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          932.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 625.571 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 809434.625 ops/s
[info]                  ·gc.alloc.rate:                   494.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              961.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   802499.112 ±(99.9%) 30751.551 ops/s [Average]
[info]   (min, avg, max) = (793703.438, 802499.112, 811978.017), stdev = 7986.080
[info]   CI (99.9%): [771747.560, 833250.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   480.398 ±(99.9%) 35.909 MB/sec [Average]
[info]   (min, avg, max) = (471.247, 480.398, 494.768), stdev = 9.326
[info]   CI (99.9%): [444.489, 516.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   941.985 ±(99.9%) 48.641 B/op [Average]
[info]   (min, avg, max) = (931.169, 941.985, 961.891), stdev = 12.632
[info]   CI (99.9%): [893.344, 990.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   514.313 ±(99.9%) 678.075 MB/sec [Average]
[info]   (min, avg, max) = (320.114, 514.313, 646.870), stdev = 176.094
[info]   CI (99.9%): [≈ 0, 1192.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1009.079 ±(99.9%) 1335.937 B/op [Average]
[info]   (min, avg, max) = (625.571, 1009.079, 1266.694), stdev = 346.939
[info]   CI (99.9%): [≈ 0, 2345.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.117 ±(99.9%) 0.876 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.523), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 0.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 1.737 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 1.036), stdev = 0.451
[info]   CI (99.9%): [≈ 0, 1.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 216806.417 ops/s
[info] # Warmup Iteration   2: 664050.566 ops/s
[info] # Warmup Iteration   3: 818497.665 ops/s
[info] Iteration   1: 806407.143 ops/s
[info]                  ·gc.alloc.rate:                   443.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              865.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1279.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 817597.625 ops/s
[info]                  ·gc.alloc.rate:               447.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          860.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 630.857 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 819507.583 ops/s
[info]                  ·gc.alloc.rate:                   449.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 773339.540 ops/s
[info]                  ·gc.alloc.rate:               438.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          892.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1333.923 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 776508.869 ops/s
[info]                  ·gc.alloc.rate:                   428.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              867.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     664.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   798672.152 ±(99.9%) 85781.058 ops/s [Average]
[info]   (min, avg, max) = (773339.540, 798672.152, 819507.583), stdev = 22277.068
[info]   CI (99.9%): [712891.094, 884453.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   441.401 ±(99.9%) 32.555 MB/sec [Average]
[info]   (min, avg, max) = (428.188, 441.401, 449.360), stdev = 8.454
[info]   CI (99.9%): [408.846, 473.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   869.928 ±(99.9%) 49.376 B/op [Average]
[info]   (min, avg, max) = (860.785, 869.928, 892.360), stdev = 12.823
[info]   CI (99.9%): [820.552, 919.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   458.872 ±(99.9%) 691.246 MB/sec [Average]
[info]   (min, avg, max) = (327.752, 458.872, 655.521), stdev = 179.514
[info]   CI (99.9%): [≈ 0, 1150.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   907.538 ±(99.9%) 1405.737 B/op [Average]
[info]   (min, avg, max) = (629.390, 907.538, 1333.923), stdev = 365.066
[info]   CI (99.9%): [≈ 0, 2313.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.096 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.060), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.184 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.115), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 2.490
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259429.375 ops/s
[info] # Warmup Iteration   2: 645061.024 ops/s
[info] # Warmup Iteration   3: 836627.027 ops/s
[info] Iteration   1: 837244.457 ops/s
[info]                  ·gc.alloc.rate:      8.513 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 837078.312 ops/s
[info]                  ·gc.alloc.rate:      13.442 MB/sec
[info]                  ·gc.alloc.rate.norm: 25.272 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 837339.902 ops/s
[info]                  ·gc.alloc.rate:      8.514 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 827474.036 ops/s
[info]                  ·gc.alloc.rate:      18.599 MB/sec
[info]                  ·gc.alloc.rate.norm: 35.373 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 837412.682 ops/s
[info]                  ·gc.alloc.rate:      8.514 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   835309.877 ±(99.9%) 16874.122 ops/s [Average]
[info]   (min, avg, max) = (827474.036, 835309.877, 837412.682), stdev = 4382.156
[info]   CI (99.9%): [818435.756, 852183.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   11.516 ±(99.9%) 17.320 MB/sec [Average]
[info]   (min, avg, max) = (8.513, 11.516, 18.599), stdev = 4.498
[info]   CI (99.9%): [≈ 0, 28.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   21.729 ±(99.9%) 33.188 B/op [Average]
[info]   (min, avg, max) = (16.001, 21.729, 35.373), stdev = 8.619
[info]   CI (99.9%): [≈ 0, 54.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4492.889 ops/s
[info] # Warmup Iteration   2: 23671.971 ops/s
[info] # Warmup Iteration   3: 32430.639 ops/s
[info] Iteration   1: 36988.020 ops/s
[info]                  ·gc.alloc.rate:                   1694.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              72107.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1569.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66790.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.642 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 35109.050 ops/s
[info]                  ·gc.alloc.rate:                   1948.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              87310.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1894.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84875.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 314.321 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 39048.633 ops/s
[info]                  ·gc.alloc.rate:                   1877.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              75656.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1879.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75747.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.830 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 38045.188 ops/s
[info]                  ·gc.alloc.rate:                   1863.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              77094.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1899.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78561.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.301 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 38927.680 ops/s
[info]                  ·gc.alloc.rate:                   1774.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              71758.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65059.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.842 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   37623.714 ±(99.9%) 6279.030 ops/s [Average]
[info]   (min, avg, max) = (35109.050, 37623.714, 39048.633), stdev = 1630.644
[info]   CI (99.9%): [31344.684, 43902.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1831.847 ±(99.9%) 378.664 MB/sec [Average]
[info]   (min, avg, max) = (1694.872, 1831.847, 1948.421), stdev = 98.338
[info]   CI (99.9%): [1453.183, 2210.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76785.617 ±(99.9%) 24300.431 B/op [Average]
[info]   (min, avg, max) = (71758.952, 76785.617, 87310.813), stdev = 6310.745
[info]   CI (99.9%): [52485.185, 101086.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1770.387 ±(99.9%) 638.587 MB/sec [Average]
[info]   (min, avg, max) = (1569.887, 1770.387, 1899.251), stdev = 165.839
[info]   CI (99.9%): [1131.800, 2408.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   74206.883 ±(99.9%) 31860.269 B/op [Average]
[info]   (min, avg, max) = (65059.601, 74206.883, 84875.624), stdev = 8274.011
[info]   CI (99.9%): [42346.614, 106067.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.409 ±(99.9%) 10.318 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.409, 7.014), stdev = 2.679
[info]   CI (99.9%): [≈ 0, 12.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   104.587 ±(99.9%) 466.959 B/op [Average]
[info]   (min, avg, max) = (0.842, 104.587, 314.321), stdev = 121.268
[info]   CI (99.9%): [≈ 0, 571.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 14.600, 24.000), stdev = 7.797
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 874934.928 ops/s
[info] # Warmup Iteration   2: 3360787.465 ops/s
[info] # Warmup Iteration   3: 3726172.720 ops/s
[info] Iteration   1: 4231492.916 ops/s
[info]                  ·gc.alloc.rate:                   3262.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              1213.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3261.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1212.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.821 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 4284737.336 ops/s
[info]                  ·gc.alloc.rate:                   3327.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              1222.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2957.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1086.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4245744.419 ops/s
[info]                  ·gc.alloc.rate:                   3326.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              1233.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3330.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1234.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 4213304.026 ops/s
[info]                  ·gc.alloc.rate:                   3298.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3029.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1131.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 4250145.648 ops/s
[info]                  ·gc.alloc.rate:                   3331.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              1233.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1253.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   4245084.869 ±(99.9%) 101753.362 ops/s [Average]
[info]   (min, avg, max) = (4213304.026, 4245084.869, 4284737.336), stdev = 26425.025
[info]   CI (99.9%): [4143331.507, 4346838.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3309.529 ±(99.9%) 112.944 MB/sec [Average]
[info]   (min, avg, max) = (3262.641, 3309.529, 3331.851), stdev = 29.331
[info]   CI (99.9%): [3196.585, 3422.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1226.775 ±(99.9%) 34.244 B/op [Average]
[info]   (min, avg, max) = (1213.229, 1226.775, 1233.357), stdev = 8.893
[info]   CI (99.9%): [1192.532, 1261.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3192.926 ±(99.9%) 728.772 MB/sec [Average]
[info]   (min, avg, max) = (2957.313, 3192.926, 3386.424), stdev = 189.260
[info]   CI (99.9%): [2464.154, 3921.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1183.648 ±(99.9%) 275.962 B/op [Average]
[info]   (min, avg, max) = (1086.112, 1183.648, 1253.558), stdev = 71.666
[info]   CI (99.9%): [907.686, 1459.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.410 ±(99.9%) 3.038 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.410, 1.821), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.130 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.152, 0.677), stdev = 0.293
[info]   CI (99.9%): [≈ 0, 1.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.400, 19.000), stdev = 3.209
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.739 ops/s
[info] # Warmup Iteration   2: 4727257.354 ops/s
[info] # Warmup Iteration   3: 5813340.373 ops/s
[info] Iteration   1: 5842221.064 ops/s
[info]                  ·gc.alloc.rate:                   1132.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 5893448.437 ops/s
[info]                  ·gc.alloc.rate:                   1151.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 5831668.048 ops/s
[info]                  ·gc.alloc.rate:                   1125.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.089 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5845237.247 ops/s
[info]                  ·gc.alloc.rate:               1125.780 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      974.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 262.225 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 5860851.448 ops/s
[info]                  ·gc.alloc.rate:                   1141.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   5854685.249 ±(99.9%) 92636.181 ops/s [Average]
[info]   (min, avg, max) = (5831668.048, 5854685.249, 5893448.437), stdev = 24057.322
[info]   CI (99.9%): [5762049.068, 5947321.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1135.283 ±(99.9%) 43.338 MB/sec [Average]
[info]   (min, avg, max) = (1125.258, 1135.283, 1151.834), stdev = 11.255
[info]   CI (99.9%): [1091.945, 1178.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.134 ±(99.9%) 7.261 B/op [Average]
[info]   (min, avg, max) = (303.003, 305.134, 307.562), stdev = 1.886
[info]   CI (99.9%): [297.872, 312.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1105.119 ±(99.9%) 686.471 MB/sec [Average]
[info]   (min, avg, max) = (972.547, 1105.119, 1301.720), stdev = 178.274
[info]   CI (99.9%): [418.648, 1791.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   296.903 ±(99.9%) 180.340 B/op [Average]
[info]   (min, avg, max) = (261.981, 296.903, 348.812), stdev = 46.834
[info]   CI (99.9%): [116.563, 477.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.838 ±(99.9%) 6.881 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.838, 4.034), stdev = 1.787
[info]   CI (99.9%): [≈ 0, 7.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.226 ±(99.9%) 1.857 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.226, 1.089), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 2.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 758481.407 ops/s
[info] # Warmup Iteration   2: 4154071.985 ops/s
[info] # Warmup Iteration   3: 5140646.155 ops/s
[info] Iteration   1: 5153237.412 ops/s
[info]                  ·gc.alloc.rate:                   1050.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4969327.782 ops/s
[info]                  ·gc.alloc.rate:                   1049.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              332.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 5216659.589 ops/s
[info]                  ·gc.alloc.rate:                   1062.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5196999.769 ops/s
[info]                  ·gc.alloc.rate:                   1052.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5210244.813 ops/s
[info]                  ·gc.alloc.rate:                   1058.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              319.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   5149293.873 ±(99.9%) 398929.103 ops/s [Average]
[info]   (min, avg, max) = (4969327.782, 5149293.873, 5216659.589), stdev = 103600.621
[info]   CI (99.9%): [4750364.770, 5548222.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1055.010 ±(99.9%) 21.273 MB/sec [Average]
[info]   (min, avg, max) = (1049.911, 1055.010, 1062.933), stdev = 5.525
[info]   CI (99.9%): [1033.737, 1076.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   322.484 ±(99.9%) 21.499 B/op [Average]
[info]   (min, avg, max) = (318.814, 322.484, 332.358), stdev = 5.583
[info]   CI (99.9%): [300.985, 343.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1041.006 ±(99.9%) 569.363 MB/sec [Average]
[info]   (min, avg, max) = (972.628, 1041.006, 1305.480), stdev = 147.862
[info]   CI (99.9%): [471.643, 1610.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   318.942 ±(99.9%) 203.142 B/op [Average]
[info]   (min, avg, max) = (293.769, 318.942, 413.260), stdev = 52.755
[info]   CI (99.9%): [115.800, 522.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.978 ±(99.9%) 6.324 MB/sec [Average]
[info]   (min, avg, max) = (0.029, 0.978, 3.842), stdev = 1.642
[info]   CI (99.9%): [≈ 0, 7.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 2.004 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.307, 1.216), stdev = 0.520
[info]   CI (99.9%): [≈ 0, 2.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 16.000), stdev = 5.167
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3035985.271 ops/s
[info] # Warmup Iteration   2: 5477177.530 ops/s
[info] # Warmup Iteration   3: 6434910.637 ops/s
[info] Iteration   1: 6194889.541 ops/s
[info]                  ·gc.alloc.rate:                   1253.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 6559796.924 ops/s
[info]                  ·gc.alloc.rate:                   1275.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.862 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6474218.853 ops/s
[info]                  ·gc.alloc.rate:                   1252.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6666615.074 ops/s
[info]                  ·gc.alloc.rate:                   1279.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6676611.192 ops/s
[info]                  ·gc.alloc.rate:                   1288.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6514426.317 ±(99.9%) 758596.975 ops/s [Average]
[info]   (min, avg, max) = (6194889.541, 6514426.317, 6676611.192), stdev = 197005.225
[info]   CI (99.9%): [5755829.342, 7273023.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1269.904 ±(99.9%) 62.109 MB/sec [Average]
[info]   (min, avg, max) = (1252.764, 1269.904, 1288.434), stdev = 16.130
[info]   CI (99.9%): [1207.794, 1332.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.915 ±(99.9%) 25.192 B/op [Average]
[info]   (min, avg, max) = (302.162, 306.915, 318.369), stdev = 6.542
[info]   CI (99.9%): [281.723, 332.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1247.673 ±(99.9%) 573.533 MB/sec [Average]
[info]   (min, avg, max) = (981.294, 1247.673, 1317.655), stdev = 148.945
[info]   CI (99.9%): [674.139, 1821.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   302.007 ±(99.9%) 155.587 B/op [Average]
[info]   (min, avg, max) = (231.649, 302.007, 334.564), stdev = 40.405
[info]   CI (99.9%): [146.420, 457.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.856 ±(99.9%) 5.970 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.856, 3.594), stdev = 1.551
[info]   CI (99.9%): [≈ 0, 6.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.206 ±(99.9%) 1.432 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.206, 0.862), stdev = 0.372
[info]   CI (99.9%): [≈ 0, 1.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 15.000), stdev = 4.658
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1050458.364 ops/s
[info] # Warmup Iteration   2: 5486686.530 ops/s
[info] # Warmup Iteration   3: 5337346.328 ops/s
[info] Iteration   1: 5228596.217 ops/s
[info]                  ·gc.alloc.rate:                   1015.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 5211437.838 ops/s
[info]                  ·gc.alloc.rate:                   1005.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5354729.227 ops/s
[info]                  ·gc.alloc.rate:                   1034.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5319431.258 ops/s
[info]                  ·gc.alloc.rate:                   1035.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5459469.718 ops/s
[info]                  ·gc.alloc.rate:                   1056.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5314732.852 ±(99.9%) 388227.820 ops/s [Average]
[info]   (min, avg, max) = (5211437.838, 5314732.852, 5459469.718), stdev = 100821.532
[info]   CI (99.9%): [4926505.031, 5702960.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1029.498 ±(99.9%) 76.426 MB/sec [Average]
[info]   (min, avg, max) = (1005.657, 1029.498, 1056.843), stdev = 19.848
[info]   CI (99.9%): [953.072, 1105.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   304.830 ±(99.9%) 4.196 B/op [Average]
[info]   (min, avg, max) = (303.683, 304.830, 306.318), stdev = 1.090
[info]   CI (99.9%): [300.634, 309.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   979.575 ±(99.9%) 15.378 MB/sec [Average]
[info]   (min, avg, max) = (975.861, 979.575, 984.581), stdev = 3.994
[info]   CI (99.9%): [964.197, 994.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   290.146 ±(99.9%) 25.057 B/op [Average]
[info]   (min, avg, max) = (281.315, 290.146, 297.319), stdev = 6.507
[info]   CI (99.9%): [265.089, 315.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.953 ±(99.9%) 5.823 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.953, 3.518), stdev = 1.512
[info]   CI (99.9%): [≈ 0, 6.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.286 ±(99.9%) 1.758 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.286, 1.062), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 2.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.742
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 910976.287 ops/s
[info] # Warmup Iteration   2: 2568041.135 ops/s
[info] # Warmup Iteration   3: 3548272.979 ops/s
[info] Iteration   1: 3604225.790 ops/s
[info]                  ·gc.alloc.rate:                   1975.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     858.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.836 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 3545186.218 ops/s
[info]                  ·gc.alloc.rate:                   1958.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     868.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3638163.462 ops/s
[info]                  ·gc.alloc.rate:               2000.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          865.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1968.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 851.476 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 3646914.144 ops/s
[info]                  ·gc.alloc.rate:                   2019.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              871.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     856.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3644478.119 ops/s
[info]                  ·gc.alloc.rate:                   2012.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              868.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     721.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   3615793.547 ±(99.9%) 165744.584 ops/s [Average]
[info]   (min, avg, max) = (3545186.218, 3615793.547, 3646914.144), stdev = 43043.342
[info]   CI (99.9%): [3450048.963, 3781538.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1993.263 ±(99.9%) 99.196 MB/sec [Average]
[info]   (min, avg, max) = (1958.454, 1993.263, 2019.928), stdev = 25.761
[info]   CI (99.9%): [1894.067, 2092.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   867.396 ±(99.9%) 13.771 B/op [Average]
[info]   (min, avg, max) = (862.232, 867.396, 871.211), stdev = 3.576
[info]   CI (99.9%): [853.625, 881.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1909.503 ±(99.9%) 517.658 MB/sec [Average]
[info]   (min, avg, max) = (1669.755, 1909.503, 1985.988), stdev = 134.434
[info]   CI (99.9%): [1391.845, 2427.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   831.215 ±(99.9%) 238.434 B/op [Average]
[info]   (min, avg, max) = (721.013, 831.215, 868.664), stdev = 61.921
[info]   CI (99.9%): [592.780, 1069.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 7.199 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 4.206), stdev = 1.870
[info]   CI (99.9%): [≈ 0, 8.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.376 ±(99.9%) 3.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.376, 1.836), stdev = 0.816
[info]   CI (99.9%): [≈ 0, 3.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 16.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.805 ops/s
[info] # Warmup Iteration   2: 5176262.350 ops/s
[info] # Warmup Iteration   3: 6688644.996 ops/s
[info] Iteration   1: 6589822.000 ops/s
[info]                  ·gc.alloc.rate:               653.831 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154.948 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 6593210.010 ops/s
[info]                  ·gc.alloc.rate:               654.767 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154.875 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 6577034.463 ops/s
[info]                  ·gc.alloc.rate:               654.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.568 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 6590888.838 ops/s
[info]                  ·gc.alloc.rate:                   655.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6719510.945 ops/s
[info]                  ·gc.alloc.rate:                   664.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   6614093.251 ±(99.9%) 228212.727 ops/s [Average]
[info]   (min, avg, max) = (6577034.463, 6614093.251, 6719510.945), stdev = 59266.120
[info]   CI (99.9%): [6385880.525, 6842305.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   656.574 ±(99.9%) 17.339 MB/sec [Average]
[info]   (min, avg, max) = (653.831, 656.574, 664.528), stdev = 4.503
[info]   CI (99.9%): [639.235, 673.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   156.217 ±(99.9%) 1.413 B/op [Average]
[info]   (min, avg, max) = (155.632, 156.217, 156.555), stdev = 0.367
[info]   CI (99.9%): [154.804, 157.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.341 ±(99.9%) 5.812 MB/sec [Average]
[info]   (min, avg, max) = (648.865, 650.341, 652.193), stdev = 1.509
[info]   CI (99.9%): [644.529, 656.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   154.740 ±(99.9%) 4.480 B/op [Average]
[info]   (min, avg, max) = (152.743, 154.740, 155.568), stdev = 1.163
[info]   CI (99.9%): [150.260, 159.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.875 ±(99.9%) 7.488 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.875, 4.354), stdev = 1.945
[info]   CI (99.9%): [≈ 0, 8.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.205 ±(99.9%) 1.754 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.205, 1.020), stdev = 0.455
[info]   CI (99.9%): [≈ 0, 1.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2004362.776 ops/s
[info] # Warmup Iteration   2: 5414817.668 ops/s
[info] # Warmup Iteration   3: 6378807.637 ops/s
[info] Iteration   1: 6378424.507 ops/s
[info]                  ·gc.alloc.rate:                   631.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6339044.636 ops/s
[info]                  ·gc.alloc.rate:               637.934 MB/sec
[info]                  ·gc.alloc.rate.norm:          158.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 161.745 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 6276911.736 ops/s
[info]                  ·gc.alloc.rate:                   621.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6324800.848 ops/s
[info]                  ·gc.alloc.rate:                   627.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6135971.724 ops/s
[info]                  ·gc.alloc.rate:                   608.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.844 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   6291030.690 ±(99.9%) 361868.705 ops/s [Average]
[info]   (min, avg, max) = (6135971.724, 6291030.690, 6378424.507), stdev = 93976.153
[info]   CI (99.9%): [5929161.986, 6652899.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   625.210 ±(99.9%) 43.789 MB/sec [Average]
[info]   (min, avg, max) = (608.054, 625.210, 637.934), stdev = 11.372
[info]   CI (99.9%): [581.421, 668.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   156.393 ±(99.9%) 4.284 B/op [Average]
[info]   (min, avg, max) = (155.754, 156.393, 158.373), stdev = 1.113
[info]   CI (99.9%): [152.109, 160.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   587.236 ±(99.9%) 561.449 MB/sec [Average]
[info]   (min, avg, max) = (326.427, 587.236, 654.505), stdev = 145.806
[info]   CI (99.9%): [25.787, 1148.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   146.894 ±(99.9%) 140.458 B/op [Average]
[info]   (min, avg, max) = (81.839, 146.894, 167.860), stdev = 36.476
[info]   CI (99.9%): [6.437, 287.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 5.637 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.670, 3.289), stdev = 1.464
[info]   CI (99.9%): [≈ 0, 6.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.172 ±(99.9%) 1.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.172, 0.844), stdev = 0.376
[info]   CI (99.9%): [≈ 0, 1.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3344985.696 ops/s
[info] # Warmup Iteration   2: 6191363.724 ops/s
[info] # Warmup Iteration   3: 7120979.359 ops/s
[info] Iteration   1: 7093129.488 ops/s
[info]                  ·gc.alloc.rate:                   702.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 7014995.313 ops/s
[info]                  ·gc.alloc.rate:                   736.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              165.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 7010065.121 ops/s
[info]                  ·gc.alloc.rate:                   699.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 7082941.980 ops/s
[info]                  ·gc.alloc.rate:                   709.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7121227.391 ops/s
[info]                  ·gc.alloc.rate:                   711.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.727 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   7064471.859 ±(99.9%) 190515.616 ops/s [Average]
[info]   (min, avg, max) = (7010065.121, 7064471.859, 7121227.391), stdev = 49476.300
[info]   CI (99.9%): [6873956.243, 7254987.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   711.765 ±(99.9%) 55.574 MB/sec [Average]
[info]   (min, avg, max) = (699.602, 711.765, 736.110), stdev = 14.432
[info]   CI (99.9%): [656.191, 767.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   158.556 ±(99.9%) 14.386 B/op [Average]
[info]   (min, avg, max) = (155.847, 158.556, 165.134), stdev = 3.736
[info]   CI (99.9%): [144.170, 172.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.961 ±(99.9%) 5.578 MB/sec [Average]
[info]   (min, avg, max) = (656.163, 657.961, 659.713), stdev = 1.449
[info]   CI (99.9%): [652.383, 663.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   146.565 ±(99.9%) 3.699 B/op [Average]
[info]   (min, avg, max) = (145.584, 146.565, 147.754), stdev = 0.961
[info]   CI (99.9%): [142.866, 150.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 5.604 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.687, 3.290), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.238 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.152, 0.727), stdev = 0.321
[info]   CI (99.9%): [≈ 0, 1.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 8.000), stdev = 1.095
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3952390.783 ops/s
[info] # Warmup Iteration   2: 6581015.244 ops/s
[info] # Warmup Iteration   3: 7205005.860 ops/s
[info] Iteration   1: 7343371.206 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7341731.979 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 7316715.949 ops/s
[info]                  ·gc.alloc.rate:      2.153 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.463 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7334452.994 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 7335255.181 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7334305.462 ±(99.9%) 40735.718 ops/s [Average]
[info]   (min, avg, max) = (7316715.949, 7334305.462, 7343371.206), stdev = 10578.936
[info]   CI (99.9%): [7293569.744, 7375041.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.431 ±(99.9%) 3.707 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.431, 2.153), stdev = 0.963
[info]   CI (99.9%): [≈ 0, 4.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.093 ±(99.9%) 0.797 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.093, 0.463), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 0.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1075890.117 ops/s
[info] # Warmup Iteration   2: 3437403.089 ops/s
[info] # Warmup Iteration   3: 6238029.269 ops/s
[info] Iteration   1: 6261132.837 ops/s
[info]                  ·gc.alloc.rate:                   633.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              159.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 6323693.489 ops/s
[info]                  ·gc.alloc.rate:               622.064 MB/sec
[info]                  ·gc.alloc.rate.norm:          154.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81.486 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 6137087.543 ops/s
[info]                  ·gc.alloc.rate:               610.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 168.007 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 6212131.473 ops/s
[info]                  ·gc.alloc.rate:                   618.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.826 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6287410.578 ops/s
[info]                  ·gc.alloc.rate:                   621.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   6244291.184 ±(99.9%) 278836.325 ops/s [Average]
[info]   (min, avg, max) = (6137087.543, 6244291.184, 6323693.489), stdev = 72412.908
[info]   CI (99.9%): [5965454.859, 6523127.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   621.167 ±(99.9%) 31.156 MB/sec [Average]
[info]   (min, avg, max) = (610.866, 621.167, 633.246), stdev = 8.091
[info]   CI (99.9%): [590.011, 652.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   156.550 ±(99.9%) 6.356 B/op [Average]
[info]   (min, avg, max) = (154.787, 156.550, 159.159), stdev = 1.651
[info]   CI (99.9%): [150.194, 162.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   589.584 ±(99.9%) 564.213 MB/sec [Average]
[info]   (min, avg, max) = (327.477, 589.584, 656.194), stdev = 146.524
[info]   CI (99.9%): [25.371, 1153.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   148.814 ±(99.9%) 145.062 B/op [Average]
[info]   (min, avg, max) = (81.486, 148.814, 168.007), stdev = 37.672
[info]   CI (99.9%): [3.752, 293.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 5.464 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.887, 3.261), stdev = 1.419
[info]   CI (99.9%): [≈ 0, 6.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 0.826), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 2.408
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 355798.621 ops/s
[info] # Warmup Iteration   2: 1322626.207 ops/s
[info] # Warmup Iteration   3: 1724850.528 ops/s
[info] Iteration   1: 1704239.490 ops/s
[info]                  ·gc.alloc.rate:                   2207.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              2038.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1812.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.788 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1751289.640 ops/s
[info]                  ·gc.alloc.rate:                   2251.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              2023.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2053.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1732903.164 ops/s
[info]                  ·gc.alloc.rate:               2268.369 MB/sec
[info]                  ·gc.alloc.rate.norm:          2059.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2307.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2095.358 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1742715.228 ops/s
[info]                  ·gc.alloc.rate:                   2245.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              2027.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1804.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1724509.224 ops/s
[info]                  ·gc.alloc.rate:                   2235.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2144.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1731131.349 ±(99.9%) 69703.753 ops/s [Average]
[info]   (min, avg, max) = (1704239.490, 1731131.349, 1751289.640), stdev = 18101.843
[info]   CI (99.9%): [1661427.596, 1800835.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2241.680 ±(99.9%) 87.208 MB/sec [Average]
[info]   (min, avg, max) = (2207.268, 2241.680, 2268.369), stdev = 22.648
[info]   CI (99.9%): [2154.473, 2328.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2037.827 ±(99.9%) 53.997 B/op [Average]
[info]   (min, avg, max) = (2023.665, 2037.827, 2059.601), stdev = 14.023
[info]   CI (99.9%): [1983.830, 2091.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2180.723 ±(99.9%) 710.390 MB/sec [Average]
[info]   (min, avg, max) = (1963.236, 2180.723, 2349.550), stdev = 184.486
[info]   CI (99.9%): [1470.333, 2891.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1982.013 ±(99.9%) 622.008 B/op [Average]
[info]   (min, avg, max) = (1804.421, 1982.013, 2144.148), stdev = 161.533
[info]   CI (99.9%): [1360.005, 2604.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.408 ±(99.9%) 3.290 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.408, 1.936), stdev = 0.855
[info]   CI (99.9%): [≈ 0, 3.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.376 ±(99.9%) 3.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.376, 1.788), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 11.000), stdev = 1.095
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.571 ops/s
[info] # Warmup Iteration   2: 2601533.812 ops/s
[info] # Warmup Iteration   3: 2761967.562 ops/s
[info] Iteration   1: 2895440.548 ops/s
[info]                  ·gc.alloc.rate:                   558.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2975717.230 ops/s
[info]                  ·gc.alloc.rate:                   580.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2998594.569 ops/s
[info]                  ·gc.alloc.rate:               577.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 170.966 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2844910.346 ops/s
[info]                  ·gc.alloc.rate:                   553.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     360.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2990375.523 ops/s
[info]                  ·gc.alloc.rate:                   581.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2941007.643 ±(99.9%) 260233.796 ops/s [Average]
[info]   (min, avg, max) = (2844910.346, 2941007.643, 2998594.569), stdev = 67581.890
[info]   CI (99.9%): [2680773.848, 3201241.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   570.174 ±(99.9%) 50.282 MB/sec [Average]
[info]   (min, avg, max) = (553.733, 570.174, 581.084), stdev = 13.058
[info]   CI (99.9%): [519.892, 620.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.100 ±(99.9%) 6.480 B/op [Average]
[info]   (min, avg, max) = (303.125, 305.100, 306.777), stdev = 1.683
[info]   CI (99.9%): [298.620, 311.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   586.240 ±(99.9%) 560.710 MB/sec [Average]
[info]   (min, avg, max) = (325.762, 586.240, 652.837), stdev = 145.615
[info]   CI (99.9%): [25.530, 1146.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   314.508 ±(99.9%) 310.148 B/op [Average]
[info]   (min, avg, max) = (170.966, 314.508, 360.414), stdev = 80.545
[info]   CI (99.9%): [4.359, 624.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164162.315 ops/s
[info] # Warmup Iteration   2: 1654745.848 ops/s
[info] # Warmup Iteration   3: 1850093.546 ops/s
[info] Iteration   1: 1941185.976 ops/s
[info]                  ·gc.alloc.rate:                   410.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              333.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1874996.855 ops/s
[info]                  ·gc.alloc.rate:                   483.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              405.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     546.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.612 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1864447.823 ops/s
[info]                  ·gc.alloc.rate:               398.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          336.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 274.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1918551.170 ops/s
[info]                  ·gc.alloc.rate:               407.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          333.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.220 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1931397.862 ops/s
[info]                  ·gc.alloc.rate:               413.127 MB/sec
[info]                  ·gc.alloc.rate.norm:          336.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 265.427 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1906115.937 ±(99.9%) 132390.875 ops/s [Average]
[info]   (min, avg, max) = (1864447.823, 1906115.937, 1941185.976), stdev = 34381.490
[info]   CI (99.9%): [1773725.062, 2038506.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   422.621 ±(99.9%) 132.208 MB/sec [Average]
[info]   (min, avg, max) = (398.681, 422.621, 483.244), stdev = 34.334
[info]   CI (99.9%): [290.413, 554.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   349.136 ±(99.9%) 121.536 B/op [Average]
[info]   (min, avg, max) = (333.074, 349.136, 405.528), stdev = 31.562
[info]   CI (99.9%): [227.600, 470.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   390.552 ±(99.9%) 559.872 MB/sec [Average]
[info]   (min, avg, max) = (325.166, 390.552, 650.646), stdev = 145.397
[info]   CI (99.9%): [≈ 0, 950.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   323.377 ±(99.9%) 479.506 B/op [Average]
[info]   (min, avg, max) = (263.547, 323.377, 546.008), stdev = 124.526
[info]   CI (99.9%): [≈ 0, 802.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.148 ±(99.9%) 1.251 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.729), stdev = 0.325
[info]   CI (99.9%): [≈ 0, 1.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 1.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.124, 0.612), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 978133.932 ops/s
[info] # Warmup Iteration   2: 2144888.358 ops/s
[info] # Warmup Iteration   3: 2256220.619 ops/s
[info] Iteration   1: 2286316.823 ops/s
[info]                  ·gc.alloc.rate:               441.292 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.516 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2244753.180 ops/s
[info]                  ·gc.alloc.rate:               445.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230.723 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2277892.244 ops/s
[info]                  ·gc.alloc.rate:                   445.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     455.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2279225.658 ops/s
[info]                  ·gc.alloc.rate:                   439.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2283060.770 ops/s
[info]                  ·gc.alloc.rate:               441.039 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 227.296 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2274249.735 ±(99.9%) 64758.495 ops/s [Average]
[info]   (min, avg, max) = (2244753.180, 2274249.735, 2286316.823), stdev = 16817.576
[info]   CI (99.9%): [2209491.240, 2339008.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   442.335 ±(99.9%) 10.269 MB/sec [Average]
[info]   (min, avg, max) = (439.128, 442.335, 445.193), stdev = 2.667
[info]   CI (99.9%): [432.066, 452.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.102 ±(99.9%) 14.458 B/op [Average]
[info]   (min, avg, max) = (303.200, 306.102, 312.116), stdev = 3.755
[info]   CI (99.9%): [291.644, 320.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   395.443 ±(99.9%) 568.433 MB/sec [Average]
[info]   (min, avg, max) = (329.096, 395.443, 659.513), stdev = 147.620
[info]   CI (99.9%): [≈ 0, 963.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   273.570 ±(99.9%) 391.952 B/op [Average]
[info]   (min, avg, max) = (226.516, 273.570, 455.633), stdev = 101.789
[info]   CI (99.9%): [≈ 0, 665.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.014), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217271.022 ops/s
[info] # Warmup Iteration   2: 1556936.435 ops/s
[info] # Warmup Iteration   3: 1882588.741 ops/s
[info] Iteration   1: 1871711.299 ops/s
[info]                  ·gc.alloc.rate:               358.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 273.347 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1902088.894 ops/s
[info]                  ·gc.alloc.rate:                   367.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1899529.317 ops/s
[info]                  ·gc.alloc.rate:                   368.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1836353.836 ops/s
[info]                  ·gc.alloc.rate:                   353.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1905664.942 ops/s
[info]                  ·gc.alloc.rate:               365.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 269.291 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1883069.658 ±(99.9%) 113162.081 ops/s [Average]
[info]   (min, avg, max) = (1836353.836, 1883069.658, 1905664.942), stdev = 29387.833
[info]   CI (99.9%): [1769907.577, 1996231.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   362.468 ±(99.9%) 25.242 MB/sec [Average]
[info]   (min, avg, max) = (353.143, 362.468, 368.077), stdev = 6.555
[info]   CI (99.9%): [337.226, 387.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   302.880 ±(99.9%) 6.232 B/op [Average]
[info]   (min, avg, max) = (301.152, 302.880, 304.877), stdev = 1.618
[info]   CI (99.9%): [296.648, 309.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   325.598 ±(99.9%) 1.792 MB/sec [Average]
[info]   (min, avg, max) = (325.094, 325.598, 326.096), stdev = 0.465
[info]   CI (99.9%): [323.806, 327.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   272.130 ±(99.9%) 16.586 B/op [Average]
[info]   (min, avg, max) = (268.971, 272.130, 279.172), stdev = 4.307
[info]   CI (99.9%): [255.544, 288.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.021 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 293207.402 ops/s
[info] # Warmup Iteration   2: 2170360.126 ops/s
[info] # Warmup Iteration   3: 2467458.856 ops/s
[info] Iteration   1: 2443338.336 ops/s
[info]                  ·gc.alloc.rate:                   1773.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              1141.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1054.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.717 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2423133.008 ops/s
[info]                  ·gc.alloc.rate:                   1774.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1056.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2501588.572 ops/s
[info]                  ·gc.alloc.rate:               1796.027 MB/sec
[info]                  ·gc.alloc.rate.norm:          1129.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1958.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1231.735 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 2506512.705 ops/s
[info]                  ·gc.alloc.rate:                   1791.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              1124.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1033.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2509991.736 ops/s
[info]                  ·gc.alloc.rate:               1814.163 MB/sec
[info]                  ·gc.alloc.rate.norm:          1137.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1659.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1040.691 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   2476912.871 ±(99.9%) 156399.377 ops/s [Average]
[info]   (min, avg, max) = (2423133.008, 2476912.871, 2509991.736), stdev = 40616.422
[info]   CI (99.9%): [2320513.494, 2633312.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1789.809 ±(99.9%) 65.085 MB/sec [Average]
[info]   (min, avg, max) = (1773.063, 1789.809, 1814.163), stdev = 16.902
[info]   CI (99.9%): [1724.724, 1854.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1137.164 ±(99.9%) 41.384 B/op [Average]
[info]   (min, avg, max) = (1124.524, 1137.164, 1152.224), stdev = 10.747
[info]   CI (99.9%): [1095.781, 1178.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1705.768 ±(99.9%) 544.916 MB/sec [Average]
[info]   (min, avg, max) = (1627.237, 1705.768, 1958.014), stdev = 141.513
[info]   CI (99.9%): [1160.853, 2250.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1083.399 ±(99.9%) 321.461 B/op [Average]
[info]   (min, avg, max) = (1033.376, 1083.399, 1231.735), stdev = 83.482
[info]   CI (99.9%): [761.938, 1404.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.860 ±(99.9%) 7.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.860, 4.219), stdev = 1.878
[info]   CI (99.9%): [≈ 0, 8.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.554 ±(99.9%) 4.657 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.717), stdev = 1.209
[info]   CI (99.9%): [≈ 0, 5.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.572 ops/s
[info] # Warmup Iteration   2: 3092978.721 ops/s
[info] # Warmup Iteration   3: 3444860.580 ops/s
[info] Iteration   1: 3628756.565 ops/s
[info]                  ·gc.alloc.rate:                   973.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     423.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3591446.293 ops/s
[info]                  ·gc.alloc.rate:               960.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          420.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 428.817 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 3602324.392 ops/s
[info]                  ·gc.alloc.rate:                   957.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.551 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.551 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3541695.030 ops/s
[info]                  ·gc.alloc.rate:                   945.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     434.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.611 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3538144.541 ops/s
[info]                  ·gc.alloc.rate:                   941.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3580473.364 ±(99.9%) 151900.808 ops/s [Average]
[info]   (min, avg, max) = (3538144.541, 3580473.364, 3628756.565), stdev = 39448.157
[info]   CI (99.9%): [3428572.556, 3732374.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   955.966 ±(99.9%) 48.822 MB/sec [Average]
[info]   (min, avg, max) = (941.738, 955.966, 973.703), stdev = 12.679
[info]   CI (99.9%): [907.144, 1004.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   420.139 ±(99.9%) 6.003 B/op [Average]
[info]   (min, avg, max) = (418.403, 420.139, 422.271), stdev = 1.559
[info]   CI (99.9%): [414.136, 426.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   977.082 ±(99.9%) 12.487 MB/sec [Average]
[info]   (min, avg, max) = (971.982, 977.082, 980.624), stdev = 3.243
[info]   CI (99.9%): [964.595, 989.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   429.461 ±(99.9%) 15.836 B/op [Average]
[info]   (min, avg, max) = (423.540, 429.461, 434.247), stdev = 4.113
[info]   CI (99.9%): [413.625, 445.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.002 ±(99.9%) 5.929 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.002, 3.551), stdev = 1.540
[info]   CI (99.9%): [≈ 0, 6.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.440 ±(99.9%) 2.593 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 1.551), stdev = 0.673
[info]   CI (99.9%): [≈ 0, 3.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 11.000), stdev = 2.950
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 339534.463 ops/s
[info] # Warmup Iteration   2: 2398216.302 ops/s
[info] # Warmup Iteration   3: 3322433.343 ops/s
[info] Iteration   1: 3323189.669 ops/s
[info]                  ·gc.alloc.rate:                   889.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3356810.230 ops/s
[info]                  ·gc.alloc.rate:                   904.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     457.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3336590.546 ops/s
[info]                  ·gc.alloc.rate:                   885.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     308.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3242822.994 ops/s
[info]                  ·gc.alloc.rate:                   877.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              425.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3241957.511 ops/s
[info]                  ·gc.alloc.rate:               866.273 MB/sec
[info]                  ·gc.alloc.rate.norm:          420.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 315.932 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   3300274.190 ±(99.9%) 208627.053 ops/s [Average]
[info]   (min, avg, max) = (3241957.511, 3300274.190, 3356810.230), stdev = 54179.783
[info]   CI (99.9%): [3091647.137, 3508901.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   884.486 ±(99.9%) 54.005 MB/sec [Average]
[info]   (min, avg, max) = (866.273, 884.486, 904.077), stdev = 14.025
[info]   CI (99.9%): [830.481, 938.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   421.689 ±(99.9%) 11.878 B/op [Average]
[info]   (min, avg, max) = (417.670, 421.689, 425.834), stdev = 3.085
[info]   CI (99.9%): [409.810, 433.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   848.183 ±(99.9%) 687.863 MB/sec [Average]
[info]   (min, avg, max) = (650.855, 848.183, 981.266), stdev = 178.636
[info]   CI (99.9%): [160.320, 1536.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   404.240 ±(99.9%) 324.571 B/op [Average]
[info]   (min, avg, max) = (308.555, 404.240, 476.198), stdev = 84.290
[info]   CI (99.9%): [79.669, 728.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.882 ±(99.9%) 7.429 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.882, 4.333), stdev = 1.929
[info]   CI (99.9%): [≈ 0, 8.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.428 ±(99.9%) 3.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.428, 2.103), stdev = 0.936
[info]   CI (99.9%): [≈ 0, 4.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 12.000), stdev = 3.564
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 753001.107 ops/s
[info] # Warmup Iteration   2: 3246254.823 ops/s
[info] # Warmup Iteration   3: 3552907.091 ops/s
[info] Iteration   1: 3599724.706 ops/s
[info]                  ·gc.alloc.rate:                   968.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     430.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3502543.837 ops/s
[info]                  ·gc.alloc.rate:                   955.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3599682.196 ops/s
[info]                  ·gc.alloc.rate:                   952.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3626234.425 ops/s
[info]                  ·gc.alloc.rate:                   961.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     427.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3633020.992 ops/s
[info]                  ·gc.alloc.rate:                   966.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3592241.231 ±(99.9%) 201704.644 ops/s [Average]
[info]   (min, avg, max) = (3502543.837, 3592241.231, 3633020.992), stdev = 52382.055
[info]   CI (99.9%): [3390536.587, 3793945.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   960.932 ±(99.9%) 26.726 MB/sec [Average]
[info]   (min, avg, max) = (952.672, 960.932, 968.510), stdev = 6.941
[info]   CI (99.9%): [934.206, 987.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   421.029 ±(99.9%) 20.378 B/op [Average]
[info]   (min, avg, max) = (416.493, 421.029, 429.182), stdev = 5.292
[info]   CI (99.9%): [400.651, 441.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   918.387 ±(99.9%) 560.207 MB/sec [Average]
[info]   (min, avg, max) = (658.177, 918.387, 985.953), stdev = 145.484
[info]   CI (99.9%): [358.180, 1478.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   402.478 ±(99.9%) 248.501 B/op [Average]
[info]   (min, avg, max) = (287.744, 402.478, 442.983), stdev = 64.535
[info]   CI (99.9%): [153.978, 650.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.869 ±(99.9%) 5.530 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.869, 3.344), stdev = 1.436
[info]   CI (99.9%): [≈ 0, 6.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.379 ±(99.9%) 2.417 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.379, 1.462), stdev = 0.628
[info]   CI (99.9%): [≈ 0, 2.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.286
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1533080.522 ops/s
[info] # Warmup Iteration   2: 3673469.446 ops/s
[info] # Warmup Iteration   3: 3882058.991 ops/s
[info] Iteration   1: 3880250.590 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3883759.258 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3878948.170 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3874078.883 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3878976.292 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3879202.638 ±(99.9%) 13370.919 ops/s [Average]
[info]   (min, avg, max) = (3874078.883, 3879202.638, 3883759.258), stdev = 3472.385
[info]   CI (99.9%): [3865831.719, 3892573.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 592145.348 ops/s
[info] # Warmup Iteration   2: 2651287.533 ops/s
[info] # Warmup Iteration   3: 3366183.062 ops/s
[info] Iteration   1: 3358803.565 ops/s
[info]                  ·gc.alloc.rate:                   903.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3372508.300 ops/s
[info]                  ·gc.alloc.rate:                   898.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3253935.624 ops/s
[info]                  ·gc.alloc.rate:                   879.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              425.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.329 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3294291.241 ops/s
[info]                  ·gc.alloc.rate:                   874.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.676 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3265377.720 ops/s
[info]                  ·gc.alloc.rate:                   872.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   3308983.290 ±(99.9%) 207943.991 ops/s [Average]
[info]   (min, avg, max) = (3253935.624, 3308983.290, 3372508.300), stdev = 54002.394
[info]   CI (99.9%): [3101039.299, 3516927.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   885.621 ±(99.9%) 55.129 MB/sec [Average]
[info]   (min, avg, max) = (872.610, 885.621, 903.765), stdev = 14.317
[info]   CI (99.9%): [830.493, 940.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   421.196 ±(99.9%) 12.038 B/op [Average]
[info]   (min, avg, max) = (417.673, 421.196, 425.281), stdev = 3.126
[info]   CI (99.9%): [409.157, 433.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   853.250 ±(99.9%) 689.928 MB/sec [Average]
[info]   (min, avg, max) = (656.795, 853.250, 987.604), stdev = 179.172
[info]   CI (99.9%): [163.322, 1543.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   406.336 ±(99.9%) 338.808 B/op [Average]
[info]   (min, avg, max) = (306.497, 406.336, 477.639), stdev = 87.987
[info]   CI (99.9%): [67.528, 745.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.871 ±(99.9%) 4.632 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.871, 2.748), stdev = 1.203
[info]   CI (99.9%): [≈ 0, 5.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.419 ±(99.9%) 2.237 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.419, 1.329), stdev = 0.581
[info]   CI (99.9%): [≈ 0, 2.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.507
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1522.873 ops/s
[info] # Warmup Iteration   2: 5150.037 ops/s
[info] # Warmup Iteration   3: 10335.039 ops/s
[info] Iteration   1: 11911.713 ops/s
[info]                  ·gc.alloc.rate:                   1502.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              198541.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1610.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212707.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.500 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 12136.285 ops/s
[info]                  ·gc.alloc.rate:                   1530.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              198469.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167074.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 12222.466 ops/s
[info]                  ·gc.alloc.rate:                   1540.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              198343.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208857.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.111 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 11923.202 ops/s
[info]                  ·gc.alloc.rate:                   1608.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              212334.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215588.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.231 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.461 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 12393.401 ops/s
[info]                  ·gc.alloc.rate:                   1575.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              200058.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167318.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.574 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   12117.413 ±(99.9%) 788.188 ops/s [Average]
[info]   (min, avg, max) = (11911.713, 12117.413, 12393.401), stdev = 204.690
[info]   CI (99.9%): [11329.225, 12905.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1551.715 ±(99.9%) 158.483 MB/sec [Average]
[info]   (min, avg, max) = (1502.817, 1551.715, 1608.806), stdev = 41.158
[info]   CI (99.9%): [1393.232, 1710.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   201549.448 ±(99.9%) 23370.695 B/op [Average]
[info]   (min, avg, max) = (198343.228, 201549.448, 212334.157), stdev = 6069.295
[info]   CI (99.9%): [178178.753, 224920.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1494.423 ±(99.9%) 674.050 MB/sec [Average]
[info]   (min, avg, max) = (1288.732, 1494.423, 1633.463), stdev = 175.049
[info]   CI (99.9%): [820.373, 2168.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   194309.245 ±(99.9%) 95748.427 B/op [Average]
[info]   (min, avg, max) = (167074.146, 194309.245, 215588.492), stdev = 24865.562
[info]   CI (99.9%): [98560.818, 290057.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.506 ±(99.9%) 2.344 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.506, 1.231), stdev = 0.609
[info]   CI (99.9%): [≈ 0, 2.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   65.927 ±(99.9%) 306.361 B/op [Average]
[info]   (min, avg, max) = (5.500, 65.927, 162.461), stdev = 79.561
[info]   CI (99.9%): [≈ 0, 372.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.342
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 604.743 ops/s
[info] # Warmup Iteration   2: 10798.689 ops/s
[info] # Warmup Iteration   3: 23129.776 ops/s
[info] Iteration   1: 23094.174 ops/s
[info]                  ·gc.alloc.rate:                   335.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              22861.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21834.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.493 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 22603.737 ops/s
[info]                  ·gc.alloc.rate:               339.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          23653.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22309.141 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 22852.687 ops/s
[info]                  ·gc.alloc.rate:                   434.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              29904.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44264.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.467 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 21168.885 ops/s
[info]                  ·gc.alloc.rate:               454.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          33798.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23993.344 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 22595.813 ops/s
[info]                  ·gc.alloc.rate:                   403.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              28077.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22478.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.998 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   22463.059 ±(99.9%) 2895.941 ops/s [Average]
[info]   (min, avg, max) = (21168.885, 22463.059, 23094.174), stdev = 752.067
[info]   CI (99.9%): [19567.119, 25359.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   393.476 ±(99.9%) 208.653 MB/sec [Average]
[info]   (min, avg, max) = (335.496, 393.476, 454.662), stdev = 54.187
[info]   CI (99.9%): [184.823, 602.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   27659.104 ±(99.9%) 17431.649 B/op [Average]
[info]   (min, avg, max) = (22861.401, 27659.104, 33798.386), stdev = 4526.944
[info]   CI (99.9%): [10227.455, 45090.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   385.848 ±(99.9%) 553.133 MB/sec [Average]
[info]   (min, avg, max) = (320.432, 385.848, 642.803), stdev = 143.647
[info]   CI (99.9%): [≈ 0, 938.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26975.977 ±(99.9%) 37343.835 B/op [Average]
[info]   (min, avg, max) = (21834.930, 26975.977, 44264.035), stdev = 9698.075
[info]   CI (99.9%): [≈ 0, 64319.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.127 ±(99.9%) 0.595 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.373), stdev = 0.155
[info]   CI (99.9%): [≈ 0, 0.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.792 ±(99.9%) 41.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.792, 25.998), stdev = 10.760
[info]   CI (99.9%): [≈ 0, 50.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10277.479 ops/s
[info] # Warmup Iteration   2: 14841.459 ops/s
[info] # Warmup Iteration   3: 20806.082 ops/s
[info] Iteration   1: 20372.203 ops/s
[info]                  ·gc.alloc.rate:      222.013 MB/sec
[info]                  ·gc.alloc.rate.norm: 17149.494 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20274.012 ops/s
[info]                  ·gc.alloc.rate:               225.913 MB/sec
[info]                  ·gc.alloc.rate.norm:          17534.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25182.785 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 20634.053 ops/s
[info]                  ·gc.alloc.rate:               242.764 MB/sec
[info]                  ·gc.alloc.rate.norm:          18514.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24742.309 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 19877.548 ops/s
[info]                  ·gc.alloc.rate:                   348.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              27619.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25712.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.569 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 20940.117 ops/s
[info]                  ·gc.alloc.rate:      225.033 MB/sec
[info]                  ·gc.alloc.rate.norm: 16912.016 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   20419.586 ±(99.9%) 1533.251 ops/s [Average]
[info]   (min, avg, max) = (19877.548, 20419.586, 20940.117), stdev = 398.180
[info]   CI (99.9%): [18886.335, 21952.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   252.917 ±(99.9%) 208.876 MB/sec [Average]
[info]   (min, avg, max) = (222.013, 252.917, 348.860), stdev = 54.244
[info]   CI (99.9%): [44.040, 461.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19546.070 ±(99.9%) 17538.447 B/op [Average]
[info]   (min, avg, max) = (16912.016, 19546.070, 27619.930), stdev = 4554.679
[info]   CI (99.9%): [2007.622, 37084.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   194.728 ±(99.9%) 684.497 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 194.728, 324.761), stdev = 177.762
[info]   CI (99.9%): [≈ 0, 879.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15127.424 ±(99.9%) 53191.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15127.424, 25712.027), stdev = 13813.653
[info]   CI (99.9%): [≈ 0, 68318.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.082 ±(99.9%) 0.708 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.411), stdev = 0.184
[info]   CI (99.9%): [≈ 0, 0.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.514 ±(99.9%) 56.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.514, 32.569), stdev = 14.565
[info]   CI (99.9%): [≈ 0, 62.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 5.000), stdev = 2.588
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 177.795 ops/s
[info] # Warmup Iteration   2: 1375.670 ops/s
[info] # Warmup Iteration   3: 4357.008 ops/s
[info] Iteration   1: 7804.375 ops/s
[info]                  ·gc.alloc.rate:                   1972.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              397610.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1908.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384719.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 713.194 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 8447.439 ops/s
[info]                  ·gc.alloc.rate:                   1897.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              353497.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1896.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353227.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 624.401 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 8508.144 ops/s
[info]                  ·gc.alloc.rate:                   1900.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              351534.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1904.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352174.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 855.695 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 8517.827 ops/s
[info]                  ·gc.alloc.rate:                   1896.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              350315.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1906.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352171.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.692 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 8469.519 ops/s
[info]                  ·gc.alloc.rate:               1925.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          357700.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1934.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 359283.655 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   8349.461 ±(99.9%) 1178.479 ops/s [Average]
[info]   (min, avg, max) = (7804.375, 8349.461, 8517.827), stdev = 306.047
[info]   CI (99.9%): [7170.982, 9527.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1918.434 ±(99.9%) 124.603 MB/sec [Average]
[info]   (min, avg, max) = (1896.160, 1918.434, 1972.190), stdev = 32.359
[info]   CI (99.9%): [1793.830, 2043.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   362131.759 ±(99.9%) 77130.425 B/op [Average]
[info]   (min, avg, max) = (350315.500, 362131.759, 397610.926), stdev = 20030.527
[info]   CI (99.9%): [285001.334, 439262.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1909.761 ±(99.9%) 55.315 MB/sec [Average]
[info]   (min, avg, max) = (1896.163, 1909.761, 1934.117), stdev = 14.365
[info]   CI (99.9%): [1854.445, 1965.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   360315.259 ±(99.9%) 53753.263 B/op [Average]
[info]   (min, avg, max) = (352171.388, 360315.259, 384719.660), stdev = 13959.552
[info]   CI (99.9%): [306561.995, 414068.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.311 ±(99.9%) 8.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.311, 4.626), stdev = 2.147
[info]   CI (99.9%): [≈ 0, 10.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   440.197 ±(99.9%) 1566.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 440.197, 855.695), stdev = 406.796
[info]   CI (99.9%): [≈ 0, 2006.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   87.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 17.400, 34.000), stdev = 10.334
[info]   CI (99.9%): [87.000, 87.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6936.098 ops/s
[info] # Warmup Iteration   2: 55894.250 ops/s
[info] # Warmup Iteration   3: 60889.209 ops/s
[info] Iteration   1: 62987.235 ops/s
[info]                  ·gc.alloc.rate:                   1051.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              26279.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24226.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.926 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 66520.708 ops/s
[info]                  ·gc.alloc.rate:                   869.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              20568.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23065.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.380 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 66948.864 ops/s
[info]                  ·gc.alloc.rate:                   874.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              20557.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15345.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.802 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.839 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 66889.189 ops/s
[info]                  ·gc.alloc.rate:                   877.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              20654.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23094.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 67125.062 ops/s
[info]                  ·gc.alloc.rate:                   869.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              20376.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15360.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   66094.212 ±(99.9%) 6741.452 ops/s [Average]
[info]   (min, avg, max) = (62987.235, 66094.212, 67125.062), stdev = 1750.734
[info]   CI (99.9%): [59352.759, 72835.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   908.565 ±(99.9%) 308.604 MB/sec [Average]
[info]   (min, avg, max) = (869.124, 908.565, 1051.780), stdev = 80.144
[info]   CI (99.9%): [599.961, 1217.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21687.392 ±(99.9%) 9892.286 B/op [Average]
[info]   (min, avg, max) = (20376.715, 21687.392, 26279.390), stdev = 2568.995
[info]   CI (99.9%): [11795.106, 31579.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   846.845 ±(99.9%) 678.028 MB/sec [Average]
[info]   (min, avg, max) = (652.851, 846.845, 981.614), stdev = 176.082
[info]   CI (99.9%): [168.817, 1524.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20218.555 ±(99.9%) 17197.538 B/op [Average]
[info]   (min, avg, max) = (15345.397, 20218.555, 24226.203), stdev = 4466.146
[info]   CI (99.9%): [3021.017, 37416.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.968 ±(99.9%) 2.566 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.968, 1.926), stdev = 0.666
[info]   CI (99.9%): [≈ 0, 3.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.363 ±(99.9%) 64.337 B/op [Average]
[info]   (min, avg, max) = (1.464, 23.363, 48.111), stdev = 16.708
[info]   CI (99.9%): [≈ 0, 87.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19494.524 ops/s
[info] # Warmup Iteration   2: 86696.542 ops/s
[info] # Warmup Iteration   3: 103728.680 ops/s
[info] Iteration   1: 107569.768 ops/s
[info]                  ·gc.alloc.rate:               708.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          10368.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9472.971 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 106379.194 ops/s
[info]                  ·gc.alloc.rate:                   704.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              10417.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9598.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 106447.437 ops/s
[info]                  ·gc.alloc.rate:                   700.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              10354.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9612.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 106826.829 ops/s
[info]                  ·gc.alloc.rate:                   701.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              10339.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9598.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 106405.664 ops/s
[info]                  ·gc.alloc.rate:                   705.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              10436.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14463.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.556 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   106725.778 ±(99.9%) 1946.954 ops/s [Average]
[info]   (min, avg, max) = (106379.194, 106725.778, 107569.768), stdev = 505.618
[info]   CI (99.9%): [104778.825, 108672.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   704.211 ±(99.9%) 12.463 MB/sec [Average]
[info]   (min, avg, max) = (700.476, 704.211, 708.689), stdev = 3.237
[info]   CI (99.9%): [691.748, 716.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10383.373 ±(99.9%) 160.121 B/op [Average]
[info]   (min, avg, max) = (10339.953, 10383.373, 10436.461), stdev = 41.583
[info]   CI (99.9%): [10223.252, 10543.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   715.255 ±(99.9%) 565.898 MB/sec [Average]
[info]   (min, avg, max) = (647.497, 715.255, 978.134), stdev = 146.962
[info]   CI (99.9%): [149.357, 1281.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10549.098 ±(99.9%) 8428.336 B/op [Average]
[info]   (min, avg, max) = (9472.971, 10549.098, 14463.253), stdev = 2188.812
[info]   CI (99.9%): [2120.762, 18977.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.846 ±(99.9%) 7.141 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.846, 4.163), stdev = 1.855
[info]   CI (99.9%): [≈ 0, 7.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.504 ±(99.9%) 105.595 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.504, 61.556), stdev = 27.423
[info]   CI (99.9%): [≈ 0, 118.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35774.550 ops/s
[info] # Warmup Iteration   2: 106307.340 ops/s
[info] # Warmup Iteration   3: 109496.470 ops/s
[info] Iteration   1: 111152.044 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 111604.728 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 111655.256 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 111652.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 111607.551 ops/s
[info]                  ·gc.alloc.rate:      0.093 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.308 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   111534.332 ±(99.9%) 827.997 ops/s [Average]
[info]   (min, avg, max) = (111152.044, 111534.332, 111655.256), stdev = 215.028
[info]   CI (99.9%): [110706.335, 112362.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.019 ±(99.9%) 0.159 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.019, 0.093), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.265 ±(99.9%) 2.245 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.265, 1.308), stdev = 0.583
[info]   CI (99.9%): [≈ 0, 2.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40108.054 ops/s
[info] # Warmup Iteration   2: 318489.458 ops/s
[info] # Warmup Iteration   3: 356623.446 ops/s
[info] Iteration   1: 431397.862 ops/s
[info]                  ·gc.alloc.rate:                   2495.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              9097.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2591.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9446.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.140 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 436584.620 ops/s
[info]                  ·gc.alloc.rate:                   2483.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              8951.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2275.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8200.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 430528.096 ops/s
[info]                  ·gc.alloc.rate:                   2488.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              9096.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8421.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 430643.229 ops/s
[info]                  ·gc.alloc.rate:                   2509.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              9171.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2668.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9749.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 432908.468 ops/s
[info]                  ·gc.alloc.rate:                   2517.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              9149.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8562.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   432412.455 ±(99.9%) 9696.316 ops/s [Average]
[info]   (min, avg, max) = (430528.096, 432412.455, 436584.620), stdev = 2518.102
[info]   CI (99.9%): [422716.139, 442108.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2498.982 ±(99.9%) 55.002 MB/sec [Average]
[info]   (min, avg, max) = (2483.621, 2498.982, 2517.410), stdev = 14.284
[info]   CI (99.9%): [2443.979, 2553.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9093.074 ±(99.9%) 329.276 B/op [Average]
[info]   (min, avg, max) = (8951.700, 9093.074, 9171.165), stdev = 85.512
[info]   CI (99.9%): [8763.798, 9422.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2438.941 ±(99.9%) 687.944 MB/sec [Average]
[info]   (min, avg, max) = (2275.276, 2438.941, 2668.290), stdev = 178.657
[info]   CI (99.9%): [1750.997, 3126.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8876.184 ±(99.9%) 2618.616 B/op [Average]
[info]   (min, avg, max) = (8200.761, 8876.184, 9749.949), stdev = 680.046
[info]   CI (99.9%): [6257.568, 11494.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.370 ±(99.9%) 2.830 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.370, 1.684), stdev = 0.735
[info]   CI (99.9%): [≈ 0, 3.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.350 ±(99.9%) 10.317 B/op [Average]
[info]   (min, avg, max) = (0.075, 1.350, 6.140), stdev = 2.679
[info]   CI (99.9%): [≈ 0, 11.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 14.000), stdev = 2.345
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60171.464 ops/s
[info] # Warmup Iteration   2: 560701.592 ops/s
[info] # Warmup Iteration   3: 687725.816 ops/s
[info] Iteration   1: 952862.489 ops/s
[info]                  ·gc.alloc.rate:                   666.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              1100.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1059.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.727 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 953309.961 ops/s
[info]                  ·gc.alloc.rate:               685.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          1131.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:      641.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1059.069 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 947961.319 ops/s
[info]                  ·gc.alloc.rate:                   667.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              1107.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1064.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 922366.521 ops/s
[info]                  ·gc.alloc.rate:                   649.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              1108.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1095.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 922552.766 ops/s
[info]                  ·gc.alloc.rate:               651.613 MB/sec
[info]                  ·gc.alloc.rate.norm:          1111.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1098.921 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   939810.611 ±(99.9%) 61524.431 ops/s [Average]
[info]   (min, avg, max) = (922366.521, 939810.611, 953309.961), stdev = 15977.699
[info]   CI (99.9%): [878286.181, 1001335.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   664.157 ±(99.9%) 55.543 MB/sec [Average]
[info]   (min, avg, max) = (649.958, 664.157, 685.582), stdev = 14.424
[info]   CI (99.9%): [608.614, 719.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1111.963 ±(99.9%) 45.103 B/op [Average]
[info]   (min, avg, max) = (1100.638, 1111.963, 1131.635), stdev = 11.713
[info]   CI (99.9%): [1066.859, 1157.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   642.218 ±(99.9%) 4.412 MB/sec [Average]
[info]   (min, avg, max) = (641.374, 642.218, 644.193), stdev = 1.146
[info]   CI (99.9%): [637.807, 646.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1075.534 ±(99.9%) 77.096 B/op [Average]
[info]   (min, avg, max) = (1059.069, 1075.534, 1098.921), stdev = 20.022
[info]   CI (99.9%): [998.437, 1152.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.827 ±(99.9%) 6.989 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.827, 4.074), stdev = 1.815
[info]   CI (99.9%): [≈ 0, 7.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.366 ±(99.9%) 11.539 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.366, 6.727), stdev = 2.997
[info]   CI (99.9%): [≈ 0, 12.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 491867.326 ops/s
[info] # Warmup Iteration   2: 1545184.868 ops/s
[info] # Warmup Iteration   3: 1891203.131 ops/s
[info] Iteration   1: 1897392.193 ops/s
[info]                  ·gc.alloc.rate:                   962.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              798.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     817.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1873338.169 ops/s
[info]                  ·gc.alloc.rate:                   954.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              801.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1877776.706 ops/s
[info]                  ·gc.alloc.rate:                   947.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              794.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.994 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1840369.669 ops/s
[info]                  ·gc.alloc.rate:                   921.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              788.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     561.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1883271.527 ops/s
[info]                  ·gc.alloc.rate:                   954.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              797.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1874429.653 ±(99.9%) 81182.259 ops/s [Average]
[info]   (min, avg, max) = (1840369.669, 1874429.653, 1897392.193), stdev = 21082.775
[info]   CI (99.9%): [1793247.394, 1955611.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   948.239 ±(99.9%) 60.335 MB/sec [Average]
[info]   (min, avg, max) = (921.842, 948.239, 962.632), stdev = 15.669
[info]   CI (99.9%): [887.904, 1008.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   796.071 ±(99.9%) 19.890 B/op [Average]
[info]   (min, avg, max) = (788.240, 796.071, 801.990), stdev = 5.165
[info]   CI (99.9%): [776.181, 815.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.264 ±(99.9%) 567.111 MB/sec [Average]
[info]   (min, avg, max) = (656.862, 920.264, 989.289), stdev = 147.277
[info]   CI (99.9%): [353.152, 1487.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   771.685 ±(99.9%) 452.563 B/op [Average]
[info]   (min, avg, max) = (561.664, 771.685, 829.927), stdev = 117.529
[info]   CI (99.9%): [319.122, 1224.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 5.949 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.831, 3.573), stdev = 1.545
[info]   CI (99.9%): [≈ 0, 6.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.698 ±(99.9%) 4.984 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.698, 2.994), stdev = 1.294
[info]   CI (99.9%): [≈ 0, 5.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.800, 12.000), stdev = 4.494
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8263.521 ops/s
[info] # Warmup Iteration   2: 91737.165 ops/s
[info] # Warmup Iteration   3: 165760.037 ops/s
[info] Iteration   1: 187904.840 ops/s
[info]                  ·gc.alloc.rate:                   4590.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              38447.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4599.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38524.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.703 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 185833.371 ops/s
[info]                  ·gc.alloc.rate:                   4569.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              38693.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4345.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36801.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 185073.126 ops/s
[info]                  ·gc.alloc.rate:                   4566.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              38828.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4394.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37369.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.062 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 186901.447 ops/s
[info]                  ·gc.alloc.rate:                   4612.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              38823.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4415.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37166.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.701 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 186025.257 ops/s
[info]                  ·gc.alloc.rate:                   4590.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              38834.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4422.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37415.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.704 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   186347.608 ±(99.9%) 4184.803 ops/s [Average]
[info]   (min, avg, max) = (185073.126, 186347.608, 187904.840), stdev = 1086.780
[info]   CI (99.9%): [182162.806, 190532.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4585.761 ±(99.9%) 71.662 MB/sec [Average]
[info]   (min, avg, max) = (4566.440, 4585.761, 4612.143), stdev = 18.610
[info]   CI (99.9%): [4514.099, 4657.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   38725.505 ±(99.9%) 639.079 B/op [Average]
[info]   (min, avg, max) = (38447.849, 38725.505, 38834.311), stdev = 165.967
[info]   CI (99.9%): [38086.426, 39364.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4435.670 ±(99.9%) 371.076 MB/sec [Average]
[info]   (min, avg, max) = (4345.835, 4435.670, 4599.469), stdev = 96.367
[info]   CI (99.9%): [4064.595, 4806.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37455.427 ±(99.9%) 2483.215 B/op [Average]
[info]   (min, avg, max) = (36801.196, 37455.427, 38524.493), stdev = 644.883
[info]   CI (99.9%): [34972.212, 39938.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.489 ±(99.9%) 3.498 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.489, 2.114), stdev = 0.908
[info]   CI (99.9%): [≈ 0, 3.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.105 ±(99.9%) 29.287 B/op [Average]
[info]   (min, avg, max) = (0.353, 4.105, 17.703), stdev = 7.606
[info]   CI (99.9%): [≈ 0, 33.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   66.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.200, 14.000), stdev = 0.447
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   90.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 18.000, 20.000), stdev = 1.225
[info]   CI (99.9%): [90.000, 90.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80720.843 ops/s
[info] # Warmup Iteration   2: 342878.411 ops/s
[info] # Warmup Iteration   3: 406771.699 ops/s
[info] Iteration   1: 447513.499 ops/s
[info]                  ·gc.alloc.rate:                   1467.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              5161.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4603.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.567 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 456599.224 ops/s
[info]                  ·gc.alloc.rate:                   1494.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              5150.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4495.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.301 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 455039.747 ops/s
[info]                  ·gc.alloc.rate:                   1509.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              5219.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5621.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.360 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 455888.342 ops/s
[info]                  ·gc.alloc.rate:                   1492.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              5151.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4505.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 453445.455 ops/s
[info]                  ·gc.alloc.rate:                   1497.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              5197.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5707.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   453697.253 ±(99.9%) 14059.704 ops/s [Average]
[info]   (min, avg, max) = (447513.499, 453697.253, 456599.224), stdev = 3651.261
[info]   CI (99.9%): [439637.549, 467756.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1492.428 ±(99.9%) 58.207 MB/sec [Average]
[info]   (min, avg, max) = (1467.956, 1492.428, 1509.250), stdev = 15.116
[info]   CI (99.9%): [1434.221, 1550.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5176.041 ±(99.9%) 118.913 B/op [Average]
[info]   (min, avg, max) = (5150.370, 5176.041, 5219.315), stdev = 30.881
[info]   CI (99.9%): [5057.128, 5294.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1437.880 ±(99.9%) 693.534 MB/sec [Average]
[info]   (min, avg, max) = (1304.778, 1437.880, 1644.467), stdev = 180.108
[info]   CI (99.9%): [744.346, 2131.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4986.659 ±(99.9%) 2390.907 B/op [Average]
[info]   (min, avg, max) = (4495.803, 4986.659, 5707.214), stdev = 620.911
[info]   CI (99.9%): [2595.752, 7377.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.879 ±(99.9%) 5.408 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.879, 3.290), stdev = 1.404
[info]   CI (99.9%): [≈ 0, 6.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.074 ±(99.9%) 19.019 B/op [Average]
[info]   (min, avg, max) = (0.072, 3.074, 11.567), stdev = 4.939
[info]   CI (99.9%): [≈ 0, 22.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 16.000), stdev = 4.494
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247547.191 ops/s
[info] # Warmup Iteration   2: 821532.123 ops/s
[info] # Warmup Iteration   3: 923080.007 ops/s
[info] Iteration   1: 911404.395 ops/s
[info]                  ·gc.alloc.rate:                   431.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 875610.582 ops/s
[info]                  ·gc.alloc.rate:               414.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 577.689 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 872810.498 ops/s
[info]                  ·gc.alloc.rate:                   410.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              739.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     579.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 869339.417 ops/s
[info]                  ·gc.alloc.rate:                   423.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              766.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1168.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 873407.490 ops/s
[info]                  ·gc.alloc.rate:               417.283 MB/sec
[info]                  ·gc.alloc.rate.norm:          751.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 583.950 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   880514.476 ±(99.9%) 67054.787 ops/s [Average]
[info]   (min, avg, max) = (869339.417, 880514.476, 911404.395), stdev = 17413.915
[info]   CI (99.9%): [813459.690, 947569.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   419.437 ±(99.9%) 32.665 MB/sec [Average]
[info]   (min, avg, max) = (410.291, 419.437, 431.946), stdev = 8.483
[info]   CI (99.9%): [386.772, 452.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   749.665 ±(99.9%) 39.864 B/op [Average]
[info]   (min, avg, max) = (739.766, 749.665, 766.495), stdev = 10.353
[info]   CI (99.9%): [709.801, 789.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   386.587 ±(99.9%) 557.389 MB/sec [Average]
[info]   (min, avg, max) = (320.422, 386.587, 645.516), stdev = 144.752
[info]   CI (99.9%): [≈ 0, 943.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   692.591 ±(99.9%) 1025.477 B/op [Average]
[info]   (min, avg, max) = (553.266, 692.591, 1168.505), stdev = 266.313
[info]   CI (99.9%): [≈ 0, 1718.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.072), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 627298.325 ops/s
[info] # Warmup Iteration   2: 1442442.263 ops/s
[info] # Warmup Iteration   3: 1603250.847 ops/s
[info] Iteration   1: 1595564.177 ops/s
[info]                  ·gc.alloc.rate:               760.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          749.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 647.227 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1603878.839 ops/s
[info]                  ·gc.alloc.rate:                   770.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              755.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     967.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1569422.382 ops/s
[info]                  ·gc.alloc.rate:                   743.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     659.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1602562.960 ops/s
[info]                  ·gc.alloc.rate:                   767.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1609009.443 ops/s
[info]                  ·gc.alloc.rate:                   763.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     642.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1596087.560 ±(99.9%) 60300.259 ops/s [Average]
[info]   (min, avg, max) = (1569422.382, 1596087.560, 1609009.443), stdev = 15659.786
[info]   CI (99.9%): [1535787.302, 1656387.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   761.075 ±(99.9%) 39.687 MB/sec [Average]
[info]   (min, avg, max) = (743.937, 761.075, 770.266), stdev = 10.307
[info]   CI (99.9%): [721.388, 800.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.387 ±(99.9%) 16.470 B/op [Average]
[info]   (min, avg, max) = (745.953, 750.387, 755.744), stdev = 4.277
[info]   CI (99.9%): [733.917, 766.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.093 ±(99.9%) 565.197 MB/sec [Average]
[info]   (min, avg, max) = (656.211, 723.093, 985.656), stdev = 146.780
[info]   CI (99.9%): [157.896, 1288.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   712.688 ±(99.9%) 548.127 B/op [Average]
[info]   (min, avg, max) = (642.786, 712.688, 967.073), stdev = 142.347
[info]   CI (99.9%): [164.561, 1260.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 5.414 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.831, 3.261), stdev = 1.406
[info]   CI (99.9%): [≈ 0, 6.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.816 ±(99.9%) 5.316 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.202), stdev = 1.381
[info]   CI (99.9%): [≈ 0, 6.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 474075.224 ops/s
[info] # Warmup Iteration   2: 1584787.493 ops/s
[info] # Warmup Iteration   3: 1693415.283 ops/s
[info] Iteration   1: 1692077.100 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1688057.492 ops/s
[info]                  ·gc.alloc.rate:      0.078 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.073 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1695728.653 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1696388.585 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1695729.170 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1693596.200 ±(99.9%) 13597.637 ops/s [Average]
[info]   (min, avg, max) = (1688057.492, 1693596.200, 1696388.585), stdev = 3531.263
[info]   CI (99.9%): [1679998.563, 1707193.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.016 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.078), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.015 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.015, 0.073), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34124.364 ops/s
[info] # Warmup Iteration   2: 518347.660 ops/s
[info] # Warmup Iteration   3: 542560.788 ops/s
[info] Iteration   1: 582043.708 ops/s
[info]                  ·gc.alloc.rate:                   1296.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              3504.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3483.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.829 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 628144.072 ops/s
[info]                  ·gc.alloc.rate:                   957.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              2398.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2423.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 662258.742 ops/s
[info]                  ·gc.alloc.rate:                   922.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              2191.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2295.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.632 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 632414.974 ops/s
[info]                  ·gc.alloc.rate:                   881.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              2193.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2402.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 662635.453 ops/s
[info]                  ·gc.alloc.rate:                   929.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              2208.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2292.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   633499.390 ±(99.9%) 127035.555 ops/s [Average]
[info]   (min, avg, max) = (582043.708, 633499.390, 662635.453), stdev = 32990.730
[info]   CI (99.9%): [506463.835, 760534.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   997.527 ±(99.9%) 652.114 MB/sec [Average]
[info]   (min, avg, max) = (881.568, 997.527, 1296.548), stdev = 169.352
[info]   CI (99.9%): [345.413, 1649.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2499.335 ±(99.9%) 2189.819 B/op [Average]
[info]   (min, avg, max) = (2191.406, 2499.335, 3504.586), stdev = 568.689
[info]   CI (99.9%): [309.516, 4689.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1030.554 ±(99.9%) 555.883 MB/sec [Average]
[info]   (min, avg, max) = (965.271, 1030.554, 1288.790), stdev = 144.361
[info]   CI (99.9%): [474.670, 1586.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2579.432 ±(99.9%) 1959.975 B/op [Average]
[info]   (min, avg, max) = (2292.452, 2579.432, 3483.617), stdev = 508.999
[info]   CI (99.9%): [619.457, 4539.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.318 ±(99.9%) 3.633 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.318, 2.411), stdev = 0.944
[info]   CI (99.9%): [≈ 0, 4.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.348 ±(99.9%) 9.347 B/op [Average]
[info]   (min, avg, max) = (0.099, 3.348, 6.041), stdev = 2.427
[info]   CI (99.9%): [≈ 0, 12.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.633
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:50
[info] Benchmark                                                                                (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                      N/A  thrpt    5   1072953.350 ±   40766.452   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      2433.606 ±     135.557  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      3568.845 ±      75.946    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2364.529 ±     493.921  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      3468.486 ±     787.978    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.961 ±       7.177  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.422 ±      10.631    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        36.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5        66.000                    ms
[info] AdtBenchmark.readJacksonScala                                                               N/A  thrpt    5   1939636.511 ±  161494.109   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1261.091 ±      98.116  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5      1023.202 ±      27.975    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1245.851 ±     563.834  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      1012.480 ±     506.401    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.200 ±       0.999  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.160 ±       0.801    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                      N/A  thrpt    5        31.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                              N/A  thrpt    5   5328209.408 ±  369942.833   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       364.829 ±      41.345  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       107.742 ±       8.601    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       380.280 ±     609.276  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       111.897 ±     173.484    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.001 ±       0.010    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                     N/A  thrpt    5        21.000                    ms
[info] AdtBenchmark.readPlayJson                                                                   N/A  thrpt    5    430320.259 ±   18723.894   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2379.559 ±     111.648  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      8701.271 ±     238.778    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2318.368 ±     102.989  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      8478.623 ±     623.575    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.639 ±       4.755  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         2.348 ±      17.499    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                          N/A  thrpt    5        59.000                    ms
[info] AdtBenchmark.writeCirce                                                                     N/A  thrpt    5   1072360.923 ±   85039.858   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2827.683 ±     160.482  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4150.255 ±     144.544    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2748.738 ±     406.387  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4035.668 ±     710.753    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         1.615 ±       8.070  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         2.362 ±      11.793    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        43.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        97.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                              N/A  thrpt    5   3068228.711 ±  112438.305   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1216.985 ±      47.928  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       624.169 ±      10.114    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1177.146 ±     712.818  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       603.563 ±     359.738    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.153 ±       0.879  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.079 ±       0.456    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        30.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  17528593.450 ± 2138454.538   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5       920.783 ±     101.549  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        82.655 ±       1.492    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       918.670 ±     562.760  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        82.693 ±      55.385    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.855 ±       5.380  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.075 ±       0.476    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        44.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  20187871.717 ±   22806.182   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5         2.127 ±      17.990  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5         0.166 ±       1.403    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                  N/A  thrpt    5   1089142.278 ±   63606.744   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      2491.924 ±     129.859  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5      3600.353 ±     131.295    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2449.115 ±     717.802  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      3539.999 ±    1118.141    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.503 ±       4.020  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.731 ±       5.843    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        37.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        61.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                  N/A  thrpt    5   3811908.875 ±  133781.447   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3742.542 ±     110.180  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      1545.127 ±      32.359    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3590.034 ±     529.963  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1482.004 ±     195.543    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.402 ±       2.608  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.168 ±       1.093    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        54.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        77.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                            N/A  thrpt    5  11437637.035 ±  344204.052   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5      1433.665 ±      57.413  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       197.249 ±       4.081    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1366.628 ±     568.530  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       188.004 ±      76.735    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.025 ±       8.497  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.141 ±       1.165    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5        21.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        44.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                           N/A  thrpt    5   3766516.021 ±  293976.312   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      2297.893 ±     222.911  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5       959.825 ±      28.247    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2259.827 ±     574.544  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5       943.470 ±     189.250    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.217 ±       0.989  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.090 ±       0.411    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        34.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        51.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                          N/A  thrpt    5  14840183.681 ±  948358.139   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5      1944.944 ±      85.940  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5       206.265 ±       5.487    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      1920.582 ±     588.247  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       203.776 ±      67.317    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.760 ±       6.278  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.081 ±       0.667    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        29.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        46.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                               N/A  thrpt    5   1705623.816 ±   93506.405   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      2949.360 ±     117.972  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      2721.427 ±      62.952    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2867.441 ±     660.777  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      2645.244 ±     552.372    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.504 ±       3.980  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.463 ±       3.657    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        43.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        70.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                 N/A  thrpt    5   4956153.562 ±  251969.074   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      2496.421 ±     140.862  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5       792.673 ±      16.970    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2420.312 ±     623.321  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5       768.765 ±     212.456    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.937 ±       5.677  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.302 ±       1.842    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        37.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        61.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                           N/A  thrpt    5  23793308.845 ± 1954406.255   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       748.441 ±      59.350  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5        49.505 ±       2.056    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       716.046 ±     563.964  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5        47.375 ±      37.425    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.960 ±       8.066  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.062 ±       0.525    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5        11.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5        38.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                          N/A  thrpt    5  11002541.196 ±  833798.261   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       345.133 ±      21.085  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        49.368 ±       0.981    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       321.163 ±       4.274  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        45.950 ±       3.294    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                         N/A  thrpt    5  34738881.982 ± 1542799.370   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5      1099.219 ±      71.261  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5        49.794 ±       2.932    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      1113.610 ±     690.251  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5        50.502 ±      32.951    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.833 ±       6.906  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         0.038 ±       0.313    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5        17.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        42.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5  37126009.178 ± 3069460.172   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5         0.774 ±       6.662  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.032 ±       0.278    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                              N/A  thrpt    5   2427421.950 ±  136013.810   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      3266.370 ±     125.112  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5      2117.703 ±      72.846    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      3145.303 ±     723.454  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      2039.887 ±     519.775    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.504 ±       3.985  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.322 ±       2.536    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        47.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        74.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                    128  thrpt    5    404959.917 ±   81119.978   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2409.955 ±     486.830  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      9364.365 ±     304.731    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2346.441 ±     572.790  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      9129.931 ±    2333.606    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.609 ±       4.928  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         2.579 ±      21.012    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                          128  thrpt    5        36.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                           128  thrpt    5        55.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                             128  thrpt    5    831495.124 ±   87602.500   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       696.069 ±      61.087  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5      1317.565 ±      40.212    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       709.882 ±     549.879  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1342.189 ±     981.997    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.446 ±       2.744  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.824 ±       5.007    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        11.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        18.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                            128  thrpt    5   1644615.805 ±  151374.654   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      1130.170 ±      89.092  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1081.444 ±      28.316    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1116.455 ±     693.753  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1071.641 ±     757.913    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.835 ±       5.254  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.821 ±       5.208    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        39.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                 128  thrpt    5    221191.498 ±   12892.871   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      4083.592 ±     293.874  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5     29052.941 ±     507.200    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      3885.038 ±     757.596  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     27642.265 ±    5241.190    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.357 ±       2.415  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         2.561 ±      17.357    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        58.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        90.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                   128  thrpt    5    468272.784 ±   30715.608   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1539.742 ±     120.223  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      5173.811 ±      99.132    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1504.140 ±     697.578  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5055.042 ±    2348.624    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.889 ±       5.602  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.029 ±      19.035    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                         128  thrpt    5        23.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                          128  thrpt    5        43.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                            128  thrpt    5   1013204.079 ±   51060.828   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       481.841 ±      34.545  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       748.353 ±      26.794    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       449.087 ±     676.022  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       696.449 ±    1034.291    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.096 ±       0.781  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.152 ±       1.241    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        10.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                           128  thrpt    5   2736380.846 ±   32106.847   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1304.269 ±      21.604  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       750.100 ±       4.636    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1247.603 ±     567.036  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       717.643 ±     330.427    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.860 ±       5.543  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.496 ±       3.195    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        19.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        39.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   2701731.425 ±   23858.435   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5         0.091 ±       0.778  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.053 ±       0.454    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                128  thrpt    5    669093.930 ±  104000.256   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1007.923 ±     512.095  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5      2383.071 ±    1618.573    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1018.120 ±     540.607  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2408.193 ±    1706.852    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.869 ±       2.973  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         4.357 ±       6.657    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        16.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        64.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                       128  thrpt    5     21383.443 ±    2463.473   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1747.555 ±     327.733  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    128844.625 ±   39512.409    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1657.696 ±     681.091  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    122346.632 ±   63446.365    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.547 ±       6.555  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       113.129 ±     472.016    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                             128  thrpt    5        27.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                              128  thrpt    5        48.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                128  thrpt    5     41857.290 ±    3959.334   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1248.296 ±     562.555  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     46909.010 ±   19545.902    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1237.198 ±    1036.917  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     46590.502 ±   41135.682    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.611 ±       9.155  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        61.327 ±     354.305    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        35.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                               128  thrpt    5     49293.850 ±    9716.507   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       796.873 ±     351.848  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5     25550.228 ±   14177.126    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       794.900 ±     647.602  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     25582.477 ±   24254.685    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         2.632 ±      11.331  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        84.271 ±     366.752    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        86.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                    128  thrpt    5     38178.322 ±    6639.674   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1682.234 ±     190.847  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     69512.778 ±   19618.839    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1644.566 ±      44.552  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     67894.724 ±   11914.690    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.047 ±       4.952  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        44.045 ±     207.110    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        25.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        45.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                      128  thrpt    5     34461.502 ±    5987.821   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      2367.773 ±     407.619  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5    108426.397 ±   36483.112    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2323.664 ±     490.900  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    106446.493 ±   40484.322    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.938 ±      10.601  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       138.636 ±     512.583    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        36.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        67.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                               128  thrpt    5     32173.557 ±    5335.877   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1881.383 ±     261.362  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     92259.608 ±   27575.993    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1845.028 ±     566.358  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     90549.365 ±   39011.661    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         2.527 ±       8.871  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       125.018 ±     450.414    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5       116.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                              128  thrpt    5     39045.831 ±    5201.129   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2124.149 ±     145.530  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     85705.098 ±   14899.679    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2074.112 ±     727.912  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     83707.612 ±   33186.492    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         1.746 ±      10.610  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        72.892 ±     444.176    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        32.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        56.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5     38272.845 ±    5443.794   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      2024.758 ±     183.171  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5     83373.528 ±   17516.813    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      1966.400 ±     696.096  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5     81050.671 ±   35890.425    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         5.251 ±      20.622  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5       214.693 ±     834.195    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        32.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5       127.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                   128  thrpt    5      9260.310 ±    1154.031   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1257.597 ±     125.420  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5    213754.061 ±    6010.500    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1235.873 ±     552.607  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    209832.804 ±   84269.200    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.039 ±       6.747  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       181.038 ±    1190.585    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        48.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                           128  thrpt    5     21440.356 ±    3188.824   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1946.187 ±     685.239  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    143345.634 ±   68756.594    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1909.723 ±     849.077  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    140767.663 ±   81533.724    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         5.251 ±      17.053  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       388.050 ±    1281.273    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        32.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        68.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                    128  thrpt    5     45428.856 ±    9034.073   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1433.986 ±     809.057  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     49574.187 ±   22940.795    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1370.975 ±     729.263  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     47378.856 ±   19171.619    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.309 ±      10.242  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        79.649 ±     358.442    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        22.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       127.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                   128  thrpt    5     65771.864 ±    1686.940   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       753.049 ±      24.705  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     18017.403 ±     535.022    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       789.095 ±     639.960  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     18886.044 ±   15436.359    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.685 ±      10.299  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        64.191 ±     246.454    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        13.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        95.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                        128  thrpt    5     42197.592 ±    3412.265   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2507.597 ±     369.803  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     93554.070 ±   17115.140    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2456.785 ±     640.631  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     91608.003 ±   22260.105    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.112 ±       5.743  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        42.347 ±     220.233    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        37.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        62.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                   128  thrpt    5     40292.361 ±    8594.280   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1877.033 ±     454.751  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     73665.338 ±   33414.228    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1829.544 ±    1080.012  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     71968.850 ±   56578.531    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.399 ±      17.982  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        94.993 ±     706.498    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        49.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5     54675.514 ±    4551.549   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1742.249 ±     155.622  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     50159.478 ±    5681.450    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1686.554 ±     545.530  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     48598.664 ±   18472.228    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.407 ±      11.139  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        41.222 ±     327.319    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        26.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        48.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     54931.192 ±    3142.825   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5      1644.173 ±     107.903  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     47105.911 ±    2978.028    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5      1622.261 ±      38.130  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     46485.417 ±    3623.985    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.369 ±       7.036  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        38.928 ±     200.202    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5        25.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        54.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                          128  thrpt    5    406687.377 ±   10721.425   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2213.699 ±     110.118  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      8565.989 ±     343.031    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2136.503 ±     616.653  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      8266.116 ±    2299.818    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.955 ±       6.758  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.712 ±      26.319    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        33.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        55.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                    128  thrpt    5   1832144.669 ±  245589.203   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       608.858 ±     112.066  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       523.107 ±      87.634    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       584.941 ±     559.981  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       500.138 ±     448.035    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.033 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.028 ±       0.060    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5        32.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    826368.729 ±    6750.606   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       340.826 ±      10.466  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       649.046 ±      20.512    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       321.108 ±       0.140  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       611.496 ±       5.036    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.014 ±       0.091  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.026 ±       0.174    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        23.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   2182071.732 ±   52669.063   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       433.909 ±      13.989  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       312.845 ±      11.115    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       459.241 ±     691.418  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       331.375 ±     502.280    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.015 ±       0.080  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.011 ±       0.058    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        26.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    153786.047 ±    5796.636   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4069.039 ±     170.431  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     41632.696 ±     953.209    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      3909.867 ±     634.726  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     40010.356 ±    7028.020    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.100 ±       0.183  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.021 ±       1.858    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        58.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        79.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    474858.789 ±   57537.972   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1561.487 ±     216.512  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5174.033 ±     136.413    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1563.260 ±     571.848  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5179.778 ±    1791.862    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.160 ±       5.412  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.958 ±      18.746    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5        24.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5        53.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                   128  thrpt    5   2567130.854 ±  291726.449   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5      1223.242 ±     137.649  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       749.804 ±      18.533    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5      1170.052 ±     692.366  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       717.360 ±     423.897    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.901 ±       6.057  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.535 ±       3.542    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5        18.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        40.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5   1159678.854 ±   58248.810   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       550.401 ±      40.848  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       746.801 ±      20.390    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       517.150 ±     683.884  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       700.285 ±     909.562    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.028 ±       0.154    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5        12.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   2955470.732 ±  175690.399   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1420.398 ±     110.016  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       756.320 ±      47.277    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1381.132 ±     551.125  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       735.765 ±     308.663    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.845 ±       6.830  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.460 ±       3.720    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        43.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3183272.266 ±  189489.877   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5   1009362.021 ±  138287.948   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1086.920 ±     140.959  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      1694.740 ±      26.098    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1092.693 ±     676.192  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1701.430 ±     947.295    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.089 ±       3.205  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.673 ±       4.858    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        17.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5        46.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                             128  thrpt    5    229709.414 ±   20288.401   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2925.774 ±     274.566  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     20058.599 ±    3460.303    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2848.848 ±     658.841  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     19525.639 ±    4895.088    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.645 ±       3.235  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         4.475 ±      22.714    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                   128  thrpt    5        43.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                    128  thrpt    5        61.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                      128  thrpt    5    423106.884 ±    4723.179   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       278.863 ±       6.890  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      1037.254 ±      33.388    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       322.693 ±       2.643  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1200.279 ±      21.921    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.412 ±       3.501  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.532 ±      13.024    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        16.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                     128  thrpt    5   1313338.050 ±   32396.626   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       261.721 ±      12.486  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       313.585 ±       9.333    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       299.060 ±     152.047  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       358.255 ±     179.330    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.010 ±       0.053    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        17.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                          128  thrpt    5    126665.031 ±    4307.209   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4180.992 ±     150.111  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51936.087 ±     915.623    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      4040.286 ±     859.235  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     50188.869 ±   10572.545    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.075 ±       0.251  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.929 ±       3.114    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        60.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        84.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                            128  thrpt    5    345896.021 ±   25496.884   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1892.594 ±     162.069  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5      8610.610 ±     297.441    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1839.806 ±     729.461  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8367.370 ±    3106.441    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.341 ±       2.364  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.536 ±      10.621    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                     128  thrpt    5   2231547.854 ±  172717.209   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       618.946 ±      65.302  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       436.440 ±      17.791    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       586.173 ±     559.144  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       412.499 ±     382.364    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.735 ±       6.153  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.510 ±       4.260    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        38.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                    128  thrpt    5   3431214.497 ±  202691.466   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       950.130 ±      71.864  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       435.755 ±      10.314    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       920.022 ±     565.168  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       421.318 ±     242.363    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.851 ±       5.398  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.389 ±       2.457    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   3629058.984 ±   38593.100   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.227 ±       1.953  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.099 ±       0.848    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                         128  thrpt    5     57316.370 ±   12968.618   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2092.150 ±     211.677  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     57684.149 ±   20127.180    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2022.109 ±     542.189  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     55880.182 ±   29735.905    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.226 ±      11.349  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        63.055 ±     319.911    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        31.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        61.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                             128  thrpt    5    313979.620 ±   11420.718   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3382.178 ±     208.537  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     16950.514 ±     460.773    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3247.649 ±     604.319  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     16277.977 ±    3045.521    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.351 ±       2.666  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.784 ±      13.574    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        49.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        74.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                      128  thrpt    5    687581.357 ±   69612.046   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1897.550 ±     157.144  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      4343.615 ±     109.506    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1856.915 ±     702.756  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4257.001 ±    1875.012    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.129 ±       0.759  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.294 ±       1.716    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        28.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        43.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   2895077.613 ±  213045.424   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1040.721 ±      43.465  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       565.902 ±      61.132    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       987.529 ±      10.732  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       536.903 ±      36.736    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.769 ±       5.514  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.414 ±       2.952    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                          128  thrpt    5    130781.986 ±   30696.353   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4190.648 ±     401.757  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     50530.858 ±    9058.348    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      4110.412 ±     764.395  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     49586.799 ±   13507.369    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.834 ±       7.317  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        22.917 ±      92.956    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        62.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5       122.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                            128  thrpt    5    318393.024 ±   22367.594   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      2521.598 ±     115.731  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     12464.854 ±     428.840    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2450.690 ±     633.794  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     12122.425 ±    3664.830    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.083 ±       0.417  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.410 ±       2.033    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        37.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        51.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   2040305.883 ±   33440.815   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       718.536 ±      25.422  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       554.201 ±      21.890    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       718.602 ±     556.210  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       554.142 ±     425.757    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.874 ±       5.735  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.676 ±       4.439    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5   2766381.816 ±  209744.141   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       979.568 ±      59.205  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       557.543 ±      73.126    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       854.444 ±     700.426  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       486.750 ±     411.399    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.812 ±       6.166  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.456 ±       3.459    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        34.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   2846508.272 ±   14475.135   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                         128  thrpt    5    763573.228 ±    4775.173   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      4666.658 ±      79.310  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9617.366 ±     106.234    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4528.780 ±     665.261  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9333.265 ±    1370.958    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.075 ±       0.193  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.155 ±       0.399    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        67.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        98.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                           128  thrpt    5     28531.587 ±     999.075   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1762.214 ±     219.021  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     97187.141 ±   10410.766    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1756.582 ±     666.998  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     96842.092 ±   34428.948    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.195 ±       5.469  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        65.397 ±     297.727    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        70.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                     128  thrpt    5     97098.230 ±   11748.621   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       907.404 ±     709.744  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5     14787.049 ±   13423.169    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       854.173 ±    1007.202  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     13948.124 ±   18014.407    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         3.512 ±       8.922  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        56.893 ±     141.129    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                            128  thrpt    5       113.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                    128  thrpt    5     77213.954 ±   20836.387   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1449.283 ±     113.872  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     29672.226 ±    9645.995    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1429.209 ±     678.841  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     29331.549 ±   19249.250    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.801 ±       5.988  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        57.293 ±     121.810    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        22.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        56.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                   128  thrpt    5    127062.988 ±   53366.062   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1066.089 ±     848.992  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     13507.977 ±   15201.746    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1103.474 ±     871.273  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     13957.148 ±   15231.069    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         8.020 ±      30.961  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       109.242 ±     451.214    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        78.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                        128  thrpt    5     48694.041 ±    7851.913   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2110.565 ±     147.434  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     68278.418 ±    9404.642    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2026.011 ±     537.672  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     65470.252 ±   13059.240    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.220 ±      10.012  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        40.628 ±     334.023    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        31.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        60.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                          128  thrpt    5     42708.093 ±    7362.325   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5       862.117 ±     386.036  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     31871.620 ±   17248.488    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5       846.172 ±     688.879  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     31447.593 ±   30173.861    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.865 ±       4.150  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        69.168 ±     149.929    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        13.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        50.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                   128  thrpt    5     42015.841 ±    9295.156   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       637.483 ±     819.847  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     24296.234 ±   37513.825    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       648.179 ±     884.641  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     24622.524 ±   38722.884    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.286 ±       5.265  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        49.792 ±     211.300    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        10.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        21.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                  128  thrpt    5     47198.356 ±    5183.260   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       515.433 ±     226.177  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     17213.597 ±    8907.536    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       454.192 ±     684.190  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     15211.682 ±   23767.752    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.001 ±       0.006  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.035 ±       0.182    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     47429.322 ±    5989.228   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5       552.544 ±      73.646  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     18348.026 ±    3872.772    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5       521.900 ±     687.100  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     17271.858 ±   22192.266    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.014 ±       4.067  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        33.333 ±     133.452    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        36.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                         128  thrpt    5     16012.752 ±   10208.025   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1223.146 ±     113.171  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    123231.563 ±   88495.173    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1170.661 ±     548.368  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    119186.816 ±  129178.348    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.894 ±      12.773  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       290.117 ±    1170.797    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                               128  thrpt    5        19.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                128  thrpt    5       157.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                  128  thrpt    5     15212.179 ±    9305.456   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1051.122 ±     132.322  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    111441.563 ±   83435.372    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1031.445 ±     640.103  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    110854.207 ±  139097.991    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         5.636 ±      36.651  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       568.745 ±    3597.130    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        18.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5       129.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                 128  thrpt    5    157314.597 ±    8302.771   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       433.350 ±      80.459  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      4337.880 ±    1039.158    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       452.336 ±     680.308  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      4519.156 ±    6717.110    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.019 ±       0.100  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.186 ±       0.991    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        26.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                      128  thrpt    5     16336.531 ±    1497.506   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1455.968 ±     168.881  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    140225.070 ±    5678.840    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1443.364 ±     677.320  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    139147.837 ±   68886.614    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.469 ±       3.860  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        46.908 ±     386.738    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        23.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        58.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                        128  thrpt    5     68305.683 ±    8947.871   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1615.806 ±      59.552  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     37269.254 ±    6490.893    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1561.153 ±     578.235  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     36025.679 ±   15301.972    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.556 ±      12.507  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        38.000 ±     306.912    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        46.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                 128  thrpt    5    107797.082 ±    4889.475   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1439.631 ±      54.530  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     21018.409 ±     611.248    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1434.359 ±     686.094  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     20952.551 ±   10449.242    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.949 ±       5.577  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        14.014 ±      82.833    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        22.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        47.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                128  thrpt    5    269956.781 ±   12102.198   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       448.140 ±      30.011  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2612.410 ±     181.058    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       460.102 ±     693.591  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2685.941 ±    4098.147    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.122 ±       0.659    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        26.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    288243.473 ±    1897.890   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.842 ±       5.621  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         4.606 ±      30.750    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                     128  thrpt    5     73507.098 ±   48751.648   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1691.115 ±     612.045  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     37114.770 ±   28001.735    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1617.517 ±     423.254  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     35545.634 ±   26873.251    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5        26.652 ±     105.504  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       563.816 ±    2252.783    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        38.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5       401.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                             128  thrpt    5    125482.665 ±   16153.232   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1702.374 ±     774.611  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     21335.237 ±    8409.097    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1622.675 ±     846.241  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     20332.045 ±    9360.351    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.058 ±       3.700  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        13.290 ±      46.814    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        49.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                      128  thrpt    5    162681.170 ±    7627.830   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       965.148 ±      52.586  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9335.979 ±     109.744    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       969.127 ±      24.106  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9375.383 ±     351.116    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.453 ±       1.916  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         4.419 ±      18.810    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        15.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        27.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                     128  thrpt    5    225850.518 ±   15112.891   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       150.553 ±      15.561  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1049.007 ±      90.611    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       181.884 ±     648.998  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1274.227 ±    4529.278    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.142 ±       1.159  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.021 ±       8.332    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         3.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        12.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                          128  thrpt    5     83327.518 ±    6352.349   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2651.542 ±      98.326  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     50084.135 ±    2382.033    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2586.146 ±     535.509  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     48869.595 ±   11863.539    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.116 ±       9.249  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        21.618 ±     179.432    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        39.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        61.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                            128  thrpt    5    231616.457 ±   10164.333   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1507.875 ±      58.028  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10245.561 ±     339.713    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1496.698 ±     694.422  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     10176.586 ±    4973.594    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.121 ±       5.665  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         7.607 ±      38.678    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        55.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                     128  thrpt    5    735912.462 ±   49047.858   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       578.801 ±      59.368  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1237.545 ±      49.018    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       520.975 ±     686.844  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1111.218 ±    1432.873    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.019 ±       0.082  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.040 ±       0.178    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        31.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                    128  thrpt    5    668308.086 ±   43619.177   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       532.052 ±      44.786  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1252.713 ±     111.921    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       525.312 ±     690.360  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1240.689 ±    1672.400    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.023 ±       0.124  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.056 ±       0.296    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        30.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    672877.129 ±    2845.473   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.162 ±       1.395  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.379 ±       3.259    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                         128  thrpt    5    612875.796 ±   44877.667   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1519.492 ±     107.017  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      3901.634 ±      87.267    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1450.198 ±     696.707  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3727.754 ±    1934.340    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.443 ±       3.309  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.124 ±       8.354    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        42.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                            128  thrpt    5     40719.407 ±    4596.546   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2042.619 ±     721.785  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     79125.994 ±   36576.573    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2000.730 ±    1025.811  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     77513.762 ±   46919.221    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         4.873 ±      17.506  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       191.645 ±     693.119    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        32.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                   128  thrpt    5       103.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                      128  thrpt    5    286957.519 ±    2573.782   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       305.290 ±       8.427  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1674.235 ±      57.372    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       324.034 ±       1.389  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1777.009 ±      14.084    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.241 ±       2.030  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.318 ±      11.100    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        17.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                     128  thrpt    5    122162.372 ±    8944.068   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1131.238 ±     102.701  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     14571.240 ±     593.283    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1095.019 ±     677.257  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     14119.038 ±    9108.758    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.594 ±       4.435  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         7.718 ±      57.696    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        17.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        33.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                    128  thrpt    5    566033.551 ±    5417.819   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       378.957 ±       6.682  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1053.559 ±      20.265    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       328.312 ±       2.095  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       912.759 ±      10.449    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.010 ±       0.085  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.027 ±       0.236    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        19.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                         128  thrpt    5     52807.884 ±    8457.705   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      2374.884 ±     501.675  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     70980.666 ±   26389.076    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2249.598 ±     504.761  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     67160.105 ±   20264.143    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.516 ±       3.772  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        16.333 ±     120.921    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        51.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                           128  thrpt    5     94028.338 ±    4188.203   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       750.973 ±      23.930  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     12568.473 ±     441.161    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5       716.731 ±     560.921  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     12005.213 ±    9676.121    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.058 ±       6.122  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        17.653 ±     102.176    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        41.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                     128  thrpt    5    114854.105 ±   20536.526   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       434.871 ±      78.753  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5      5958.212 ±     221.515    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       389.482 ±     558.423  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5323.287 ±    7271.529    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.012 ±       0.108  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.167 ±       1.439    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        20.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                    128  thrpt    5    104262.098 ±    6465.296   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       396.625 ±      34.141  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      5985.922 ±     279.651    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       391.135 ±     562.532  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      5902.360 ±    8455.434    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.192 ±       1.109    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        26.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                   128  thrpt    5    120097.183 ±    8559.824   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       458.740 ±      23.812  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      6011.352 ±     232.010    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       459.492 ±     692.086  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      6047.306 ±    9432.818    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.066 ±       0.410  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.858 ±       5.320    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        29.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    116991.555 ±   22835.355   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5       348.931 ±      75.548  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5      4692.709 ±     224.099    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                   128  thrpt    5       393.614 ±     563.936  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5259.949 ±    6752.091    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.214 ±       1.786  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         2.836 ±      23.687    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                  128  thrpt    5        23.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                          128  thrpt    5     13052.125 ±    3170.404   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2145.329 ±     761.193  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    260614.132 ±  160017.613    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2073.567 ±    1169.269  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    252335.751 ±  203228.818    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         3.694 ±      19.272  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       446.053 ±    2327.780    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                128  thrpt    5        34.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                 128  thrpt    5       114.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                   128  thrpt    5     13289.825 ±     823.743   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1877.454 ±     138.749  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    222316.460 ±    7481.244    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1818.393 ±     638.892  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    215202.903 ±   68015.421    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.968 ±       7.958    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        40.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                  128  thrpt    5    213001.385 ±   54517.216   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       571.661 ±     156.310  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      4222.909 ±     283.383    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       518.641 ±     683.148  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3869.243 ±    5488.537    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.658 ±       5.099  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         4.854 ±      37.776    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                       128  thrpt    5      6680.793 ±     519.595   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1708.787 ±     168.137  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    402475.878 ±   12906.921    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1649.036 ±      51.624  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    388571.576 ±   35671.550    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.641 ±       2.678  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       149.538 ±     620.806    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        25.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        42.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                         128  thrpt    5     33730.543 ±    9420.049   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      2223.255 ±     649.586  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    104215.600 ±   44719.209    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2185.996 ±     872.838  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    102763.698 ±   62173.098    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         8.326 ±      41.588  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       412.984 ±    2059.758    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        39.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                128  thrpt    5       273.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                  128  thrpt    5     37029.992 ±    5260.742   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      2026.749 ±     487.090  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     86306.650 ±   28885.866    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1995.929 ±     927.113  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     85104.652 ±   47657.721    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5        11.310 ±      43.019  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       489.025 ±    1878.247    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5        34.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5       177.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                 128  thrpt    5    313998.183 ±    9337.382   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       715.808 ±      43.258  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      3587.333 ±     145.584    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       658.471 ±       4.211  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3300.212 ±      85.119    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.766 ±       6.281  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.801 ±      31.148    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        10.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        34.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    349794.949 ±    1770.711   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5         0.185 ±       1.435  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.832 ±       6.472    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                      128  thrpt    5     36114.808 ±    9464.319   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      2611.304 ±    1010.285  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    114178.444 ±   51365.956    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                     128  thrpt    5         0.003 ±       0.030  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                128  thrpt    5         0.166 ±       1.427    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Metaspace                                  128  thrpt    5         0.010 ±       0.087  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.Metaspace.norm                             128  thrpt    5         0.481 ±       4.141    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2581.209 ±    1073.227  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    112835.574 ±   52795.170    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                 128  thrpt    5        53.851 ±     463.671  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                            128  thrpt    5      2573.053 ±   22154.761    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5        24.576 ±      81.432  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5      1118.654 ±    3785.156    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        50.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5       423.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                              128  thrpt    5    179117.950 ±    9475.200   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2521.303 ±      89.858  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     22152.242 ±     683.539    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2432.797 ±     738.166  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21369.816 ±    6152.744    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.781 ±       4.059  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.784 ±      35.197    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        37.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                     128  thrpt    5        61.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                        128  thrpt    5    552156.077 ±   26788.439   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       593.701 ±      52.164  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5      1691.868 ±      83.478    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       586.143 ±     561.938  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1667.851 ±    1566.716    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.006 ±       0.027  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.017 ±       0.077    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                               128  thrpt    5        34.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                       128  thrpt    5    472894.362 ±   27126.879   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5       476.327 ±      12.400  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1585.247 ±      57.711    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       450.766 ±     679.038  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1506.980 ±    2354.429    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.956 ±       8.144  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.214 ±      27.371    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        13.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                      128  thrpt    5    632464.525 ±  168896.537   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       423.143 ±      93.718  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1053.536 ±      62.751    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       460.112 ±     692.790  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1162.577 ±    1960.468    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.112  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.063 ±       0.271    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        27.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                           128  thrpt    5    110150.510 ±    8249.677   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      3638.763 ±     243.477  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     51984.412 ±    1236.003    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      3553.876 ±     638.112  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     50750.968 ±    5888.878    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.087 ±       0.243  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.250 ±       3.453    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        53.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        69.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                             128  thrpt    5    248434.944 ±    3107.158   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1778.967 ±      56.062  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     11268.163 ±     237.284    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1677.255 ±     533.508  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     10622.838 ±    3300.729    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.385 ±       7.573  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         8.800 ±      48.145    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        50.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                       128  thrpt    5   1246319.916 ±   10060.203   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       702.316 ±      22.406  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       886.720 ±      34.081    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       650.707 ±       6.144  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       821.552 ±      11.791    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.875 ±       7.395  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.104 ±       9.335    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                              128  thrpt    5        35.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                      128  thrpt    5   1215740.240 ±   90413.009   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5       681.534 ±      32.332  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5       882.327 ±      26.044    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       644.184 ±      10.053  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       834.112 ±      59.942    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.036  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.032 ±       0.046    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        17.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1098914.241 ±  135375.177   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       615.709 ±      85.342  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       881.554 ±      15.048    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       592.159 ±     566.094  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       845.209 ±     772.737    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.024 ±       0.096    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        33.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1119842.076 ±  214325.475   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         0.168 ±       1.444  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5         0.230 ±       1.975    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                          128  thrpt    5     39479.814 ±    7179.057   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1948.819 ±     164.201  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     77785.896 ±   11959.489    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1895.772 ±     591.146  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     75467.537 ±   11204.275    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         2.387 ±       9.163  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        98.154 ±     389.456    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        29.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        56.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                         128  thrpt    5    132984.089 ±   17288.245   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1732.061 ±     436.260  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     20514.238 ±    6172.515    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1661.998 ±     548.299  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     19704.926 ±    8250.408    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         2.215 ±      10.607  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        26.635 ±     127.673    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                               128  thrpt    5        26.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                128  thrpt    5        88.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                  128  thrpt    5    190142.851 ±   22180.710   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1140.652 ±     123.304  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      9440.675 ±     224.137    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1109.498 ±     686.435  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      9184.380 ±    5631.156    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.160 ±       1.032  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.337 ±       8.642    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        17.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        28.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                 128  thrpt    5    250080.577 ±   13324.346   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1340.532 ±      77.561  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      8435.647 ±     212.013    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1303.486 ±      14.901  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      8203.991 ±     520.466    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.945 ±       6.107  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         5.996 ±      38.717    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        48.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                      128  thrpt    5    102246.661 ±   12516.433   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3317.719 ±     253.837  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     51097.786 ±    6636.172    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3266.979 ±     595.142  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     50299.923 ±    9028.779    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.025 ±       6.897  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        16.440 ±     112.174    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        49.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        80.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                        128  thrpt    5    239168.928 ±    7602.396   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1550.052 ±      30.595  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10199.309 ±     238.850    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1503.454 ±     700.697  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9896.828 ±    4767.648    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.893 ±       5.567  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         5.892 ±      36.716    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        23.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        44.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                 128  thrpt    5    817136.155 ±   70526.372   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       645.691 ±      45.997  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      1243.460 ±      30.357    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       646.145 ±      13.457  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      1244.615 ±      82.302    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.056 ±       0.206    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        10.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        15.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                128  thrpt    5    661391.356 ±   43499.575   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       523.620 ±      34.019  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      1245.804 ±      15.413    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       526.401 ±     694.160  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      1249.355 ±    1613.059    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.069 ±       0.212    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        27.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    688004.177 ±    6004.153   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.815 ±       7.011  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         1.869 ±      16.090    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                     128  thrpt    5    616056.474 ±   42790.995   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1528.151 ±     120.386  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      3903.412 ±      52.068    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1453.096 ±     697.263  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3710.799 ±    1716.776    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.429 ±       3.425  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.088 ±       8.671    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        22.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                    128  thrpt    5     11868.670 ±    1950.130   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1576.018 ±     587.651  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5    209887.416 ±  114504.739    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1559.181 ±    1030.075  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    207927.545 ±  168326.916    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.850 ±       5.085  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       244.701 ±     650.817    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        24.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        66.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                             128  thrpt    5     11925.262 ±    1054.290   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      1400.586 ±      95.142  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5    184852.308 ±    9904.343    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1360.799 ±     541.407  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5    179806.923 ±   81087.020    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.025 ±       7.607  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       132.501 ±     977.618    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        53.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5    324016.404 ±   11974.670   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      2184.071 ±     134.364  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     10607.626 ±     391.550    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      2108.505 ±     730.892  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     10236.994 ±    3308.156    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.271 ±       2.019  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         1.333 ±       9.973    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        32.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                 128  thrpt    5      9254.477 ±     420.798   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1709.687 ±     115.952  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5    290710.249 ±    8774.240    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1627.953 ±      65.422  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    276840.808 ±   11456.854    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.391 ±       3.052  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        66.437 ±     518.681    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        25.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                   128  thrpt    5     26579.366 ±    2370.152   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1496.268 ±     573.105  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5     88738.098 ±   40240.642    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1435.020 ±     664.409  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     85134.506 ±   45282.148    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         3.476 ±      12.501  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       207.985 ±     769.484    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5       117.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     30561.176 ±    7196.917   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1297.958 ±     451.624  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5     67280.514 ±   38346.685    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1305.350 ±     542.586  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     67654.958 ±   41832.511    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         4.343 ±      21.286  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       218.572 ±    1024.654    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        71.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    776911.367 ±   33177.894   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1451.516 ±      95.345  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      2939.757 ±      76.880    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1380.978 ±     558.103  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      2795.630 ±    1046.728    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.836 ±       4.764  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         1.706 ±       9.726    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    940502.412 ±    9485.032   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                128  thrpt    5     30454.016 ±    3278.436   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1401.271 ±     634.575  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5     72517.703 ±   36737.660    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1356.461 ±     998.180  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     70344.897 ±   58268.614    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         5.068 ±      19.648  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       262.367 ±    1009.586    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       164.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                        128  thrpt    5     42068.513 ±   12079.252   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      2153.095 ±    1029.078  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     80625.391 ±   34326.727    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      2122.639 ±    1479.549  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     79229.028 ±   47289.725    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         7.104 ±      21.965  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       269.988 ±     843.357    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                              128  thrpt    5        34.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                               128  thrpt    5       113.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                 128  thrpt    5     41716.880 ±   15395.315   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1562.703 ±     913.244  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     58914.591 ±   24384.977    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.005 ±       0.045  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.204 ±       1.758    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.014 ±       0.123  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.565 ±       4.863    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1516.650 ±    1046.317  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     57229.507 ±   33146.909    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                            128  thrpt    5         1.297 ±      11.169  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5        51.156 ±     440.466    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         3.016 ±       8.907  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       115.111 ±     350.334    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5       133.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                128  thrpt    5    539852.443 ±   47420.533   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1449.915 ±     126.676  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4228.417 ±     137.375    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1375.626 ±     552.121  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4012.816 ±    1622.183    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.808 ±       4.858  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.385 ±      14.306    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                     128  thrpt    5     21489.746 ±    1674.386   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2061.302 ±     199.381  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    151034.084 ±   23899.413    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2015.594 ±     576.798  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    147691.972 ±   46599.113    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         3.005 ±       9.616  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       222.712 ±     721.286    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        31.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        66.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                       128  thrpt    5     70945.346 ±   12836.701   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1901.688 ±     156.083  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     42225.602 ±    4506.513    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1832.262 ±     654.870  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     40607.478 ±   10211.922    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.483 ±      11.443  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        35.585 ±     277.527    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                              128  thrpt    5        51.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                128  thrpt    5    204514.900 ±   12630.008   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1600.896 ±      71.830  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     12319.115 ±     426.713    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1567.859 ±     580.161  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     12075.668 ±    4905.939    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.954 ±       6.161  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         7.446 ±      48.097    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        24.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        45.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                               128  thrpt    5    848697.460 ±  104967.760   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       943.848 ±      73.761  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1750.769 ±      96.233    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       921.505 ±     564.790  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1703.219 ±     884.321    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.832 ±       5.816  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.534 ±      10.763    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    916063.809 ±    8957.995   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         4.042 ±      31.740  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         6.970 ±      54.750    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                    128  thrpt    5     92875.945 ±    7620.064   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      1939.115 ±     199.677  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     32854.742 ±     999.376    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1847.423 ±     702.340  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     31263.279 ±    9479.141    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.415 ±       2.109  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         7.106 ±      36.549    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                        128  thrpt    5     18355.903 ±    1568.113   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1715.389 ±     671.204  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5    147138.528 ±   60686.665    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1716.797 ±     708.016  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    147093.159 ±   55550.507    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.043 ±       6.989  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       173.503 ±     590.198    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                              128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                               128  thrpt    5        78.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                 128  thrpt    5     18907.888 ±     781.999   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1592.957 ±     390.340  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5    132583.065 ±   32317.750    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1564.953 ±    1065.921  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    130217.667 ±   87427.179    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.743 ±      10.534  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       146.357 ±     883.678    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        24.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        50.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                128  thrpt    5    788545.501 ±   25259.276   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      2120.385 ±     126.207  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4230.707 ±     145.510    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      2048.928 ±     602.503  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4086.945 ±    1097.300    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.564 ±       4.592  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         1.139 ±       9.272    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        31.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                     128  thrpt    5     14354.446 ±    1474.817   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      1809.029 ±     230.338  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    198275.421 ±    4969.416    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1754.463 ±     667.045  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    192553.928 ±   81896.824    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.839 ±       4.922  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        93.830 ±     557.641    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        53.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                       128  thrpt    5     44499.886 ±    3650.333   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1791.827 ±     760.980  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     63380.896 ±   27386.639    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1773.668 ±    1092.033  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     62762.063 ±   39573.054    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         3.895 ±       4.899  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       138.296 ±     179.243    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                              128  thrpt    5       180.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                128  thrpt    5     56117.639 ±   13006.300   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1670.271 ±     456.096  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47129.465 ±   23852.931    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1648.779 ±     706.035  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     46615.849 ±   30982.212    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         4.454 ±      10.855  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       122.583 ±     291.842    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5       174.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                               128  thrpt    5   1015551.859 ±   88733.781   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       957.726 ±      51.549  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1484.323 ±      82.361    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       986.957 ±      16.738  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1530.037 ±     156.671    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.840 ±       5.442  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.289 ±       8.364    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        15.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        38.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1013761.755 ±   42521.182   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         2.663 ±      22.645  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         4.215 ±      35.851    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                    128  thrpt    5      3634.145 ±    1296.360   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5       793.710 ±    1789.452  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5    362735.989 ± 1007275.824    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5       809.545 ±    2184.654  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    373283.255 ± 1204303.598    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         8.254 ±      42.873  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      3585.881 ±   18605.591    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5       171.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                             128  thrpt    5    135547.588 ±    9775.927   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2114.164 ±     136.387  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     24541.769 ±     801.112    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2038.076 ±     508.434  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     23667.779 ±    6399.660    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.349 ±       2.402  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         4.058 ±      27.915    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        31.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        47.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                       128  thrpt    5    395460.844 ±   12720.547   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       818.060 ±      44.060  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5      3255.617 ±     195.888    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       781.576 ±     689.786  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3111.764 ±    2776.697    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.027 ±       8.484  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         4.122 ±      34.057    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        12.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        39.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                      128  thrpt    5    266691.673 ±   17735.495   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       555.948 ±      42.555  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      3281.005 ±     279.501    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       582.911 ±     557.847  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3440.039 ±    3297.235    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.092 ±       6.088  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         6.428 ±      36.146    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        40.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                     128  thrpt    5    478610.960 ±   22178.884   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       626.678 ±      34.829  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      2060.894 ±     186.618    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       592.726 ±     565.379  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1951.809 ±    1896.096    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.068 ±       0.320    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        35.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                          128  thrpt    5    106291.429 ±    5986.604   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3736.744 ±     219.289  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     55322.833 ±    1198.927    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3612.185 ±     501.373  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     53499.883 ±    9347.433    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.279 ±       2.043  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         4.130 ±      30.246    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        54.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        81.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                            128  thrpt    5    213584.479 ±    8643.732   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1844.371 ±     115.496  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     13587.383 ±     444.007    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1772.287 ±     696.992  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     13055.973 ±    5071.453    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.902 ±       7.455  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.605 ±      54.553    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        27.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                      128  thrpt    5    916850.092 ±  106083.868   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       739.855 ±      96.946  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1269.753 ±      59.674    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       715.792 ±     558.712  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1229.233 ±     963.017    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.059 ±       9.002  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.785 ±      15.166    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                     128  thrpt    5    595641.721 ±   18682.594   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       480.431 ±      24.808  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1269.360 ±      48.618    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       519.324 ±     684.479  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1371.430 ±    1799.245    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.066 ±       0.275    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        34.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                    128  thrpt    5    795922.522 ±   14557.697   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       643.840 ±      18.682  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1272.990 ±      31.453    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       657.800 ±       4.465  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1300.607 ±      20.943    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.618 ±       5.234  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.224 ±      10.363    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    823980.609 ±   70655.186   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         4.012 ±      32.745  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         7.705 ±      62.781    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                         128  thrpt    5     35568.377 ±    7077.960   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1695.222 ±     406.650  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     75353.742 ±   34068.624    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1642.486 ±     872.053  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     73172.859 ±   53118.493    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.115 ±       5.700  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        51.989 ±     272.445    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        25.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        43.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                   128  thrpt    5      8719.884 ±     618.170   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                    128  thrpt    5      1209.683 ±      80.777  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                               128  thrpt    5    218258.655 ±    3666.162    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1171.310 ±     681.086  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    211783.721 ±  135014.561    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.348 ±       7.302  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       245.814 ±    1332.230    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                         128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                          128  thrpt    5        54.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                            128  thrpt    5      8907.755 ±     891.365   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                             128  thrpt    5      1170.224 ±     111.231  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    206740.303 ±    4810.391    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space           128  thrpt    5         0.003 ±       0.022  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm      128  thrpt    5         0.464 ±       3.996    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                        128  thrpt    5         0.007 ±       0.063  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                   128  thrpt    5         1.315 ±      11.322    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1125.416 ±     631.234  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    198927.079 ±  112851.677    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                       128  thrpt    5         0.546 ±       4.701  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                  128  thrpt    5        97.782 ±     841.936    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         1.143 ±       6.664  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       198.573 ±    1152.631    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                  128  thrpt    5        19.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                   128  thrpt    5        96.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                           128  thrpt    5    194162.778 ±    4951.083   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1940.867 ±     105.828  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5     15726.878 ±     489.935    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1860.794 ±     589.232  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     15075.666 ±    4595.266    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.970 ±       5.555  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         7.878 ±      45.068    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                 128  thrpt    5        29.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                  128  thrpt    5        52.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                128  thrpt    5      8833.415 ±     459.501   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                 128  thrpt    5      1387.668 ±      61.889  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                            128  thrpt    5    247217.592 ±    4240.512    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1380.229 ±     551.636  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    245983.316 ±  102065.231    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.252 ±       1.139  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        44.854 ±     203.672    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                      128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                       128  thrpt    5        38.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                  128  thrpt    5     21916.960 ±    4051.604   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                   128  thrpt    5      1371.954 ±     588.567  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                              128  thrpt    5     98973.176 ±   56810.201    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                          128  thrpt    5      1361.379 ±     642.987  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     98316.026 ±   63336.511    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                      128  thrpt    5         3.398 ±      10.986  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       251.942 ±     850.873    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                         128  thrpt    5       124.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                           128  thrpt    5     24459.708 ±    1845.398   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                            128  thrpt    5      1147.102 ±     639.250  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                       128  thrpt    5     73948.670 ±   45852.256    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1118.157 ±     655.862  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     72088.941 ±   46504.370    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         2.735 ±      12.373  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5       176.688 ±     797.154    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                  128  thrpt    5       116.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                          128  thrpt    5    528462.751 ±   35926.663   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                           128  thrpt    5      1243.797 ±     108.824  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                      128  thrpt    5      3704.340 ±     348.266    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                  128  thrpt    5      1181.424 ±     695.017  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm             128  thrpt    5      3517.158 ±    2028.800    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.869 ±       5.822  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5         2.568 ±      17.247    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                 128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    611850.591 ±    8942.671   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                               128  thrpt    5     24299.520 ±    1284.761   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                128  thrpt    5      1268.628 ±     836.723  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                           128  thrpt    5     82111.295 ±   53102.940    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                       128  thrpt    5      1285.544 ±    1037.849  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     83279.215 ±   67348.008    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                   128  thrpt    5         7.117 ±      24.388  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       464.082 ±    1592.205    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                     128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                      128  thrpt    5        96.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                       128  thrpt    5     13444.027 ±     920.492   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1311.124 ±     161.483  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    153480.448 ±   18316.185    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1315.957 ±     541.532  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    154087.949 ±   65200.076    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.121 ±      13.012  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       249.402 ±    1529.987    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                             128  thrpt    5        21.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                              128  thrpt    5       104.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                128  thrpt    5     13804.363 ±     517.988   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1216.887 ±      55.044  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5    138722.490 ±    3057.174    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1169.038 ±     675.816  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    133288.116 ±   77465.248    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.112 ±       0.702  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        12.802 ±      80.057    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                               128  thrpt    5    339995.349 ±   21345.331   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      2031.660 ±     145.413  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      9400.840 ±     239.897    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1941.262 ±      62.495  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8984.026 ±     462.619    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.336 ±       8.693  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         6.186 ±      39.988    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        30.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        68.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                    128  thrpt    5     13280.946 ±    1226.028   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1563.781 ±     128.050  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5    185354.198 ±   19935.236    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1510.174 ±     693.645  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    179237.109 ±   91732.702    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.806 ±       2.998  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        96.388 ±     356.933    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        49.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                      128  thrpt    5     33714.208 ±    5197.289   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1550.350 ±     667.918  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     72555.959 ±   37133.140    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1551.395 ±     881.997  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     72404.910 ±   41163.903    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.229 ±      10.511  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       106.886 ±     504.754    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                            128  thrpt    5        25.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                             128  thrpt    5       138.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                               128  thrpt    5    128480.883 ±    9755.029   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      2422.365 ±     123.818  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     29673.049 ±     930.717    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      2376.825 ±     540.438  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     29120.259 ±    6863.071    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.477 ±       3.664  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         5.819 ±      44.570    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        36.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        61.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                              128  thrpt    5    866841.858 ±   31076.154   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1230.203 ±      46.531  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      2233.391 ±     143.162    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1183.659 ±     688.231  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      2149.410 ±    1269.793    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.838 ±       5.219  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.515 ±       9.440    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    973929.195 ±    3357.966   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                   128  thrpt    5    121575.342 ±    8027.502   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      2740.489 ±     214.731  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     35471.676 ±     925.143    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2635.707 ±     146.076  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     34122.273 ±    2425.819    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.881 ±       4.534  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        11.379 ±      58.497    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        40.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        74.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                           128  thrpt    5     16902.123 ±    2440.468   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1000.741 ±     780.509  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     93371.817 ±   75729.720    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5       994.027 ±     997.664  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     92995.027 ±  100149.568    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         2.692 ±       9.657  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       256.948 ±     954.229    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        16.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        96.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                    128  thrpt    5     17771.209 ±    3117.891   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1078.123 ±    1264.758  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     97052.674 ±  124972.514    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                   128  thrpt    5         0.004 ±       0.038  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm              128  thrpt    5         0.401 ±       3.449    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Metaspace                                128  thrpt    5         0.012 ±       0.104  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                           128  thrpt    5         1.102 ±       9.492    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1062.786 ±    1547.269  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     95911.618 ±  150415.920    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                               128  thrpt    5         5.134 ±      44.204  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                          128  thrpt    5       466.832 ±    4019.563    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         4.632 ±      24.372  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       422.876 ±    2225.616    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        19.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       167.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                   128  thrpt    5    163453.371 ±   14625.648   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       422.814 ±      36.526  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      4071.157 ±     193.888    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       450.075 ±     679.499  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      4362.613 ±    6935.920    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.825 ±       7.013  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         8.258 ±      70.253    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        20.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                        128  thrpt    5     16876.029 ±    2151.085   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1225.702 ±     333.956  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    114563.432 ±   44125.854    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1226.381 ±    1044.551  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    114834.877 ±  106664.177    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.464 ±       7.787  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       137.692 ±     736.102    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        46.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                          128  thrpt    5     64698.595 ±    5211.472   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1879.964 ±      64.929  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     45745.147 ±    4670.086    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1836.314 ±     673.160  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     44719.978 ±   18624.430    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.202 ±       9.586  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        30.237 ±     242.073    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        51.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                   128  thrpt    5     99636.887 ±    9562.555   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1900.249 ±     193.540  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     30012.341 ±    1001.596    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1853.347 ±     724.552  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     29264.316 ±   10762.963    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.209 ±       1.551  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.366 ±      25.007    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        42.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                  128  thrpt    5    341085.950 ±   37002.496   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       673.923 ±      75.239  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3109.277 ±      57.852    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       659.797 ±       4.405  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3045.982 ±     316.141    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.618 ±       5.068  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.783 ±      22.779    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    382880.054 ±    5730.939   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                       128  thrpt    5     93821.392 ±   12061.949   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      2013.971 ±     323.799  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     33847.835 ±   10177.269    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1962.151 ±     889.723  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     33028.826 ±   19088.654    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.121 ±       8.899  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        19.898 ±     158.839    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        30.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        56.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                            128  thrpt    5    207705.833 ±    6201.767   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2678.206 ±     108.643  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     20291.374 ±     479.828    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2628.385 ±     178.189  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19914.870 ±    1452.454    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.512 ±       2.418  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.887 ±      18.328    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        40.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        70.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                      128  thrpt    5    789073.204 ±   54098.784   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       449.916 ±      39.113  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       897.265 ±      30.257    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       454.470 ±     683.320  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       905.571 ±    1350.182    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.133 ±       1.048  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.268 ±       2.122    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        25.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                     128  thrpt    5    395607.134 ±   17415.064   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       339.803 ±      14.987  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1351.846 ±      45.358    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       323.884 ±       1.049  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1288.614 ±      58.027    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.012 ±       0.066  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.050 ±       0.264    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        22.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                    128  thrpt    5   1056146.147 ±  118563.017   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       374.142 ±      45.999  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       557.425 ±      15.956    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       327.786 ±       1.455  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       488.708 ±      53.473    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.012 ±       0.108  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.018 ±       0.158    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        20.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                         128  thrpt    5    108633.983 ±    3614.855   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3586.281 ±     106.441  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     51949.865 ±    1211.870    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3495.721 ±     675.152  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     50633.566 ±    9289.437    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.516 ±       3.903  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         7.413 ±      56.063    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        52.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        71.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                           128  thrpt    5    309213.292 ±   11918.655   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1826.239 ±      82.662  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      9293.714 ±     238.310    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1760.271 ±     680.443  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      8959.799 ±    3532.712    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.807 ±       2.780  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.122 ±      14.275    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        52.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                     128  thrpt    5   1954431.953 ±  222581.744   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       684.761 ±      69.412  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       551.376 ±      13.957    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       651.056 ±       5.005  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       524.539 ±      56.943    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.717 ±       5.983  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.560 ±       4.662    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        38.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                    128  thrpt    5   1900793.975 ±   82097.952   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       665.984 ±      24.068  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       551.348 ±       7.500    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       647.582 ±       7.988  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       536.143 ±      17.084    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.016 ±       0.057  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.013 ±       0.047    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        18.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                   128  thrpt    5   2219321.346 ±   94446.076   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       784.084 ±      46.342  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       555.986 ±      27.830    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       789.720 ±     695.025  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       559.955 ±     492.157    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.827 ±       5.445  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.593 ±       3.913    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        37.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2321247.814 ±  202075.441   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.069 ±       0.593  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.048 ±       0.412    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                        128  thrpt    5     45784.052 ±   12682.736   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1923.568 ±     312.988  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     66467.877 ±   25775.284    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1879.121 ±    1037.753  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     64916.507 ±   43099.916    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         3.307 ±      19.946  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       121.199 ±     736.570    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        67.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                             128  thrpt    5     17851.609 ±    2685.213   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2152.524 ±     533.167  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    190178.581 ±   67936.748    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2107.633 ±     808.129  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    186008.205 ±   77175.863    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         2.680 ±      11.108  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       244.469 ±    1037.449    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        34.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        62.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                      128  thrpt    5     92704.744 ±    5114.871   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1021.698 ±      59.152  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     17343.766 ±     489.167    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       980.103 ±      11.001  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     16640.226 ±     950.116    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.693 ±       3.329  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        11.731 ±      56.409    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        15.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        26.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                     128  thrpt    5    270090.110 ±   23678.494   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       906.641 ±      59.029  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      5282.849 ±     145.943    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       907.427 ±     552.341  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5289.119 ±    3261.645    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.124 ±       5.595  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         6.570 ±      32.750    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        48.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                          128  thrpt    5     16575.907 ±    2345.079   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2182.906 ±     319.954  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    207467.882 ±   42844.264    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space                         128  thrpt    5         0.004 ±       0.030  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm                    128  thrpt    5         0.335 ±       2.884    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace                                      128  thrpt    5         0.010 ±       0.090  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.Metaspace.norm                                 128  thrpt    5         0.983 ±       8.465    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2168.216 ±     791.927  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    205996.543 ±   77055.411    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen                                     128  thrpt    5         4.874 ±      41.963  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm                                128  thrpt    5       460.906 ±    3968.537    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         4.349 ±      28.114  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       433.633 ±    2845.885    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        36.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5       126.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                            128  thrpt    5     41466.636 ±    6588.775   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      3310.452 ±     305.698  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    125699.061 ±   10079.838    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      3205.281 ±     682.821  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    121744.298 ±   28701.777    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.690 ±       3.311  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        27.235 ±     131.547    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        48.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        69.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                     128  thrpt    5    144931.208 ±    5900.188   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      2012.316 ±     101.602  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     21848.930 ±     666.044    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1924.156 ±     523.404  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     20892.669 ±    5684.570    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.167 ±       0.871  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.822 ±       9.600    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        29.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        47.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                    128  thrpt    5    246947.223 ±   13707.966   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       826.494 ±      53.654  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      5268.582 ±     594.416    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       789.295 ±     689.664  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      5039.277 ±    4597.997    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.815 ±       5.421  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         5.211 ±      34.546    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        37.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    279739.856 ±    3211.433   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.166 ±       1.427  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.936 ±       8.047    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                         128  thrpt    5     60101.041 ±    1918.383   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      3959.083 ±      51.411  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    103663.345 ±    3454.323    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3824.769 ±     523.780  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    100153.986 ±   15007.812    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.512 ±       3.783  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        13.561 ±     100.457    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        57.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        84.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                        128  thrpt    5     36746.861 ±    3561.926   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1840.415 ±     760.868  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     78906.144 ±   35513.680    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1771.504 ±    1031.822  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     76024.978 ±   47900.045    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         3.503 ±      14.353  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       151.708 ±     621.288    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                              128  thrpt    5        28.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                               128  thrpt    5        66.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                 128  thrpt    5     37451.215 ±    7489.936   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1307.443 ±     886.615  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     54695.574 ±   27241.739    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.004 ±       0.032  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.142 ±       1.226    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.010 ±       0.089  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.398 ±       3.423    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1314.281 ±    1121.257  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     54913.605 ±   36696.818    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         3.118 ±      12.288  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       126.688 ±     485.709    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        22.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        84.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                128  thrpt    5    640018.942 ±   66927.249   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1722.824 ±     149.850  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4236.574 ±     114.476    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1642.394 ±      46.231  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4040.753 ±     439.599    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.837 ±       6.450  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.051 ±      15.838    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        39.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                     128  thrpt    5     34354.702 ±    7623.031   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2218.266 ±     593.419  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    101889.067 ±   37502.587    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2223.009 ±     988.235  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    102317.927 ±   61363.808    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.259 ±       9.383  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       105.590 ±     434.647    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        34.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        65.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                       128  thrpt    5     91555.967 ±    5354.242   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      2049.967 ±     179.133  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     35227.774 ±    1063.542    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1992.848 ±      95.232  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     34250.667 ±     681.338    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.518 ±       3.834  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         9.013 ±      66.893    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                             128  thrpt    5        30.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                128  thrpt    5    249238.989 ±   13967.853   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1720.113 ±      99.082  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10860.297 ±     303.957    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1700.265 ±     567.017  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10731.929 ±    3328.079    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.927 ±       6.157  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         5.967 ±      39.874    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        52.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                               128  thrpt    5   1073316.262 ±   85614.477   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       912.097 ±      58.337  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1337.437 ±      38.761    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       855.381 ±     695.630  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1254.627 ±    1026.470    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.855 ±       5.417  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.224 ±       7.717    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        13.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        35.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1146042.637 ±   13115.631   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                    128  thrpt    5    231502.751 ±   13329.988   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      2454.941 ±     183.965  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     16687.058 ±     526.390    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      2328.498 ±     109.942  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     15829.126 ±     542.130    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.360 ±       2.879  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         2.510 ±      20.106    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        35.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        55.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                      128  thrpt    5     56328.841 ±   13299.916   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1655.235 ±     732.950  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     46243.438 ±   16886.826    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1671.881 ±    1030.564  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     46793.826 ±   30049.868    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.105 ±      17.678  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        63.306 ±     532.557    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        26.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        61.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                     128  thrpt    5    784916.894 ±   46122.338   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1581.849 ±      49.515  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3171.872 ±     116.722    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1514.932 ±     691.459  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3040.456 ±    1491.887    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.823 ±       4.978  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.650 ±       9.904    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                          128  thrpt    5     47304.913 ±    9705.984   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2672.387 ±     765.464  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     88857.783 ±   13946.844    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2635.951 ±    1213.267  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     87495.715 ±   26610.764    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         3.243 ±      17.948  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       107.193 ±     589.518    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        40.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        76.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                     128  thrpt    5    410599.603 ±   26479.662   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1077.785 ±      42.319  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      4131.556 ±     241.062    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1044.418 ±     553.864  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      4001.567 ±    2039.268    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.910 ±       7.392  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.455 ±      28.048    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        16.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1577364.050 ±  251409.026   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       954.737 ±     123.319  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       952.918 ±      76.335    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       920.524 ±     564.787  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       918.579 ±     560.559    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.820 ±       5.299  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.832 ±       5.455    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        36.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1700903.127 ±  107877.029   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         4.094 ±      26.233  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         3.873 ±      25.026    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                         128  thrpt    5    366565.013 ±   17082.424   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2325.606 ±      91.290  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9984.216 ±     288.819    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2259.802 ±     514.531  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9704.050 ±    2367.572    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.477 ±       3.710  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.085 ±      16.231    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        53.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                           128  thrpt    5     83310.812 ±   17386.955   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1816.343 ±     335.922  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     34462.566 ±   14037.968    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1821.348 ±     670.679  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     34551.279 ±   17449.194    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         2.543 ±      13.365  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        50.769 ±     271.405    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        28.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        62.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                    128  thrpt    5     93879.414 ±    4976.308   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1218.752 ±      65.556  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     20430.576 ±     615.769    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1171.808 ±     693.764  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     19642.480 ±   11567.611    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.666 ±       3.852  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        11.305 ±      65.364    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        28.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                   128  thrpt    5    101636.862 ±    8822.758   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1326.687 ±     549.928  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     20571.488 ±    9848.612    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1339.923 ±     560.604  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     20781.645 ±   10192.576    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.746 ±       8.629  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        27.309 ±     134.018    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        21.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        60.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                        128  thrpt    5     57442.775 ±    5820.190   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2298.653 ±     109.302  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     63004.857 ±    6910.238    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2183.635 ±     640.397  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     59855.282 ±   18693.943    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.299 ±      10.693  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        36.958 ±     304.958    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        33.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        50.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                          128  thrpt    5    165142.560 ±    5305.958   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1557.319 ±      67.514  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     14838.985 ±     402.395    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1505.979 ±     696.089  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     14350.307 ±    6634.238    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.615 ±       3.097  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         5.887 ±      29.655    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        23.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        38.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                   128  thrpt    5    335678.934 ±    3373.907   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       428.089 ±      17.037  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2006.980 ±      73.405    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       449.595 ±     677.016  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2107.560 ±    3170.296    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.059 ±       0.336    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        12.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                  128  thrpt    5    944299.369 ±   49044.962   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1213.532 ±      57.914  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      2022.362 ±      72.707    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1182.354 ±     687.673  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1972.887 ±    1217.287    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.885 ±       5.901  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.451 ±       9.628    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        40.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1149702.601 ±   16089.891   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         1.058 ±       8.627  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         1.455 ±      11.868    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                       128  thrpt    5    305569.484 ±    8964.598   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       939.097 ±      35.563  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      4836.604 ±     261.844    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       899.093 ±     553.079  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4631.835 ±    2884.016    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.046 ±       4.506  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.413 ±      23.441    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        14.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        40.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                       128  thrpt    5    143007.809 ±    6805.077   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1868.729 ±     748.464  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     20545.742 ±    7265.883    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1825.517 ±    1094.548  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     20062.178 ±   11107.066    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.837 ±      12.166  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        19.904 ±     131.296    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                             128  thrpt    5        28.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                              128  thrpt    5        52.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                128  thrpt    5    212588.663 ±   11800.691   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1208.447 ±      56.855  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5      8946.627 ±     340.089    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1148.200 ±     669.965  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      8498.230 ±    4881.900    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.677 ±       8.027  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        12.429 ±      59.805    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        18.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        65.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                               128  thrpt    5    570141.559 ±   52378.870   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1142.638 ±     112.511  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      3153.107 ±      67.579    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1108.015 ±     690.659  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      3060.842 ±    1986.282    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.786 ±       5.656  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         2.136 ±      15.266    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        17.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        43.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                    128  thrpt    5     95491.819 ±    2415.484   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      3166.944 ±      92.273  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     52181.262 ±    1219.458    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      3074.559 ±     530.524  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     50655.584 ±    8297.059    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.397 ±       2.930  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         6.584 ±      48.665    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        46.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        73.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                      128  thrpt    5    237815.944 ±    8214.687   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1515.360 ±      45.302  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     10026.471 ±     202.804    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1436.901 ±     677.383  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9508.553 ±    4525.299    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.885 ±       5.288  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         5.908 ±      35.277    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                               128  thrpt    5    764694.835 ±   65845.813   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       587.283 ±      62.892  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      1208.519 ±      43.384    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       582.310 ±     554.512  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1195.777 ±    1106.325    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.043 ±       0.120    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        16.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                              128  thrpt    5   1381433.819 ±  122665.789   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1063.188 ±      84.700  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      1211.366 ±      89.197    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1048.601 ±     590.708  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1193.999 ±     639.885    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.028 ±       0.116    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        16.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        22.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   1506431.834 ±   22299.269   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         1.468 ±       8.508  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         1.539 ±       8.921    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                   128  thrpt    5    619134.726 ±   26524.264   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1518.908 ±      35.244  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5      3860.843 ±     109.801    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1452.228 ±     702.347  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3693.282 ±    1861.535    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.150 ±       0.738  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.379 ±       1.864    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        36.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                    128  thrpt    5       913.004 ±     118.917   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1974.532 ±     103.734  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5   3404206.051 ±  328525.069    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1875.150 ±     486.331  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5   3228412.131 ±  523576.634    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.505 ±      10.577  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      2607.763 ±   18244.662    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        29.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        51.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                             128  thrpt    5       921.327 ±     126.118   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      2001.965 ±     182.905  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5   3415173.913 ±  310638.691    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space            128  thrpt    5         0.003 ±       0.022  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm       128  thrpt    5         4.548 ±      39.161    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                         128  thrpt    5         0.007 ±       0.061  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                    128  thrpt    5        12.849 ±     110.633    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1968.079 ±     130.262  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5   3360023.343 ±  622232.021    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                        128  thrpt    5         0.358 ±       3.083  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                   128  thrpt    5       646.596 ±    5567.384    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.168 ±       0.927  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       295.621 ±    1676.351    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        32.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5       130.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5     45841.015 ±    4498.749   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       834.783 ±     520.736  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     28765.589 ±   21277.705    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       780.358 ±     624.372  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     26852.072 ±   22656.812    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         3.191 ±       9.887  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       110.777 ±     352.445    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        97.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                 128  thrpt    5       878.253 ±      97.649   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1961.395 ±      98.239  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5   3515763.543 ±  390843.909    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1966.772 ±     102.710  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5   3526282.381 ±  523057.427    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.850 ±       5.013  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5      1554.161 ±    9135.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        51.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                   128  thrpt    5     16825.079 ±    2630.851   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1357.888 ±     609.447  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5    127592.267 ±   78106.288    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1323.381 ±     576.622  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    124364.955 ±   75216.189    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.585 ±       5.672  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       146.536 ±     519.895    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        21.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5        56.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     19077.139 ±    1695.359   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1210.884 ±     560.906  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    100115.846 ±   54746.722    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1163.768 ±     993.904  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     96353.775 ±   89181.232    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         5.271 ±      15.932  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       439.113 ±    1357.513    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        85.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    333168.529 ±   31493.338   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1209.365 ±     119.815  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      5712.049 ±      84.471    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1169.364 ±     678.333  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5531.414 ±    3416.135    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.177 ±       8.164  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         5.595 ±      38.881    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        45.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    428413.706 ±    1579.230   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                128  thrpt    5     17481.328 ±   10706.868   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1400.423 ±    1093.253  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5    132865.934 ±  211674.234    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1409.667 ±    1476.983  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    135027.690 ±  251481.968    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         9.406 ±      49.638  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5      1019.326 ±    5515.877    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       138.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                           128  thrpt    5   1348018.206 ±   21202.197   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5        55.862 ±       6.629  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5        65.220 ±       8.548    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5        51.161 ±     440.514  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        60.032 ±     516.890    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.019 ±       0.166  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.023 ±       0.195    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                128  thrpt    5    116995.902 ±    5880.462   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      4187.033 ±     461.779  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     56310.104 ±    3494.656    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      4029.653 ±     773.244  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     54194.136 ±    9169.410    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.961 ±       5.558  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        12.750 ±      73.215    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        60.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        98.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                           128  thrpt    5   2166472.765 ±  184279.520   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       601.563 ±      42.934  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       436.999 ±      15.638    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       584.787 ±     559.747  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       425.900 ±     420.674    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.029 ±       0.091  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.021 ±       0.066    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        39.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                          128  thrpt    5   1837498.809 ±   81609.884   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       524.201 ±      81.713  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       448.929 ±      64.619    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       525.214 ±     692.346  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       449.958 ±     594.276    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.017 ±       0.061  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.014 ±       0.052    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        30.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2013100.866 ±    8621.974   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.016 ±       0.139  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.013 ±       0.108    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                               128  thrpt    5     55626.767 ±    6552.971   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2062.412 ±     596.685  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     58457.878 ±   22886.184    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1979.127 ±     827.828  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     56126.112 ±   28948.893    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.904 ±       4.341  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        25.841 ±     124.036    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        30.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        54.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                            N/A  thrpt    5   1191736.692 ±   24767.557   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      3443.849 ±      74.408  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5      4547.157 ±     124.225    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      3312.393 ±     257.312  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      4373.844 ±     403.021    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.460 ±       3.471  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.605 ±       4.561    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        50.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        72.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                      N/A  thrpt    5   5183623.133 ±   72671.479   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       323.574 ±       8.066  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5        98.233 ±       1.956    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       325.094 ±       0.016  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        98.696 ±       1.380    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.011 ±       0.080  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.003 ±       0.024    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        18.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                     N/A  thrpt    5   1067490.652 ±   91409.696   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5      1201.270 ±      85.584  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5      1770.995 ±      37.279    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5      1178.503 ±     689.396  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5      1735.859 ±     960.233    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.250 ±       1.568  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         0.366 ±       2.305    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5        18.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        32.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                    N/A  thrpt    5  10486797.998 ±   95865.625   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       492.342 ±      20.554  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5        73.902 ±       3.418    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       460.045 ±     693.540  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5        69.098 ±     104.722    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.012 ±       0.066  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.002 ±       0.010    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        24.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                         N/A  thrpt    5    789224.275 ±   36829.406   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2918.992 ±     188.981  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5      5819.973 ±     167.475    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2797.462 ±     664.807  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      5576.913 ±    1224.582    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.550 ±       4.375  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         1.117 ±       8.909    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        42.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        67.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                  N/A  thrpt    5      5135.260 ±     127.452   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2295.706 ±      55.485  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    703435.091 ±   16947.409    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2227.125 ±     609.002  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    682296.115 ±  179099.009    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         1.116 ±       6.798  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       343.714 ±    2100.516    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        60.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                           N/A  thrpt    5      7497.875 ±     675.205   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      3079.697 ±     344.290  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5    646284.508 ±   14793.757    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      3003.236 ±     166.425  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    630417.296 ±   24292.961    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.196 ±       1.194  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        42.037 ±     259.212    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        45.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        70.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                          N/A  thrpt    5     56547.080 ±    1952.426   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       944.470 ±      53.304  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     26284.015 ±    1225.394    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       919.605 ±     559.968  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     25590.697 ±   15542.017    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.941 ±       5.081  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        26.214 ±     141.623    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        39.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                 N/A  thrpt    5      5360.884 ±     189.440   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5       956.261 ±      29.856  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    280690.835 ±    4411.384    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       904.611 ±     547.766  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    265782.189 ±  166704.458    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.035 ±       0.178  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        10.434 ±      52.899    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        30.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                          N/A  thrpt    5      5295.684 ±     224.144   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       574.995 ±      40.069  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5    170862.724 ±    8191.181    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       518.630 ±     682.820  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5    154003.745 ±  201390.795    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.021 ±       0.098  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         6.231 ±      29.675    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         8.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        20.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                         N/A  thrpt    5      6807.568 ±     159.065   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       225.619 ±      13.475  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     52155.504 ±    3417.346    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       246.290 ±     542.641  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     57013.863 ±  125406.587    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.004 ±       0.022  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         0.890 ±       5.165    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         4.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        16.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5      6855.571 ±     274.849   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5       184.194 ±      85.272  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5     42303.649 ±   20490.634    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         N/A  thrpt    5       181.999 ±     649.491  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    N/A  thrpt    5     41855.452 ±  149247.487    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                     N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                N/A  thrpt    5         0.946 ±       8.149    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5         3.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        N/A  thrpt    5        12.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                            N/A  thrpt    5      8810.836 ±     337.407   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      1860.689 ±     110.592  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5    332307.666 ±   14284.933    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1813.851 ±     730.004  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    323855.628 ±  125970.995    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.062 ±       7.502  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       191.328 ±    1354.578    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        28.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        54.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                      N/A  thrpt    5     18029.859 ±    1878.102   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       487.460 ±     115.520  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5     42621.554 ±   14369.732    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       453.683 ±     683.141  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     39739.723 ±   61523.819    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.014 ±       0.076  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         1.243 ±       6.541    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        28.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     13758.485 ±    1425.187   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5       376.087 ±      36.237  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5     43014.533 ±    1349.269    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       386.208 ±     552.426  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     44013.501 ±   59769.433    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.026 ±       0.183  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         2.938 ±      20.637    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        15.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     22384.218 ±    3005.031   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       491.338 ±     347.246  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5     34640.005 ±   26674.394    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       521.686 ±     686.978  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     36721.849 ±   48847.439    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.445 ±       2.431  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        30.690 ±     168.163    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        38.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      7055.634 ±     496.155   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2737.039 ±     230.109  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5    610424.784 ±   16772.649    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2651.365 ±     150.444  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5    591396.682 ±   25364.195    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.647 ±       4.410  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5       147.835 ±    1012.342    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        40.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        68.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                           N/A  thrpt    5     11647.841 ±    1356.220   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                            N/A  thrpt    5      2250.876 ±      96.051  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                       N/A  thrpt    5    304331.437 ±   41165.022    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2192.130 ±     459.371  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    296475.516 ±   79874.077    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         1.444 ±       7.145  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5       196.720 ±     963.401    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                 N/A  thrpt    5        34.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                  N/A  thrpt    5        70.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                     N/A  thrpt    5     67625.922 ±    6601.912   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                      N/A  thrpt    5       677.746 ±     179.518  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 N/A  thrpt    5     15796.539 ±    5753.968    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       712.945 ±     551.209  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     16661.350 ±   14826.216    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         1.280 ±       8.470  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5        29.206 ±     192.758    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                           N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                            N/A  thrpt    5        41.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     43919.145 ±    4639.039   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                     N/A  thrpt    5       708.248 ±     474.585  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                N/A  thrpt    5     25426.505 ±   18427.317    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       712.003 ±     541.635  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     25577.970 ±   21095.827    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.698 ±       4.067  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        24.592 ±     142.191    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                          N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                           N/A  thrpt    5        28.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5    119275.556 ±    3642.520   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                    N/A  thrpt    5       932.913 ±      62.850  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               N/A  thrpt    5     12309.174 ±     795.409    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       916.254 ±     558.468  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5     12087.413 ±    7320.463    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         1.101 ±       4.357  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5        14.541 ±      57.628    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                         N/A  thrpt    5        14.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                          N/A  thrpt    5        41.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5    136682.809 ±    3657.301   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            N/A  thrpt    5         0.051 ±       0.435  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       N/A  thrpt    5         0.592 ±       5.069    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                        N/A  thrpt    5      9097.108 ±     530.111   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                         N/A  thrpt    5      2382.975 ±     122.906  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                    N/A  thrpt    5    412229.767 ±   11722.133    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      2324.748 ±      95.812  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5    402169.292 ±   12437.650    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.570 ±       3.732  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5       100.130 ±     657.204    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                              N/A  thrpt    5        35.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                               N/A  thrpt    5        59.000                    ms
[info] IntBenchmark.readCirce                                                                      N/A  thrpt    5  13045401.081 ±  419648.751   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      5771.491 ±     274.150  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5       696.180 ±      17.270    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      5617.743 ±     683.660  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       677.661 ±      81.936    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.096 ±       0.134  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.012 ±       0.016    B/op
[info] IntBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        83.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5       106.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                N/A  thrpt    5  42700851.089 ±  377401.999   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                 N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                      N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                               N/A  thrpt    5  24520692.905 ± 1274504.566   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJsoniterScala                                                              N/A  thrpt    5  48083473.238 ±  340134.632   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5         0.898 ±       7.451  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5         0.029 ±       0.245    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                 N/A  thrpt    5  30950245.466 ± 1072575.778   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                  N/A  thrpt    5       814.153 ±      21.316  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        41.400 ±       2.321    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       791.696 ±     694.439  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        40.267 ±      35.589    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.762 ±       4.530  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.039 ±       0.232    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                       N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                        N/A  thrpt    5        38.000                    ms
[info] IntBenchmark.readPlayJson                                                                   N/A  thrpt    5  25067239.691 ± 1797898.212   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5         0.176 ±       1.515  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5         0.011 ±       0.094    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeCirce                                                                     N/A  thrpt    5  21905688.110 ±  806234.581   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1738.006 ±      97.557  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5       124.866 ±       8.112    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1643.646 ±      41.416  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       118.093 ±       6.896    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.831 ±       6.977  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.060 ±       0.506    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        25.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        44.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                               N/A  thrpt    5  58380799.470 ± 1200031.301   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                N/A  thrpt    5      1218.650 ±      39.699  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           N/A  thrpt    5        32.850 ±       0.703    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1234.088 ±     557.145  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        33.267 ±      15.044    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.961 ±       6.796  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.026 ±       0.184    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                     N/A  thrpt    5        19.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                      N/A  thrpt    5        44.000                    ms
[info] IntBenchmark.writeJacksonScala                                                              N/A  thrpt    5  26886453.125 ± 4962988.490   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       569.611 ±      70.210  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5        33.372 ±       4.265    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                             N/A  thrpt    5         0.005 ±       0.041  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm                        N/A  thrpt    5        ≈ 10⁻⁴                  B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.Metaspace                                          N/A  thrpt    5         0.013 ±       0.111  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                                     N/A  thrpt    5         0.001 ±       0.007    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       586.376 ±     562.655  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        34.556 ±      35.799    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                                         N/A  thrpt    5         0.620 ±       5.343  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                                    N/A  thrpt    5         0.038 ±       0.329    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.931 ±       7.928  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.057 ±       0.489    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5        11.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        58.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  50050950.040 ± 1840821.443   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1049.127 ±      51.302  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        32.982 ±       0.655    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1049.811 ±     556.746  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        32.987 ±      16.693    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.840 ±       7.000  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.026 ±       0.218    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  65400193.780 ±  227099.058   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                N/A  thrpt    5  26227629.384 ±  986788.296   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                 N/A  thrpt    5      2066.805 ±     112.445  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       123.995 ±       2.977    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1998.455 ±      54.781  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       119.905 ±       4.639    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.669 ±       5.310  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.041 ±       0.324    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                      N/A  thrpt    5        30.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                       N/A  thrpt    5        40.000                    ms
[info] IntBenchmark.writePlayJson                                                                  N/A  thrpt    5   3689972.714 ±  214185.444   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1526.269 ±     101.037  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5       650.882 ±      16.223    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1494.326 ±     685.963  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       636.643 ±     264.880    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         1.074 ±       5.749  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.458 ±       2.453    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        23.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        54.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    203433.746 ±    7095.033   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      3869.376 ±     126.448  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     29932.037 ±     620.354    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      3756.893 ±     394.635  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     29063.818 ±    3286.590    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.079 ±       0.132  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.614 ±       1.042    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        56.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        73.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     43603.570 ±    3830.523   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      2767.145 ±     151.369  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     99913.740 ±   11425.509    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2720.863 ±     464.225  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     98272.463 ±   22233.842    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.707 ±       3.527  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        25.984 ±     129.942    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        41.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        66.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    223743.008 ±   10081.786   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       816.885 ±      48.403  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      5745.464 ±     162.555    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       780.840 ±     691.541  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5491.866 ±    4849.407    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.179 ±       1.198  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         1.278 ±       8.594    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        12.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        20.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    531962.995 ±   22809.864   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       980.464 ±      11.749  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2900.594 ±     131.849    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       984.757 ±      10.826  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2913.321 ±     142.407    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.837 ±       4.439  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.481 ±      13.146    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        15.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        38.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    563620.888 ±   18894.462   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5       399.987 ±      12.540  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5      1116.891 ±      38.944    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                128  thrpt    5       394.370 ±     565.006  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      1100.154 ±    1557.035    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.023 ±       0.073  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         0.065 ±       0.203    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5         6.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                               128  thrpt    5        24.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     80531.810 ±   10514.795   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1383.328 ±     391.240  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     27087.885 ±   10544.758    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1375.220 ±     560.490  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     26956.270 ±   14295.360    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.633 ±       4.691  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        32.195 ±      93.297    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        21.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        61.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                           128  thrpt    5    369345.233 ±   18726.876   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      2692.098 ±     150.806  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     11470.396 ±     407.161    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2644.288 ±     154.846  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     11268.060 ±     883.409    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.430 ±       2.563  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.834 ±      10.917    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                 128  thrpt    5        40.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                  128  thrpt    5        58.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                    128  thrpt    5    817884.419 ±   59523.283   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1792.012 ±     114.152  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      3448.196 ±     151.873    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1769.240 ±     712.161  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      3403.744 ±    1327.690    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.750 ±       3.738  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.426 ±       7.102    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        27.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        49.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                   128  thrpt    5   1609890.202 ±   96067.256   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      3262.187 ±     144.457  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      3188.978 ±     109.154    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      3151.449 ±     632.978  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3080.584 ±     595.753    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.062 ±       0.098  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.061 ±       0.096    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        47.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        61.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                        128  thrpt    5    183547.802 ±   10117.042   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      4772.566 ±     234.432  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     40919.664 ±     329.177    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      4586.496 ±     624.283  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     39343.360 ±    7236.576    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.087 ±       0.222  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.752 ±       1.929    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        68.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        96.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                          128  thrpt    5    444618.362 ±   26365.607   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1460.539 ±     102.487  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5      5168.624 ±     117.186    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1439.115 ±     689.715  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      5088.777 ±    2243.604    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.881 ±       4.937  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.153 ±      17.790    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                128  thrpt    5        22.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        43.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                   128  thrpt    5    992525.352 ±   52391.661   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       472.075 ±      35.274  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       748.402 ±      33.340    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       448.882 ±     674.361  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       710.685 ±    1054.379    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.039 ±       0.226    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        11.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                  128  thrpt    5   2664335.905 ±  304398.174   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1273.920 ±     170.081  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       752.400 ±      39.391    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1246.792 ±     555.166  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       735.816 ±     298.463    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.854 ±       5.462  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.515 ±       3.328    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        39.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   2936998.911 ±   34478.778   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                       128  thrpt    5    640529.419 ±  127506.501   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1003.700 ±     653.390  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      2486.225 ±    2168.029    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       956.614 ±     877.477  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      2374.129 ±    2642.392    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.367 ±       7.917  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.983 ±      20.843    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        15.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        75.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                      128  thrpt    5     76497.268 ±    9162.567   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                       128  thrpt    5      2261.473 ±      53.998  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                  128  thrpt    5     46558.785 ±    5942.618    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2233.660 ±     539.890  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     45982.730 ±   12305.733    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.460 ±      11.899  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        31.602 ±     258.511    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                            128  thrpt    5        34.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                             128  thrpt    5        56.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                               128  thrpt    5    103821.239 ±    3241.907   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                128  thrpt    5      1897.047 ±      65.261  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     28755.738 ±     698.569    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1845.519 ±     650.183  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     27975.454 ±    9884.754    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.093 ±       8.577  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        16.635 ±     130.628    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                     128  thrpt    5        28.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                      128  thrpt    5        43.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    158777.384 ±    5776.713   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2511.505 ±     141.741  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     24891.072 ±     802.308    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2431.870 ±     746.535  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     24103.487 ±    7416.465    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         1.536 ±       6.312  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        15.270 ±      62.824    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                    128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                     128  thrpt    5        71.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                   128  thrpt    5     44318.277 ±    4346.777   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                    128  thrpt    5      2543.531 ±     183.492  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                               128  thrpt    5     90353.187 ±    8909.387    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2458.247 ±     645.924  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     87291.532 ±   21293.003    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.913 ±       4.644  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        33.081 ±     168.049    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                         128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                          128  thrpt    5        61.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    236452.171 ±   14171.766   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                               128  thrpt    5      1075.644 ±      64.038  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5      7158.435 ±      97.247    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1044.530 ±     564.332  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      6948.436 ±    3605.393    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.229 ±       1.624  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.509 ±      10.714    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                    128  thrpt    5        16.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                     128  thrpt    5        26.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    576297.584 ±   13552.608   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                              128  thrpt    5       652.432 ±      12.789  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      1781.624 ±      29.678    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       655.385 ±       2.358  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1789.722 ±      45.140    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.777 ±       5.183  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         2.119 ±      14.142    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                   128  thrpt    5        10.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                    128  thrpt    5        38.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    587738.128 ±    5300.496   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                      128  thrpt    5         7.053 ±       9.287  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                 128  thrpt    5        18.881 ±      24.800    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                           128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                  128  thrpt    5     90594.643 ±   12970.421   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                   128  thrpt    5      1496.208 ±     333.945  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                              128  thrpt    5     26060.920 ±    9985.818    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1438.828 ±     677.720  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     25074.921 ±   14533.063    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.438 ±      10.524  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        26.460 ±     196.201    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                        128  thrpt    5        22.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                         128  thrpt    5        39.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                          N/A  thrpt    5   8208042.992 ±  282357.080   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                           N/A  thrpt    5      7216.275 ±     354.162  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                      N/A  thrpt    5      1383.485 ±      29.506    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      7022.487 ±     850.109  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1346.368 ±     158.163    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.196 ±       0.185  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.037 ±       0.035    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                N/A  thrpt    5       104.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                 N/A  thrpt    5       142.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                    N/A  thrpt    5    952927.697 ±  114387.118   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                     N/A  thrpt    5       604.601 ±      68.706  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                N/A  thrpt    5       998.491 ±      33.543    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       651.299 ±       3.579  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5      1076.400 ±     134.040    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.029 ±       0.078  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.047 ±       0.126    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                          N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                           N/A  thrpt    5        35.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                   N/A  thrpt    5    433462.027 ±   42581.719   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                    N/A  thrpt    5       958.973 ±     108.335  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                               N/A  thrpt    5      3481.146 ±      82.435    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       969.573 ±      32.148  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5      3521.485 ±     323.938    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         1.775 ±      10.471  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5         6.511 ±      38.822    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                         N/A  thrpt    5        15.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                          N/A  thrpt    5        35.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                  N/A  thrpt    5    742811.098 ±   82003.886   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                   N/A  thrpt    5       683.563 ±      83.120  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              N/A  thrpt    5      1448.387 ±     133.973    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          N/A  thrpt    5       727.007 ±     567.495  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     N/A  thrpt    5      1538.457 ±    1128.146    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      N/A  thrpt    5         0.709 ±       5.957  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 N/A  thrpt    5         1.542 ±      12.967    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                        N/A  thrpt    5        11.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                         N/A  thrpt    5        35.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                              N/A  thrpt    5   4328018.110 ±  243539.611   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                               N/A  thrpt    5      2620.957 ±      97.941  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                          N/A  thrpt    5       953.073 ±      28.384    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                      N/A  thrpt    5      2534.864 ±     731.845  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       922.272 ±     296.665    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.110 ±       0.457  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.041 ±       0.170    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                    N/A  thrpt    5        38.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                     N/A  thrpt    5        52.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                        N/A  thrpt    5  29571689.469 ± 1227655.541   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                         N/A  thrpt    5      2646.177 ±     115.998  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                    N/A  thrpt    5       140.813 ±       3.351    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                N/A  thrpt    5      2526.323 ±     695.288  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm           N/A  thrpt    5       134.493 ±      40.372    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space            N/A  thrpt    5         0.804 ±       6.027  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm       N/A  thrpt    5         0.043 ±       0.322    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                              N/A  thrpt    5        38.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                               N/A  thrpt    5        56.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                       N/A  thrpt    5    388699.568 ±   72093.940   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                        N/A  thrpt    5      2684.293 ±     201.325  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                   N/A  thrpt    5     10879.980 ±    1303.285    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      2580.645 ±     492.018  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     10472.786 ±    3157.853    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         1.027 ±       7.517  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         4.474 ±      33.283    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                             N/A  thrpt    5        39.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                              N/A  thrpt    5        71.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                    128  thrpt    5   1451273.356 ±  115900.892   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5        45.794 ±      12.793  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5        49.672 ±      14.394    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5        51.161 ±     440.507  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5        55.966 ±     481.881    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.434 ±       3.741  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.475 ±       4.092    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5         4.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                         128  thrpt    5    107833.909 ±   12371.090   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      4015.280 ±     693.646  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     58576.937 ±    3517.706    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3863.204 ±     639.331  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     56400.328 ±    9789.292    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.328 ±       4.822  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        19.201 ±      68.065    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        58.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                128  thrpt    5       107.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                    128  thrpt    5   2055186.816 ±  144737.859   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       571.026 ±      36.357  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       437.283 ±      18.145    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       580.243 ±     557.919  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       444.787 ±     433.178    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.026 ±       0.077  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.020 ±       0.061    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        14.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                   128  thrpt    5   1928615.154 ±  175569.829   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       548.599 ±     134.644  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       447.679 ±     105.509    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       522.310 ±     688.576  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       427.483 ±     576.446    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.820 ±       7.018  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.685 ±       5.865    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        13.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2000444.334 ±   94151.448   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                        128  thrpt    5     55321.365 ±    8160.169   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      2018.605 ±     479.853  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     57577.905 ±   21952.488    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1981.183 ±     857.239  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     56544.468 ±   31219.661    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.222 ±       6.377  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        35.792 ±     191.792    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        30.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        53.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5    268052.919 ±    8151.867   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                          128  thrpt    5      1081.851 ±      30.946  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                     128  thrpt    5      6351.192 ±      36.970    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1049.419 ±     554.688  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5      6158.360 ±    3147.781    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.851 ±       4.782  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         4.995 ±      28.138    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                               128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                128  thrpt    5        40.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                              128  thrpt    5     51055.500 ±    6670.059   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                               128  thrpt    5      2087.061 ±     289.635  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                          128  thrpt    5     64386.842 ±   12592.743    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                      128  thrpt    5      2051.986 ±     492.814  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     63381.244 ±   22255.700    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.632 ±       3.115  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        19.543 ±      96.486    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                    128  thrpt    5        31.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                     128  thrpt    5        52.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5    158167.391 ±    5121.583   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                          128  thrpt    5      1593.375 ±      85.479  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                     128  thrpt    5     15852.272 ±     468.244    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1582.956 ±     571.588  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5     15743.959 ±    5431.870    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.466 ±       2.847  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         4.626 ±      28.171    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                               128  thrpt    5        24.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                128  thrpt    5        37.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5    513651.475 ±   52064.629   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                         128  thrpt    5       711.694 ±      40.604  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                    128  thrpt    5      2181.050 ±     166.171    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                128  thrpt    5       658.362 ±       4.546  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      2018.032 ±     204.966    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.669 ±       5.641  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         2.028 ±      17.104    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                              128  thrpt    5        10.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                               128  thrpt    5        33.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    576005.326 ±   36208.487   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                 128  thrpt    5         0.130 ±       1.115  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm            128  thrpt    5         0.351 ±       3.012    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                      128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                             128  thrpt    5     84524.332 ±   15751.490   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                              128  thrpt    5      1632.433 ±     303.636  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                         128  thrpt    5     30508.808 ±   11910.767    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                     128  thrpt    5      1620.460 ±     883.634  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     30354.794 ±   21970.834    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.457 ±       6.138  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        26.850 ±     111.448    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                   128  thrpt    5        25.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                    128  thrpt    5        77.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                               128  thrpt    5    102651.821 ±    4171.295   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                128  thrpt    5      1614.226 ±     103.384  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                           128  thrpt    5     24745.686 ±     858.528    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                       128  thrpt    5      1567.757 ±     580.735  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     24025.722 ±    8479.596    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.305 ±       9.725  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        19.974 ±     148.602    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                     128  thrpt    5        24.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                      128  thrpt    5        47.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                        128  thrpt    5    147247.064 ±   12879.800   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                         128  thrpt    5       744.560 ±     241.077  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                    128  thrpt    5      7952.216 ±    2140.051    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                128  thrpt    5       713.501 ±     553.495  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      7639.828 ±    6288.921    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         1.433 ±       5.226  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5        15.207 ±      55.441    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                               128  thrpt    5        24.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                       128  thrpt    5    343723.454 ±   10398.136   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                        128  thrpt    5      1458.028 ±      62.781  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                   128  thrpt    5      6675.268 ±     133.698    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space               128  thrpt    5      1374.168 ±     554.893  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      6290.360 ±    2474.669    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.860 ±       6.874  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         3.971 ±      31.754    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                             128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                              128  thrpt    5        46.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                            128  thrpt    5     52310.615 ±    3639.309   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                             128  thrpt    5      2162.685 ±     129.595  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                        128  thrpt    5     65069.180 ±    5184.318    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                    128  thrpt    5      2050.541 ±     537.186  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     61686.353 ±   15756.833    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                128  thrpt    5         1.043 ±       5.963  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        31.843 ±     183.438    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                  128  thrpt    5        31.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                   128  thrpt    5        56.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                       128  thrpt    5    255559.121 ±    6621.582   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                        128  thrpt    5       902.929 ±      43.661  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                   128  thrpt    5      5560.076 ±     154.819    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space               128  thrpt    5       847.159 ±     686.973  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      5211.453 ±    4114.821    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.146 ±       0.827  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         0.895 ±       5.084    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                             128  thrpt    5        13.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                              128  thrpt    5        22.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                      128  thrpt    5    661557.224 ±   52182.405   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                       128  thrpt    5       750.880 ±      79.180  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                  128  thrpt    5      1786.376 ±     176.261    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space              128  thrpt    5       723.332 ±     569.617  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      1722.343 ±    1395.101    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.905 ±       5.979  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.161 ±      14.333    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                            128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                             128  thrpt    5        36.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                              128  thrpt    5    755079.015 ±   43712.646   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm          128  thrpt    5         0.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                    128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                           128  thrpt    5     84866.051 ±   11179.441   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                            128  thrpt    5      1695.232 ±     541.477  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                       128  thrpt    5     31478.201 ±   11783.776    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                   128  thrpt    5      1691.420 ±     758.635  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     31397.310 ±   15174.990    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space               128  thrpt    5         4.873 ±      13.825  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        90.904 ±     259.518    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                 128  thrpt    5        27.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                  128  thrpt    5       162.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                         128  thrpt    5    118275.194 ±   14681.401   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1980.407 ±     248.564  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     26395.562 ±    6758.932    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1896.075 ±     508.837  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     25255.413 ±    7804.773    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.015 ±       7.242  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        14.175 ±     102.374    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                               128  thrpt    5        29.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                128  thrpt    5        52.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                  128  thrpt    5    202811.135 ±   22193.628   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       857.515 ±      89.617  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      6654.145 ±     194.292    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       843.729 ±     685.511  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      6553.350 ±    5415.758    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.229 ±       1.155  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.736 ±       8.692    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        13.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        23.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                 128  thrpt    5    281939.886 ±   19595.109   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1029.062 ±      62.498  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5743.803 ±      77.259    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       977.664 ±      12.481  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5458.103 ±     371.695    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.848 ±       5.222  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         4.748 ±      29.087    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        15.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        37.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                      128  thrpt    5     95435.862 ±   21335.722   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3154.097 ±     329.061  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     52093.792 ±    7175.441    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3049.377 ±     667.999  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     50372.841 ±   12393.142    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.636 ±       8.301  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        28.231 ±     143.785    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        46.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        74.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                        128  thrpt    5    251015.600 ±    8712.595   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1714.247 ±      91.157  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10746.068 ±     227.481    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1689.807 ±     534.503  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10589.966 ±    3112.545    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.257 ±       7.331  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.914 ±      46.346    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        26.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        49.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                 128  thrpt    5    777494.038 ±   14407.082   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       422.511 ±      17.768  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       855.164 ±      46.457    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       385.339 ±     552.911  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       780.701 ±    1134.365    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.017 ±       0.088  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.034 ±       0.178    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        10.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                128  thrpt    5    866026.624 ±   69852.222   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       470.913 ±      22.357  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       855.909 ±      53.416    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       459.129 ±     692.126  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       837.286 ±    1298.714    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.019 ±       0.059  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.035 ±       0.108    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        26.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    875516.347 ±   14118.102   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.170 ±       1.460  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.304 ±       2.613    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                     128  thrpt    5     36873.501 ±    4649.844   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1920.474 ±     447.936  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     82070.009 ±   24448.039    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1875.545 ±    1034.643  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     80176.037 ±   47692.220    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         3.082 ±      11.869  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       133.004 ±     521.513    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        29.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        69.000                    ms
[info] PrimitivesBenchmark.readCirce                                                               N/A  thrpt    5   1130399.006 ±   70545.818   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      2609.535 ±     184.416  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5      3632.886 ±      88.147    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2561.489 ±     608.156  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      3563.945 ±     639.679    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.883 ±       6.765  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         1.230 ±       9.426    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        39.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        68.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                        N/A  thrpt    5   1859105.936 ±   51087.206   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5      1159.501 ±      12.190  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5       981.338 ±      19.277    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      1113.881 ±     677.194  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5       943.468 ±     596.724    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.325 ±       2.529  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.275 ±       2.145    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        31.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                       N/A  thrpt    5   9190110.506 ±  560510.936   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       286.898 ±      24.378  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5        49.129 ±       3.038    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       248.744 ±     549.287  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5        42.557 ±      94.428    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.001 ±       0.006    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        14.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                            N/A  thrpt    5    503763.319 ±   18915.195   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      2281.132 ±      69.813  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5      7126.345 ±     198.160    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      2183.235 ±     657.349  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      6820.828 ±    2074.692    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.591 ±       4.561  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         1.856 ±      14.342    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        33.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        57.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                              N/A  thrpt    5   1947088.773 ±  197806.863   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                               N/A  thrpt    5      2002.997 ±     202.122  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                          N/A  thrpt    5      1618.877 ±      49.079    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1943.663 ±      81.686  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1571.653 ±     154.817    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         1.362 ±       7.379  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.133 ±       6.272    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                    N/A  thrpt    5        30.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                     N/A  thrpt    5        67.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                       N/A  thrpt    5   3208305.268 ±  224472.444   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5      1259.629 ±      84.448  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5       617.870 ±       5.858    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      1231.604 ±     527.997  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5       603.942 ±     250.642    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.092 ±       0.655  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.044 ±       0.313    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        19.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        28.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                      N/A  thrpt    5   8942633.652 ±  629717.786   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       756.316 ±      41.667  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5       133.109 ±       8.252    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       785.996 ±     688.896  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       138.389 ±     122.600    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.862 ±       7.241  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.149 ±       1.254    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        40.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5   8932501.402 ±  129853.849   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5       279.003 ±      15.339  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5        49.155 ±       2.780    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       247.479 ±     545.852  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5        43.639 ±      96.298    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.021 ±       0.117  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.004 ±       0.021    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     N/A  thrpt    5        16.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                           N/A  thrpt    5    525072.787 ±   22377.860   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                            N/A  thrpt    5      2696.727 ±      82.461  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       N/A  thrpt    5      8082.439 ±     264.007    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2588.893 ±     536.645  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      7757.822 ±    1494.477    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.633 ±       5.096  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         1.892 ±      15.226    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                 N/A  thrpt    5        39.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                  N/A  thrpt    5        64.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                128  thrpt    5     93635.093 ±   13050.288   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      2664.899 ±     175.007  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     44852.282 ±    8918.552    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2577.273 ±     586.466  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     43433.978 ±   16361.185    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         4.314 ±      15.092  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        73.481 ±     256.233    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        41.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                       128  thrpt    5       142.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                         128  thrpt    5    141129.578 ±    3919.951   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      2228.809 ±     126.031  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     24850.610 ±     862.597    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2192.029 ±     674.079  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     24435.570 ±    7136.790    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.258 ±       1.552  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.871 ±      17.267    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        33.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        51.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                        128  thrpt    5    173995.260 ±   10065.736   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      2638.908 ±     186.283  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     23866.870 ±     695.007    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2537.224 ±     604.509  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     22955.459 ±    5865.253    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.169 ±       8.193  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        10.534 ±      73.494    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        39.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        86.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                             128  thrpt    5     86334.924 ±    6492.974   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3811.512 ±     210.750  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     69471.663 ±    2844.987    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3751.253 ±     422.705  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     68412.649 ±   12486.970    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.771 ±       6.241  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        14.441 ±     117.051    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        56.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        80.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                               128  thrpt    5    255744.807 ±    5852.785   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1759.706 ±      42.759  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     10827.881 ±     236.367    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1704.415 ±     544.129  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10490.690 ±    3532.633    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.912 ±       7.406  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.612 ±      45.603    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        46.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                        128  thrpt    5    802499.112 ±   30751.551   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       480.398 ±      35.909  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       941.985 ±      48.641    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       514.313 ±     678.075  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1009.079 ±    1335.937    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.117 ±       0.876  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.232 ±       1.737    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                       128  thrpt    5    798672.152 ±   85781.058   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       441.401 ±      32.555  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       869.928 ±      49.376    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       458.872 ±     691.246  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       907.538 ±    1405.737    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.016 ±       0.096  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.031 ±       0.184    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        29.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    835309.877 ±   16874.122   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        11.516 ±      17.320  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        21.729 ±      33.188    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                            128  thrpt    5     37623.714 ±    6279.030   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1831.847 ±     378.664  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     76785.617 ±   24300.431    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1770.387 ±     638.587  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     74206.883 ±   31860.269    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         2.409 ±      10.318  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       104.587 ±     466.959    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        28.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        73.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                       128  thrpt    5   4245084.869 ±  101753.362   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      3309.529 ±     112.944  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5      1226.775 ±      34.244    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      3192.926 ±     728.772  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1183.648 ±     275.962    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.410 ±       3.038  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.152 ±       1.130    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                             128  thrpt    5        48.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                              128  thrpt    5        67.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                 128  thrpt    5   5854685.249 ±   92636.181   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                  128  thrpt    5      1135.283 ±      43.338  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                             128  thrpt    5       305.134 ±       7.261    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                         128  thrpt    5      1105.119 ±     686.471  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       296.903 ±     180.340    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.838 ±       6.881  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.226 ±       1.857    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                       128  thrpt    5        17.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                        128  thrpt    5        40.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                128  thrpt    5   5149293.873 ±  398929.103   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1055.010 ±      21.273  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5       322.484 ±      21.499    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1041.006 ±     569.363  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       318.942 ±     203.142    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.978 ±       6.324  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.307 ±       2.004    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        16.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        41.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                               128  thrpt    5   6514426.317 ±  758596.975   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1269.904 ±      62.109  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5       306.915 ±      25.192    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1247.673 ±     573.533  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       302.007 ±     155.587    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.856 ±       5.970  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.206 ±       1.432    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        41.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                    128  thrpt    5   5314732.852 ±  388227.820   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1029.498 ±      76.426  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5       304.830 ±       4.196    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5       979.575 ±      15.378  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       290.146 ±      25.057    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.953 ±       5.823  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.286 ±       1.758    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        15.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        35.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                      128  thrpt    5   3615793.547 ±  165744.584   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1993.263 ±      99.196  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5       867.396 ±      13.771    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1909.503 ±     517.658  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       831.215 ±     238.434    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.862 ±       7.199  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.376 ±       3.142    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        29.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        46.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                128  thrpt    5   6614093.251 ±  228212.727   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                 128  thrpt    5       656.574 ±      17.339  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                            128  thrpt    5       156.217 ±       1.413    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                        128  thrpt    5       650.341 ±       5.812  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       154.740 ±       4.480    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.875 ±       7.488  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.205 ±       1.754    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                      128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                       128  thrpt    5        36.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                               128  thrpt    5   6291030.690 ±  361868.705   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       625.210 ±      43.789  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5       156.393 ±       4.284    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       587.236 ±     561.449  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       146.894 ±     140.458    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.670 ±       5.637  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.172 ±       1.446    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        36.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                              128  thrpt    5   7064471.859 ±  190515.616   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5       711.765 ±      55.574  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5       158.556 ±      14.386    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       657.961 ±       5.578  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       146.565 ±       3.699    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.687 ±       5.604  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.152 ±       1.238    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        34.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   7334305.462 ±   40735.718   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         0.431 ±       3.707  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         0.093 ±       0.797    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                   128  thrpt    5   6244291.184 ±  278836.325   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5       621.167 ±      31.156  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5       156.550 ±       6.356    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5       589.584 ±     564.213  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       148.814 ±     145.062    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.887 ±       5.464  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.224 ±       1.384    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   1731131.349 ±   69703.753   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2241.680 ±      87.208  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      2037.827 ±      53.997    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2180.723 ±     710.390  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1982.013 ±     622.008    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.408 ±       3.290  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.376 ±       3.039    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                          128  thrpt    5        33.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                           128  thrpt    5        46.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   2941007.643 ±  260233.796   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                               128  thrpt    5       570.174 ±      50.282  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                          128  thrpt    5       305.100 ±       6.480    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                      128  thrpt    5       586.240 ±     560.710  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       314.508 ±     310.148    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.025 ±       0.092  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.013 ±       0.049    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                    128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                     128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   1906115.937 ±  132390.875   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       422.621 ±     132.208  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5       349.136 ±     121.536    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       390.552 ±     559.872  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       323.377 ±     479.506    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.148 ±       1.251  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.124 ±       1.050    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        26.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   2274249.735 ±   64758.495   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       442.335 ±      10.269  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5       306.102 ±      14.458    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       395.443 ±     568.433  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       273.570 ±     391.952    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.008 ±       0.044  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.006 ±       0.030    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        20.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   1883069.658 ±  113162.081   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5       362.468 ±      25.242  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5       302.880 ±       6.232    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5       325.598 ±       1.792  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       272.130 ±      16.586    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.006 ±       0.021  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.005 ±       0.017    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                       128  thrpt    5         5.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        20.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   2476912.871 ±  156399.377   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1789.809 ±      65.085  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      1137.164 ±      41.384    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1705.768 ±     544.916  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1083.399 ±     321.461    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.860 ±       7.230  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.554 ±       4.657    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                         128  thrpt    5        26.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                          128  thrpt    5        43.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   3580473.364 ±  151900.808   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                              128  thrpt    5       955.966 ±      48.822  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                         128  thrpt    5       420.139 ±       6.003    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                     128  thrpt    5       977.082 ±      12.487  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       429.461 ±      15.836    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.002 ±       5.929  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.440 ±       2.593    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                   128  thrpt    5        15.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                    128  thrpt    5        41.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   3300274.190 ±  208627.053   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       884.486 ±      54.005  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       421.689 ±      11.878    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       848.183 ±     687.863  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       404.240 ±     324.571    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.882 ±       7.429  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.428 ±       3.606    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        41.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   3592241.231 ±  201704.644   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5       960.932 ±      26.726  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       421.029 ±      20.378    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5       918.387 ±     560.207  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       402.478 ±     248.501    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.869 ±       5.530  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.379 ±       2.417    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        37.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   3879202.638 ±   13370.919   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   3308983.290 ±  207943.991   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5       885.621 ±      55.129  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5       421.196 ±      12.038    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5       853.250 ±     689.928  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       406.336 ±     338.808    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.871 ±       4.632  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.419 ±       2.237    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        37.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                               N/A  thrpt    5     12117.413 ±     788.188   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      1551.715 ±     158.483  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5    201549.448 ±   23370.695    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1494.423 ±     674.050  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    194309.245 ±   95748.427    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.506 ±       2.344  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5        65.927 ±     306.361    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        23.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        38.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                        N/A  thrpt    5     22463.059 ±    2895.941   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5       393.476 ±     208.653  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5     27659.104 ±   17431.649    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       385.848 ±     553.133  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5     26975.977 ±   37343.835    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.127 ±       0.595  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         8.792 ±      41.432    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        21.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                       N/A  thrpt    5     20419.586 ±    1533.251   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       252.917 ±     208.876  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     19546.070 ±   17538.447    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       194.728 ±     684.497  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     15127.424 ±   53191.458    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.082 ±       0.708  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         6.514 ±      56.086    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         3.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        14.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                            N/A  thrpt    5      8349.461 ±    1178.479   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      1918.434 ±     124.603  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5    362131.759 ±   77130.425    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1909.761 ±      55.315  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    360315.259 ±   53753.263    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         2.311 ±       8.268  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       440.197 ±    1566.426    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        30.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        87.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                       N/A  thrpt    5     66094.212 ±    6741.452   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5       908.565 ±     308.604  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     21687.392 ±    9892.286    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       846.845 ±     678.028  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     20218.555 ±   17197.538    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.968 ±       2.566  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5        23.363 ±      64.337    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        13.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        29.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                      N/A  thrpt    5    106725.778 ±    1946.954   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       704.211 ±      12.463  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5     10383.373 ±     160.121    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       715.255 ±     565.898  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     10549.098 ±    8428.336    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.846 ±       7.141  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        12.504 ±     105.595    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        11.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        41.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5    111534.332 ±     827.997   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5         0.019 ±       0.159  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5         0.265 ±       2.245    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                         128  thrpt    5    432412.455 ±    9696.316   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2498.982 ±      55.002  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5      9093.074 ±     329.276    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2438.941 ±     687.944  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8876.184 ±    2618.616    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.370 ±       2.830  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.350 ±      10.317    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                               128  thrpt    5        37.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                128  thrpt    5        50.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                  128  thrpt    5    939810.611 ±   61524.431   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       664.157 ±      55.543  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1111.963 ±      45.103    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       642.218 ±       4.412  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1075.534 ±      77.096    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.827 ±       6.989  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.366 ±      11.539    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        16.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5   1874429.653 ±   81182.259   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       948.239 ±      60.335  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       796.071 ±      19.890    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       920.264 ±     567.111  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       771.685 ±     452.563    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.831 ±       5.949  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.698 ±       4.984    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        14.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        39.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5    186347.608 ±    4184.803   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      4585.761 ±      71.662  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     38725.505 ±     639.079    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      4435.670 ±     371.076  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     37455.427 ±    2483.215    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.489 ±       3.498  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         4.105 ±      29.287    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        66.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        90.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                        128  thrpt    5    453697.253 ±   14059.704   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1492.428 ±      58.207  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5      5176.041 ±     118.913    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1437.880 ±     693.534  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4986.659 ±    2390.907    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.879 ±       5.408  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         3.074 ±      19.019    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                              128  thrpt    5        22.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                               128  thrpt    5        41.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    880514.476 ±   67054.787   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       419.437 ±      32.665  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       749.665 ±      39.864    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       386.587 ±     557.389  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       692.591 ±    1025.477    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.017 ±       0.067  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.029 ±       0.117    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         6.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        11.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5   1596087.560 ±   60300.259   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       761.075 ±      39.687  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       750.387 ±      16.470    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       723.093 ±     565.197  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       712.688 ±     548.127    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.831 ±       5.414  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.816 ±       5.316    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        36.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   1693596.200 ±   13597.637   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.016 ±       0.134  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.015 ±       0.125    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5    633499.390 ±  127035.555   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       997.527 ±     652.114  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      2499.335 ±    2189.819    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1030.554 ±     555.883  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2579.432 ±    1959.975    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.318 ±       3.633  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.348 ±       9.347    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        16.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        36.000                    ms
[info] Benchmark result is saved to graalvmee1.json
[success] Total time: 5736 s, completed Apr 30, 2018 9:56:22 PM
